name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

permissions:
  contents: read
  pages: write
  id-token: write
  checks: write

jobs:
  publish:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./packages/library

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Deps (Cached)
        uses: actions/setup-node@v4
        with:
          node-version: 21
          cache: 'npm'
          cache-dependency-path: packages/library/package-lock.json
      - run: npm ci

      - name: Use playwright binaries cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-latest

      - if: ${{steps.playwright-cache.outputs.cache-hit != 'true'}}
        name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run tests
        run: npm run vitest --prefix packages/library

      - name: Publish
        run: npm run publish

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: './packages/library/storybook-static'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Store test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-test-results
          path: ./packages/library/results/*.xml

      - name: Publish test results
        uses: mikepenz/action-junit-report@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/results/*.xml'
