name: "[CI] - Build and Test All Packages"

on:
  workflow_dispatch: # Allows manual triggers
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build and Test Packages
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Deps (Cached)
        uses: actions/setup-node@v4
        with:
          node-version: 23
          cache: 'npm'
          cache-dependency-path: packages/library/package-lock.json
      - run: |
          npm install
          cd packages/library
          npm ci
          # Install full ICU support for Node.js
          npm install full-icu
          cd ../app
          npm install

      - name: Use playwright binaries cache
        uses: actions/cache@v3
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-latest

      - if: ${{steps.playwright-cache.outputs.cache-hit != 'true'}}
        name: Install playwright browsers
        run: |
          cd packages/library
          npx playwright install --with-deps

      - name: Run tests
        run: |
          cd packages/library
          # Export environment variables for locale and timezone
          export NODE_ICU_DATA=node_modules/full-icu
          export LANG=en_US.UTF-8
          export LC_ALL=en_US.UTF-8
          export TZ=UTC
          npm run vitest

      - name: Run Build
        run: |
          cd packages/library
          npm run vite::build
          cd ../app
          npm run build

      # Step 6: Save build outputs as artifacts
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            packages/**/dist
            packages/**/storybook-static
          retention-days: 5 # Keep artifacts for 5 days

  deploy_storybook:
    needs: build
    if: ${{ needs.build.result == 'success' }}
    uses: ./.github/workflows/deploy_latest_docs.yaml
    secrets: inherit
    with:
      artifact_name: 'build-artifacts'


  deploy_app:
    needs: [ build ]
    if: ${{ needs.build.result == 'success' }}
    uses: ./.github/workflows/deploy_latest_app.yaml
    secrets: inherit
    with:
      artifact_name: 'build-artifacts'
