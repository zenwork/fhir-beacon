{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/shell/types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal/BaseElement"
          }
        },
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "./src/internal"
          }
        },
        {
          "kind": "js",
          "name": "Generators",
          "declaration": {
            "name": "Generators",
            "module": "./src/internal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/codes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/fhirtypes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal/customization/fhir-context-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/shell"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/styles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/utilities"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/foundation"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/complex"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/metadata"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/special"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/resources"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "systemChoices",
            "module": "./src/codes/use-system"
          }
        },
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "useSystem",
            "module": "./src/codes/use-system"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "DisplayMode",
            "module": "./src/shell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "vitest.setup.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents an error that occurs during the execution of a Beacon Test.",
          "name": "BeaconTestError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconTestError'"
            }
          ],
          "superclass": {
            "name": "Error",
            "module": "vitest.setup.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconTestError",
          "declaration": {
            "name": "BeaconTestError",
            "module": "vitest.setup.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "vitest.workspace.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "vitest.workspace.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "coverage/block-navigation.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/prettify.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "coverage/sorter.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/Codes-CbTVO36r.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "C",
          "type": {
            "text": "boolean"
          },
          "default": "!0"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ee",
          "members": [
            {
              "kind": "method",
              "name": "getById",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBySystem",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllSystemsAsChoices"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "u"
        },
        {
          "kind": "function",
          "name": "re",
          "parameters": [
            {
              "name": "i"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "C",
          "declaration": {
            "name": "ee",
            "module": "dist/Codes-CbTVO36r.js"
          }
        },
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "re",
            "module": "dist/Codes-CbTVO36r.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/DomainResource-D9OsSpGz.js",
      "declarations": [
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "x",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "B",
          "members": [
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getToken",
              "inheritedFrom": {
                "name": "p",
                "module": "storybook-static/assets/index-CfOrKyLd.js"
              }
            },
            {
              "kind": "field",
              "name": "token",
              "default": "0",
              "type": {
                "text": "number"
              },
              "inheritedFrom": {
                "name": "p",
                "module": "storybook-static/assets/index-CfOrKyLd.js"
              }
            }
          ],
          "superclass": {
            "name": "p",
            "module": "/dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "function",
          "name": "v",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            },
            {
              "name": "t",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "k",
          "members": [
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                },
                {
                  "name": "a"
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructureContained"
            }
          ],
          "superclass": {
            "name": "f",
            "module": "/dist/Resource-BjeplEtf.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "B",
          "declaration": {
            "name": "B",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "k",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "x",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "R",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "S",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "v",
            "module": "dist/DomainResource-D9OsSpGz.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/Resource-BjeplEtf.js",
      "declarations": [
        {
          "kind": "function",
          "name": "W",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "O",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "s"
        },
        {
          "kind": "function",
          "name": "Qr",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "function",
          "name": "Ho",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "number"
          },
          "default": "0"
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "u"
        },
        {
          "kind": "function",
          "name": "Uo",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "variable",
          "name": "i",
          "type": {
            "text": "object"
          },
          "default": "{}"
        },
        {
          "kind": "variable",
          "name": "xt"
        },
        {
          "kind": "variable",
          "name": "ce"
        },
        {
          "kind": "variable",
          "name": "zs"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Ot",
          "members": [
            {
              "kind": "method",
              "name": "mapForAll"
            },
            {
              "kind": "method",
              "name": "msgFor",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i",
                  "default": "\";\""
                }
              ]
            },
            {
              "kind": "method",
              "name": "sliceForFQK",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "{ fqk: e, message: i }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rm",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rmAll"
            },
            {
              "kind": "method",
              "name": "inspectCode",
              "parameters": [
                {
                  "name": "{ node: e, code: i, id: s }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "inspectCodeableConcept",
              "parameters": [
                {
                  "name": "{ node: e, concept: i, bindingId: s }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "all"
            },
            {
              "kind": "method",
              "name": "choices",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "allFor",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "code",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "variable",
          "name": "m"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "function",
          "name": "jo",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Zr",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "p"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Go",
          "members": [
            {
              "kind": "method",
              "name": "deepEquals",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks."
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "description": "The value to associate with the key.",
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets a value in the DeepKeyMap."
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "deleteAll"
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "description": "Returns all key-value pairs as entries."
            },
            {
              "kind": "method",
              "name": "keys"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Le",
          "superclass": {
            "name": "Go",
            "module": "dist/Resource-BjeplEtf.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "deepEquals",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks.",
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "description": "The value to associate with the key.",
                  "name": "value",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets a value in the DeepKeyMap.",
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The object key.",
                  "name": "key",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "description": "Returns all key-value pairs as entries.",
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "keys",
              "inheritedFrom": {
                "name": "Go",
                "module": "dist/Resource-BjeplEtf.js"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "we"
        },
        {
          "kind": "function",
          "name": "br",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            },
            {
              "name": "s",
              "default": "void 0"
            }
          ]
        },
        {
          "kind": "function",
          "name": "gr",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e",
              "default": "Q.display"
            },
            {
              "name": "i",
              "default": "!1"
            },
            {
              "name": "s",
              "default": "!1"
            },
            {
              "name": "r",
              "default": "!1"
            },
            {
              "name": "o",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Os",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e",
              "default": "\"none\""
            }
          ]
        },
        {
          "kind": "function",
          "name": "lu",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Si"
        },
        {
          "kind": "function",
          "name": "cu",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "pa",
          "parameters": [
            {
              "name": "{ context: t, subscribe: e }"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "_e",
          "default": "class extends Ee { constructor() { super(...arguments), this.mode = Q.display, this.open = !1, this.verbose = !1, this.showerror = !1, this.summaryonly = !1, this.input = !1, this.display = new Gi(this, { context: fs, initialValue: { source: \"shell\", mode: Q.display, summaryonly: !1, showerror: !1, verbose: !1, open: !1, input: !1 } }); } updated(t) { super.updated(t), t.has(\"mode\") && this.display.setValue({ ...this.display.value, mode: this.mode }), t.has(\"showerror\") && this.display.setValue({ ...this.display.value, showerror: this.showerror }, !0), t.has(\"verbose\") && this.display.setValue({ ...this.display.value, verbose: this.verbose }), t.has(\"open\") && this.display.setValue({ ...this.display.value, open: this.open }), t.has(\"summaryonly\") && this.display.setValue({ ...this.display.value, summaryonly: this.summaryonly }), t.has(\"input\") && this.display.setValue({ ...this.display.value, input: this.input }); } createRenderRoot() { return this; } }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ba",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted"
            }
          ],
          "superclass": {
            "name": "Ee",
            "module": "/dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "function",
          "name": "ga",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Jr"
        },
        {
          "kind": "variable",
          "name": "to"
        },
        {
          "kind": "variable",
          "name": "va"
        },
        {
          "kind": "variable",
          "name": "wr",
          "default": "class extends ba { render() { return v` <fhir-value placeholder=\"empty list\"></fhir-value > `; } }"
        },
        {
          "kind": "function",
          "name": "eo",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "bs",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Ze"
        },
        {
          "kind": "function",
          "name": "_a",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "de",
          "default": "class extends Ee { constructor() { super(...arguments), this.resource = \"\", this.summary = !1, this.constraint = !1, this.required = !1, this.profile = \"\"; } willUpdate(t) { super.willUpdate(t), (t.has(\"resource\") || t.has(\"summary\") || t.has(\"constraint\") || t.has(\"required\") || t.has(\"profile\")) && (this.badges = [], this.summary && this.badges.push({ label: \"∑\", type: Ze.summary }), this.constraint && this.badges.push({ label: \"C\", type: Ze.constraint }), this.required && this.badges.push({ label: \"R\", type: Ze.required }), Ji(this.resource) || this.badges.push({ label: this.resource, type: Ze.resource }), Ji(this.profile) || this.badges.push({ label: this.profile, type: Ze.profile })); } render() { return _a(this.badges); } }"
        },
        {
          "kind": "variable",
          "name": "ke",
          "default": "class extends Ee { constructor() { super(), this.value = \"\", this.overridable = !1, this.label = \"\", this.error = \"\", this.addEventListener(\"sl-select\", (t) => { this.value = this.valuesets.filter((e) => e.value === t.detail.item.value)[0].value, this.dispatchEvent(new CustomEvent( \"fhir-change\", { bubbles: !0, composed: !0, detail: { value: this.value } } )), t.stopImmediatePropagation(); }), this.addEventListener(\"fhir-system-choice\", async (t) => { const e = this.renderRoot.querySelector(\"#dd\"); e && await e.show(), t.stopImmediatePropagation(); }); } //TODO: using the sl-icon instead of a button render() { const t = this.valuesets.filter((e) => e.value === this.value); return v` <sl-input name=${this.id} value=${t.length == 1 ? t[0].label : \"unknown\"} size=\"small\" .readonly=${!this.overridable} > <fhir-label slot=\"label\" text=${this.label}></fhir-label> <fhir-error slot=\"help-text\" text=${this.error}></fhir-error> <sl-dropdown id=\"dd\" slot=\"suffix\" distance=\"10\" skidding=\"-20\" placement=\"right-start\" hoist > <sl-icon-button name=\"chevron-down\" label=\"Settings\" slot=\"trigger\" @click=${(e) => { this.dispatchEvent(new CustomEvent( \"fhir-system-choice\", { bubbles: !0, composed: !0 } )), e.stopImmediatePropagation(); }} ></sl-icon-button> <sl-menu> ${this.valuesets.map((e) => v` <sl-menu-item value=${e.value}>${e.label}</sl-menu-item> `)} </sl-menu> </sl-dropdown> </sl-input> `; } }"
        },
        {
          "kind": "variable",
          "name": "t"
        },
        {
          "kind": "variable",
          "name": "io",
          "type": {
            "text": "object"
          },
          "default": "{ \"fhir-identifier\": (t, e, i) => v` <fhir-identifier key=${i} label=${e} .data=${t} summary></fhir-identifier>`, \"fhir-codeable-concept\": (t, e, i) => v` <fhir-codeable-concept key=${i} label=${e} .data=${t} summary></fhir-codeable-concept>`, \"fhir-codeable-reference\": (t, e, i) => v` <fhir-codeable-reference key=${i} label=${e} .data=${t} summary></fhir-codeable-reference>`, \"fhir-reference\": (t, e, i) => v` <fhir-reference key=${i} label=${e} .data=${t} summary></fhir-reference>` }"
        },
        {
          "kind": "function",
          "name": "Ea",
          "parameters": [
            {
              "name": "{\n  key: t,\n  pluralBase: e,\n  collection: i,\n  generator: s,\n  summary: r = !0,\n  config: o\n}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Aa",
          "parameters": [
            {
              "name": "{\n  key: t,\n  pluralBase: e,\n  collection: i,\n  generator: s,\n  summary: r = !0,\n  config: o\n}"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "D"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "function",
          "name": "C",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "L",
          "default": "I` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        },
        {
          "kind": "variable",
          "name": "T",
          "default": "class extends Ee { constructor() { super(), Ma(this, Xi, !1), this.initialReflectedProperties = /* @__PURE__ */ new Map(), Object.entries(this.constructor.dependencies).forEach(([t, e]) => { this.constructor.define(t, e); }); } emit(t, e) { const i = new CustomEvent(t, ue({ bubbles: !0, cancelable: !1, composed: !0, detail: {} }, e)); return this.dispatchEvent(i), i; } /* eslint-enable */ static define(t, e = this, i = {}) { const s = customElements.get(t); if (!s) { try { customElements.define(t, e, i); } catch { customElements.define(t, class extends e { }, i); } return; } let r = \" (unknown version)\", o = r; \"version\" in e && e.version && (r = \" v\" + e.version), \"version\" in s && s.version && (o = \" v\" + s.version), !(r && o && r === o) && console.warn( `Attempted to register <${t}>${r}, but <${t}>${o} has already been registered.` ); } attributeChangedCallback(t, e, i) { La(this, Xi) || (this.constructor.elementProperties.forEach( (s, r) => { s.reflect && this[r] != null && this.initialReflectedProperties.set(r, this[r]); } ), Ra(this, Xi, !0)), super.attributeChangedCallback(t, e, i); } willUpdate(t) { super.willUpdate(t), this.initialReflectedProperties.forEach((e, i) => { t.has(i) && this[i] == null && (this[i] = e); }); } }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "anonymous_1",
          "superclass": {
            "name": "e",
            "module": "dist/Resource-BjeplEtf.js"
          },
          "tagName": "t",
          "customElement": true,
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"BeaconStateError\"",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            },
            {
              "kind": "field",
              "name": "element",
              "default": "e",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            },
            {
              "kind": "field",
              "name": "message",
              "default": "a",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Z",
          "default": "class extends T { constructor() { super(...arguments), this.initialRender = !1, this.svg = null, this.label = \"\", this.library = \"default\"; } /** Given a URL, this function returns the resulting SVG element or an appropriate error symbol. */ async resolveIcon(t, e) { var i; let s; if (e != null && e.spriteSheet) return this.svg = v`<svg part=\"svg\"> <use part=\"use\" href=\"${t}\"></use> </svg>`, this.svg; try { if (s = await fetch(t, { mode: \"cors\" }), !s.ok) return s.status === 410 ? mi : Ni; } catch { return Ni; } try { const r = document.createElement(\"div\"); r.innerHTML = await s.text(); const o = r.firstElementChild; if (((i = o == null ? void 0 : o.tagName) == null ? void 0 : i.toLowerCase()) !== \"svg\") return mi; ys || (ys = new DOMParser()); const d = ys.parseFromString(o.outerHTML, \"text/html\").body.querySelector(\"svg\"); return d ? (d.part.add(\"svg\"), document.adoptNode(d)) : mi; } catch { return mi; } } connectedCallback() { super.connectedCallback(), Qa(this); } firstUpdated() { this.initialRender = !0, this.setIcon(); } disconnectedCallback() { super.disconnectedCallback(), Za(this); } getIconSource() { const t = Sr(this.library); return this.name && t ? { url: t.resolver(this.name), fromLibrary: !0 } : { url: this.src, fromLibrary: !1 }; } handleLabelChange() { typeof this.label == \"string\" && this.label.length > 0 ? (this.setAttribute(\"role\", \"img\"), this.setAttribute(\"aria-label\", this.label), this.removeAttribute(\"aria-hidden\")) : (this.removeAttribute(\"role\"), this.removeAttribute(\"aria-label\"), this.setAttribute(\"aria-hidden\", \"true\")); } async setIcon() { var t; const { url: e, fromLibrary: i } = this.getIconSource(), s = i ? Sr(this.library) : void 0; if (!e) { this.svg = null; return; } let r = ws.get(e); if (r || (r = this.resolveIcon(e, s), ws.set(e, r)), !this.initialRender) return; const o = await r; if (o === Ni && ws.delete(e), e === this.getIconSource().url) { if (tn(o)) { if (this.svg = o, s) { await this.updateComplete; const n = this.shadowRoot.querySelector(\"[part='svg']\"); typeof s.mutator == \"function\" && n && s.mutator(n); } return; } switch (o) { case Ni: case mi: this.svg = null, this.emit(\"sl-error\"); break; default: this.svg = o.cloneNode(!0), (t = s == null ? void 0 : s.mutator) == null || t.call(s, this.svg), this.emit(\"sl-load\"); } } } render() { return this.svg; } }"
        },
        {
          "kind": "function",
          "name": "z",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "q",
          "default": "class extends on { }"
        },
        {
          "kind": "function",
          "name": "K",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "J",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "number"
          },
          "default": "0"
        },
        {
          "kind": "variable",
          "name": "$",
          "default": "d[m ? p === \"floating\" ? \"reference\" : \"floating\" : p]"
        },
        {
          "kind": "variable",
          "name": "A"
        },
        {
          "kind": "variable",
          "name": "k"
        },
        {
          "kind": "variable",
          "name": "E",
          "default": "await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(d.floating))"
        },
        {
          "kind": "variable",
          "name": "x"
        },
        {
          "kind": "variable",
          "name": "_"
        },
        {
          "kind": "variable",
          "name": "w",
          "default": "await n.getDimensions(u)"
        },
        {
          "kind": "variable",
          "name": "M",
          "default": "await (n.getOffsetParent == null ? void 0 : n.getOffsetParent(u))"
        },
        {
          "kind": "variable",
          "name": "B"
        },
        {
          "kind": "variable",
          "name": "V"
        },
        {
          "kind": "variable",
          "name": "R"
        },
        {
          "kind": "variable",
          "name": "P"
        },
        {
          "kind": "function",
          "name": "o"
        },
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "M"
            }
          ]
        },
        {
          "kind": "function",
          "name": "$"
        },
        {
          "kind": "variable",
          "name": "G",
          "default": "class extends T { constructor() { super(...arguments), this.localize = new q(this), this.active = !1, this.placement = \"top\", this.strategy = \"absolute\", this.distance = 0, this.skidding = 0, this.arrow = !1, this.arrowPlacement = \"anchor\", this.arrowPadding = 10, this.flip = !1, this.flipFallbackPlacements = \"\", this.flipFallbackStrategy = \"best-fit\", this.flipPadding = 0, this.shift = !1, this.shiftPadding = 0, this.autoSizePadding = 0, this.hoverBridge = !1, this.updateHoverBridge = () => { if (this.hoverBridge && this.anchorEl) { const t = this.anchorEl.getBoundingClientRect(), e = this.popup.getBoundingClientRect(), i = this.placement.includes(\"top\") || this.placement.includes(\"bottom\"); let s = 0, r = 0, o = 0, n = 0, d = 0, c = 0, u = 0, f = 0; i ? t.top < e.top ? (s = t.left, r = t.bottom, o = t.right, n = t.bottom, d = e.left, c = e.top, u = e.right, f = e.top) : (s = e.left, r = e.bottom, o = e.right, n = e.bottom, d = t.left, c = t.top, u = t.right, f = t.top) : t.left < e.left ? (s = t.right, r = t.top, o = e.left, n = e.top, d = t.right, c = t.bottom, u = e.left, f = e.bottom) : (s = e.right, r = e.top, o = t.left, n = t.top, d = e.right, c = e.bottom, u = t.left, f = t.bottom), this.style.setProperty(\"--hover-bridge-top-left-x\", `${s}px`), this.style.setProperty(\"--hover-bridge-top-left-y\", `${r}px`), this.style.setProperty(\"--hover-bridge-top-right-x\", `${o}px`), this.style.setProperty(\"--hover-bridge-top-right-y\", `${n}px`), this.style.setProperty(\"--hover-bridge-bottom-left-x\", `${d}px`), this.style.setProperty(\"--hover-bridge-bottom-left-y\", `${c}px`), this.style.setProperty(\"--hover-bridge-bottom-right-x\", `${u}px`), this.style.setProperty(\"--hover-bridge-bottom-right-y\", `${f}px`); } }; } async connectedCallback() { super.connectedCallback(), await this.updateComplete, this.start(); } disconnectedCallback() { super.disconnectedCallback(), this.stop(); } async updated(t) { super.updated(t), t.has(\"active\") && (this.active ? this.start() : this.stop()), t.has(\"anchor\") && this.handleAnchorChange(), this.active && (await this.updateComplete, this.reposition()); } async handleAnchorChange() { if (await this.stop(), this.anchor && typeof this.anchor == \"string\") { const t = this.getRootNode(); this.anchorEl = t.getElementById(this.anchor); } else this.anchor instanceof Element || Xn(this.anchor) ? this.anchorEl = this.anchor : this.anchorEl = this.querySelector('[slot=\"anchor\"]'); this.anchorEl instanceof HTMLSlotElement && (this.anchorEl = this.anchorEl.assignedElements({ flatten: !0 })[0]), this.anchorEl && this.active && this.start(); } start() { !this.anchorEl || !this.active || (this.cleanup = Nn(this.anchorEl, this.popup, () => { this.reposition(); })); } async stop() { return new Promise((t) => { this.cleanup ? (this.cleanup(), this.cleanup = void 0, this.removeAttribute(\"data-current-placement\"), this.style.removeProperty(\"--auto-size-available-width\"), this.style.removeProperty(\"--auto-size-available-height\"), requestAnimationFrame(() => t())) : t(); }); } /** Forces the popup to recalculate and reposition itself. */ reposition() { if (!this.active || !this.anchorEl) return; const t = [ // The offset middleware goes first Hn({ mainAxis: this.distance, crossAxis: this.skidding }) ]; this.sync ? t.push( Ir({ apply: ({ rects: i }) => { const s = this.sync === \"width\" || this.sync === \"both\", r = this.sync === \"height\" || this.sync === \"both\"; this.popup.style.width = s ? `${i.reference.width}px` : \"\", this.popup.style.height = r ? `${i.reference.height}px` : \"\"; } }) ) : (this.popup.style.width = \"\", this.popup.style.height = \"\"), this.flip && t.push( qn({ boundary: this.flipBoundary, // @ts-expect-error - We're converting a string attribute to an array here fallbackPlacements: this.flipFallbackPlacements, fallbackStrategy: this.flipFallbackStrategy === \"best-fit\" ? \"bestFit\" : \"initialPlacement\", padding: this.flipPadding }) ), this.shift && t.push( Un({ boundary: this.shiftBoundary, padding: this.shiftPadding }) ), this.autoSize ? t.push( Ir({ boundary: this.autoSizeBoundary, padding: this.autoSizePadding, apply: ({ availableWidth: i, availableHeight: s }) => { this.autoSize === \"vertical\" || this.autoSize === \"both\" ? this.style.setProperty(\"--auto-size-available-height\", `${s}px`) : this.style.removeProperty(\"--auto-size-available-height\"), this.autoSize === \"horizontal\" || this.autoSize === \"both\" ? this.style.setProperty(\"--auto-size-available-width\", `${i}px`) : this.style.removeProperty(\"--auto-size-available-width\"); } }) ) : (this.style.removeProperty(\"--auto-size-available-width\"), this.style.removeProperty(\"--auto-size-available-height\")), this.arrow && t.push( jn({ element: this.arrowEl, padding: this.arrowPadding }) ); const e = this.strategy === \"absolute\" ? (i) => Yi.getOffsetParent(i, Kn) : Yi.getOffsetParent; Wn(this.anchorEl, this.popup, { placement: this.placement, middleware: t, strategy: this.strategy, platform: Pi(ue({}, Yi), { getOffsetParent: e }) }).then(({ x: i, y: s, middlewareData: r, placement: o }) => { const n = this.localize.dir() === \"rtl\", d = { top: \"bottom\", right: \"left\", bottom: \"top\", left: \"right\" }[o.split(\"-\")[0]]; if (this.setAttribute(\"data-current-placement\", o), Object.assign(this.popup.style, { left: `${i}px`, top: `${s}px` }), this.arrow) { const c = r.arrow.x, u = r.arrow.y; let f = \"\", p = \"\", m = \"\", b = \"\"; if (this.arrowPlacement === \"start\") { const g = typeof c == \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\"; f = typeof u == \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\", p = n ? g : \"\", b = n ? \"\" : g; } else if (this.arrowPlacement === \"end\") { const g = typeof c == \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\"; p = n ? \"\" : g, b = n ? g : \"\", m = typeof u == \"number\" ? `calc(${this.arrowPadding}px - var(--arrow-padding-offset))` : \"\"; } else this.arrowPlacement === \"center\" ? (b = typeof c == \"number\" ? \"calc(50% - var(--arrow-size-diagonal))\" : \"\", f = typeof u == \"number\" ? \"calc(50% - var(--arrow-size-diagonal))\" : \"\") : (b = typeof c == \"number\" ? `${c}px` : \"\", f = typeof u == \"number\" ? `${u}px` : \"\"); Object.assign(this.arrowEl.style, { top: f, right: p, bottom: m, left: b, [d]: \"calc(var(--arrow-size-diagonal) * -1)\" }); } }), requestAnimationFrame(() => this.updateHoverBridge()), this.emit(\"sl-reposition\"); } render() { return v` <slot name=\"anchor\" @slotchange=${this.handleAnchorChange}></slot> <span part=\"hover-bridge\" class=${D({ \"popup-hover-bridge\": !0, \"popup-hover-bridge--visible\": this.hoverBridge && this.active })} ></span> <div part=\"popup\" class=${D({ popup: !0, \"popup--active\": this.active, \"popup--fixed\": this.strategy === \"fixed\", \"popup--has-arrow\": this.arrow })} > <slot></slot> ${this.arrow ? v`<div part=\"arrow\" class=\"popup__arrow\" role=\"presentation\"></div>` : \"\"} </div> `; } }"
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "c"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "j",
          "default": "class extends T { constructor() { super(...arguments), this.formControlController = new pe(this, { assumeInteractionOn: [\"sl-blur\", \"sl-input\"] }), this.hasSlotController = new $t(this, \"help-text\", \"label\"), this.hasFocus = !1, this.title = \"\", this.name = \"\", this.value = \"\", this.size = \"medium\", this.filled = !1, this.label = \"\", this.helpText = \"\", this.placeholder = \"\", this.rows = 4, this.resize = \"vertical\", this.disabled = !1, this.readonly = !1, this.form = \"\", this.required = !1, this.spellcheck = !0, this.defaultValue = \"\"; } /** Gets the validity state object */ get validity() { return this.input.validity; } /** Gets the validation message */ get validationMessage() { return this.input.validationMessage; } connectedCallback() { super.connectedCallback(), this.resizeObserver = new ResizeObserver(() => this.setTextareaHeight()), this.updateComplete.then(() => { this.setTextareaHeight(), this.resizeObserver.observe(this.input); }); } firstUpdated() { this.formControlController.updateValidity(); } disconnectedCallback() { var t; super.disconnectedCallback(), this.input && ((t = this.resizeObserver) == null || t.unobserve(this.input)); } handleBlur() { this.hasFocus = !1, this.emit(\"sl-blur\"); } handleChange() { this.value = this.input.value, this.setTextareaHeight(), this.emit(\"sl-change\"); } handleFocus() { this.hasFocus = !0, this.emit(\"sl-focus\"); } handleInput() { this.value = this.input.value, this.emit(\"sl-input\"); } handleInvalid(t) { this.formControlController.setValidity(!1), this.formControlController.emitInvalidEvent(t); } setTextareaHeight() { this.resize === \"auto\" ? (this.sizeAdjuster.style.height = `${this.input.clientHeight}px`, this.input.style.height = \"auto\", this.input.style.height = `${this.input.scrollHeight}px`) : this.input.style.height = \"\"; } handleDisabledChange() { this.formControlController.setValidity(this.disabled); } handleRowsChange() { this.setTextareaHeight(); } async handleValueChange() { await this.updateComplete, this.formControlController.updateValidity(), this.setTextareaHeight(); } /** Sets focus on the textarea. */ focus(t) { this.input.focus(t); } /** Removes focus from the textarea. */ blur() { this.input.blur(); } /** Selects all the text in the textarea. */ select() { this.input.select(); } /** Gets or sets the textarea's scroll position. */ scrollPosition(t) { if (t) { typeof t.top == \"number\" && (this.input.scrollTop = t.top), typeof t.left == \"number\" && (this.input.scrollLeft = t.left); return; } return { top: this.input.scrollTop, left: this.input.scrollTop }; } /** Sets the start and end positions of the text selection (0-based). */ setSelectionRange(t, e, i = \"none\") { this.input.setSelectionRange(t, e, i); } /** Replaces a range of text with a new string. */ setRangeText(t, e, i, s = \"preserve\") { const r = e ?? this.input.selectionStart, o = i ?? this.input.selectionEnd; this.input.setRangeText(t, r, o, s), this.value !== this.input.value && (this.value = this.input.value, this.setTextareaHeight()); } /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */ checkValidity() { return this.input.checkValidity(); } /** Gets the associated form, if one exists. */ getForm() { return this.formControlController.getForm(); } /** Checks for validity and shows the browser's validation message if the control is invalid. */ reportValidity() { return this.input.reportValidity(); } /** Sets a custom validation message. Pass an empty string to restore validity. */ setCustomValidity(t) { this.input.setCustomValidity(t), this.formControlController.updateValidity(); } render() { const t = this.hasSlotController.test(\"label\"), e = this.hasSlotController.test(\"help-text\"), i = this.label ? !0 : !!t, s = this.helpText ? !0 : !!e; return v` <div part=\"form-control\" class=${D({ \"form-control\": !0, \"form-control--small\": this.size === \"small\", \"form-control--medium\": this.size === \"medium\", \"form-control--large\": this.size === \"large\", \"form-control--has-label\": i, \"form-control--has-help-text\": s })} > <label part=\"form-control-label\" class=\"form-control__label\" for=\"input\" aria-hidden=${i ? \"false\" : \"true\"} > <slot name=\"label\">${this.label}</slot> </label> <div part=\"form-control-input\" class=\"form-control-input\"> <div part=\"base\" class=${D({ textarea: !0, \"textarea--small\": this.size === \"small\", \"textarea--medium\": this.size === \"medium\", \"textarea--large\": this.size === \"large\", \"textarea--standard\": !this.filled, \"textarea--filled\": this.filled, \"textarea--disabled\": this.disabled, \"textarea--focused\": this.hasFocus, \"textarea--empty\": !this.value, \"textarea--resize-none\": this.resize === \"none\", \"textarea--resize-vertical\": this.resize === \"vertical\", \"textarea--resize-auto\": this.resize === \"auto\" })} > <textarea part=\"textarea\" id=\"input\" class=\"textarea__control\" title=${this.title} name=${z(this.name)} .value=${Be(this.value)} ?disabled=${this.disabled} ?readonly=${this.readonly} ?required=${this.required} placeholder=${z(this.placeholder)} rows=${z(this.rows)} minlength=${z(this.minlength)} maxlength=${z(this.maxlength)} autocapitalize=${z(this.autocapitalize)} autocorrect=${z(this.autocorrect)} ?autofocus=${this.autofocus} spellcheck=${z(this.spellcheck)} enterkeyhint=${z(this.enterkeyhint)} inputmode=${z(this.inputmode)} aria-describedby=\"help-text\" @change=${this.handleChange} @input=${this.handleInput} @invalid=${this.handleInvalid} @focus=${this.handleFocus} @blur=${this.handleBlur} ></textarea> <!-- This \"adjuster\" exists to prevent layout shifting. https://github.com/shoelace-style/shoelace/issues/2180 --> <div part=\"textarea-adjuster\" class=\"textarea__size-adjuster\" ?hidden=${this.resize !== \"auto\"}></div> </div> </div> <div part=\"form-control-help-text\" id=\"help-text\" class=\"form-control__help-text\" aria-hidden=${s ? \"false\" : \"true\"} > <slot name=\"help-text\">${this.helpText}</slot> </div> </div> `; } }"
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "s"
        },
        {
          "kind": "variable",
          "name": "Qi"
        },
        {
          "kind": "variable",
          "name": "N",
          "default": "class extends T { constructor() { super(...arguments), this.formControlController = new pe(this, { assumeInteractionOn: [\"sl-blur\", \"sl-input\"] }), this.hasSlotController = new $t(this, \"help-text\", \"label\"), this.localize = new q(this), this.typeToSelectString = \"\", this.hasFocus = !1, this.displayLabel = \"\", this.selectedOptions = [], this.valueHasChanged = !1, this.name = \"\", this._value = \"\", this.defaultValue = \"\", this.size = \"medium\", this.placeholder = \"\", this.multiple = !1, this.maxOptionsVisible = 3, this.disabled = !1, this.clearable = !1, this.open = !1, this.hoist = !1, this.filled = !1, this.pill = !1, this.label = \"\", this.placement = \"bottom\", this.helpText = \"\", this.form = \"\", this.required = !1, this.getTag = (t) => v` <sl-tag part=\"tag\" exportparts=\" base:tag__base, content:tag__content, remove-button:tag__remove-button, remove-button__base:tag__remove-button__base \" ?pill=${this.pill} size=${this.size} removable @sl-remove=${(e) => this.handleTagRemove(e, t)} > ${t.getTextLabel()} </sl-tag> `, this.handleDocumentFocusIn = (t) => { const e = t.composedPath(); this && !e.includes(this) && this.hide(); }, this.handleDocumentKeyDown = (t) => { const e = t.target, i = e.closest(\".select__clear\") !== null, s = e.closest(\"sl-icon-button\") !== null; if (!(i || s)) { if (t.key === \"Escape\" && this.open && !this.closeWatcher && (t.preventDefault(), t.stopPropagation(), this.hide(), this.displayInput.focus({ preventScroll: !0 })), t.key === \"Enter\" || t.key === \" \" && this.typeToSelectString === \"\") { if (t.preventDefault(), t.stopImmediatePropagation(), !this.open) { this.show(); return; } this.currentOption && !this.currentOption.disabled && (this.valueHasChanged = !0, this.multiple ? this.toggleOptionSelection(this.currentOption) : this.setSelectedOptions(this.currentOption), this.updateComplete.then(() => { this.emit(\"sl-input\"), this.emit(\"sl-change\"); }), this.multiple || (this.hide(), this.displayInput.focus({ preventScroll: !0 }))); return; } if ([\"ArrowUp\", \"ArrowDown\", \"Home\", \"End\"].includes(t.key)) { const r = this.getAllOptions(), o = r.indexOf(this.currentOption); let n = Math.max(0, o); if (t.preventDefault(), !this.open && (this.show(), this.currentOption)) return; t.key === \"ArrowDown\" ? (n = o + 1, n > r.length - 1 && (n = 0)) : t.key === \"ArrowUp\" ? (n = o - 1, n < 0 && (n = r.length - 1)) : t.key === \"Home\" ? n = 0 : t.key === \"End\" && (n = r.length - 1), this.setCurrentOption(r[n]); } if (t.key && t.key.length === 1 || t.key === \"Backspace\") { const r = this.getAllOptions(); if (t.metaKey || t.ctrlKey || t.altKey) return; if (!this.open) { if (t.key === \"Backspace\") return; this.show(); } t.stopPropagation(), t.preventDefault(), clearTimeout(this.typeToSelectTimeout), this.typeToSelectTimeout = window.setTimeout(() => this.typeToSelectString = \"\", 1e3), t.key === \"Backspace\" ? this.typeToSelectString = this.typeToSelectString.slice(0, -1) : this.typeToSelectString += t.key.toLowerCase(); for (const o of r) if (o.getTextLabel().toLowerCase().startsWith(this.typeToSelectString)) { this.setCurrentOption(o); break; } } } }, this.handleDocumentMouseDown = (t) => { const e = t.composedPath(); this && !e.includes(this) && this.hide(); }; } get value() { return this._value; } set value(t) { this.multiple ? t = Array.isArray(t) ? t : t.split(\" \") : t = Array.isArray(t) ? t.join(\" \") : t, this._value !== t && (this.valueHasChanged = !0, this._value = t); } /** Gets the validity state object */ get validity() { return this.valueInput.validity; } /** Gets the validation message */ get validationMessage() { return this.valueInput.validationMessage; } connectedCallback() { super.connectedCallback(), setTimeout(() => { this.handleDefaultSlotChange(); }), this.open = !1; } addOpenListeners() { var t; document.addEventListener(\"focusin\", this.handleDocumentFocusIn), document.addEventListener(\"keydown\", this.handleDocumentKeyDown), document.addEventListener(\"mousedown\", this.handleDocumentMouseDown), this.getRootNode() !== document && this.getRootNode().addEventListener(\"focusin\", this.handleDocumentFocusIn), \"CloseWatcher\" in window && ((t = this.closeWatcher) == null || t.destroy(), this.closeWatcher = new CloseWatcher(), this.closeWatcher.onclose = () => { this.open && (this.hide(), this.displayInput.focus({ preventScroll: !0 })); }); } removeOpenListeners() { var t; document.removeEventListener(\"focusin\", this.handleDocumentFocusIn), document.removeEventListener(\"keydown\", this.handleDocumentKeyDown), document.removeEventListener(\"mousedown\", this.handleDocumentMouseDown), this.getRootNode() !== document && this.getRootNode().removeEventListener(\"focusin\", this.handleDocumentFocusIn), (t = this.closeWatcher) == null || t.destroy(); } handleFocus() { this.hasFocus = !0, this.displayInput.setSelectionRange(0, 0), this.emit(\"sl-focus\"); } handleBlur() { this.hasFocus = !1, this.emit(\"sl-blur\"); } handleLabelClick() { this.displayInput.focus(); } handleComboboxMouseDown(t) { const i = t.composedPath().some((s) => s instanceof Element && s.tagName.toLowerCase() === \"sl-icon-button\"); this.disabled || i || (t.preventDefault(), this.displayInput.focus({ preventScroll: !0 }), this.open = !this.open); } handleComboboxKeyDown(t) { t.key !== \"Tab\" && (t.stopPropagation(), this.handleDocumentKeyDown(t)); } handleClearClick(t) { t.stopPropagation(), this.valueHasChanged = !0, this.value !== \"\" && (this.setSelectedOptions([]), this.displayInput.focus({ preventScroll: !0 }), this.updateComplete.then(() => { this.emit(\"sl-clear\"), this.emit(\"sl-input\"), this.emit(\"sl-change\"); })); } handleClearMouseDown(t) { t.stopPropagation(), t.preventDefault(); } handleOptionClick(t) { const i = t.target.closest(\"sl-option\"), s = this.value; i && !i.disabled && (this.valueHasChanged = !0, this.multiple ? this.toggleOptionSelection(i) : this.setSelectedOptions(i), this.updateComplete.then(() => this.displayInput.focus({ preventScroll: !0 })), this.value !== s && this.updateComplete.then(() => { this.emit(\"sl-input\"), this.emit(\"sl-change\"); }), this.multiple || (this.hide(), this.displayInput.focus({ preventScroll: !0 }))); } /* @internal - used by options to update labels */ handleDefaultSlotChange() { customElements.get(\"sl-option\") || customElements.whenDefined(\"sl-option\").then(() => this.handleDefaultSlotChange()); const t = this.getAllOptions(), e = this.valueHasChanged ? this.value : this.defaultValue, i = Array.isArray(e) ? e : [e], s = []; t.forEach((r) => s.push(r.value)), this.setSelectedOptions(t.filter((r) => i.includes(r.value))); } handleTagRemove(t, e) { t.stopPropagation(), this.valueHasChanged = !0, this.disabled || (this.toggleOptionSelection(e, !1), this.updateComplete.then(() => { this.emit(\"sl-input\"), this.emit(\"sl-change\"); })); } // Gets an array of all <sl-option> elements getAllOptions() { return [...this.querySelectorAll(\"sl-option\")]; } // Gets the first <sl-option> element getFirstOption() { return this.querySelector(\"sl-option\"); } // Sets the current option, which is the option the user is currently interacting with (e.g. via keyboard). Only one // option may be \"current\" at a time. setCurrentOption(t) { this.getAllOptions().forEach((i) => { i.current = !1, i.tabIndex = -1; }), t && (this.currentOption = t, t.current = !0, t.tabIndex = 0, t.focus()); } // Sets the selected option(s) setSelectedOptions(t) { const e = this.getAllOptions(), i = Array.isArray(t) ? t : [t]; e.forEach((s) => s.selected = !1), i.length && i.forEach((s) => s.selected = !0), this.selectionChanged(); } // Toggles an option's selected state toggleOptionSelection(t, e) { e === !0 || e === !1 ? t.selected = e : t.selected = !t.selected, this.selectionChanged(); } // This method must be called whenever the selection changes. It will update the selected options cache, the current // value, and the display value selectionChanged() { var t, e, i; const s = this.getAllOptions(); this.selectedOptions = s.filter((o) => o.selected); const r = this.valueHasChanged; if (this.multiple) this.value = this.selectedOptions.map((o) => o.value), this.placeholder && this.value.length === 0 ? this.displayLabel = \"\" : this.displayLabel = this.localize.term(\"numOptionsSelected\", this.selectedOptions.length); else { const o = this.selectedOptions[0]; this.value = (t = o == null ? void 0 : o.value) != null ? t : \"\", this.displayLabel = (i = (e = o == null ? void 0 : o.getTextLabel) == null ? void 0 : e.call(o)) != null ? i : \"\"; } this.valueHasChanged = r, this.updateComplete.then(() => { this.formControlController.updateValidity(); }); } get tags() { return this.selectedOptions.map((t, e) => { if (e < this.maxOptionsVisible || this.maxOptionsVisible <= 0) { const i = this.getTag(t, e); return v`<div @sl-remove=${(s) => this.handleTagRemove(s, t)}> ${typeof i == \"string\" ? Qi(i) : i} </div>`; } else if (e === this.maxOptionsVisible) return v`<sl-tag size=${this.size}>+${this.selectedOptions.length - e}</sl-tag>`; return v``; }); } handleInvalid(t) { this.formControlController.setValidity(!1), this.formControlController.emitInvalidEvent(t); } handleDisabledChange() { this.disabled && (this.open = !1, this.handleOpenChange()); } attributeChangedCallback(t, e, i) { if (super.attributeChangedCallback(t, e, i), t === \"value\") { const s = this.valueHasChanged; this.value = this.defaultValue, this.valueHasChanged = s; } } handleValueChange() { if (!this.valueHasChanged) { const i = this.valueHasChanged; this.value = this.defaultValue, this.valueHasChanged = i; } const t = this.getAllOptions(), e = Array.isArray(this.value) ? this.value : [this.value]; this.setSelectedOptions(t.filter((i) => e.includes(i.value))); } async handleOpenChange() { if (this.open && !this.disabled) { this.setCurrentOption(this.selectedOptions[0] || this.getFirstOption()), this.emit(\"sl-show\"), this.addOpenListeners(), await lt(this), this.listbox.hidden = !1, this.popup.active = !0, requestAnimationFrame(() => { this.setCurrentOption(this.currentOption); }); const { keyframes: t, options: e } = J(this, \"select.show\", { dir: this.localize.dir() }); await it(this.popup.popup, t, e), this.currentOption && Vs(this.currentOption, this.listbox, \"vertical\", \"auto\"), this.emit(\"sl-after-show\"); } else { this.emit(\"sl-hide\"), this.removeOpenListeners(), await lt(this); const { keyframes: t, options: e } = J(this, \"select.hide\", { dir: this.localize.dir() }); await it(this.popup.popup, t, e), this.listbox.hidden = !0, this.popup.active = !1, this.emit(\"sl-after-hide\"); } } /** Shows the listbox. */ async show() { if (this.open || this.disabled) { this.open = !1; return; } return this.open = !0, St(this, \"sl-after-show\"); } /** Hides the listbox. */ async hide() { if (!this.open || this.disabled) { this.open = !1; return; } return this.open = !1, St(this, \"sl-after-hide\"); } /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */ checkValidity() { return this.valueInput.checkValidity(); } /** Gets the associated form, if one exists. */ getForm() { return this.formControlController.getForm(); } /** Checks for validity and shows the browser's validation message if the control is invalid. */ reportValidity() { return this.valueInput.reportValidity(); } /** Sets a custom validation message. Pass an empty string to restore validity. */ setCustomValidity(t) { this.valueInput.setCustomValidity(t), this.formControlController.updateValidity(); } /** Sets focus on the control. */ focus(t) { this.displayInput.focus(t); } /** Removes focus from the control. */ blur() { this.displayInput.blur(); } render() { const t = this.hasSlotController.test(\"label\"), e = this.hasSlotController.test(\"help-text\"), i = this.label ? !0 : !!t, s = this.helpText ? !0 : !!e, r = this.clearable && !this.disabled && this.value.length > 0, o = this.placeholder && this.value && this.value.length <= 0; return v` <div part=\"form-control\" class=${D({ \"form-control\": !0, \"form-control--small\": this.size === \"small\", \"form-control--medium\": this.size === \"medium\", \"form-control--large\": this.size === \"large\", \"form-control--has-label\": i, \"form-control--has-help-text\": s })} > <label id=\"label\" part=\"form-control-label\" class=\"form-control__label\" aria-hidden=${i ? \"false\" : \"true\"} @click=${this.handleLabelClick} > <slot name=\"label\">${this.label}</slot> </label> <div part=\"form-control-input\" class=\"form-control-input\"> <sl-popup class=${D({ select: !0, \"select--standard\": !0, \"select--filled\": this.filled, \"select--pill\": this.pill, \"select--open\": this.open, \"select--disabled\": this.disabled, \"select--multiple\": this.multiple, \"select--focused\": this.hasFocus, \"select--placeholder-visible\": o, \"select--top\": this.placement === \"top\", \"select--bottom\": this.placement === \"bottom\", \"select--small\": this.size === \"small\", \"select--medium\": this.size === \"medium\", \"select--large\": this.size === \"large\" })} placement=${this.placement} strategy=${this.hoist ? \"fixed\" : \"absolute\"} flip shift sync=\"width\" auto-size=\"vertical\" auto-size-padding=\"10\" > <div part=\"combobox\" class=\"select__combobox\" slot=\"anchor\" @keydown=${this.handleComboboxKeyDown} @mousedown=${this.handleComboboxMouseDown} > <slot part=\"prefix\" name=\"prefix\" class=\"select__prefix\"></slot> <input part=\"display-input\" class=\"select__display-input\" type=\"text\" placeholder=${this.placeholder} .disabled=${this.disabled} .value=${this.displayLabel} autocomplete=\"off\" spellcheck=\"false\" autocapitalize=\"off\" readonly aria-controls=\"listbox\" aria-expanded=${this.open ? \"true\" : \"false\"} aria-haspopup=\"listbox\" aria-labelledby=\"label\" aria-disabled=${this.disabled ? \"true\" : \"false\"} aria-describedby=\"help-text\" role=\"combobox\" tabindex=\"0\" @focus=${this.handleFocus} @blur=${this.handleBlur} /> ${this.multiple ? v`<div part=\"tags\" class=\"select__tags\">${this.tags}</div>` : \"\"} <input class=\"select__value-input\" type=\"text\" ?disabled=${this.disabled} ?required=${this.required} .value=${Array.isArray(this.value) ? this.value.join(\", \") : this.value} tabindex=\"-1\" aria-hidden=\"true\" @focus=${() => this.focus()} @invalid=${this.handleInvalid} /> ${r ? v` <button part=\"clear-button\" class=\"select__clear\" type=\"button\" aria-label=${this.localize.term(\"clearEntry\")} @mousedown=${this.handleClearMouseDown} @click=${this.handleClearClick} tabindex=\"-1\" > <slot name=\"clear-icon\"> <sl-icon name=\"x-circle-fill\" library=\"system\"></sl-icon> </slot> </button> ` : \"\"} <slot name=\"suffix\" part=\"suffix\" class=\"select__suffix\"></slot> <slot name=\"expand-icon\" part=\"expand-icon\" class=\"select__expand-icon\"> <sl-icon library=\"system\" name=\"chevron-down\"></sl-icon> </slot> </div> <div id=\"listbox\" role=\"listbox\" aria-expanded=${this.open ? \"true\" : \"false\"} aria-multiselectable=${this.multiple ? \"true\" : \"false\"} aria-labelledby=\"label\" part=\"listbox\" class=\"select__listbox\" tabindex=\"-1\" @mouseup=${this.handleOptionClick} @slotchange=${this.handleDefaultSlotChange} > <slot></slot> </div> </sl-popup> </div> <div part=\"form-control-help-text\" id=\"help-text\" class=\"form-control__help-text\" aria-hidden=${s ? \"false\" : \"true\"} > <slot name=\"help-text\">${this.helpText}</slot> </div> </div> `; } }"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            },
            {
              "name": "u"
            },
            {
              "name": "f"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            },
            {
              "name": "u"
            },
            {
              "name": "f"
            },
            {
              "name": "p"
            },
            {
              "name": "m"
            },
            {
              "name": "b"
            },
            {
              "name": "g"
            },
            {
              "name": "w"
            },
            {
              "name": "$"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "k"
            },
            {
              "name": "E"
            },
            {
              "name": "x"
            },
            {
              "name": "_"
            },
            {
              "name": "M"
            },
            {
              "name": "B"
            },
            {
              "name": "V"
            }
          ]
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            },
            {
              "name": "u"
            },
            {
              "name": "f"
            },
            {
              "name": "p"
            },
            {
              "name": "m"
            },
            {
              "name": "b"
            },
            {
              "name": "g"
            },
            {
              "name": "w"
            },
            {
              "name": "$"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "k"
            },
            {
              "name": "E"
            },
            {
              "name": "x"
            },
            {
              "name": "_"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "c"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "c"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "u"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "k"
            },
            {
              "name": "E"
            }
          ]
        },
        {
          "kind": "function",
          "name": "p",
          "parameters": [
            {
              "name": "k"
            },
            {
              "name": "E"
            }
          ]
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "u"
            }
          ]
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "p"
            }
          ]
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "p"
            },
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "F",
          "default": "class extends T { constructor() { super(...arguments), this.formControlController = new pe(this, { assumeInteractionOn: [\"sl-blur\", \"sl-input\"] }), this.hasSlotController = new $t(this, \"help-text\", \"label\"), this.localize = new q(this), this.hasFocus = !1, this.title = \"\", this.__numberInput = Object.assign(document.createElement(\"input\"), { type: \"number\" }), this.__dateInput = Object.assign(document.createElement(\"input\"), { type: \"date\" }), this.type = \"text\", this.name = \"\", this.value = \"\", this.defaultValue = \"\", this.size = \"medium\", this.filled = !1, this.pill = !1, this.label = \"\", this.helpText = \"\", this.clearable = !1, this.disabled = !1, this.placeholder = \"\", this.readonly = !1, this.passwordToggle = !1, this.passwordVisible = !1, this.noSpinButtons = !1, this.form = \"\", this.required = !1, this.spellcheck = !0; } // // NOTE: We use an in-memory input for these getters/setters instead of the one in the template because the properties // can be set before the component is rendered. // /** * Gets or sets the current value as a `Date` object. Returns `null` if the value can't be converted. This will use the native `<input type=\"{{type}}\">` implementation and may result in an error. */ get valueAsDate() { var t; return this.__dateInput.type = this.type, this.__dateInput.value = this.value, ((t = this.input) == null ? void 0 : t.valueAsDate) || this.__dateInput.valueAsDate; } set valueAsDate(t) { this.__dateInput.type = this.type, this.__dateInput.valueAsDate = t, this.value = this.__dateInput.value; } /** Gets or sets the current value as a number. Returns `NaN` if the value can't be converted. */ get valueAsNumber() { var t; return this.__numberInput.value = this.value, ((t = this.input) == null ? void 0 : t.valueAsNumber) || this.__numberInput.valueAsNumber; } set valueAsNumber(t) { this.__numberInput.valueAsNumber = t, this.value = this.__numberInput.value; } /** Gets the validity state object */ get validity() { return this.input.validity; } /** Gets the validation message */ get validationMessage() { return this.input.validationMessage; } firstUpdated() { this.formControlController.updateValidity(); } handleBlur() { this.hasFocus = !1, this.emit(\"sl-blur\"); } handleChange() { this.value = this.input.value, this.emit(\"sl-change\"); } handleClearClick(t) { t.preventDefault(), this.value !== \"\" && (this.value = \"\", this.emit(\"sl-clear\"), this.emit(\"sl-input\"), this.emit(\"sl-change\")), this.input.focus(); } handleFocus() { this.hasFocus = !0, this.emit(\"sl-focus\"); } handleInput() { this.value = this.input.value, this.formControlController.updateValidity(), this.emit(\"sl-input\"); } handleInvalid(t) { this.formControlController.setValidity(!1), this.formControlController.emitInvalidEvent(t); } handleKeyDown(t) { const e = t.metaKey || t.ctrlKey || t.shiftKey || t.altKey; t.key === \"Enter\" && !e && setTimeout(() => { !t.defaultPrevented && !t.isComposing && this.formControlController.submit(); }); } handlePasswordToggle() { this.passwordVisible = !this.passwordVisible; } handleDisabledChange() { this.formControlController.setValidity(this.disabled); } handleStepChange() { this.input.step = String(this.step), this.formControlController.updateValidity(); } async handleValueChange() { await this.updateComplete, this.formControlController.updateValidity(); } /** Sets focus on the input. */ focus(t) { this.input.focus(t); } /** Removes focus from the input. */ blur() { this.input.blur(); } /** Selects all the text in the input. */ select() { this.input.select(); } /** Sets the start and end positions of the text selection (0-based). */ setSelectionRange(t, e, i = \"none\") { this.input.setSelectionRange(t, e, i); } /** Replaces a range of text with a new string. */ setRangeText(t, e, i, s = \"preserve\") { const r = e ?? this.input.selectionStart, o = i ?? this.input.selectionEnd; this.input.setRangeText(t, r, o, s), this.value !== this.input.value && (this.value = this.input.value); } /** Displays the browser picker for an input element (only works if the browser supports it for the input type). */ showPicker() { \"showPicker\" in HTMLInputElement.prototype && this.input.showPicker(); } /** Increments the value of a numeric input type by the value of the step attribute. */ stepUp() { this.input.stepUp(), this.value !== this.input.value && (this.value = this.input.value); } /** Decrements the value of a numeric input type by the value of the step attribute. */ stepDown() { this.input.stepDown(), this.value !== this.input.value && (this.value = this.input.value); } /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */ checkValidity() { return this.input.checkValidity(); } /** Gets the associated form, if one exists. */ getForm() { return this.formControlController.getForm(); } /** Checks for validity and shows the browser's validation message if the control is invalid. */ reportValidity() { return this.input.reportValidity(); } /** Sets a custom validation message. Pass an empty string to restore validity. */ setCustomValidity(t) { this.input.setCustomValidity(t), this.formControlController.updateValidity(); } render() { const t = this.hasSlotController.test(\"label\"), e = this.hasSlotController.test(\"help-text\"), i = this.label ? !0 : !!t, s = this.helpText ? !0 : !!e, o = this.clearable && !this.disabled && !this.readonly && (typeof this.value == \"number\" || this.value.length > 0); return v` <div part=\"form-control\" class=${D({ \"form-control\": !0, \"form-control--small\": this.size === \"small\", \"form-control--medium\": this.size === \"medium\", \"form-control--large\": this.size === \"large\", \"form-control--has-label\": i, \"form-control--has-help-text\": s })} > <label part=\"form-control-label\" class=\"form-control__label\" for=\"input\" aria-hidden=${i ? \"false\" : \"true\"} > <slot name=\"label\">${this.label}</slot> </label> <div part=\"form-control-input\" class=\"form-control-input\"> <div part=\"base\" class=${D({ input: !0, // Sizes \"input--small\": this.size === \"small\", \"input--medium\": this.size === \"medium\", \"input--large\": this.size === \"large\", // States \"input--pill\": this.pill, \"input--standard\": !this.filled, \"input--filled\": this.filled, \"input--disabled\": this.disabled, \"input--focused\": this.hasFocus, \"input--empty\": !this.value, \"input--no-spin-buttons\": this.noSpinButtons })} > <span part=\"prefix\" class=\"input__prefix\"> <slot name=\"prefix\"></slot> </span> <input part=\"input\" id=\"input\" class=\"input__control\" type=${this.type === \"password\" && this.passwordVisible ? \"text\" : this.type} title=${this.title} name=${z(this.name)} ?disabled=${this.disabled} ?readonly=${this.readonly} ?required=${this.required} placeholder=${z(this.placeholder)} minlength=${z(this.minlength)} maxlength=${z(this.maxlength)} min=${z(this.min)} max=${z(this.max)} step=${z(this.step)} .value=${Be(this.value)} autocapitalize=${z(this.autocapitalize)} autocomplete=${z(this.autocomplete)} autocorrect=${z(this.autocorrect)} ?autofocus=${this.autofocus} spellcheck=${this.spellcheck} pattern=${z(this.pattern)} enterkeyhint=${z(this.enterkeyhint)} inputmode=${z(this.inputmode)} aria-describedby=\"help-text\" @change=${this.handleChange} @input=${this.handleInput} @invalid=${this.handleInvalid} @keydown=${this.handleKeyDown} @focus=${this.handleFocus} @blur=${this.handleBlur} /> ${o ? v` <button part=\"clear-button\" class=\"input__clear\" type=\"button\" aria-label=${this.localize.term(\"clearEntry\")} @click=${this.handleClearClick} tabindex=\"-1\" > <slot name=\"clear-icon\"> <sl-icon name=\"x-circle-fill\" library=\"system\"></sl-icon> </slot> </button> ` : \"\"} ${this.passwordToggle && !this.disabled ? v` <button part=\"password-toggle-button\" class=\"input__password-toggle\" type=\"button\" aria-label=${this.localize.term(this.passwordVisible ? \"hidePassword\" : \"showPassword\")} @click=${this.handlePasswordToggle} tabindex=\"-1\" > ${this.passwordVisible ? v` <slot name=\"show-password-icon\"> <sl-icon name=\"eye-slash\" library=\"system\"></sl-icon> </slot> ` : v` <slot name=\"hide-password-icon\"> <sl-icon name=\"eye\" library=\"system\"></sl-icon> </slot> `} </button> ` : \"\"} <span part=\"suffix\" class=\"input__suffix\"> <slot name=\"suffix\"></slot> </span> </div> </div> <div part=\"form-control-help-text\" id=\"help-text\" class=\"form-control__help-text\" aria-hidden=${s ? \"false\" : \"true\"} > <slot name=\"help-text\">${this.helpText}</slot> </div> </div> `; } }"
        },
        {
          "kind": "variable",
          "name": "yu",
          "default": "F"
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "s"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "wu",
          "default": "Ht"
        },
        {
          "kind": "variable",
          "name": "X",
          "default": "class extends T { constructor() { super(...arguments), this.formControlController = new pe(this, { assumeInteractionOn: [\"click\"] }), this.hasSlotController = new $t(this, \"[default]\", \"prefix\", \"suffix\"), this.localize = new q(this), this.hasFocus = !1, this.invalid = !1, this.title = \"\", this.variant = \"default\", this.size = \"medium\", this.caret = !1, this.disabled = !1, this.loading = !1, this.outline = !1, this.pill = !1, this.circle = !1, this.type = \"button\", this.name = \"\", this.value = \"\", this.href = \"\", this.rel = \"noreferrer noopener\"; } /** Gets the validity state object */ get validity() { return this.isButton() ? this.button.validity : ns; } /** Gets the validation message */ get validationMessage() { return this.isButton() ? this.button.validationMessage : \"\"; } firstUpdated() { this.isButton() && this.formControlController.updateValidity(); } handleBlur() { this.hasFocus = !1, this.emit(\"sl-blur\"); } handleFocus() { this.hasFocus = !0, this.emit(\"sl-focus\"); } handleClick() { this.type === \"submit\" && this.formControlController.submit(this), this.type === \"reset\" && this.formControlController.reset(this); } handleInvalid(t) { this.formControlController.setValidity(!1), this.formControlController.emitInvalidEvent(t); } isButton() { return !this.href; } isLink() { return !!this.href; } handleDisabledChange() { this.isButton() && this.formControlController.setValidity(this.disabled); } /** Simulates a click on the button. */ click() { this.button.click(); } /** Sets focus on the button. */ focus(t) { this.button.focus(t); } /** Removes focus from the button. */ blur() { this.button.blur(); } /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */ checkValidity() { return this.isButton() ? this.button.checkValidity() : !0; } /** Gets the associated form, if one exists. */ getForm() { return this.formControlController.getForm(); } /** Checks for validity and shows the browser's validation message if the control is invalid. */ reportValidity() { return this.isButton() ? this.button.reportValidity() : !0; } /** Sets a custom validation message. Pass an empty string to restore validity. */ setCustomValidity(t) { this.isButton() && (this.button.setCustomValidity(t), this.formControlController.updateValidity()); } render() { const t = this.isLink(), e = t ? rs`a` : rs`button`; return wi` <${e} part=\"base\" class=${D({ button: !0, \"button--default\": this.variant === \"default\", \"button--primary\": this.variant === \"primary\", \"button--success\": this.variant === \"success\", \"button--neutral\": this.variant === \"neutral\", \"button--warning\": this.variant === \"warning\", \"button--danger\": this.variant === \"danger\", \"button--text\": this.variant === \"text\", \"button--small\": this.size === \"small\", \"button--medium\": this.size === \"medium\", \"button--large\": this.size === \"large\", \"button--caret\": this.caret, \"button--circle\": this.circle, \"button--disabled\": this.disabled, \"button--focused\": this.hasFocus, \"button--loading\": this.loading, \"button--standard\": !this.outline, \"button--outline\": this.outline, \"button--pill\": this.pill, \"button--rtl\": this.localize.dir() === \"rtl\", \"button--has-label\": this.hasSlotController.test(\"[default]\"), \"button--has-prefix\": this.hasSlotController.test(\"prefix\"), \"button--has-suffix\": this.hasSlotController.test(\"suffix\") })} ?disabled=${z(t ? void 0 : this.disabled)} type=${z(t ? void 0 : this.type)} title=${this.title} name=${z(t ? void 0 : this.name)} value=${z(t ? void 0 : this.value)} href=${z(t && !this.disabled ? this.href : void 0)} target=${z(t ? this.target : void 0)} download=${z(t ? this.download : void 0)} rel=${z(t ? this.rel : void 0)} role=${z(t ? void 0 : \"button\")} aria-disabled=${this.disabled ? \"true\" : \"false\"} tabindex=${this.disabled ? \"-1\" : \"0\"} @blur=${this.handleBlur} @focus=${this.handleFocus} @invalid=${this.isButton() ? this.handleInvalid : null} @click=${this.handleClick} > <slot name=\"prefix\" part=\"prefix\" class=\"button__prefix\"></slot> <slot part=\"label\" class=\"button__label\"></slot> <slot name=\"suffix\" part=\"suffix\" class=\"button__suffix\"></slot> ${this.caret ? wi` <sl-icon part=\"caret\" class=\"button__caret\" library=\"system\" name=\"caret\"></sl-icon> ` : \"\"} ${this.loading ? wi`<sl-spinner part=\"spinner\"></sl-spinner>` : \"\"} </${e}> `; } }"
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "H",
          "default": "class extends T { constructor() { super(), this.formControlController = new pe(this), this.isSafeValue = !1, this.localize = new q(this), this.hasFocus = !1, this.isDraggingGridHandle = !1, this.isEmpty = !1, this.inputValue = \"\", this.hue = 0, this.saturation = 100, this.brightness = 100, this.alpha = 100, this.value = \"\", this.defaultValue = \"\", this.label = \"\", this.format = \"hex\", this.inline = !1, this.size = \"medium\", this.noFormatToggle = !1, this.name = \"\", this.disabled = !1, this.hoist = !1, this.opacity = !1, this.uppercase = !1, this.swatches = \"\", this.form = \"\", this.required = !1, this.handleFocusIn = () => { this.hasFocus = !0, this.emit(\"sl-focus\"); }, this.handleFocusOut = () => { this.hasFocus = !1, this.emit(\"sl-blur\"); }, this.addEventListener(\"focusin\", this.handleFocusIn), this.addEventListener(\"focusout\", this.handleFocusOut); } /** Gets the validity state object */ get validity() { return this.input.validity; } /** Gets the validation message */ get validationMessage() { return this.input.validationMessage; } firstUpdated() { this.input.updateComplete.then(() => { this.formControlController.updateValidity(); }); } handleCopy() { this.input.select(), document.execCommand(\"copy\"), this.previewButton.focus(), this.previewButton.classList.add(\"color-picker__preview-color--copied\"), this.previewButton.addEventListener(\"animationend\", () => { this.previewButton.classList.remove(\"color-picker__preview-color--copied\"); }); } handleFormatToggle() { const t = [\"hex\", \"rgb\", \"hsl\", \"hsv\"], e = (t.indexOf(this.format) + 1) % t.length; this.format = t[e], this.setColor(this.value), this.emit(\"sl-change\"), this.emit(\"sl-input\"); } handleAlphaDrag(t) { const e = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__alpha\"), i = e.querySelector(\".color-picker__slider-handle\"), { width: s } = e.getBoundingClientRect(); let r = this.value, o = this.value; i.focus(), t.preventDefault(), ki(e, { onMove: (n) => { this.alpha = nt(n / s * 100, 0, 100), this.syncValues(), this.value !== o && (o = this.value, this.emit(\"sl-input\")); }, onStop: () => { this.value !== r && (r = this.value, this.emit(\"sl-change\")); }, initialEvent: t }); } handleHueDrag(t) { const e = this.shadowRoot.querySelector(\".color-picker__slider.color-picker__hue\"), i = e.querySelector(\".color-picker__slider-handle\"), { width: s } = e.getBoundingClientRect(); let r = this.value, o = this.value; i.focus(), t.preventDefault(), ki(e, { onMove: (n) => { this.hue = nt(n / s * 360, 0, 360), this.syncValues(), this.value !== o && (o = this.value, this.emit(\"sl-input\")); }, onStop: () => { this.value !== r && (r = this.value, this.emit(\"sl-change\")); }, initialEvent: t }); } handleGridDrag(t) { const e = this.shadowRoot.querySelector(\".color-picker__grid\"), i = e.querySelector(\".color-picker__grid-handle\"), { width: s, height: r } = e.getBoundingClientRect(); let o = this.value, n = this.value; i.focus(), t.preventDefault(), this.isDraggingGridHandle = !0, ki(e, { onMove: (d, c) => { this.saturation = nt(d / s * 100, 0, 100), this.brightness = nt(100 - c / r * 100, 0, 100), this.syncValues(), this.value !== n && (n = this.value, this.emit(\"sl-input\")); }, onStop: () => { this.isDraggingGridHandle = !1, this.value !== o && (o = this.value, this.emit(\"sl-change\")); }, initialEvent: t }); } handleAlphaKeyDown(t) { const e = t.shiftKey ? 10 : 1, i = this.value; t.key === \"ArrowLeft\" && (t.preventDefault(), this.alpha = nt(this.alpha - e, 0, 100), this.syncValues()), t.key === \"ArrowRight\" && (t.preventDefault(), this.alpha = nt(this.alpha + e, 0, 100), this.syncValues()), t.key === \"Home\" && (t.preventDefault(), this.alpha = 0, this.syncValues()), t.key === \"End\" && (t.preventDefault(), this.alpha = 100, this.syncValues()), this.value !== i && (this.emit(\"sl-change\"), this.emit(\"sl-input\")); } handleHueKeyDown(t) { const e = t.shiftKey ? 10 : 1, i = this.value; t.key === \"ArrowLeft\" && (t.preventDefault(), this.hue = nt(this.hue - e, 0, 360), this.syncValues()), t.key === \"ArrowRight\" && (t.preventDefault(), this.hue = nt(this.hue + e, 0, 360), this.syncValues()), t.key === \"Home\" && (t.preventDefault(), this.hue = 0, this.syncValues()), t.key === \"End\" && (t.preventDefault(), this.hue = 360, this.syncValues()), this.value !== i && (this.emit(\"sl-change\"), this.emit(\"sl-input\")); } handleGridKeyDown(t) { const e = t.shiftKey ? 10 : 1, i = this.value; t.key === \"ArrowLeft\" && (t.preventDefault(), this.saturation = nt(this.saturation - e, 0, 100), this.syncValues()), t.key === \"ArrowRight\" && (t.preventDefault(), this.saturation = nt(this.saturation + e, 0, 100), this.syncValues()), t.key === \"ArrowUp\" && (t.preventDefault(), this.brightness = nt(this.brightness + e, 0, 100), this.syncValues()), t.key === \"ArrowDown\" && (t.preventDefault(), this.brightness = nt(this.brightness - e, 0, 100), this.syncValues()), this.value !== i && (this.emit(\"sl-change\"), this.emit(\"sl-input\")); } handleInputChange(t) { const e = t.target, i = this.value; t.stopPropagation(), this.input.value ? (this.setColor(e.value), e.value = this.value) : this.value = \"\", this.value !== i && (this.emit(\"sl-change\"), this.emit(\"sl-input\")); } handleInputInput(t) { this.formControlController.updateValidity(), t.stopPropagation(); } handleInputKeyDown(t) { if (t.key === \"Enter\") { const e = this.value; this.input.value ? (this.setColor(this.input.value), this.input.value = this.value, this.value !== e && (this.emit(\"sl-change\"), this.emit(\"sl-input\")), setTimeout(() => this.input.select())) : this.hue = 0; } } handleInputInvalid(t) { this.formControlController.setValidity(!1), this.formControlController.emitInvalidEvent(t); } handleTouchMove(t) { t.preventDefault(); } parseColor(t) { const e = new et(t); if (!e.isValid) return null; const i = e.toHsl(), s = { h: i.h, s: i.s * 100, l: i.l * 100, a: i.a }, r = e.toRgb(), o = e.toHexString(), n = e.toHex8String(), d = e.toHsv(), c = { h: d.h, s: d.s * 100, v: d.v * 100, a: d.a }; return { hsl: { h: s.h, s: s.s, l: s.l, string: this.setLetterCase(`hsl(${Math.round(s.h)}, ${Math.round(s.s)}%, ${Math.round(s.l)}%)`) }, hsla: { h: s.h, s: s.s, l: s.l, a: s.a, string: this.setLetterCase( `hsla(${Math.round(s.h)}, ${Math.round(s.s)}%, ${Math.round(s.l)}%, ${s.a.toFixed(2).toString()})` ) }, hsv: { h: c.h, s: c.s, v: c.v, string: this.setLetterCase(`hsv(${Math.round(c.h)}, ${Math.round(c.s)}%, ${Math.round(c.v)}%)`) }, hsva: { h: c.h, s: c.s, v: c.v, a: c.a, string: this.setLetterCase( `hsva(${Math.round(c.h)}, ${Math.round(c.s)}%, ${Math.round(c.v)}%, ${c.a.toFixed(2).toString()})` ) }, rgb: { r: r.r, g: r.g, b: r.b, string: this.setLetterCase(`rgb(${Math.round(r.r)}, ${Math.round(r.g)}, ${Math.round(r.b)})`) }, rgba: { r: r.r, g: r.g, b: r.b, a: r.a, string: this.setLetterCase( `rgba(${Math.round(r.r)}, ${Math.round(r.g)}, ${Math.round(r.b)}, ${r.a.toFixed(2).toString()})` ) }, hex: this.setLetterCase(o), hexa: this.setLetterCase(n) }; } setColor(t) { const e = this.parseColor(t); return e === null ? !1 : (this.hue = e.hsva.h, this.saturation = e.hsva.s, this.brightness = e.hsva.v, this.alpha = this.opacity ? e.hsva.a * 100 : 100, this.syncValues(), !0); } setLetterCase(t) { return typeof t != \"string\" ? \"\" : this.uppercase ? t.toUpperCase() : t.toLowerCase(); } async syncValues() { const t = this.parseColor( `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})` ); t !== null && (this.format === \"hsl\" ? this.inputValue = this.opacity ? t.hsla.string : t.hsl.string : this.format === \"rgb\" ? this.inputValue = this.opacity ? t.rgba.string : t.rgb.string : this.format === \"hsv\" ? this.inputValue = this.opacity ? t.hsva.string : t.hsv.string : this.inputValue = this.opacity ? t.hexa : t.hex, this.isSafeValue = !0, this.value = this.inputValue, await this.updateComplete, this.isSafeValue = !1); } handleAfterHide() { this.previewButton.classList.remove(\"color-picker__preview-color--copied\"); } handleEyeDropper() { if (!Ur) return; new EyeDropper().open().then((e) => { const i = this.value; this.setColor(e.sRGBHex), this.value !== i && (this.emit(\"sl-change\"), this.emit(\"sl-input\")); }).catch(() => { }); } selectSwatch(t) { const e = this.value; this.disabled || (this.setColor(t), this.value !== e && (this.emit(\"sl-change\"), this.emit(\"sl-input\"))); } /** Generates a hex string from HSV values. Hue must be 0-360. All other arguments must be 0-100. */ getHexString(t, e, i, s = 100) { const r = new et(`hsva(${t}, ${e}%, ${i}%, ${s / 100})`); return r.isValid ? r.toHex8String() : \"\"; } // Prevents nested components from leaking events stopNestedEventPropagation(t) { t.stopImmediatePropagation(); } handleFormatChange() { this.syncValues(); } handleOpacityChange() { this.alpha = 100; } handleValueChange(t, e) { if (this.isEmpty = !e, e || (this.hue = 0, this.saturation = 0, this.brightness = 100, this.alpha = 100), !this.isSafeValue) { const i = this.parseColor(e); i !== null ? (this.inputValue = this.value, this.hue = i.hsva.h, this.saturation = i.hsva.s, this.brightness = i.hsva.v, this.alpha = i.hsva.a * 100, this.syncValues()) : this.inputValue = t ?? \"\"; } } /** Sets focus on the color picker. */ focus(t) { this.inline ? this.base.focus(t) : this.trigger.focus(t); } /** Removes focus from the color picker. */ blur() { var t; const e = this.inline ? this.base : this.trigger; this.hasFocus && (e.focus({ preventScroll: !0 }), e.blur()), (t = this.dropdown) != null && t.open && this.dropdown.hide(); } /** Returns the current value as a string in the specified format. */ getFormattedValue(t = \"hex\") { const e = this.parseColor( `hsva(${this.hue}, ${this.saturation}%, ${this.brightness}%, ${this.alpha / 100})` ); if (e === null) return \"\"; switch (t) { case \"hex\": return e.hex; case \"hexa\": return e.hexa; case \"rgb\": return e.rgb.string; case \"rgba\": return e.rgba.string; case \"hsl\": return e.hsl.string; case \"hsla\": return e.hsla.string; case \"hsv\": return e.hsv.string; case \"hsva\": return e.hsva.string; default: return \"\"; } } /** Checks for validity but does not show a validation message. Returns `true` when valid and `false` when invalid. */ checkValidity() { return this.input.checkValidity(); } /** Gets the associated form, if one exists. */ getForm() { return this.formControlController.getForm(); } /** Checks for validity and shows the browser's validation message if the control is invalid. */ reportValidity() { return !this.inline && !this.validity.valid ? (this.dropdown.show(), this.addEventListener(\"sl-after-show\", () => this.input.reportValidity(), { once: !0 }), this.disabled || this.formControlController.emitInvalidEvent(), !1) : this.input.reportValidity(); } /** Sets a custom validation message. Pass an empty string to restore validity. */ setCustomValidity(t) { this.input.setCustomValidity(t), this.formControlController.updateValidity(); } render() { const t = this.saturation, e = 100 - this.brightness, i = Array.isArray(this.swatches) ? this.swatches : this.swatches.split(\";\").filter((r) => r.trim() !== \"\"), s = v` <div part=\"base\" class=${D({ \"color-picker\": !0, \"color-picker--inline\": this.inline, \"color-picker--disabled\": this.disabled, \"color-picker--focused\": this.hasFocus })} aria-disabled=${this.disabled ? \"true\" : \"false\"} aria-labelledby=\"label\" tabindex=${this.inline ? \"0\" : \"-1\"} > ${this.inline ? v` <sl-visually-hidden id=\"label\"> <slot name=\"label\">${this.label}</slot> </sl-visually-hidden> ` : null} <div part=\"grid\" class=\"color-picker__grid\" style=${Et({ backgroundColor: this.getHexString(this.hue, 100, 100) })} @pointerdown=${this.handleGridDrag} @touchmove=${this.handleTouchMove} > <span part=\"grid-handle\" class=${D({ \"color-picker__grid-handle\": !0, \"color-picker__grid-handle--dragging\": this.isDraggingGridHandle })} style=${Et({ top: `${e}%`, left: `${t}%`, backgroundColor: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha) })} role=\"application\" aria-label=\"HSV\" tabindex=${z(this.disabled ? void 0 : \"0\")} @keydown=${this.handleGridKeyDown} ></span> </div> <div class=\"color-picker__controls\"> <div class=\"color-picker__sliders\"> <div part=\"slider hue-slider\" class=\"color-picker__hue color-picker__slider\" @pointerdown=${this.handleHueDrag} @touchmove=${this.handleTouchMove} > <span part=\"slider-handle hue-slider-handle\" class=\"color-picker__slider-handle\" style=${Et({ left: `${this.hue === 0 ? 0 : 100 / (360 / this.hue)}%` })} role=\"slider\" aria-label=\"hue\" aria-orientation=\"horizontal\" aria-valuemin=\"0\" aria-valuemax=\"360\" aria-valuenow=${`${Math.round(this.hue)}`} tabindex=${z(this.disabled ? void 0 : \"0\")} @keydown=${this.handleHueKeyDown} ></span> </div> ${this.opacity ? v` <div part=\"slider opacity-slider\" class=\"color-picker__alpha color-picker__slider color-picker__transparent-bg\" @pointerdown=\"${this.handleAlphaDrag}\" @touchmove=${this.handleTouchMove} > <div class=\"color-picker__alpha-gradient\" style=${Et({ backgroundImage: `linear-gradient( to right, ${this.getHexString(this.hue, this.saturation, this.brightness, 0)} 0%, ${this.getHexString(this.hue, this.saturation, this.brightness, 100)} 100% )` })} ></div> <span part=\"slider-handle opacity-slider-handle\" class=\"color-picker__slider-handle\" style=${Et({ left: `${this.alpha}%` })} role=\"slider\" aria-label=\"alpha\" aria-orientation=\"horizontal\" aria-valuemin=\"0\" aria-valuemax=\"100\" aria-valuenow=${Math.round(this.alpha)} tabindex=${z(this.disabled ? void 0 : \"0\")} @keydown=${this.handleAlphaKeyDown} ></span> </div> ` : \"\"} </div> <button type=\"button\" part=\"preview\" class=\"color-picker__preview color-picker__transparent-bg\" aria-label=${this.localize.term(\"copy\")} style=${Et({ \"--preview-color\": this.getHexString(this.hue, this.saturation, this.brightness, this.alpha) })} @click=${this.handleCopy} ></button> </div> <div class=\"color-picker__user-input\" aria-live=\"polite\"> <sl-input part=\"input\" type=\"text\" name=${this.name} autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" value=${this.isEmpty ? \"\" : this.inputValue} ?required=${this.required} ?disabled=${this.disabled} aria-label=${this.localize.term(\"currentValue\")} @keydown=${this.handleInputKeyDown} @sl-change=${this.handleInputChange} @sl-input=${this.handleInputInput} @sl-invalid=${this.handleInputInvalid} @sl-blur=${this.stopNestedEventPropagation} @sl-focus=${this.stopNestedEventPropagation} ></sl-input> <sl-button-group> ${this.noFormatToggle ? \"\" : v` <sl-button part=\"format-button\" aria-label=${this.localize.term(\"toggleColorFormat\")} exportparts=\" base:format-button__base, prefix:format-button__prefix, label:format-button__label, suffix:format-button__suffix, caret:format-button__caret \" @click=${this.handleFormatToggle} @sl-blur=${this.stopNestedEventPropagation} @sl-focus=${this.stopNestedEventPropagation} > ${this.setLetterCase(this.format)} </sl-button> `} ${Ur ? v` <sl-button part=\"eye-dropper-button\" exportparts=\" base:eye-dropper-button__base, prefix:eye-dropper-button__prefix, label:eye-dropper-button__label, suffix:eye-dropper-button__suffix, caret:eye-dropper-button__caret \" @click=${this.handleEyeDropper} @sl-blur=${this.stopNestedEventPropagation} @sl-focus=${this.stopNestedEventPropagation} > <sl-icon library=\"system\" name=\"eyedropper\" label=${this.localize.term(\"selectAColorFromTheScreen\")} ></sl-icon> </sl-button> ` : \"\"} </sl-button-group> </div> ${i.length > 0 ? v` <div part=\"swatches\" class=\"color-picker__swatches\"> ${i.map((r) => { const o = this.parseColor(r); return o ? v` <div part=\"swatch\" class=\"color-picker__swatch color-picker__transparent-bg\" tabindex=${z(this.disabled ? void 0 : \"0\")} role=\"button\" aria-label=${r} @click=${() => this.selectSwatch(r)} @keydown=${(n) => !this.disabled && n.key === \"Enter\" && this.setColor(o.hexa)} > <div class=\"color-picker__swatch-color\" style=${Et({ backgroundColor: o.hexa })} ></div> </div> ` : (console.error(`Unable to parse swatch color: \"${r}\"`, this), \"\"); })} </div> ` : \"\"} </div> `; return this.inline ? s : v` <sl-dropdown class=\"color-dropdown\" aria-disabled=${this.disabled ? \"true\" : \"false\"} .containingElement=${this} ?disabled=${this.disabled} ?hoist=${this.hoist} @sl-after-hide=${this.handleAfterHide} > <button part=\"trigger\" slot=\"trigger\" class=${D({ \"color-dropdown__trigger\": !0, \"color-dropdown__trigger--disabled\": this.disabled, \"color-dropdown__trigger--small\": this.size === \"small\", \"color-dropdown__trigger--medium\": this.size === \"medium\", \"color-dropdown__trigger--large\": this.size === \"large\", \"color-dropdown__trigger--empty\": this.isEmpty, \"color-dropdown__trigger--focused\": this.hasFocus, \"color-picker__transparent-bg\": !0 })} style=${Et({ color: this.getHexString(this.hue, this.saturation, this.brightness, this.alpha) })} type=\"button\" > <sl-visually-hidden> <slot name=\"label\">${this.label}</slot> </sl-visually-hidden> </button> ${s} </sl-dropdown> `; } }"
        },
        {
          "kind": "function",
          "name": "s",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "_t",
          "default": "class extends Ee { constructor() { super(...arguments), this.variant = \"none\", this.key = \"items\", this.label = \"\", this.headless = !1, this.badgeResource = \"\", this.badgeSummary = !1, this.badgeConstraint = !1, this.badgeRequired = !1, this.badgeProfile = \"\", this.open = !1, this.summary = !1, this.summaryonly = !1; } render() { if (!this.summaryonly || this.summary && this.summaryonly) { let t; const e = this.variant === \"details\" ? ie : v`<span id=\"arrow\">&#x21B4;</span>`, i = this.label && !this.headless ? v`<label for=\"${this.key}\" class=${D({ \"variant-error-label\": this.variant === \"error\" })} >${this.label}${e}</label>` : ie; switch (this.variant) { case \"none\": t = v` ${i} <ol id=${this.key} class=\"items\"> <slot id=\"${this.key}\"></slot> </ol> `; break; case \"details\": { const s = v` <div slot=\"summary\"> ${i} <fhir-badge-group resource=${va(this.badgeResource)} ?summary=${this.badgeSummary} ?constraint=${this.badgeConstraint} ?required=${this.badgeRequired} profile=${this.badgeProfile} ></fhir-badge-group> </div> <sl-icon name=\"dash-square\" slot=\"collapse-icon\"></sl-icon> <sl-icon name=\"plus-square\" slot=\"expand-icon\"></sl-icon> `; t = v` <sl-details class=\"custom-icons\" ?open=${this.open}> ${s} <ol id=${this.key} class=\"details_items\"> <slot></slot> </ol> </sl-details> `; break; } case \"error\": t = v` <div class=\"variant-error\"> ${i} <div id='error' class=\"items\"> <slot id=\"${this.key}\"></slot> </div> </div> `; break; } return v` <section id=\"wrapped\" part=\"wrapped\"> ${t} </section> `; } return Re; } }"
        },
        {
          "kind": "variable",
          "name": "h",
          "default": "class h { /** * Creates a new FHIR resource enum instance * @param {ResourceName | `${ResourceName}${string}`} value - The FHIR resource name or a string starting * with a valid resource name * @param {string} [profile] - Optional profile name to create a profiled resource reference (e.g. 'Patient/bp') */ constructor(e, i) { this.value = e, this.dataset = `${e}Data`, this.profileName = i ?? \"\"; } /** * Get all available FHIR resource names * @returns {ResourceDef[]} Array of all resource names */ static values() { return Object.values(this).filter((e) => e instanceof h); } /** * Get all available FHIR resource names as strings * @returns {string[]} Array of all resource names as strings */ static valueStrings() { return this.values().map((e) => e.toString()); } /** * Check if a string is a valid FHIR resource name * @param {string} value - The string to check * @returns {boolean} True if the value is a valid resource name */ static isValid(e) { return this.valueStrings().includes(String(e)); } /** * Get an enum by its string value * @param {string} value - The string value to look up * @returns {ResourceDef|undefined} The enum value or undefined if not found */ static fromString(e) { return this.values().find((i) => i.toString() === e); } /** * Get resource names by category (resources that start with the same prefix) * @param {string} prefix - The prefix to filter by * @returns {ResourceDef[]} Array of resource enum values starting with the given prefix */ static getByPrefix(e) { return this.values().filter( (i) => i.toString().startsWith(e) ); } toString() { return this.value + (this.profileName ? `/${this.profileName}` : \"\"); } valueOf() { return this.value; } profile(e) { return new h(this.value, e); } }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "y",
          "members": [
            {
              "kind": "field",
              "name": "version",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "toString",
              "static": true,
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "addUnaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The name of the unary op to add",
                  "name": "op_name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "addBinaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "The name of the binary op to add",
                  "name": "op_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "description": "The precedence of the binary op (can be a float). Higher number = higher precedence",
                  "name": "precedence",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "description": "whether operator is right-associative",
                  "name": "isRightAssociative",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "addIdentifierChar",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The additional character to treat as a valid part of an identifier",
                  "name": "char",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "addLiteral",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "description": "The name of the literal to add",
                  "name": "literal_name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "description": "The value of the literal",
                  "name": "literal_value",
                  "type": {
                    "text": "*"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeUnaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The name of the unary op to remove",
                  "name": "op_name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeAllUnaryOps",
              "static": true,
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeIdentifierChar",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The additional character to stop treating as a valid part of an identifier",
                  "name": "char",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeBinaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The name of the binary op to remove",
                  "name": "op_name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeAllBinaryOps",
              "static": true,
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeLiteral",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "description": "The name of the literal to remove",
                  "name": "literal_name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "method",
              "name": "removeAllLiterals",
              "static": true,
              "return": {
                "type": {
                  "text": "Jsep"
                }
              }
            },
            {
              "kind": "field",
              "name": "char",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "code",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "parse",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "static top-level parser",
              "return": {
                "type": {
                  "text": "jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "getMaxKeyLen",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "obj",
                  "type": {
                    "text": "object"
                  }
                }
              ],
              "description": "Get the longest key length of any object",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "isDecimalDigit",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "ch",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "`ch` is a character code in the next three functions",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "binaryPrecedence",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "op_val",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Returns the precedence of a binary operator or `0` if it isn't a binary operator. Can be float.",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "isIdentifierStart",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "ch",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Looks for start of identifier",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "isIdentifierPart",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "ch",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "throwError",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "message",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "throw error at index of the expression"
            },
            {
              "kind": "method",
              "name": "runHook",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "node",
                  "optional": true,
                  "type": {
                    "text": "jsep.Expression|false"
                  }
                }
              ],
              "description": "Run a given hook",
              "return": {
                "type": {
                  "text": "?jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "searchHook",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Runs a given hook until one returns a node",
              "return": {
                "type": {
                  "text": "?jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleSpaces",
              "description": "Push `index` up to the next non-space character"
            },
            {
              "kind": "method",
              "name": "parse",
              "description": "Top-level method to parse all expressions and returns compound or single node",
              "return": {
                "type": {
                  "text": "jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleExpressions",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "untilICode",
                  "optional": true,
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "top-level parser (but can be reused within as well)",
              "return": {
                "type": {
                  "text": "jsep.Expression[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleExpression",
              "description": "The main parsing function.",
              "return": {
                "type": {
                  "text": "?jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleBinaryOp",
              "description": "Search for the operation portion of the string (e.g. `+`, `===`)\nStart by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\nand move down from 3 to 2 to 1 character until a matching binary operation is found\nthen, return that binary operation",
              "return": {
                "type": {
                  "text": "string|boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleBinaryExpression",
              "description": "This function is responsible for gobbling an individual expression,\ne.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`",
              "return": {
                "type": {
                  "text": "?jsep.BinaryExpression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleToken",
              "description": "An individual part of a binary expression:\ne.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)",
              "return": {
                "type": {
                  "text": "boolean|jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleTokenProperty",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "node",
                  "type": {
                    "text": "jsep.Expression"
                  }
                }
              ],
              "description": "Gobble properties of of identifiers/strings/arrays/groups.\ne.g. `foo`, `bar.baz`, `foo['bar'].baz`\nIt also gobbles function calls:\ne.g. `Math.acos(obj.angle)`",
              "return": {
                "type": {
                  "text": "jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleNumericLiteral",
              "description": "Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\nkeep track of everything in the numeric literal and then calling `parseFloat` on that string",
              "return": {
                "type": {
                  "text": "jsep.Literal"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleStringLiteral",
              "description": "Parses a string literal, staring with single or double quotes with basic support for escape codes\ne.g. `\"hello world\"`, `'this is\\nJSEP'`",
              "return": {
                "type": {
                  "text": "jsep.Literal"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleIdentifier",
              "description": "Gobbles only identifiers\ne.g.: `foo`, `_value`, `$x1`\nAlso, this function checks if that identifier is a literal:\n(e.g. `true`, `false`, `null`) or `this`",
              "return": {
                "type": {
                  "text": "jsep.Identifier"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleArguments",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "termination",
                  "type": {
                    "text": "number"
                  }
                }
              ],
              "description": "Gobbles a list of arguments within the context of a function call\nor array literal. This function also assumes that the opening character\n`(` or `[` has already been gobbled, and gobbles expressions and commas\nuntil the terminator character `)` or `]` is encountered.\ne.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`",
              "return": {
                "type": {
                  "text": "jsep.Expression[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleGroup",
              "description": "Responsible for parsing a group of things within parentheses `()`\nthat have no identifier in front (so not a function call)\nThis function assumes that it needs to gobble the opening parenthesis\nand then tries to gobble everything within that parenthesis, assuming\nthat the next thing it should see is the close parenthesis. If not,\nthen the expression probably doesn't have a `)`",
              "return": {
                "type": {
                  "text": "boolean|jsep.Expression"
                }
              }
            },
            {
              "kind": "method",
              "name": "gobbleArray",
              "description": "Responsible for parsing Array literals `[1, 2, 3]`\nThis function assumes that it needs to gobble the opening bracket\nand then tries to gobble the expressions as arguments.",
              "return": {
                "type": {
                  "text": "jsep.ArrayExpression"
                }
              }
            },
            {
              "kind": "field",
              "name": "expr",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "0"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "p"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Y",
          "type": {
            "text": "object"
          },
          "default": "{ /** * @param {jsep.Expression} ast * @param {Record<string, any>} subs */ evalAst(t, e) { switch (t.type) { case \"BinaryExpression\": case \"LogicalExpression\": return Y.evalBinaryExpression(t, e); case \"Compound\": return Y.evalCompound(t, e); case \"ConditionalExpression\": return Y.evalConditionalExpression(t, e); case \"Identifier\": return Y.evalIdentifier(t, e); case \"Literal\": return Y.evalLiteral(t, e); case \"MemberExpression\": return Y.evalMemberExpression(t, e); case \"UnaryExpression\": return Y.evalUnaryExpression(t, e); case \"ArrayExpression\": return Y.evalArrayExpression(t, e); case \"CallExpression\": return Y.evalCallExpression(t, e); case \"AssignmentExpression\": return Y.evalAssignmentExpression(t, e); default: throw SyntaxError(\"Unexpected expression\", t); } }, evalBinaryExpression(t, e) { return { \"||\": (s, r) => s || r(), \"&&\": (s, r) => s && r(), \"|\": (s, r) => s | r(), \"^\": (s, r) => s ^ r(), \"&\": (s, r) => s & r(), // eslint-disable-next-line eqeqeq -- API \"==\": (s, r) => s == r(), // eslint-disable-next-line eqeqeq -- API \"!=\": (s, r) => s != r(), \"===\": (s, r) => s === r(), \"!==\": (s, r) => s !== r(), \"<\": (s, r) => s < r(), \">\": (s, r) => s > r(), \"<=\": (s, r) => s <= r(), \">=\": (s, r) => s >= r(), \"<<\": (s, r) => s << r(), \">>\": (s, r) => s >> r(), \">>>\": (s, r) => s >>> r(), \"+\": (s, r) => s + r(), \"-\": (s, r) => s - r(), \"*\": (s, r) => s * r(), \"/\": (s, r) => s / r(), \"%\": (s, r) => s % r() }[t.operator](Y.evalAst(t.left, e), () => Y.evalAst(t.right, e)); }, evalCompound(t, e) { let i; for (let s = 0; s < t.body.length; s++) { t.body[s].type === \"Identifier\" && [\"var\", \"let\", \"const\"].includes(t.body[s].name) && t.body[s + 1] && t.body[s + 1].type === \"AssignmentExpression\" && (s += 1); const r = t.body[s]; i = Y.evalAst(r, e); } return i; }, evalConditionalExpression(t, e) { return Y.evalAst(t.test, e) ? Y.evalAst(t.consequent, e) : Y.evalAst(t.alternate, e); }, evalIdentifier(t, e) { if (Object.hasOwn(e, t.name)) return e[t.name]; throw ReferenceError(`${t.name} is not defined`); }, evalLiteral(t) { return t.value; }, evalMemberExpression(t, e) { const i = String( // NOTE: `String(value)` throws error when // value has overwritten the toString method to return non-string // i.e. `value = {toString: () => []}` t.computed ? Y.evalAst(t.property) : t.property.name // `object.property` property is Identifier ), s = Y.evalAst(t.object, e); if (s == null) throw TypeError(`Cannot read properties of ${s} (reading '${i}')`); if (!Object.hasOwn(s, i) && Lh.has(i)) throw TypeError(`Cannot read properties of ${s} (reading '${i}')`); const r = s[i]; return typeof r == \"function\" ? r.bind(s) : r; }, evalUnaryExpression(t, e) { return { \"-\": (s) => -Y.evalAst(s, e), \"!\": (s) => !Y.evalAst(s, e), \"~\": (s) => ~Y.evalAst(s, e), // eslint-disable-next-line no-implicit-coercion -- API \"+\": (s) => +Y.evalAst(s, e), typeof: (s) => typeof Y.evalAst(s, e) }[t.operator](t.argument); }, evalArrayExpression(t, e) { return t.elements.map((i) => Y.evalAst(i, e)); }, evalCallExpression(t, e) { const i = t.arguments.map((r) => Y.evalAst(r, e)); return Y.evalAst(t.callee, e)(...i); }, evalAssignmentExpression(t, e) { if (t.left.type !== \"Identifier\") throw SyntaxError(\"Invalid left-hand side in assignment\"); const i = t.left.name, s = Y.evalAst(t.right, e); return e[i] = s, e[i]; } }"
        },
        {
          "kind": "function",
          "name": "U",
          "parameters": [
            {
              "name": "t"
            },
            {
              "name": "e"
            },
            {
              "name": "i"
            },
            {
              "name": "s"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "m",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Ro",
          "members": [
            {
              "kind": "field",
              "name": "data"
            },
            {
              "kind": "method",
              "name": "getAt",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Vh"
        },
        {
          "kind": "variable",
          "name": "Nh"
        },
        {
          "kind": "variable",
          "name": "Hh"
        },
        {
          "kind": "variable",
          "name": "Uh",
          "default": "Vh"
        },
        {
          "kind": "variable",
          "name": "fs",
          "default": "Nh"
        },
        {
          "kind": "variable",
          "name": "lr",
          "default": "Hh"
        },
        {
          "kind": "class",
          "description": "",
          "name": "qh",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "dataContext",
              "default": "new Ro()"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "object"
              },
              "default": "{}"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "wm",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "jh",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "displayCtx",
              "default": "new Gi(i, { context: fs })"
            },
            {
              "kind": "field",
              "name": "dataCtx",
              "default": "new Gi(i, { context: lr })"
            },
            {
              "kind": "field",
              "name": "containedCtx",
              "default": "new Gi(i, { context: Uh })"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Wh",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"BeaconDataError\""
            },
            {
              "kind": "field",
              "name": "message",
              "default": "e"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Oe",
          "members": [
            {
              "kind": "field",
              "name": "mode"
            },
            {
              "kind": "field",
              "name": "showerror"
            },
            {
              "kind": "field",
              "name": "input"
            },
            {
              "kind": "field",
              "name": "verbose"
            },
            {
              "kind": "field",
              "name": "summaryonly"
            },
            {
              "kind": "field",
              "name": "open"
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private"
            },
            {
              "kind": "method",
              "name": "config"
            }
          ],
          "superclass": {
            "name": "Ee",
            "module": "/dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "fe",
          "members": [
            {
              "kind": "method",
              "name": "prepare"
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldPrepare"
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "r"
                },
                {
                  "name": "o"
                },
                {
                  "description": "contained data structure that can be edited",
                  "name": "data"
                },
                {
                  "description": "identity of changed data",
                  "name": "key"
                },
                {
                  "description": "old value",
                  "name": "_oldValue"
                },
                {
                  "description": "new value",
                  "name": "newValue"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "i"
                },
                {
                  "description": "The changed properties object.",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "\"nokey\""
            },
            {
              "kind": "field",
              "name": "data",
              "default": "we"
            },
            {
              "kind": "field",
              "name": "errors",
              "default": "new Le()"
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()"
            },
            {
              "kind": "field",
              "name": "type",
              "default": "{}",
              "type": {
                "text": "object"
              }
            },
            {
              "kind": "field",
              "name": "extendedData"
            },
            {
              "kind": "field",
              "name": "mode",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "Oe",
                "module": "dist/Resource-BjeplEtf.js"
              }
            }
          ],
          "superclass": {
            "name": "Oe",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "variable",
          "name": "Re",
          "type": {
            "text": "array"
          },
          "default": "[v``]"
        },
        {
          "kind": "function",
          "name": "vi"
        },
        {
          "kind": "function",
          "name": "Yr"
        },
        {
          "kind": "variable",
          "name": "Ne",
          "default": "hr"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Zh",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ],
          "superclass": {
            "name": "Ne",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "dr",
          "members": [
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "_changedProperties"
                }
              ],
              "description": "attribute update handling",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "render",
              "description": "Override this method to render something useful after the context value has been retrieved",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "default": "e"
            }
          ],
          "superclass": {
            "name": "Ee",
            "module": "/dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "iu",
          "members": [
            {
              "kind": "method",
              "name": "override"
            },
            {
              "kind": "method",
              "name": "renderOverride"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNoData"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "!0"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "i"
                },
                {
                  "name": "s"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "Zh",
                "module": "dist/Resource-BjeplEtf.js"
              }
            }
          ],
          "superclass": {
            "name": "Zh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "t",
          "declaration": {
            "name": "e",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "t",
          "declaration": {
            "name": "anonymous_1",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "$",
          "declaration": {
            "name": "Os",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "A",
          "declaration": {
            "name": "Jr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "B",
          "declaration": {
            "name": "Zh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "C",
          "declaration": {
            "name": "Oe",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "Go",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "Re",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "F",
          "declaration": {
            "name": "Le",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "G",
          "declaration": {
            "name": "to",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "H",
          "declaration": {
            "name": "va",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "I",
          "declaration": {
            "name": "wr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "J",
          "declaration": {
            "name": "eo",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "K",
          "declaration": {
            "name": "bs",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "L",
          "declaration": {
            "name": "de",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "M",
          "declaration": {
            "name": "Ze",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "we",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "O",
          "declaration": {
            "name": "_a",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "P",
          "declaration": {
            "name": "ke",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "Q",
          "declaration": {
            "name": "io",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "R",
          "declaration": {
            "name": "iu",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "_e",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "T",
          "declaration": {
            "name": "Ea",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "U",
          "declaration": {
            "name": "Aa",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "V",
          "declaration": {
            "name": "Ot",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "_t",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "X",
          "declaration": {
            "name": "wu",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "Y",
          "declaration": {
            "name": "lu",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "Z",
          "declaration": {
            "name": "Si",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "_",
          "declaration": {
            "name": "cu",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "jo",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a0",
          "declaration": {
            "name": "Qr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a1",
          "declaration": {
            "name": "pa",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a2",
          "declaration": {
            "name": "O",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a3",
          "declaration": {
            "name": "yu",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a4",
          "declaration": {
            "name": "gr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a5",
          "declaration": {
            "name": "D",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "a6",
          "declaration": {
            "name": "Qi",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "ce",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "fe",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "br",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "xt",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "vi",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "Yr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "Ne",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "Ro",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "j",
          "declaration": {
            "name": "qh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "k",
          "declaration": {
            "name": "wm",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "l",
          "declaration": {
            "name": "jh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "m",
          "declaration": {
            "name": "Zr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "n",
          "declaration": {
            "name": "Vh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "Nh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "p",
          "declaration": {
            "name": "zs",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "q",
          "declaration": {
            "name": "Hh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "Uo",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "s",
          "declaration": {
            "name": "Ho",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "t",
          "declaration": {
            "name": "Uh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "fs",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "v",
          "declaration": {
            "name": "lr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "w",
          "declaration": {
            "name": "dr",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "x",
          "declaration": {
            "name": "Wh",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "y",
          "declaration": {
            "name": "ba",
            "module": "dist/Resource-BjeplEtf.js"
          }
        },
        {
          "kind": "js",
          "name": "z",
          "declaration": {
            "name": "ga",
            "module": "dist/Resource-BjeplEtf.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/debug-CWIr1I3h.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "o"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "function",
          "name": "N",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "l"
        },
        {
          "kind": "variable",
          "name": "x"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "boolean"
          },
          "default": "!1"
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "function",
          "name": "C",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "D",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "P",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "function",
          "name": "q",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "u",
          "default": "class extends y { constructor() { super(...arguments), this.data = {}, this.longest = 0; } willUpdate(e) { super.willUpdate(e), e.has(\"data\") && (this.longest = 0, Object.entries(this.data).forEach(([t]) => { t.length > this.longest && (this.longest = t.length); })); } render() { return d` <div> <ul >${P( Object.entries(this.data), (e) => d` <li ><span class=\"key\">${e[0]}</span > : <pre>${u.stringify(e[1])}</pre> </li>` )} </ul > </div> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "l",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "R",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "u",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "w",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "q",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "S",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "x",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "C",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "n",
          "declaration": {
            "name": "N",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "P",
            "module": "dist/debug-CWIr1I3h.js"
          }
        },
        {
          "kind": "js",
          "name": "t",
          "declaration": {
            "name": "D",
            "module": "dist/debug-CWIr1I3h.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "Account",
          "declaration": {
            "name": "Je",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Address",
          "declaration": {
            "name": "Xe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Annotation",
          "declaration": {
            "name": "Ze",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Appointment",
          "declaration": {
            "name": "_e",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentMonthlyTemplate",
          "declaration": {
            "name": "$e",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentParticipantBackbone",
          "declaration": {
            "name": "ea",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "declaration": {
            "name": "aa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentWeeklyTemplate",
          "declaration": {
            "name": "ta",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentYearlyTemplate",
          "declaration": {
            "name": "oa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Attachment",
          "declaration": {
            "name": "sa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Backbone",
          "declaration": {
            "name": "oe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BadgeGroup",
          "declaration": {
            "name": "t",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BadgeType",
          "declaration": {
            "name": "o",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Balance",
          "declaration": {
            "name": "na",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "s",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BeaconDataError",
          "declaration": {
            "name": "n",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BeaconElementError",
          "declaration": {
            "name": "ce",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Bundle",
          "declaration": {
            "name": "ia",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "BundleEverything",
          "declaration": {
            "name": "ra",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "ge",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConcept",
          "declaration": {
            "name": "ma",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableReference",
          "declaration": {
            "name": "la",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Codes",
          "declaration": {
            "name": "de",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Coding",
          "declaration": {
            "name": "ca",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ConfigurableElement",
          "declaration": {
            "name": "i",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ContactPoint",
          "declaration": {
            "name": "pa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ContextProviderController",
          "declaration": {
            "name": "r",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Coverage",
          "declaration": {
            "name": "da",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "DataContextConsumerController",
          "declaration": {
            "name": "m",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Debug",
          "declaration": {
            "name": "Be",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "DeepKeyMap",
          "declaration": {
            "name": "l",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Diagnosis",
          "declaration": {
            "name": "ua",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayContextConsumerController",
          "declaration": {
            "name": "c",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "xe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "DomainResource",
          "declaration": {
            "name": "se",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "EmptyResult",
          "declaration": {
            "name": "p",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "EmptySet",
          "declaration": {
            "name": "d",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Extension",
          "declaration": {
            "name": "ha",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirContextElement",
          "declaration": {
            "name": "u",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirDataContextImpl",
          "declaration": {
            "name": "h",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirDataElement",
          "declaration": {
            "name": "y",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirPresentableElement",
          "declaration": {
            "name": "C",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypeChoices",
          "declaration": {
            "name": "fe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypes",
          "declaration": {
            "name": "De",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "FqkMap",
          "declaration": {
            "name": "b",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Guarantor",
          "declaration": {
            "name": "ya",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "HumanName",
          "declaration": {
            "name": "Ca",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "ba",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Medication",
          "declaration": {
            "name": "ga",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "MedicationBatchBackbone",
          "declaration": {
            "name": "fa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "MedicationIngredientBackbone",
          "declaration": {
            "name": "Da",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Meta",
          "declaration": {
            "name": "va",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Ba",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "xa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "NoDataObject",
          "declaration": {
            "name": "g",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "NotSupported",
          "declaration": {
            "name": "Sa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGeneratorGroup",
          "declaration": {
            "name": "f",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGenerators",
          "declaration": {
            "name": "D",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Observation",
          "declaration": {
            "name": "Pa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationComponent",
          "declaration": {
            "name": "Ra",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationDefinition",
          "declaration": {
            "name": "Ta",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationReferenceRange",
          "declaration": {
            "name": "Ea",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationTriggeredBy",
          "declaration": {
            "name": "ka",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Patient",
          "declaration": {
            "name": "Aa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientCommunicationBackbone",
          "declaration": {
            "name": "Ia",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientContactBackbone",
          "declaration": {
            "name": "Fa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientLink",
          "declaration": {
            "name": "Oa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Period",
          "declaration": {
            "name": "Ma",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "Na",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveContext",
          "declaration": {
            "name": "wa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveError",
          "declaration": {
            "name": "La",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveInputEvent",
          "declaration": {
            "name": "Va",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveInvalidEvent",
          "declaration": {
            "name": "Ga",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveLabel",
          "declaration": {
            "name": "Ua",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveType",
          "declaration": {
            "name": "v",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValidEvent",
          "declaration": {
            "name": "Wa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValidator",
          "declaration": {
            "name": "Ka",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValue",
          "declaration": {
            "name": "Qa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveWrapper",
          "declaration": {
            "name": "Ha",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Procedure",
          "declaration": {
            "name": "ja",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Quantity",
          "declaration": {
            "name": "qa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "QuantityVariations",
          "declaration": {
            "name": "za",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Range",
          "declaration": {
            "name": "Ya",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Ratio",
          "declaration": {
            "name": "Ja",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Xa",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "RelatedAccount",
          "declaration": {
            "name": "Za",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "B",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "SampledData",
          "declaration": {
            "name": "_a",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Shell",
          "declaration": {
            "name": "x",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ShoelaceStyledElement",
          "declaration": {
            "name": "S",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Signature",
          "declaration": {
            "name": "$a",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "SlDetails",
          "declaration": {
            "name": "P",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Slot",
          "declaration": {
            "name": "et",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Substance",
          "declaration": {
            "name": "at",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "SubstanceIngredientBackbone",
          "declaration": {
            "name": "tt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "SystemChoice",
          "declaration": {
            "name": "R",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Timing",
          "declaration": {
            "name": "ot",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "TimingRepeat",
          "declaration": {
            "name": "st",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidationsImpl",
          "declaration": {
            "name": "T",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "E",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asDecodedBase64",
          "declaration": {
            "name": "nt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDate",
          "declaration": {
            "name": "it",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "rt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedInstant",
          "declaration": {
            "name": "mt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedTime",
          "declaration": {
            "name": "lt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asLink",
          "declaration": {
            "name": "ct",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asReadable",
          "declaration": {
            "name": "k",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asUcumUnit",
          "declaration": {
            "name": "pt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "asWrapped",
          "declaration": {
            "name": "dt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "badgeTemplates",
          "declaration": {
            "name": "A",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "choice",
          "declaration": {
            "name": "ne",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "choiceValidate",
          "declaration": {
            "name": "ie",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesContext",
          "declaration": {
            "name": "I",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesKey",
          "declaration": {
            "name": "F",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "convertToPrimitiveType",
          "declaration": {
            "name": "O",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "countNodes",
          "declaration": {
            "name": "Ge",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "ut",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "dataContext",
          "declaration": {
            "name": "M",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "dataKey",
          "declaration": {
            "name": "N",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "debug",
          "declaration": {
            "name": "Se",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "decorate",
          "declaration": {
            "name": "w",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigContext",
          "declaration": {
            "name": "L",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigKey",
          "declaration": {
            "name": "V",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "errors",
          "declaration": {
            "name": "G",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "format",
          "declaration": {
            "name": "ht",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "generators",
          "declaration": {
            "name": "U",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAll",
          "declaration": {
            "name": "We",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAllOrNone",
          "declaration": {
            "name": "Ke",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasMany",
          "declaration": {
            "name": "W",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasNone",
          "declaration": {
            "name": "Qe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasOnly",
          "declaration": {
            "name": "He",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasOnlyOne",
          "declaration": {
            "name": "K",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasSameAncestor",
          "declaration": {
            "name": "Pe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hasSome",
          "declaration": {
            "name": "Q",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "hostStyles",
          "declaration": {
            "name": "Ne",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "identifiers",
          "declaration": {
            "name": "yt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorFhirString",
          "declaration": {
            "name": "Ct",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorReference",
          "declaration": {
            "name": "bt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isBlank",
          "declaration": {
            "name": "Re",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "gt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isDeceasedDateTime",
          "declaration": {
            "name": "ft",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isDecimal",
          "declaration": {
            "name": "Dt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "H",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isDomainResource",
          "declaration": {
            "name": "vt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isQuantity",
          "declaration": {
            "name": "Bt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isSimpleQuantity",
          "declaration": {
            "name": "xt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientConcept",
          "declaration": {
            "name": "St",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientReference",
          "declaration": {
            "name": "Pt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "isWholeNumber",
          "declaration": {
            "name": "je",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "matches",
          "declaration": {
            "name": "j",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "meta",
          "declaration": {
            "name": "q",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "oneOf",
          "declaration": {
            "name": "re",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "otherwise",
          "declaration": {
            "name": "qe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "pluralize",
          "declaration": {
            "name": "z",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "Y",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "reindex",
          "declaration": {
            "name": "J",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "renderBackboneCollection",
          "declaration": {
            "name": "Ae",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "renderResourceComponent",
          "declaration": {
            "name": "me",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "renderSingleBackbone",
          "declaration": {
            "name": "Ie",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "show",
          "declaration": {
            "name": "X",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "Z",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "sort",
          "declaration": {
            "name": "_",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "strap",
          "declaration": {
            "name": "$",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "strapLines",
          "declaration": {
            "name": "Fe",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "ye",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "textHostStyles",
          "declaration": {
            "name": "Le",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toBase64",
          "declaration": {
            "name": "Rt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toBoolean",
          "declaration": {
            "name": "Tt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toCanonical",
          "declaration": {
            "name": "Et",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toCode",
          "declaration": {
            "name": "kt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toDate",
          "declaration": {
            "name": "At",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toDatetime",
          "declaration": {
            "name": "It",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toDecimal",
          "declaration": {
            "name": "Ft",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayMode",
          "declaration": {
            "name": "Te",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayOrStructure",
          "declaration": {
            "name": "Ee",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toError",
          "declaration": {
            "name": "Ot",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toFhirString",
          "declaration": {
            "name": "Mt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toId",
          "declaration": {
            "name": "Nt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toInstant",
          "declaration": {
            "name": "wt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toInteger",
          "declaration": {
            "name": "Lt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toInteger64",
          "declaration": {
            "name": "Vt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toLink",
          "declaration": {
            "name": "Gt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toMarkdown",
          "declaration": {
            "name": "Ut",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toPositiveInt",
          "declaration": {
            "name": "Wt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toReference",
          "declaration": {
            "name": "Kt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toTime",
          "declaration": {
            "name": "Qt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toType",
          "declaration": {
            "name": "Ht",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toUnsignedInt",
          "declaration": {
            "name": "jt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toUri",
          "declaration": {
            "name": "qt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "toUrl",
          "declaration": {
            "name": "zt",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "useCodeChoices",
          "declaration": {
            "name": "ue",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "Ce",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "valueOrError",
          "declaration": {
            "name": "ee",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "when",
          "declaration": {
            "name": "ze",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "wrap",
          "declaration": {
            "name": "ae",
            "module": "dist/fhir-beacon.js"
          }
        },
        {
          "kind": "js",
          "name": "wrapLines",
          "declaration": {
            "name": "Oe",
            "module": "dist/fhir-beacon.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon2.js",
      "declarations": [
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "e",
              "default": "\"\""
            }
          ]
        },
        {
          "kind": "function",
          "name": "n"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Codes",
          "declaration": {
            "name": "s",
            "module": "dist/fhir-beacon2.js"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "n",
            "module": "dist/fhir-beacon2.js"
          }
        },
        {
          "kind": "js",
          "name": "useCodeChoices",
          "declaration": {
            "name": "c",
            "module": "dist/fhir-beacon2.js"
          }
        },
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "o",
            "module": "dist/fhir-beacon2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon3.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "t",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"BeaconStateError\""
            },
            {
              "kind": "field",
              "name": "element",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "message",
              "default": "a"
            }
          ],
          "tagName": "e",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Backbone",
          "declaration": {
            "name": "S",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "n",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "BeaconDataError",
          "declaration": {
            "name": "l",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "BeaconElementError",
          "declaration": {
            "name": "t",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "ConfigurableElement",
          "declaration": {
            "name": "i",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "ContextProviderController",
          "declaration": {
            "name": "c",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "DataContextConsumerController",
          "declaration": {
            "name": "m",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "DeepKeyMap",
          "declaration": {
            "name": "C",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayContextConsumerController",
          "declaration": {
            "name": "p",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "DomainResource",
          "declaration": {
            "name": "z",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "EmptyResult",
          "declaration": {
            "name": "u",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirContextElement",
          "declaration": {
            "name": "d",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirDataContextImpl",
          "declaration": {
            "name": "x",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirDataElement",
          "declaration": {
            "name": "h",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirPresentableElement",
          "declaration": {
            "name": "E",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "FqkMap",
          "declaration": {
            "name": "D",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "NoDataObject",
          "declaration": {
            "name": "f",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGeneratorGroup",
          "declaration": {
            "name": "y",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGenerators",
          "declaration": {
            "name": "B",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "R",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidationsImpl",
          "declaration": {
            "name": "F",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "choice",
          "declaration": {
            "name": "A",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "choiceValidate",
          "declaration": {
            "name": "H",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesContext",
          "declaration": {
            "name": "b",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesKey",
          "declaration": {
            "name": "g",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "dataContext",
          "declaration": {
            "name": "K",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "dataKey",
          "declaration": {
            "name": "N",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "decorate",
          "declaration": {
            "name": "k",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigContext",
          "declaration": {
            "name": "G",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigKey",
          "declaration": {
            "name": "V",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "errors",
          "declaration": {
            "name": "j",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "matches",
          "declaration": {
            "name": "q",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "meta",
          "declaration": {
            "name": "v",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "oneOf",
          "declaration": {
            "name": "J",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "I",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "reindex",
          "declaration": {
            "name": "M",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "renderResourceComponent",
          "declaration": {
            "name": "L",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "O",
            "module": "dist/fhir-beacon3.js"
          }
        },
        {
          "kind": "js",
          "name": "sort",
          "declaration": {
            "name": "P",
            "module": "dist/fhir-beacon3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon4.js",
      "declarations": [
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Debug",
          "declaration": {
            "name": "f",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "countNodes",
          "declaration": {
            "name": "a",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "debug",
          "declaration": {
            "name": "y",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAll",
          "declaration": {
            "name": "l",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "hasAllOrNone",
          "declaration": {
            "name": "h",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "hasNone",
          "declaration": {
            "name": "i",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "hasOnly",
          "declaration": {
            "name": "n",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "hasSameAncestor",
          "declaration": {
            "name": "O",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "isBlank",
          "declaration": {
            "name": "d",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "isWholeNumber",
          "declaration": {
            "name": "c",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "otherwise",
          "declaration": {
            "name": "u",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayMode",
          "declaration": {
            "name": "m",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayOrStructure",
          "declaration": {
            "name": "w",
            "module": "dist/fhir-beacon4.js"
          }
        },
        {
          "kind": "js",
          "name": "when",
          "declaration": {
            "name": "p",
            "module": "dist/fhir-beacon4.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "u",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: \"CodeSystem\", id: \"fhir-types\", url: \"http://hl7.org/fhir/fhir-types\", identifier: [{ system: \"urn:ietf:rfc:3986\", value: \"urn:oid:2.16.840.1.113883.4.642.4.1802\" }], version: \"5.0.0\", name: \"FHIRTypes\", title: \"All FHIR Types\", status: \"active\", experimental: !1, date: \"2022-08-26T13:43:27+10:00\", publisher: \"HL7 (FHIR Project)\", description: \"One of the types defined as part of this version of FHIR.\", caseSensitive: !0, valueSet: \"http://hl7.org/fhir/ValueSet/fhir-types\", content: \"complete\", property: [ { code: \"abstract-type\", uri: \"http://hl7.org/fhir/concept-properties#abstract-type\", type: \"boolean\" }, { code: \"kind\", uri: \"http://hl7.org/fhir/concept-properties#kind\", type: \"code\" }, { code: \"interface\", uri: \"http://hl7.org/fhir/concept-properties#interface\", type: \"boolean\" } ], concept: [ { code: \"Base\", display: \"Base\", definition: \"Base Type: Base definition for all types defined in FHIR type system.\", property: [{ code: \"abstract-type\", valueBoolean: !0 }], concept: [ { code: \"Element\", display: \"Element\", definition: \"Element Type: Base definition for all elements in a resource.\", property: [ { code: \"kind\", valueCode: \"datatype\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"BackboneElement\", display: \"BackboneElement\", definition: \"BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.\", property: [ { code: \"kind\", valueCode: \"datatype\" }, { code: \"abstract-type\", valueBoolean: !0 } ] }, { code: \"DataType\", display: \"DataType\", definition: \"DataType Type: The base class for all re-useable types defined as part of the FHIR Specification.\", property: [ { code: \"kind\", valueCode: \"datatype\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"Address\", display: \"Address\", definition: `Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats). This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery. There are a variety of postal address formats defined around the world. The ISO21090-codedString may be used to provide a coded representation of the contents of strings in an Address.`, property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Annotation\", display: \"Annotation\", definition: \"Annotation Type: A text note which also contains information about who made the statement and when.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Attachment\", display: \"Attachment\", definition: \"Attachment Type: For referring to data content defined in other formats.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Availability\", display: \"Availability\", definition: \"Availability Type: Availability data for an {item}.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"BackboneType\", display: \"BackboneType\", definition: \"BackboneType Type: Base definition for the few data types that are allowed to carry modifier extensions.\", property: [ { code: \"kind\", valueCode: \"datatype\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"Dosage\", display: \"Dosage\", definition: \"Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ElementDefinition\", display: \"ElementDefinition\", definition: \"ElementDefinition Type: Captures constraints on each element within the resource, profile, or extension.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"MarketingStatus\", display: \"MarketingStatus\", definition: \"MarketingStatus Type: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ProductShelfLife\", display: \"ProductShelfLife\", definition: \"ProductShelfLife Type: The shelf-life and storage information for a medicinal product item or container can be described using this class.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Timing\", display: \"Timing\", definition: \"Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] } ] }, { code: \"CodeableConcept\", display: \"CodeableConcept\", definition: \"CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"CodeableReference\", display: \"CodeableReference\", definition: \"CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Coding\", display: \"Coding\", definition: \"Coding Type: A reference to a code defined by a terminology system.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ContactDetail\", display: \"ContactDetail\", definition: \"ContactDetail Type: Specifies contact information for a person or organization.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ContactPoint\", display: \"ContactPoint\", definition: \"ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Contributor\", display: \"Contributor\", definition: \"Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"DataRequirement\", display: \"DataRequirement\", definition: \"DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Expression\", display: \"Expression\", definition: \"Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ExtendedContactDetail\", display: \"ExtendedContactDetail\", definition: \"ExtendedContactDetail Type: Specifies contact information for a specific purpose over a period of time, might be handled/monitored by a specific named person or organization.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Extension\", display: \"Extension\", definition: \"Extension Type: Optional Extension Element - found in all resources.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"HumanName\", display: \"HumanName\", definition: \"HumanName Type: A name, normally of a human, that can be used for other living entities (e.g. animals but not organizations) that have been assigned names by a human and may need the use of name parts or the need for usage information.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Identifier\", display: \"Identifier\", definition: \"Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Meta\", display: \"Meta\", definition: \"Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"MonetaryComponent\", display: \"MonetaryComponent\", definition: \"MonetaryComponent Type: Availability data for an {item}.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Money\", display: \"Money\", definition: \"Money Type: An amount of economic utility in some recognized currency.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Narrative\", display: \"Narrative\", definition: \"Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"ParameterDefinition\", display: \"ParameterDefinition\", definition: \"ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Period\", display: \"Period\", definition: \"Period Type: A time period defined by a start and end date and optionally time.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"PrimitiveType\", display: \"PrimitiveType\", definition: \"PrimitiveType Type: The base type for all re-useable types defined that have a simple property.\", property: [ { code: \"kind\", valueCode: \"datatype\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"base64Binary\", display: \"base64Binary\", definition: \"base64Binary Type: A stream of bytes\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"boolean\", display: \"boolean\", definition: 'boolean Type: Value of \"true\" or \"false\"', property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"date\", display: \"date\", definition: \"date Type: A date or partial date (e.g. just year or year + month). There is no UTC offset. The format is a union of the schema types gYear, gYearMonth and date. Dates SHALL be valid dates.\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"dateTime\", display: \"dateTime\", definition: \"dateTime Type: A date, date-time or partial date (e.g. just year or year + month). If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored. Dates SHALL be valid dates.\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"decimal\", display: \"decimal\", definition: \"decimal Type: A rational number with implicit precision\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"instant\", display: \"instant\", definition: \"instant Type: An instant in time - known at least to the second\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"integer\", display: \"integer\", definition: \"integer Type: A whole number\", property: [{ code: \"kind\", valueCode: \"primitive\" }], concept: [ { code: \"positiveInt\", display: \"positiveInt\", definition: \"positiveInt type: An integer with a value that is positive (e.g. >0)\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"unsignedInt\", display: \"unsignedInt\", definition: \"unsignedInt type: An integer with a value that is not negative (e.g. >= 0)\", property: [{ code: \"kind\", valueCode: \"primitive\" }] } ] }, { code: \"integer64\", display: \"integer64\", definition: \"integer64 Type: A very large whole number\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"string\", display: \"string\", definition: \"string Type: A sequence of Unicode characters\", property: [{ code: \"kind\", valueCode: \"primitive\" }], concept: [ { code: \"code\", display: \"code\", definition: \"code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"id\", display: \"id\", definition: 'id type: Any combination of letters, numerals, \"-\" and \".\", with a length limit of 64 characters. (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.) Ids are case-insensitive.', property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"markdown\", display: \"markdown\", definition: \"markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine\", property: [{ code: \"kind\", valueCode: \"primitive\" }] } ] }, { code: \"time\", display: \"time\", definition: \"time Type: A time during the day, with no date specified\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"uri\", display: \"uri\", definition: \"uri Type: String of characters used to identify a name or a resource\", property: [{ code: \"kind\", valueCode: \"primitive\" }], concept: [ { code: \"canonical\", display: \"canonical\", definition: \"canonical type: A URI that is a reference to a canonical URL on a FHIR resource\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"oid\", display: \"oid\", definition: \"oid type: An OID represented as a URI\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"url\", display: \"url\", definition: \"url type: A URI that is a literal reference\", property: [{ code: \"kind\", valueCode: \"primitive\" }] }, { code: \"uuid\", display: \"uuid\", definition: \"uuid type: A UUID, represented as a URI\", property: [{ code: \"kind\", valueCode: \"primitive\" }] } ] } ] }, { code: \"Quantity\", display: \"Quantity\", definition: \"Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", property: [{ code: \"kind\", valueCode: \"datatype\" }], concept: [ { code: \"Age\", display: \"Age\", definition: \"Age Type: A duration of time during which an organism (or a process) has existed.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Count\", display: \"Count\", definition: \"Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Distance\", display: \"Distance\", definition: \"Distance Type: A length - a value with a unit that is a physical distance.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Duration\", display: \"Duration\", definition: \"Duration Type: A length of time.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] } ] }, { code: \"Range\", display: \"Range\", definition: \"Range Type: A set of ordered Quantities defined by a low and high limit.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Ratio\", display: \"Ratio\", definition: \"Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"RatioRange\", display: \"RatioRange\", definition: \"RatioRange Type: A range of ratios expressed as a low and high numerator and a denominator.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Ref\", display: \"Ref\", definition: \"Reference Type: A reference from one resource to another.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"RelatedArtifact\", display: \"RelatedArtifact\", definition: \"RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"SampledData\", display: \"SampledData\", definition: \"Timing Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"Signature\", display: \"Signature\", definition: \"Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"TriggerDefinition\", display: \"TriggerDefinition\", definition: \"TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"UsageContext\", display: \"UsageContext\", definition: \"UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).\", property: [{ code: \"kind\", valueCode: \"datatype\" }] }, { code: \"VirtualServiceDetail\", display: \"VirtualServiceDetail\", definition: \"VirtualServiceDetail Type: Virtual Service Contact Details.\", property: [{ code: \"kind\", valueCode: \"datatype\" }] } ] }, { code: \"xhtml\", display: \"xhtml\", definition: \"xhtml Type definition\", property: [{ code: \"kind\", valueCode: \"primitive\" }] } ] }, { code: \"Resource\", display: \"Resource\", definition: \"This is the base resource type for everything.\", property: [ { code: \"kind\", valueCode: \"resource\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"Binary\", display: \"Binary\", definition: \"A resource that represents the data of a single raw artifact as digital content accessible in its native format. A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Bundle\", display: \"Bundle\", definition: \"A container for a collection of resources.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DomainResource\", display: \"DomainResource\", definition: \"A resource that includes narrative, extensions, and contained resources.\", property: [ { code: \"kind\", valueCode: \"resource\" }, { code: \"abstract-type\", valueBoolean: !0 } ], concept: [ { code: \"Account\", display: \"Account\", definition: \"A financial tool for tracking value accrued for a particular purpose. In the healthcare field, used to track charges for a patient, cost centers, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ActivityDefinition\", display: \"ActivityDefinition\", definition: \"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ActorDefinition\", display: \"ActorDefinition\", definition: \"The ActorDefinition resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"AdministrableProductDefinition\", display: \"AdministrableProductDefinition\", definition: \"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"AdverseEvent\", display: \"AdverseEvent\", definition: \"An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research participant. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical research trial management. Adverse events can be reported by healthcare providers, patients, caregivers or by medical products manufacturers. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"AllergyIntolerance\", display: \"AllergyIntolerance\", definition: \"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Appointment\", display: \"Appointment\", definition: \"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"AppointmentResponse\", display: \"AppointmentResponse\", definition: \"A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ArtifactAssessment\", display: \"ArtifactAssessment\", definition: \"This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"AuditEvent\", display: \"AuditEvent\", definition: \"A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Basic\", display: \"Basic\", definition: \"Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"BiologicallyDerivedProduct\", display: \"BiologicallyDerivedProduct\", definition: \"A biological material originating from a biological entity intended to be transplanted or infused into another (possibly the same) biological entity.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"BiologicallyDerivedProductDispense\", display: \"BiologicallyDerivedProductDispense\", definition: \"A record of dispensation of a biologically derived product.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"BodyStructure\", display: \"BodyStructure\", definition: \"Record details about an anatomical structure. This resource may be used when a coded concept does not provide the necessary detail needed for the use case.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CanonicalResource\", display: \"CanonicalResource\", definition: \"Common Interface declaration for conformance and knowledge artifact resources.\", property: [ { code: \"kind\", valueCode: \"resource\" }, { code: \"abstract-type\", valueBoolean: !0 }, { code: \"interface\", valueBoolean: !0 } ] }, { code: \"CapabilityStatement\", display: \"CapabilityStatement\", definition: \"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CarePlan\", display: \"CarePlan\", definition: \"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CareTeam\", display: \"CareTeam\", definition: \"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ChargeItem\", display: \"ChargeItem\", definition: \"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ChargeItemDefinition\", display: \"ChargeItemDefinition\", definition: \"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Citation\", display: \"Citation\", definition: \"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Claim\", display: \"Claim\", definition: \"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ClaimResponse\", display: \"ClaimResponse\", definition: \"This resource provides the adjudication details from the processing of a Claim resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ClinicalImpression\", display: \"ClinicalImpression\", definition: `A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter, but this varies greatly depending on the clinical workflow. This resource is called \"ClinicalImpression\" rather than \"ClinicalAssessment\" to avoid confusion with the recording of assessment tools such as Apgar score.`, property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ClinicalUseDefinition\", display: \"ClinicalUseDefinition\", definition: \"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CodeSystem\", display: \"CodeSystem\", definition: \"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Communication\", display: \"Communication\", definition: \"A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CommunicationRequest\", display: \"CommunicationRequest\", definition: \"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CompartmentDefinition\", display: \"CompartmentDefinition\", definition: \"A compartment definition that defines how resources are accessed on a server.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Composition\", display: \"Composition\", definition: \"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ConceptMap\", display: \"ConceptMap\", definition: \"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Condition\", display: \"Condition\", definition: \"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ConditionDefinition\", display: \"ConditionDefinition\", definition: \"A definition of a condition and information relevant to managing it.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Consent\", display: \"Consent\", definition: \"A record of a healthcare consumer’s choices or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Contract\", display: \"Contract\", definition: \"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Coverage\", display: \"Coverage\", definition: \"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CoverageEligibilityRequest\", display: \"CoverageEligibilityRequest\", definition: \"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"CoverageEligibilityResponse\", display: \"CoverageEligibilityResponse\", definition: \"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DetectedIssue\", display: \"DetectedIssue\", definition: \"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, gaps in care, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Device\", display: \"Device\", definition: \"This resource describes the properties (regulated, has real time clock, etc.), adminstrative (manufacturer name, model number, serial number, firmware, etc.), and type (knee replacement, blood pressure cuff, MRI, etc.) of a physical unit (these values do not change much within a given module, for example the serail number, manufacturer name, and model number). An actual unit may consist of several modules in a distinct hierarchy and these are represented by multiple Device resources and bound through the 'parent' element.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceAssociation\", display: \"DeviceAssociation\", definition: \"A record of association of a device.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceDefinition\", display: \"DeviceDefinition\", definition: \"This is a specialized resource that defines the characteristics and capabilities of a device.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceDispense\", display: \"DeviceDispense\", definition: \"Indicates that a device is to be or has been dispensed for a named person/patient. This includes a description of the product (supply) provided and the instructions for using the device.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceMetric\", display: \"DeviceMetric\", definition: \"Describes a measurement, calculation or setting capability of a device. The DeviceMetric resource is derived from the ISO/IEEE 11073-10201 Domain Information Model standard, but is more widely applicable. \", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceRequest\", display: \"DeviceRequest\", definition: \"Represents a request a device to be provided to a specific patient. The device may be an implantable device to be subsequently implanted, or an external assistive device, such as a walker, to be delivered and subsequently be used.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DeviceUsage\", display: \"DeviceUsage\", definition: \"A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DiagnosticReport\", display: \"DiagnosticReport\", definition: \"The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"DocumentReference\", display: \"DocumentReference\", definition: \"A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this “document” encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare. The DocumentReference resource provides metadata about the document so that the document can be discovered and managed. The actual content may be inline base64 encoded data or provided by direct reference.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Encounter\", display: \"Encounter\", definition: \"An interaction between healthcare provider(s), and/or patient(s) for the purpose of providing healthcare service(s) or assessing the health status of patient(s).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EncounterHistory\", display: \"EncounterHistory\", definition: \"A record of significant events/milestones key data throughout the history of an Encounter\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Endpoint\", display: \"Endpoint\", definition: \"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EnrollmentRequest\", display: \"EnrollmentRequest\", definition: \"This resource provides the insurance enrollment details to the insurer regarding a specified coverage.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EnrollmentResponse\", display: \"EnrollmentResponse\", definition: \"This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EpisodeOfCare\", display: \"EpisodeOfCare\", definition: \"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EventDefinition\", display: \"EventDefinition\", definition: \"The EventDefinition resource provides a reusable description of when a particular event can occur.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Evidence\", display: \"Evidence\", definition: \"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EvidenceReport\", display: \"EvidenceReport\", definition: \"The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"EvidenceVariable\", display: \"EvidenceVariable\", definition: \"The EvidenceVariable resource describes an element that knowledge (Evidence) is about.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ExampleScenario\", display: \"ExampleScenario\", definition: \"A walkthrough of a workflow showing the interaction between systems and the instances shared, possibly including the evolution of instances over time.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ExplanationOfBenefit\", display: \"ExplanationOfBenefit\", definition: \"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"FamilyMemberHistory\", display: \"FamilyMemberHistory\", definition: \"Significant health conditions for a person related to the patient relevant in the context of care for the patient.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Flag\", display: \"Flag\", definition: \"Prospective warnings of potential issues when providing care to the patient.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"FormularyItem\", display: \"FormularyItem\", definition: \"This resource describes a product or service that is available through a program and includes the conditions and constraints of availability. All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"GenomicStudy\", display: \"GenomicStudy\", definition: \"A set of analyses performed to analyze and generate genomic data.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Goal\", display: \"Goal\", definition: \"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"GraphDefinition\", display: \"GraphDefinition\", definition: \"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Group\", display: \"Group\", definition: \"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"GuidanceResponse\", display: \"GuidanceResponse\", definition: \"A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"HealthcareService\", display: \"HealthcareService\", definition: \"The details of a healthcare service available at a location or in a catalog. In the case where there is a hierarchy of services (for example, Lab -> Pathology -> Wound Cultures), this can be represented using a set of linked HealthcareServices.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ImagingSelection\", display: \"ImagingSelection\", definition: \"A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ImagingStudy\", display: \"ImagingStudy\", definition: \"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context. A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Immunization\", display: \"Immunization\", definition: \"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ImmunizationEvaluation\", display: \"ImmunizationEvaluation\", definition: 'Describes a comparison of an immunization event against published recommendations to determine if the administration is \"valid\" in relation to those recommendations.', property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ImmunizationRecommendation\", display: \"ImmunizationRecommendation\", definition: \"A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ImplementationGuide\", display: \"ImplementationGuide\", definition: \"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Ingredient\", display: \"Ingredient\", definition: \"An ingredient of a manufactured item or pharmaceutical product.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"InsurancePlan\", display: \"InsurancePlan\", definition: \"Details of a Health Insurance product/plan provided by an organization.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"InventoryItem\", display: \"InventoryItem\", definition: \"functional description of an inventory item used in inventory and supply-related workflows.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"InventoryReport\", display: \"InventoryReport\", definition: \"A report of inventory or stock items.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Invoice\", display: \"Invoice\", definition: \"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Library\", display: \"Library\", definition: \"The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Linkage\", display: \"Linkage\", definition: 'Identifies two or more records (resource instances) that refer to the same real-world \"occurrence\".', property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"List\", display: \"List\", definition: \"A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Location\", display: \"Location\", definition: \"Details and position information for a place where services are provided and resources and participants may be stored, found, contained, or accommodated.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ManufacturedItemDefinition\", display: \"ManufacturedItemDefinition\", definition: \"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Measure\", display: \"Measure\", definition: \"The Measure resource provides the definition of a quality measure.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MeasureReport\", display: \"MeasureReport\", definition: \"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Medication\", display: \"Medication\", definition: \"This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicationAdministration\", display: \"MedicationAdministration\", definition: \"Describes the event of a patient consuming or otherwise being administered a medication. This may be as simple as swallowing a tablet or it may be a long running infusion. Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner. This event can also be used to record waste using a status of not-done and the appropriate statusReason.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicationDispense\", display: \"MedicationDispense\", definition: \"Indicates that a medication product is to be or has been dispensed for a named person/patient. This includes a description of the medication product (supply) provided and the instructions for administering the medication. The medication dispense is the result of a pharmacy system responding to a medication order.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicationKnowledge\", display: \"MedicationKnowledge\", definition: \"Information about a medication that is used to support knowledge.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicationRequest\", display: \"MedicationRequest\", definition: 'An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \"MedicationRequest\" rather than \"MedicationPrescription\" or \"MedicationOrder\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.', property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicationStatement\", display: \"MedicationStatement\", definition: `A record of a medication that is being consumed by a patient. A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay. The medication information may come from sources such as the patient's memory, from a prescription bottle, or from a list of medications the patient, clinician or other party maintains. The primary difference between a medicationstatement and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication. A medicationstatement is often, if not always, less specific. There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise. As stated earlier, the Medication Statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains. Medication administration is more formal and is not missing detailed information.`, property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MedicinalProductDefinition\", display: \"MedicinalProductDefinition\", definition: \"Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs, to support prescribing, adverse events management etc.).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MessageDefinition\", display: \"MessageDefinition\", definition: \"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MessageHeader\", display: \"MessageHeader\", definition: \"The header for a message exchange that is either requesting or responding to an action. The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"MetadataResource\", display: \"MetadataResource\", definition: \"Common Interface declaration for conformance and knowledge artifact resources.\", property: [ { code: \"kind\", valueCode: \"resource\" }, { code: \"abstract-type\", valueBoolean: !0 }, { code: \"interface\", valueBoolean: !0 } ] }, { code: \"MolecularSequence\", display: \"MolecularSequence\", definition: \"Representation of a molecular sequence.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"NamingSystem\", display: \"NamingSystem\", definition: 'A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc. Represents a \"System\" used within the Identifier and Coding data types.', property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"NutritionIntake\", display: \"NutritionIntake\", definition: \"A record of food or fluid that is being consumed by a patient. A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed. The consumption information may come from sources such as the patient's memory, from a nutrition label, or from a clinician documenting observed intake.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"NutritionOrder\", display: \"NutritionOrder\", definition: \"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"NutritionProduct\", display: \"NutritionProduct\", definition: \"A food or supplement that is consumed by patients.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Observation\", display: \"Observation\", definition: \"Measurements and simple assertions made about a patient, device or other subject.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ObservationDefinition\", display: \"ObservationDefinition\", definition: \"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"OperationDefinition\", display: \"OperationDefinition\", definition: \"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"OperationOutcome\", display: \"OperationOutcome\", definition: \"A collection of error, warning, or information messages that result from a system action.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Organization\", display: \"Organization\", definition: \"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"OrganizationAffiliation\", display: \"OrganizationAffiliation\", definition: \"Defines an affiliation/assotiation/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"PackagedProductDefinition\", display: \"PackagedProductDefinition\", definition: \"A medically related item or items, in a container or package.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Patient\", display: \"Patient\", definition: \"Demographics and other administrative information about an individual or animal receiving care or other health-related services.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"PaymentNotice\", display: \"PaymentNotice\", definition: \"This resource provides the status of the payment for goods and services rendered, and the request and response resource references.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"PaymentReconciliation\", display: \"PaymentReconciliation\", definition: \"This resource provides the details including amount of a payment and allocates the payment items being paid.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Permission\", display: \"Permission\", definition: \"Permission resource holds access rules for a given data and context.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Person\", display: \"Person\", definition: \"Demographics and administrative information about a person independent of a specific health-related context.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"PlanDefinition\", display: \"PlanDefinition\", definition: \"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Practitioner\", display: \"Practitioner\", definition: \"A person who is directly or indirectly involved in the provisioning of healthcare or related services.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"PractitionerRole\", display: \"PractitionerRole\", definition: \"A specific set of Roles/Locations/specialties/services that a practitioner may perform, or has performed at an organization during a period of time.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Procedure\", display: \"Procedure\", definition: \"An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy. This can be a quality or safety inspection for a location, organization, or device. This can be an accreditation procedure on a practitioner for licensing.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Provenance\", display: \"Provenance\", definition: \"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Questionnaire\", display: \"Questionnaire\", definition: \"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"QuestionnaireResponse\", display: \"QuestionnaireResponse\", definition: \"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"RegulatedAuthorization\", display: \"RegulatedAuthorization\", definition: \"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"RelatedPerson\", display: \"RelatedPerson\", definition: \"Information about a person that is involved in a patient's health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"RequestOrchestration\", display: \"RequestOrchestration\", definition: 'A set of related requests that can be used to capture intended activities that have inter-dependencies such as \"give this medication after that one\".', property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Requirements\", display: \"Requirements\", definition: \"The Requirements resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ResearchStudy\", display: \"ResearchStudy\", definition: \"A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ResearchSubject\", display: \"ResearchSubject\", definition: \"A ResearchSubject is a participant or object which is the recipient of investigative activities in a research study.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"RiskAssessment\", display: \"RiskAssessment\", definition: \"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Schedule\", display: \"Schedule\", definition: \"A container for slots of time that may be available for booking appointments.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SearchParameter\", display: \"SearchParameter\", definition: \"A search parameter that defines a named search item that can be used to search/filter on a resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ServiceRequest\", display: \"ServiceRequest\", definition: \"A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Slot\", display: \"Slot\", definition: \"A slot of time on a schedule that may be available for booking appointments.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Specimen\", display: \"Specimen\", definition: \"A sample to be used for analysis.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SpecimenDefinition\", display: \"SpecimenDefinition\", definition: \"A kind of specimen with associated set of requirements.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"StructureDefinition\", display: \"StructureDefinition\", definition: \"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"StructureMap\", display: \"StructureMap\", definition: \"A Map of relationships between 2 structures that can be used to transform data.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Subscription\", display: \"Subscription\", definition: \"The subscription resource describes a particular client's request to be notified about a SubscriptionTopic.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubscriptionStatus\", display: \"SubscriptionStatus\", definition: \"The SubscriptionStatus resource describes the state of a Subscription during notifications. It is not persisted.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubscriptionTopic\", display: \"SubscriptionTopic\", definition: \"Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Substance\", display: \"Substance\", definition: \"A homogeneous material with a definite composition.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstanceDefinition\", display: \"SubstanceDefinition\", definition: \"The detailed description of a substance, typically at a level beyond what is used for prescribing.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstanceNucleicAcid\", display: \"SubstanceNucleicAcid\", definition: \"Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstancePolymer\", display: \"SubstancePolymer\", definition: \"Properties of a substance specific to it being a polymer.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstanceProtein\", display: \"SubstanceProtein\", definition: \"A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstanceReferenceInformation\", display: \"SubstanceReferenceInformation\", definition: \"Todo.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SubstanceSourceMaterial\", display: \"SubstanceSourceMaterial\", definition: \"Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SupplyDelivery\", display: \"SupplyDelivery\", definition: \"Record of delivery of what is supplied.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"SupplyRequest\", display: \"SupplyRequest\", definition: \"A record of a non-patient specific request for a medication, substance, device, certain types of biologically derived product, and nutrition product used in the healthcare setting.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Task\", display: \"Task\", definition: \"A task to be performed.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"TerminologyCapabilities\", display: \"TerminologyCapabilities\", definition: \"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"TestPlan\", display: \"TestPlan\", definition: \"A plan for executing testing on an artifact or specifications\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"TestReport\", display: \"TestReport\", definition: \"A summary of information based on the results of executing a TestScript.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"TestScript\", display: \"TestScript\", definition: \"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"Transport\", display: \"Transport\", definition: \"Record of transport.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"ValueSet\", display: \"ValueSet\", definition: \"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"VerificationResult\", display: \"VerificationResult\", definition: \"Describes validation requirements, source(s), status and dates for one or more elements.\", property: [{ code: \"kind\", valueCode: \"resource\" }] }, { code: \"VisionPrescription\", display: \"VisionPrescription\", definition: \"An authorization for the provision of glasses and/or contact lenses to a patient.\", property: [{ code: \"kind\", valueCode: \"resource\" }] } ] }, { code: \"Parameters\", display: \"Parameters\", definition: \"This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment). It is not persisted or allowed to be referenced by other resources except as described in the definition of the Parameters resource.\", property: [{ code: \"kind\", valueCode: \"resource\" }] } ] } ] } ] }"
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "variable",
          "name": "y"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "u",
            "module": "dist/fhir-beacon5.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypeChoices",
          "declaration": {
            "name": "y",
            "module": "dist/fhir-beacon5.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypes",
          "declaration": {
            "name": "f",
            "module": "dist/fhir-beacon5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon6.js",
      "declarations": [
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "a"
            },
            {
              "name": "r"
            },
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "function",
          "name": "T",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "a"
            },
            {
              "name": "r"
            },
            {
              "name": "s"
            },
            {
              "name": "t",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "a"
            },
            {
              "name": "r"
            },
            {
              "name": "s"
            },
            {
              "name": "t"
            },
            {
              "name": "h",
              "default": "!0"
            },
            {
              "name": "p",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "a"
            },
            {
              "name": "r"
            },
            {
              "name": "s"
            },
            {
              "name": "t"
            },
            {
              "name": "h",
              "default": "!0"
            },
            {
              "name": "p",
              "default": "!1"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeGroup",
          "declaration": {
            "name": "G",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "BadgeType",
          "declaration": {
            "name": "L",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "C",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "EmptySet",
          "declaration": {
            "name": "W",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "Shell",
          "declaration": {
            "name": "A",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "ShoelaceStyledElement",
          "declaration": {
            "name": "H",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "SlDetails",
          "declaration": {
            "name": "I",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "SystemChoice",
          "declaration": {
            "name": "J",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "K",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "badgeTemplates",
          "declaration": {
            "name": "P",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "generators",
          "declaration": {
            "name": "Q",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "hasMany",
          "declaration": {
            "name": "y",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "hasOnlyOne",
          "declaration": {
            "name": "l",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "hasSome",
          "declaration": {
            "name": "m",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "U",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "pluralize",
          "declaration": {
            "name": "w",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "renderBackboneCollection",
          "declaration": {
            "name": "T",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "renderSingleBackbone",
          "declaration": {
            "name": "S",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "show",
          "declaration": {
            "name": "u",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "strap",
          "declaration": {
            "name": "X",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "strapLines",
          "declaration": {
            "name": "d",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "wrap",
          "declaration": {
            "name": "j",
            "module": "dist/fhir-beacon6.js"
          }
        },
        {
          "kind": "js",
          "name": "wrapLines",
          "declaration": {
            "name": "g",
            "module": "dist/fhir-beacon6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon7.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "array"
          },
          "default": "[ s` :host { display: inline; } ::slotted(*) { user-select: text; } `, t ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostStyles",
          "declaration": {
            "name": "t",
            "module": "dist/fhir-beacon7.js"
          }
        },
        {
          "kind": "js",
          "name": "textHostStyles",
          "declaration": {
            "name": "o",
            "module": "dist/fhir-beacon7.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/fhir-beacon8.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "K",
          "default": "class extends Si { createRenderRoot() { return this; } render() { if (!this.variant && (this.label || this.description)) return o` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" .errormessage=${this.error} .type=${s.forced_error}></fhir-primitive > `; switch (this.variant) { case \"no-data\": return o` <fhir-primitive .label=\"${this.label ?? \"error\"}\" .value=\"${this.description ?? \"No data provided.\"}\" errormessage=\"the data or data-path property must be provided\" .type=${s.forced_error} > </fhir-primitive > `; case \"no-impl\": return o` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" errormessage=\"Not Implemented\" .type=${s.forced_error}> </fhir-primitive > `; case \"no-sup\": return o` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" errormessage=\"Not Supported\" .type=${s.forced_error}> </fhir-primitive > `; case \"stop\": return o` <fhir-primitive .label=\"${this.label || \"error\"}\" value=\"Rendering Stopped\" .errormessage=${this.error} .type=${s.forced_error} > </fhir-primitive > `; default: return o` <fhir-primitive label=\"error\" value=\"Undefined reason\" errormessage=\"The reason is unknown\" .type=${s.forced_error}></fhir-primitive > <slot ></slot > `; } } }"
        },
        {
          "kind": "class",
          "description": "",
          "name": "De",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "e[0]"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "default": "i"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "Zi",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "e[0]"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "e"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "function",
          "name": "Wi",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e",
              "default": "1048576"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Qi"
        },
        {
          "kind": "variable",
          "name": "Ni"
        },
        {
          "kind": "variable",
          "name": "Gi"
        },
        {
          "kind": "variable",
          "name": "Ji"
        },
        {
          "kind": "variable",
          "name": "ci"
        },
        {
          "kind": "variable",
          "name": "et",
          "default": "function(r) { if (!r) throw new TypeError(`decimal must be a valid number: ${r}`); if (!Se.test(r)) throw new TypeError(`decimal must be a valid number: ${r}`); if (isNaN(Number.parseFloat(r))) throw new TypeError(`decimal must be a valid number: ${r}`); const e = String(r).split(/[eE]/), n = e[0], t = e[1] ? parseInt(e[1], 10) : 0; if (n.replace(/^-|\\./g, \"\").length + (t !== 0 ? Math.abs(t) : 0) <= 18) return r; throw new TypeError(`decimal must be a valid number: ${r}`); }"
        },
        {
          "kind": "function",
          "name": "yo",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "rt",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "vo",
          "default": "function(r) { throw new Error(r ?? \"Unable to render due to internal constraint\"); }"
        },
        {
          "kind": "variable",
          "name": "it"
        },
        {
          "kind": "variable",
          "name": "tt"
        },
        {
          "kind": "variable",
          "name": "nt"
        },
        {
          "kind": "variable",
          "name": "at"
        },
        {
          "kind": "variable",
          "name": "ot"
        },
        {
          "kind": "variable",
          "name": "lt"
        },
        {
          "kind": "variable",
          "name": "ct"
        },
        {
          "kind": "variable",
          "name": "$o"
        },
        {
          "kind": "variable",
          "name": "ut"
        },
        {
          "kind": "variable",
          "name": "He"
        },
        {
          "kind": "variable",
          "name": "ft"
        },
        {
          "kind": "variable",
          "name": "pi"
        },
        {
          "kind": "variable",
          "name": "mt"
        },
        {
          "kind": "class",
          "description": "",
          "name": "dt",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "{\n    valueChanged: e = !1,\n    typeChanged: n = !1,\n    valuePathChanged: t = !1,\n    errormessageChanged: i = !1,\n    requiredChanged: a = !1,\n    choicesChanged: l = !1\n  }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "value"
            },
            {
              "kind": "field",
              "name": "validOrError"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "$t",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "oldValue",
              "default": "e[0]"
            },
            {
              "kind": "field",
              "name": "newValue",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "i"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "function",
          "name": "bt",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Oe",
          "parameters": [
            {
              "name": "{\n  date: r,\n  separator: e = \".\",\n  order: n = \"DMY\",\n  monthFormat: t = \"short\"\n}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "hi",
          "parameters": [
            {
              "name": "{\n  instant: r,\n  timeZoneName: e = Intl.DateTimeFormat().resolvedOptions().timeZone,\n  dateSeparator: n = \".\",\n  timeSeparator: t = \":\",\n  order: i = \"DMY\",\n  monthFormat: a = \"short\",\n  format: l = \"24h\",\n  shape: p = void 0\n}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "ui",
          "parameters": [
            {
              "name": "{\n  time: r,\n  hourSeparator: e = \":\",\n  minuteSeparator: n = \":\",\n  format: t = \"24h\",\n  shape: i = void 0\n}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "St",
          "parameters": [
            {
              "name": "{\n  datetime: r,\n  timeZoneName: e = Intl.DateTimeFormat().resolvedOptions().timeZone,\n  dateSeparator: n = \".\",\n  timeSeparator: t = \":\",\n  order: i = \"DMY\",\n  monthFormat: a = \"short\",\n  format: l = \"24h\",\n  shape: p = \"HMS\"\n}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "go",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "bo"
        },
        {
          "kind": "variable",
          "name": "ko"
        },
        {
          "kind": "function",
          "name": "Ot",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "D",
          "default": "class extends ki { constructor() { super(), this.delimiter = \": \", this.type = s.none, this.showProvided = !1, this.summary = !1, this.translate = !1, this.trialuse = !1, this.required = !1, this.error = !1, this.presentableValue = \"\", this.presentableError = \"\", this.presentableTypeError = \"\", this.renderError = () => { const r = []; return this.presentableTypeError && r.push(this.presentableTypeError), this.presentableError && r.push(this.presentableError), !A(this.value) || this.verbose || this.required ? o` <li> <fhir-label text=${this.getLabel()} delimiter=${this.delimiter} variant=\"error\" ></fhir-label> <fhir-value text=${this.value} link=${this.link} variant=\"error\" ></fhir-value> ${this.context ? o` <fhir-context .text=\"${this.context}\"></fhir-context>` : g} ${this.mode === J.structure ? o` <fhir-badge-group ?required=${this.required} ?summary=${this.summary}></fhir-badge-group>` : g} ${this.showerror ? o` <fhir-error text=${r.join(\" | \")}></fhir-error>` : g} </li>` : o``; }, this.handleChange = (r) => { var n; const e = this.value; r.type === \"sl-input\" && (r.target instanceof Di && r.target.type === \"date\" ? this.value = ((n = r.target.valueAsDate) == null ? void 0 : n.toISOString()) ?? \"\" : this.value = r.target.value), r.type === \"sl-change\" && r.target.tagName === \"SL-SWITCH\" && (this.value = String(!this.value)), r.type === \"fhir-change\" && (this.value = r.detail.value), e !== this.value && (this.presentableValue = \"\", this.error = !1, this.errormessage = \"\", this.dispatchEvent(new $t(this.key, e, this.value, this.type))); }, this.getLabel = () => { let r = \"\"; return this.label ? r = this.label : r = W(this.key, \"lower\"), r; }, this.validator = new dt(this); } /** * Invoked before the component updates its properties. * It validates the updates based on the properties that have changed. * * @param {PropertyValues} changed - Map of changed properties with their previous values. * @return {void} No return value. */ willUpdate(r) { super.willUpdate(r), this.validator.validate({ valuePathChanged: r.has(\"valuePath\"), valueChanged: r.has(\"value\"), typeChanged: r.has(\"type\"), requiredChanged: r.has(\"required\"), errormessageChanged: r.has(\"errormessage\"), choicesChanged: r.has(\"choices\") }); } /** * Renders the appropriate template or content based on the current component's state and properties. * * @return {unknown} The rendered output, which could be an HTML template or other content, or an empty * result if rendering conditions are not met. */ render() { return !wi(this.value, this.mode, this.verbose, this.summaryonly, this.summary, this.required) && !this.valuePath && this.mode !== J.override && !this.input ? o`` : this.input ? this.renderInput() : this.error ? this.renderError() : this.renderValid(); } /** * Renders when p[rovided value is valid. Displays FHIR data, incorporating labels, values, contexts, * and additional structured elements based on the provided parameters. * * @returns {TemplateResult} A lit-html template result containing the rendered elements. */ renderValid() { const r = []; return this.getLabel() && r.push(o` <fhir-label text=${this.getLabel()} delimiter=${this.delimiter}></fhir-label>`), A(this.value) || r.push(o` <fhir-value text=${this.showProvided ? this.value : this.mode !== J.display ? this.presentableValue : Ot(this.presentableValue, this.type)} link=${this.link} .variant=${this.variant} > <span slot=\"before\"><slot name=\"before\"></slot></span> <span slot=\"after\"><slot name=\"after\"></slot></span> </fhir-value>`), this.context && this.verbose && r.push(o` <fhir-context .text=\"${this.context ?? \"\"}${this.context && this.verbose ? \" - \" : \"\"}${this.verbose ? this.type : \"\"}\" ></fhir-context>`), this.mode === J.structure && r.push(o` <fhir-badge-group ?required=${this.required} ?summary=${this.summary}></fhir-badge-group>`), r.length > 1 || !A(this.value) || this.verbose ? o` <li> ${r}</li>` : o``; } /** * Renders an input element based on the type and configuration of the current object. * * Validation errors related to the input are displayed, if present. * * @returns {TemplateResult} A rendered Lit-html template representing the input element. */ renderInput() { const r = []; return this.presentableTypeError && r.push(this.presentableTypeError), this.presentableError && r.push(this.presentableError), this.type === s.boolean ? o` <sl-switch id=${this.key} value=${this.value} @sl-change=${this.handleChange} >${this.getLabel()} </sl-switch> ` : this.type === s.date || this.type === s.datetime || this.type === s.instant ? o` <sl-input name=${this.key} .valueAsDate=${new Date(this.value)} clearable @sl-input=${this.handleChange} size=\"small\" type=\"date\" > <fhir-label slot=\"label\" text=${this.getLabel()}></fhir-label> <fhir-error slot=\"help-text\" text=${r.join(\" | \")}></fhir-error> </sl-input> ` : this.choices ? o` <fhir-system-choice id=${this.key} .value=${this.value} .valuesets=${this.choices.map((e) => ({ value: e.value, label: e.display }))} label=${this.getLabel()} error=${r.join(\" | \")} @fhir-change=${this.handleChange} .overridable=${!1} > </fhir-system-choice> ` : o` <sl-input name=${this.key} value=${this.value} clearable @sl-input=${this.handleChange} size=\"small\" > <fhir-label slot=\"label\" text=${this.getLabel()}></fhir-label> <fhir-error slot=\"help-text\" text=${r.join(\" | \")}></fhir-error> </sl-input> `; } }"
        },
        {
          "kind": "variable",
          "name": "ve",
          "default": "class extends ae { constructor() { super(...arguments), this.text = \"\"; } render() { return this.text ? o`<span>${\"(\" + this.text + \")\"}</span>` : g; } }"
        },
        {
          "kind": "variable",
          "name": "de",
          "default": "class extends ae { render() { return this.text ? o` <div part=\"message\" id=\"message\">${this.text}</div >` : o``; } }"
        },
        {
          "kind": "variable",
          "name": "U",
          "default": "class extends ae { constructor() { super(...arguments), this.delimiter = \":\"; } render() { return o` <label class=\"${this.variant}\" for=${this.for}> ${this.isSlotted() ? o`` : this.text}${this.isSlotted() || !this.text ? \"\" : this.delimiter} <slot ></slot > </label >`; } }"
        },
        {
          "kind": "variable",
          "name": "M",
          "default": "class extends ae { constructor() { super(...arguments), this.placeholder = \"n/a\", this.text = \"\", this.link = \"\", this.computeValue = () => this.variant === \"checkbox\" ? o` <slot name=\"before\"></slot> <sl-checkbox ?checked=${!!this.text} disabled size=\"small\"></sl-checkbox> <slot name=\"after\"></slot>` : this.link ? o` <a href=\"${this.link}\" target='_blank'> <slot name=\"before\"></slot> ${this.text} <slot name=\"after\"></slot> </a> ` : A(this.text) && this.placeholder ? o`<span class=\"placeholder\">${this.placeholder}</span>` : o` <slot name=\"before\"></slot > ${this.text} <slot name=\"after\"></slot>`; } render() { const r = { placeholder: this.variant === \"placeholder\", error: this.variant === \"error\", \"variant-fixed-width\": this.variant === \"fixed-width\", \"variant-hide-overflow\": this.variant === \"hide-overflow\", \"variant-checkbox\": this.variant === \"checkbox\" }; return o` <div class=\"${xi(r)}\"> ${this.computeValue()} </div>`; } }"
        },
        {
          "kind": "variable",
          "name": "Ae",
          "default": "class extends ae { render() { return this.hasChildNodes() ? o` <li part=\"wrapper\"> <slot ></slot > </li > ` : o``; } }"
        },
        {
          "kind": "variable",
          "name": "Qe",
          "default": "class extends w { constructor() { super(\"Address\"); } renderDisplay(r, e, n) { var t, i; return Ri(e, \"text\") ? [ o` <fhir-primitive label=\"text\" .value=${e.text} .type=${s.fhir_string} summary></fhir-primitive > ` ] : [ o` <fhir-primitive key=\"use\" .value=${((t = _e.choices.filter((a) => a.value === e.use)[0]) == null ? void 0 : t.display) ?? e.use} .errormessage=${n.msgFor(\"use\")} summary ></fhir-primitive > <fhir-primitive key=\"type\" .value=${((i = xe.choices.filter((a) => a.value === e.type)[0]) == null ? void 0 : i.display) ?? e.type} .errormessage=${n.msgFor(\"type\")} summary ></fhir-primitive > ${q(e.line, this.verbose) ? Ue( \"\", \"line\", e.line, r.verbose, (a, l, p) => o` <fhir-primitive key=${p} label=${l} .value=${a} .type=${s.fhir_string} summary> <span slot=\"after\">,</span > </fhir-primitive > ` ) : g} <fhir-primitive label=\"city\" .value=${e.city} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"district\" .value=${e.district} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"state\" .value=${e.state} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"postalCode\" .value=${e.postalCode} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"country\" .value=${e.country} .type=${s.fhir_string} summary></fhir-primitive > <fhir-period label=\"period\" .data=${e.period} summary></fhir-period > ` ]; } renderStructure(r, e, n) { return [ o` <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} errormessage=${n.msgFor(\"use\")} summary ></fhir-primitive > <fhir-primitive label=\"type\" .value=${e.type} .type=${s.code} errormessage=${n.msgFor(\"type\")} summary ></fhir-primitive > <fhir-primitive label=\"text\" .value=${e.text} .type=${s.fhir_string} summary ></fhir-primitive > ${q(e.line, this.verbose) ? ji( \"\", \"line\", e.line, r.verbose, (t, i) => o` <fhir-primitive label=\"${i}\" .value=${t} .type=${s.fhir_string} summary ></fhir-primitive > ` ) : g} <fhir-primitive label=\"city\" .value=${e.city} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"district\" .value=${e.district} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"state\" .value=${e.state} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"postalCode\" .value=${e.postalCode} .type=${s.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"country\" .value=${e.country} .type=${s.fhir_string} summary></fhir-primitive > <fhir-period label=\"period\" .data=${e.period} summary></fhir-period > ` ]; } renderEditableDisplay(r, e, n) { return [ o` <fhir-primitive key=\"use\" .value=${e.use} .type=${s.code} errormessage=${n.msgFor(\"use\")} .choices=${_e.choices} summary ></fhir-primitive> <fhir-primitive key=\"type\" .value=${e.type} .type=${s.code} errormessage=${n.msgFor(\"type\")} .choices=${xe.choices} summary ></fhir-primitive> <fhir-primitive label=\"text\" .value=${e.text} .type=${s.fhir_string} summary ></fhir-primitive> ${q(e.line, this.verbose) ? Ue( \"\", \"line\", e.line, r.verbose, (t, i, a) => o` <fhir-primitive key=${a} label=${i} .value=${t} .type=${s.fhir_string} summary> <span slot=\"after\">,</span> </fhir-primitive> ` ) : g} <fhir-primitive label=\"city\" .value=${e.city} .type=${s.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"district\" .value=${e.district} .type=${s.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"state\" .value=${e.state} .type=${s.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"postalCode\" .value=${e.postalCode} .type=${s.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"country\" .value=${e.country} .type=${s.fhir_string} summary ></fhir-primitive> <fhir-period label=\"period\" .data=${e.period} summary></fhir-period> ` ]; } // eslint-disable-next-line @typescript-eslint/no-unused-vars validate(r, e, n) { r.use && (_e.choices.some((t) => t.value == r.use) || e.add({ fqk: { path: [{ node: \"use\" }] }, message: \"address use is not one of accepted: \" + S(\"http://hl7.org/fhir/address-type\").choices.map((t) => t.value).join(\", \") })), r.type && (xe.choices.some((t) => t.value == r.type) || e.add({ fqk: { path: [{ node: \"type\" }] }, message: \"address type is not one of accepted: \" + S( \"http://hl7.org/fhir/address-type\" ).choices.map((t) => t.value).join(\", \") })); } }"
        },
        {
          "kind": "variable",
          "name": "Ne",
          "default": "class extends w { constructor() { super(\"Annotation\"); } validate(r, e) { r.authorString && r.authorReference && e.add({ fqk: { path: [{ node: this.type + \"::author[x]\" }] }, message: \"can only have one of authorString or authorReference\" }); } renderDisplay(r, e, n) { return this.renderAll(e); } renderStructure(r, e, n) { return this.renderAll(e); } renderAll(r) { const e = E( this, \"\", \"\", [ { data: r.authorReference, html: (n) => o` <fhir-reference key=\"authorReference\" label=\"author\" .data=${n} summary ></fhir-reference>` }, { data: r.authorString, html: (n) => o` <fhir-primitive key=\"authorString\" label=\"author\" .value=${n} summary ></fhir-primitive>` } ] ); return [ o` ${e} <fhir-primitive key=\"time\" .value=${r.time} .type=${s.datetime} summary></fhir-primitive> <fhir-primitive key=\"text\" .value=${r.text} .type=${s.markdown} summary variant=\"fixed-width\"></fhir-primitive> ` ]; } edited(r, e, n, t) { super.edited(r, e, n, t), console.log(n, t, r); } }"
        },
        {
          "kind": "variable",
          "name": "Je",
          "default": "class extends w { constructor() { super(\"Attachment\"); } renderDisplay(r, e) { return this.generate(e); } renderStructure(r, e) { return this.generate(e); } generate(r) { return [ o` <fhir-primitive key=\"contentType\" label=\"content type\" .value=${r.contentType} type=${Xe} summary ></fhir-primitive> <fhir-primitive key=\"language\" label=\"langauge\" .value=${r.language} .type=${Xe} summary ></fhir-primitive> <fhir-primitive key=\"data\" label=\"data\" .value=${r.data} .type=${Ge} variant=\"hide-overflow\" ></fhir-primitive> <fhir-primitive key=\"url\" label=\"url\" .value=${r.url} .type=${tn} summary></fhir-primitive> <fhir-primitive key=\"size\" label=\"size\" .value=${r.size} .type=${rn} summary ></fhir-primitive> <fhir-primitive key=\"hash\" label=\"hash\" .value=${r.hash} .type=${Ge} summary ></fhir-primitive> <fhir-primitive key=\"title\" label=\"title\" .value=${r.title} .type=${nn} summary translate ></fhir-primitive> <fhir-primitive key=\"creation\" label=\"creation\" .value=${r.creation} .type=${en} summary ></fhir-primitive> <fhir-primitive key=\"height\" label=\"height\" .value=${r.height} .type=${Ce} trialuse ></fhir-primitive> <fhir-primitive key=\"width\" label=\"width\" .value=${r.width} .type=${Ce} trialuse ></fhir-primitive> <fhir-primitive key=\"frames\" label=\"frames\" .value=${r.frames} .type=${Ce} trialuse ></fhir-primitive> <fhir-primitive key=\"duration\" label=\"duration\" .value=${r.duration} .type=${Kt} trialuse ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Ke",
          "default": "class extends w { constructor() { super(\"CodeableConcept\"); } validate(r, e, n) { super.validate(r, e, n), e.all().length > 0 && e.add({ fqk: { path: [{ node: \"_root\" }] }, message: \"validation error\" }); } renderDisplay(r, e, n) { return [ c( { key: \"code\", collection: e.coding ?? [], generator: (t, i, a, l) => o` <fhir-coding key=${a} .label=${i} .data=${t} .errors=${n.sliceForFQK({ path: [{ node: \"coding\", index: l }] })} summary headless ></fhir-coding>`, config: r } ), ie(e.coding) && !this.verbose ? o`` : o` <fhir-primitive key=\"text\" .value=${e.text} summary></fhir-primitive>` ]; } renderStructure(r, e, n) { return [ c( { key: \"coding\", collection: e.coding ?? [], generator: (t, i, a, l) => o` <fhir-coding key=${a} label=${i} .errors=${n.sliceForFQK({ path: [{ node: \"coding\", index: l }] })} .data=${t} summary ></fhir-coding>`, config: r } ), ie(e.coding) && !this.verbose ? o`` : o` <fhir-primitive key=\"text\" .value=${e.text} summary></fhir-primitive>` ]; } }"
        },
        {
          "kind": "variable",
          "name": "er",
          "default": "class extends w { constructor() { super(\"CodeableReference\"); } validate(r, e) { r.concept && r.reference && e.add({ fqk: { path: [{ node: this.type + \"::\" + this.key }] }, message: \"can only have one of concept or reference\" }); } renderDisplay(r, e, n) { return E( this, \"\", n.msgFor(this.type + \"::\" + this.key), [ { data: e.concept, html: (t, i) => o` <fhir-codeable-concept key=\"concept\" label=${i} .data=${t} summary ></fhir-codeable-concept> ` }, { data: e.reference, html: (t, i) => o` <fhir-reference key=\"reference\" label=${i} .data=${t} summary ></fhir-reference> ` } ] ); } renderStructure(r, e) { return [ o` <fhir-codeable-concept key=\"concept\" .data=${e.concept} summary></fhir-codeable-concept> <fhir-reference key=\"reference\" .data=${e.reference} summary></fhir-reference> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "te",
          "default": "class extends w { constructor() { super(\"Coding\"); } static computeContext(r, e) { return e.has({ path: [{ node: \"code\" }] }) ? r.code : e.has({ path: [{ node: \"system\" }] }) ? r.system : r.display ? r.code : void 0; } renderDisplay(r, e, n) { return [ o` <fhir-primitive .label=${this.getLabel()} .value=${te.computeDisplay(e)} .context=${te.computeContext(e, n)} .errormessage=${n.msgFor({ path: [{ node: \"code\" }] })} summary ></fhir-primitive > ` ]; } renderStructure(r, e, n) { return [ o` <fhir-primitive label=\"extension\" .value=${e.extension} summary></fhir-primitive> <fhir-primitive label=\"version\" .value=${e.version} summary></fhir-primitive> <fhir-primitive label=\"system\" .value=${e.system} type=\"url\" .errormessage=${n.msgFor({ path: [{ node: \"system\" }] })} summary ></fhir-primitive> <fhir-primitive label=\"code\" .value=${e.code} type=\"code\" .errormessage=${n.msgFor({ path: [{ node: \"code\" }] })} summary ></fhir-primitive> <fhir-primitive label=\"display\" .value=${e.display} summary></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "rr",
          "default": "class extends w { constructor() { super(\"ContactPoint\"); } renderDisplay(r, e, n) { let t = e.use ?? \"value\"; return t = t + (e.system ? \" (\" + e.system + \")\" : \"\"), [ o` <fhir-primitive .label=\"${t}\" .value=${e.value} .type=${s.fhir_string} .errormessage=${n.msgFor(\"system\")} summary ></fhir-primitive> <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} summary></fhir-primitive> <fhir-primitive label=\"rank\" .value=${e.rank} .type=${s.positiveInt} summary></fhir-primitive> <fhir-period label=\"period\" .data=${e.period} summary></fhir-period> ` ]; } renderStructure(r, e, n) { return [ o` <fhir-primitive label=\"system\" .value=${e.system} .errormessage=${n.msgFor(\"system\")} .type=${s.code} summary ></fhir-primitive> <fhir-primitive label=\"value\" .value=${e.value} .type=${s.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} summary></fhir-primitive> <fhir-primitive label=\"rank\" .value=${e.rank} .type=${s.positiveInt} summary></fhir-primitive> <fhir-period .label=\"period\" .data=${e.period} summary></fhir-period> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "ir",
          "default": "class extends w { constructor() { super(\"HumanName\"); } renderDisplay(r, e) { return e.given || e.family ? [ o` <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} summary></fhir-primitive> ${r.verbose ? c( { key: \"\", pluralBase: \"given name\", collection: e.given, generator: (n, t) => o` <fhir-primitive label=${t} .value=${n} .type=${s.fhir_string} summary ></fhir-primitive>`, config: r } ) : o` <fhir-primitive label=\"given name\" .value=${e.given.join(\" \")} .type=${s.fhir_string} summary ></fhir-primitive>`} <fhir-primitive label=\"family name\" .value=${e.family} .type=${s.fhir_string} summary ></fhir-primitive> ` ] : e.text ? [ o` <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} summary></fhir-primitive> <fhir-primitive label=\"full name\" .value=${e.text} .type=${s.fhir_string} summary ></fhir-primitive> ` ] : me; } renderStructure(r, e) { return [ o` <fhir-primitive label=\"use\" .value=${e.use} .type=${s.code} summary></fhir-primitive> <fhir-primitive label=\"text\" .value=${e.text} .type=${s.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"family\" .value=${e.family} .type=${s.fhir_string} summary ></fhir-primitive> ${v( { key: \"given\", pluralBase: \"given\", collection: e.given, generator: (n, t) => o` <fhir-primitive label=${t} .value=${n} .type=${s.fhir_string} summary ></fhir-primitive>`, summary: this.summary, config: r } )} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "tr",
          "default": "class extends w { constructor() { super(\"Identifier\"); } renderDisplay(r, e, n) { return [ o` <fhir-primitive key=\"id\" label=\"id\" .value=${e.value} .context=${e.system} summary></fhir-primitive> <fhir-codeable-concept key=\"type\" label=\"type\" .data=${e.type} .errors=${n.sliceForFQK({ path: [{ node: \"type\" }] })} summary ></fhir-codeable-concept> <fhir-period key=\"period\" .data=${e.period} summary></fhir-period> ` ]; } renderStructure(r, e, n) { return [ o` <fhir-primitive label=\"use\" type=${s.code} .value=${e.use} errormessage=${n.msgFor(\"use\")} summary ></fhir-primitive> <fhir-codeable-concept label=\"type\" .data=${e.type} .errors=${e[Ci]} summary ></fhir-codeable-concept> <fhir-primitive label=\"system\" type=${s.uri} .value=${e.system} summary></fhir-primitive> <fhir-primitive label=\"value\" .value=${e.value} summary></fhir-primitive> <fhir-period label=\"period\" .data=${e.period} summary></fhir-period> <fhir-reference label=\"assigner\" .data=${e.assigner} summary></fhir-reference> ` ]; } validate(r, e, n) { var t; if (r.use && (S(\"http://hl7.org/fhir/identifier-use\").choices.find((i) => i.value === r.use) || e.add({ fqk: { path: [{ node: \"use\" }] }, message: \"identifier use is not one of accepted: \" + S( \"http://hl7.org/fhir/address-use\" ).choices.map((i) => i.value).join(\", \") })), (t = r.type) != null && t.coding) { const i = S(\"http://hl7.org/fhir/ValueSet/identifier-type\").choices; r.type.coding.filter((l) => !i.find((p) => p.value === l.code)).forEach((l, p) => { e.add({ fqk: { path: [{ node: \"type\" }, { node: \"coding\", index: p }], key: \"code\" }, message: \"identifier type is not one of accepted: \" + i.map((m) => m.value).join( \", \" ) }); }); } } }"
        },
        {
          "kind": "function",
          "name": "yi",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "nr",
          "default": "class extends w { constructor() { super(\"Money\"); } renderDisplay(r, e) { return [ o` <fhir-primitive-wrapper > <fhir-label text=\"amount\"></fhir-label>&nbsp; <fhir-primitive .value=${e.value} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive .value=${e.currency} .type=${s.code}></fhir-primitive> </fhir-primitive-wrapper> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"value\" .value=${e.value} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"currency\" .value=${e.currency} .type=${s.code} summary></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "ar",
          "default": "class extends w { constructor() { super(\"Period\"); } // TODO: there is no good way to hide output without the conditional handling in renderDisplay renderDisplay(r, e) { return e.start || e.end ? [ o` <fhir-primitive-wrapper> <fhir-label>period:</fhir-label> <fhir-primitive type=${s.datetime} .value=${e.start} summary></fhir-primitive> <fhir-label>&nbsp;${e.start ? g : \"...\"}&#x21E2;${e.end ? g : \"...\"}</fhir-label> <fhir-primitive type=${s.datetime} .value=${e.end} summary></fhir-primitive> </fhir-primitive-wrapper> ` ] : me; } renderStructure(r, e) { return [ o` <fhir-primitive label=\"start\" type=${s.datetime} .value=${e.start} summary ></fhir-primitive> <fhir-primitive label=\"end\" type=${s.datetime} .value=${e.end} summary ></fhir-primitive>` ]; } }"
        },
        {
          "kind": "variable",
          "name": "B"
        },
        {
          "kind": "function",
          "name": "or",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Ie",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Do",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "wo",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_o",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "xo",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "$e",
          "default": "class extends w { constructor() { super(\"Quantity\"), this.simple = !1, this.variation = B.unknown; } renderDisplay(r, e, n) { var l; const t = e.value, i = \"decimal\", a = r.verbose ? e.unit + \"(\" + e.code + \")\" : e.code; return or(e) && !this.simple ? [ o` <fhir-primitive .label=${this.label} .value=${t} .type=${i} summary> ${e.comparator ? o`<span slot=\"before\"> ${(l = S( \"http://hl7.org/fhir/ValueSet/quantity-comparator\" ).choices.find((p) => p.value === e.comparator)) == null ? void 0 : l.display.toLowerCase()} </span>` : g} ${a ? o`<span slot=\"after\"> ${a} </span>` : g} </fhir-primitive> ` ] : Ie(e) || this.simple ? [ o` <fhir-primitive .label=${this.label} .value=${t} .type=${i} summary> ${a ? o`<span slot=\"after\"> ${a} </span>` : g} </fhir-primitive> ${n.msgFor(\"comparator::sqty-1\") ? o` <fhir-primitive label=\"comparator\" .value=${e.comparator} type=\"code\" summary .errormessage=${n.msgFor(\"comparator::sqty-1\")} ></fhir-primitive>` : g} ` ] : [ o` <fhir-not-supported label=\"quantity\" description=\"must be Quantity or Simple Quantity\" ></fhir-not-supported>` ]; } renderEditableDisplay(r, e, n) { const t = S(e.system), i = S(\"http://hl7.org/fhir/quantity-comparator\"), a = Ai(); return [ o` <fhir-primitive key=\"variation\" .value=${this.variation} .input=${!1}></fhir-primitive> <fhir-primitive key=\"value\" .value=${e.value} type=\"decimal\" summary></fhir-primitive> ${Oi( this.variation === \"simple\", () => o``, () => o` <fhir-primitive key=\"comparator\" .value=${e.comparator} type=\"code\" summary .choices=${i.choices} ></fhir-primitive>` )} <fhir-primitive key=\"system\" .value=${e.system} type=\"uri\" summary .choices=${a.choices} ></fhir-primitive> <fhir-primitive key=\"code\" .value=${e.code} type=\"code\" summary .choices=${t == null ? void 0 : t.choices} .errormessage=${n.msgFor(\"code\")} ></fhir-primitive> <fhir-primitive key=\"unit\" .value=${e.unit} summary ></fhir-primitive> ` ]; } renderStructure(r, e, n) { return or(e) && !this.simple ? [ o` <fhir-primitive label=\"variation\" .value=${this.variation}></fhir-primitive> <fhir-primitive label=\"value\" .value=${e.value} type=\"decimal\" summary></fhir-primitive> <fhir-primitive label=\"comparator\" .value=${e.comparator} type=\"code\" summary></fhir-primitive> <fhir-primitive label=\"unit\" .value=${e.unit} summary></fhir-primitive> <fhir-primitive label=\"system\" .value=${e.system} type=\"uri\" summary></fhir-primitive> <fhir-primitive label=\"code\" .value=${e.code} type=\"code\" summary></fhir-primitive> ` ] : Ie(e) || this.simple ? [ o` <fhir-primitive label=\"variation\" .value=${this.variation}></fhir-primitive> <fhir-primitive label=\"value\" .value=${e.value} type=\"decimal\" summary></fhir-primitive> ${n.msgFor(\"comparator::sqty-1\") ? o` <fhir-primitive label=\"comparator\" .value=${e.comparator} type=\"code\" summary .errormessage=${n.msgFor(\"comparator::sqty-1\")} ></fhir-primitive>` : g} <fhir-primitive label=\"unit\" .value=${e.unit} summary></fhir-primitive> <fhir-primitive label=\"system\" .value=${e.system} type=\"uri\" summary></fhir-primitive> <fhir-primitive label=\"code\" .value=${e.code} type=\"code\" summary></fhir-primitive> ` ] : [ o` <fhir-not-supported label=\"quantity\" description=\"must be Quantity or Simple Quantity\" ></fhir-not-supported>` ]; } validate(r, e, n) { this.simple && !Ie(r) && e.add({ fqk: { path: [{ node: \"comparator::sqty-1\" }] }, message: `${this.type}:${this.key}: comparator should not be present` }), qi(r, [\"code\", \"system\"]) || e.add({ fqk: { path: [{ node: this.type + \"::qty-3\" }] }, message: `${this.type}: code and system should be set or none of the two` }); const t = S(r.system); t && !t.choices.find((i) => i.value === r.code) && e.add({ fqk: { path: [{ node: \"code\" }] }, message: `${this.type}: code ${r.code} is not valid for system: ${r.system}` }); } decorate(r) { r.comparator ? r.comparator = new DOMParser().parseFromString(r.comparator, \"text/html\").body.textContent ?? void 0 : this.variation = B.simple, this.simple && (this.variation = B.simple); const e = !r.system || r.system.toString() === \"http://unitsofmeasure.org\", n = S(\"http://hl7.org/fhir/ValueSet/distance-units\"); r.unit && n.choices.find((a) => r.code === a.value && r.system === n.system) && (this.variation = B.distance), r.code === \"1\" && e && (!r.value || Ei(r.value)) && (this.variation = B.count); const t = S(\"http://hl7.org/fhir/ValueSet/duration-units\"); (!r.value || r.code) && t.choices.find((a) => r.code === a.value) && e && (this.variation = B.duration); const i = S(\"http://hl7.org/fhir/ValueSet/age-units\"); return r.value && Number.parseFloat(r.value) > 0 && i.choices.find((a) => r.code === a.value && r.system === i.system) && (this.variation = B.age), r; } edited(r, e, n, t) { if (super.edited(r, e, n, t), e === \"code\") { const i = S(r.system); if (i) { const a = i.choices.find((l) => l.value === t); a && (r.unit = a.display || a.value); } } } }"
        },
        {
          "kind": "variable",
          "name": "sr",
          "default": "class extends w { constructor() { super(\"Range\"); } renderDisplay(r, e) { return this.renderAny(r, e); } renderStructure(r, e) { return this.renderAny(r, e); } renderAny(r, e) { return [ o` <fhir-quantity key=\"low\" .data=${e.low} simple></fhir-quantity> <fhir-quantity key=\"high\" .data=${e.high} simple></fhir-quantity> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Re",
          "default": "class extends w { constructor() { super(\"Ratio\"); } renderDisplay(r, e) { return [ o` <div style=\" display: flex; flex-direction: row; align-items: flex-start\"> <fhir-quantity key=\"numerator\" .data=${e.numerator} summary headless></fhir-quantity> <fhir-value text=\"/\"></fhir-value> <fhir-quantity key=\"denominator\" .data=${e.denominator} summary headless ></fhir-quantity> </div> ` ]; } renderStructure(r, e) { return [ o` <div style=\" display: flex; flex-direction: column; flex: 1\"> <fhir-quantity key=\"numerator\" label=\"numerator\" .data=${e.numerator} summary></fhir-quantity> <fhir-quantity key=\"denominator\" label=\"denominator\" .data=${e.denominator} summary></fhir-quantity> </div> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "lr",
          "default": "class extends w { constructor() { super(\"SampledData\"); } renderDisplay(r, e) { return this.renderAny(r, e); } renderStructure(r, e) { return this.renderAny(r, e); } renderAny(r, e) { return [o` <fhir-quantity key=\"origin\" .data=${e.origin} simple summary required></fhir-quantity> <fhir-primitive key=\"interval\" .value=${e.interval} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"intervalUnit\" .value=${e.intervalUnit} .type=${s.code} summary required></fhir-primitive> <fhir-primitive key=\"factor\" .value=${e.factor} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"lowerLimit\" .value=${e.lowerLimit} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"upperLimit\" .value=${e.upperLimit} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"dimensions\" .value=${e.dimensions} .type=${s.positiveInt} summary required></fhir-primitive> <fhir-primitive key=\"codeMap\" .value=${e.codeMap} .type=${s.canonical}></fhir-primitive> <fhir-primitive key=\"offset\" .value=${e.offset} .type=${s.fhir_string}></fhir-primitive> <fhir-primitive key=\"data\" .value=${e.data} .type=${s.fhir_string}></fhir-primitive> `]; } }"
        },
        {
          "kind": "variable",
          "name": "cr",
          "default": "class extends w { constructor() { super(\"Signature\"); } renderDisplay(r, e) { return [ o` <fhir-coding label=\"type\" .data=${e.type} summary></fhir-coding > <fhir-primitive label=\"when\" .value=${e.when} .type=${s.instant} summary></fhir-primitive > <fhir-reference label=\"who\" .data=${e.who} summary></fhir-reference > <fhir-reference label=\"onBehalfOf\" .data=${e.onBehalfOf} summary></fhir-reference > <fhir-primitive label=\"targetFormat\" .value=${e.targetFormat} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"sigFormat\" .value=${e.sigFormat} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"data\" .value=${e.data} .type=${s.base64} variant=\"hide-overflow\"></fhir-primitive > ` ]; } renderStructure(r, e) { return [ o` <fhir-coding label=\"type\" .data=${e.type} summary></fhir-coding > <fhir-primitive label=\"when\" .value=${e.when} .type=${s.instant} summary></fhir-primitive > <fhir-reference label=\"who\" .data=${e.who} summary></fhir-reference > <fhir-reference label=\"onBehalfOf\" .data=${e.onBehalfOf} summary></fhir-reference > <fhir-primitive label=\"targetFormat\" .value=${e.targetFormat} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"sigFormat\" .value=${e.sigFormat} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"data\" .value=${e.data} .type=${s.base64} variant=\"fixed-width\"></fhir-primitive > ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Co",
          "type": {
            "text": "object"
          },
          "default": "{ type: { system: \"urn:iso-astm:E1762-95:2013\", code: \"1.2.840.10065.1.12.1.1\", display: \"Author's Signature\" }, when: \"2022-02-08T10:16:32.000+10:00\", who: { reference: \"Practitioner/example\" }, targetFormat: \"application/fhir+xml\", data: \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPEVudmVsb3BlIHhtbG5zPSJ1cm46ZW52ZWxvcGUiPgogIDxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgPFNpZ25lZEluZm8+CiAgICAgIDxDYW5vbmljYWxpemF0aW9uTWV0aG9kIAogICAgICAgICAgIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tCjIwMDEwMzE1I1dpdGhDb21tZW50cyIvPgogICAgICA8U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS8KeG1sZHNpZyNkc2Etc2hhMSIvPgogICAgICA8UmVmZXJlbmNlIFVSST0iIj4KICAgICAgICA8VHJhbnNmb3Jtcz4KICAgICAgICAgIDxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5Lwp4bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICA8L1RyYW5zZm9ybXM+CiAgICAgICAgPERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkvCnhtbGRzaWcjc2hhMSIvPgogICAgICAgIDxEaWdlc3RWYWx1ZT51b29xYldZYTVWQ3FjSkNidXltQktxbTE3dlk9PC9EaWdlc3RWYWx1ZT4KICAgICAgPC9SZWZlcmVuY2U+CiAgICA8L1NpZ25lZEluZm8+CjxTaWduYXR1cmVWYWx1ZT4KS2VkSnVUb2I1Z3R2WXg5cU0zazNnbTdrYkxCd1ZiRVFSbDI2UzJ0bVhqcU5ORDdNUkd0b2V3PT0KICAgIDwvU2lnbmF0dXJlVmFsdWU+CiAgICA8S2V5SW5mbz4KICAgICAgPEtleVZhbHVlPgogICAgICAgIDxEU0FLZXlWYWx1ZT4KICAgICAgICAgIDxQPgovS2FDem80U3lyb203OHozRVE1U2JiQjRzRjdleTgwZXRLSUk4NjRXRjY0QjgxdVJwSDV0OWpRVHhlCkV1MEltYnpSTXF6VkRaa1ZHOXhEN25OMWt1Rnc9PQogICAgICAgICAgPC9QPgogICAgICAgICAgPFE+bGk3ZHpEYWN1bzY3Smc3bXRxRW0yVFJ1T01VPTwvUT4KICAgICAgICAgIDxHPlo0UnhzbnFjOUU3cEdrbkZGSDJ4cWFyeVJQQmFRMDFraHBNZExSUW5HNTQxQXd0eC8KWFBhRjVCcHN5NHBOV01PSENCaU5VME5vZ3BzUVc1UXZubE1wQT09CiAgICAgICAgICA8L0c+CiAgICAgICAgICA8WT5xVjM4SXFyV0pHMFYvCm1aUXZSVmkxT0h3OVpqODRuREM0ak84UDBheGkxZ2I2ZCs0NzV5aE1qU2MvCkJySVZDNThXM3lkYmtLK1JpNE9LYmFSWmxZZVJBPT0KICAgICAgICAgPC9ZPgogICAgICAgIDwvRFNBS2V5VmFsdWU+CiAgICAgIDwvS2V5VmFsdWU+CiAgICA8L0tleUluZm8+CiAgPC9TaWduYXR1cmU+CjwvRW52ZWxvcGU+IA==\" }"
        },
        {
          "kind": "variable",
          "name": "pr",
          "default": "class extends x { constructor() { super(\"TimingRepeat\"); } renderDisplay(r, e, n) { return this.renderAny(r, e, n); } renderStructure(r, e, n) { return this.renderAny(r, e, n); } renderAny(r, e, n) { return [ o` ${E( this, \"bounds[x]\", n.msgFor(\"bound[x]\"), [ d( e.boundsDuration, (t) => o` <fhir-quantity key=\"bound[x]\" label=\"boundDuration\" .data=${t} summary></fhir-quantity> ` ), d( e.boundsRange, (t) => o` <fhir-range key=\"bounds[x]\" label=\"boundRange\" .data=${t} summary></fhir-range> ` ), d( e.boundsPeriod, (t) => o` <fhir-period key=\"bounds[x]\" label=\"boundPeriod\" .data=${t} summary></fhir-period> ` ) ] )} <fhir-primitive key=\"count\" .value=${e.count} .type=${s.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"countMax\" .value=${e.countMax} .type=${s.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"duration\" .value=${e.duration} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"durationMax\" .value=${e.durationMax} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"durationUnit\" .value=${e.durationUnit} .type=${s.code} summary></fhir-primitive> <fhir-primitive key=\"frequency\" .value=${e.frequency} .type=${s.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"frequencyMax\" .value=${e.frequencyMax} .type=${s.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"period\" .value=${e.period} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"periodMax\" .value=${e.periodMax} .type=${s.decimal} summary></fhir-primitive> <fhir-primitive key=\"periodUnit\" .value=${e.periodUnit} .type=${s.code} summary></fhir-primitive> <fhir-primitive key=\"dayOfWeek\" .value=${e.dayOfWeek} .type=${s.code} summary></fhir-primitive> <fhir-primitive key=\"timeOfDay\" .value=${e.timeOfDay} .type=${s.time} summary></fhir-primitive> <fhir-primitive key=\"when\" .value=${e.dayOfWeek} .type=${s.code} summary></fhir-primitive> <fhir-primitive key=\"offset\" .value=${e.offset} .type=${s.unsigned_int} summary></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "hr",
          "default": "class extends w { constructor() { super(\"Timing\"); } renderDisplay(r, e) { return this.renderAny(r, e); } renderStructure(r, e) { return this.renderAny(r, e); } renderAny(r, e) { return [ o` ${c({ key: \"event\", collection: e.event ?? [], generator: (n, t, i) => o` <fhir-primitive key=${i} label=${t} .value=${n} .type=${s.datetime} summary ></fhir-primitive>`, config: r })} <fhir-timing-repeat key=\"repeat\" .data=${e.repeat}></fhir-timing-repeat> <fhir-codeable-concept key=\"code\" .data=${e.code} summary></fhir-codeable-concept> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Te",
          "default": "class extends w { constructor() { super(\"Bundle\"); } renderDisplay(r, e) { return [ o` <fhir-identifier label=\"identifier\" .data=${e.identifier}></fhir-identifier > <fhir-primitive label=\"type\" .value=${e.type} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"total\" .value=${e.total} .type=${s.unsigned_int}></fhir-primitive > ${q(e.link, this.verbose) ? N( \"links\", \"link\", e.link, (n) => o` <fhir-primitive label=\"relation\" .value=${n.relation} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"url\" .value=${n.url} .type=${s.uri}></fhir-primitive > `, this.verbose ) : g} ${q(e.entry, this.verbose) ? N( \"entries\", \"entry\", e.entry, (n) => { const t = this.verbose; return o` ${q(n.link, t) ? N( \"links\", null, n.link, (a) => o` <fhir-primitive label=\"link\" .value=${a} .type=${s.link}></fhir-primitive > `, this.verbose ) : g} ${G(n.resource, this.getDisplayConfig())} `; }, this.verbose ) : g} <fhir-signature label=\"signature\" .data=${e.signature}></fhir-signature > ${G(e.issues, this.getDisplayConfig())} ` ]; } renderStructure(r, e) { return [ o` <fhir-identifier label=\"identifier\" .data=${e.identifier}></fhir-identifier > <fhir-primitive label=\"type\" .value=${e.type} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"timestamp\" .value=${e.timestamp} .type=${s.instant}></fhir-primitive > <fhir-primitive label=\"total\" .value=${e.total} .type=${s.unsigned_int}></fhir-primitive > ${q(e.link, this.verbose) ? N( \"links\", \"link\", e.link, (n) => o` <fhir-primitive label=\"relation\" .value=${n.relation} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"url\" .value=${n.url} .type=${s.uri}></fhir-primitive > `, this.verbose ) : g} ${q(e.entry, this.verbose) ? N( \"entries\", \"entry\", e.entry, (n) => { var l, p, m, b, P, k, O, F, H, Q, se, le, ce; const t = this.getDisplayConfig(), i = t.verbose, a = null; return o` ${q(n.link, i) ? N( \"links\", a, n.link, (be) => o` <fhir-primitive label=\"link\" .value=${be} .type=${s.link}></fhir-primitive > `, this.verbose ) : g} <fhir-primitive label=\"fullURL\" .value=${n.fullUrl} .type=${s.uri}></fhir-primitive > ${G(n.resource, t)} ${ie(n.search) ? ke( \"search\", a, i, o` <fhir-primitive label=\"mode\" .value=${(l = n.search) == null ? void 0 : l.mode} .type=${s.code}></fhir-primitive > <fhir-primitive label=\"score\" .value=${(p = n.search) == null ? void 0 : p.score} .type=${s.code} ></fhir-primitive > ` ) : g} ${ie(n.request) ? ke( \"request\", a, i, o` <fhir-primitive label=\"method\" .value=${(m = n.request) == null ? void 0 : m.method} .type=${s.code} ></fhir-primitive > <fhir-primitive label=\"url\" .value=${(b = n.request) == null ? void 0 : b.url} .type=${s.uri}></fhir-primitive > <fhir-primitive label=\"ifNoneMatch\" .value=${(P = n.request) == null ? void 0 : P.ifNoneMatch} .type=${s.fhir_string} ></fhir-primitive > <fhir-primitive label=\"ifModifiedSince\" .value=${(k = n.request) == null ? void 0 : k.ifModifiedSince} .type=${s.instant} ></fhir-primitive > <fhir-primitive label=\"ifMatch\" .value=${(O = n.request) == null ? void 0 : O.ifMatch} .type=${s.fhir_string} ></fhir-primitive > <fhir-primitive label=\"ifNoneExist\" .value=${(F = n.request) == null ? void 0 : F.ifNoneExist} .type=${s.fhir_string} ></fhir-primitive > ` ) : g} ${ie(n.response) ? ke( \"response\", a, i, o` <fhir-primitive label=\"status\" .value=${(H = n.response) == null ? void 0 : H.status} .type=${s.fhir_string} ></fhir-primitive > <fhir-primitive label=\"location\" .value=${(Q = n.response) == null ? void 0 : Q.location} .type=${s.uri}></fhir-primitive > <fhir-primitive label=\"etag\" .value=${(se = n.response) == null ? void 0 : se.etag} .type=${s.fhir_string}></fhir-primitive > <fhir-primitive label=\"lastModified\" .value=${(le = n.response) == null ? void 0 : le.lastModified} .type=${s.instant} ></fhir-primitive > ${G((ce = n.response) == null ? void 0 : ce.outcome, t)} ` ) : g} `; }, this.verbose ) : g} <fhir-signature label=\"signature\" .data=${e.signature}></fhir-signature > ${G(e.issues, this.config())} ` ]; } renderNarrative(r, e, n) { return e.entry && e.entry.length > 0 ? [ o` <fhir-wrapper label=${this.getLabel()} ?headless=${this.headless}> ${c({ key: \"entry\", collection: e.entry, generator: (t, i) => jn(t.resource) ? o` <fhir-label text=\"${i}: ${t.resource.resourceType}\"></fhir-label> <fhir-narrative .data=${t.resource.text} .mode=${r.mode} ></fhir-narrative> ` : o``, config: r })} </fhir-wrapper> ` ] : [o``]; } }"
        },
        {
          "kind": "function",
          "name": "jn",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ur",
          "default": "class extends Te { renderDisplay(r, e) { return [ o` <fhir-patient .data=${e.entry[0].resource} summaryonly></fhir-patient> <ol> ${e.entry.slice(1).map((n) => o` <li>${n.resource.resourceType} - ${n.resource.id}</li>`)} </ol> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "fr",
          "default": "class extends V { constructor() { super(\"Account\"); } renderDisplay(r, e) { return [ o` ${c({ collection: e.identifier, generator: \"fhir-identifier\", config: r })} <fhir-primitive key=\"status\" .value=${e.status} summary></fhir-primitive> <fhir-codeable-concept key=\"billingStatus\" .data=${e.billingStatus} summary></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${e.type} summary></fhir-codeable-concept> <fhir-primitive key=\"name\" .value=${e.name} .type=${s.fhir_string} summary></fhir-primitive> ${c({ key: \"subject\", collection: e.subject, generator: \"fhir-reference\", config: r })} <fhir-period key=\"servicePeriod\" .data=${e.servicePeriod}></fhir-period> ${c({ key: \"coverage\", collection: e.coverage, generator: (n, t, i) => o` <fhir-account-coverage key=${i} label=${t} .data=${n} ></fhir-account-coverage> `, config: r })} <fhir-reference key=\"owner\" .data=${e.owner}></fhir-reference> <fhir-primitive key=\"description\" .value=${e.description} .type=${s.markdown} summary ></fhir-primitive> ${c({ key: \"guarantor\", collection: e.guarantor, generator: (n, t, i) => o` <fhir-account-guarantor key=${i} label=${t} .data=${n}></fhir-account-guarantor> `, config: r })} ${c({ key: \"diagnosis\", collection: e.diagnosis, generator: (n, t, i) => o` <fhir-account-diagnosis key=${i} label=${t} .data=${n}></fhir-account-diagnosis> `, config: r })} <fhir-account-procedure key=\"procedure\" .data=${e.procedure}></fhir-account-procedure> ${c({ key: \"relatedAccount\", collection: e.relatedAccount, generator: (n, t, i) => o` <fhir-account-related-account key=${i} label=${t} .data=${n}></fhir-account-related-account> `, config: r })} <fhir-codeable-concept key=\"currency\" .data=${e.currency}></fhir-codeable-concept> ${c({ key: \"balance\", collection: e.balance, generator: (n, t, i) => o` <fhir-account-balance key=${i} label=${t} .data=${n}></fhir-account-balance> `, config: r })} ` ]; } renderStructure(r, e) { return [ o` ${v({ collection: e.identifier, generator: \"fhir-identifier\", config: r })} <fhir-primitive key=\"status\" .value=${e.status} summary></fhir-primitive> <fhir-codeable-concept key=\"billingStatus\" .data=${e.billingStatus} summary></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${e.type} summary></fhir-codeable-concept> <fhir-primitive key=\"name\" .value=${e.name} .type=${s.fhir_string} summary></fhir-primitive> ${v({ key: \"subject\", collection: e.subject, generator: \"fhir-reference\", config: r })} <fhir-period key=\"servicePeriod\" .data=${e.servicePeriod}></fhir-period> ${v({ key: \"coverage\", collection: e.coverage, generator: (n, t, i) => o` <fhir-account-coverage key=${i} label=${t} .data=${n} ></fhir-account-coverage> `, config: r })} <fhir-reference key=\"owner\" .data=${e.owner}></fhir-reference> <fhir-primitive key=\"description\" .value=${e.description} .type=${s.markdown} summary ></fhir-primitive> ${v({ key: \"guarantor\", collection: e.guarantor, generator: (n, t, i) => o` <fhir-account-guarantor key=${i} label=${t} .data=${n}></fhir-account-guarantor> `, config: r })} ${v({ key: \"diagnosis\", collection: e.diagnosis, generator: (n, t, i) => o` <fhir-account-diagnosis key=${i} label=${t} .data=${n}></fhir-account-diagnosis> `, config: r })} <fhir-account-procedure key=\"procedure\" .data=${e.procedure}></fhir-account-procedure> ${v({ key: \"relatedAccount\", collection: e.relatedAccount, generator: (n, t, i) => o` <fhir-account-related-account key=${i} label=${t} .data=${n} ></fhir-account-related-account> `, config: r })} <fhir-codeable-concept key=\"currency\" .data=${e.currency}></fhir-codeable-concept> ${v({ key: \"balance\", collection: e.balance, generator: (n, t, i) => o` <fhir-account-balance key=${i} label=${t} .data=${n}></fhir-account-balance> `, config: r })} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "mr",
          "default": "class extends x { constructor() { super(\"AccountBalance\"); } renderDisplay(r, e) { return this.renderAll(r, e); } renderStructure(r, e) { return this.renderAll(r, e); } renderAll(r, e) { return [ o` <fhir-codeable-concept key=\"aggregate\" .data=${e.aggregate}></fhir-codeable-concept> <fhir-codeable-concept key=\"term\" .data=${e.term}></fhir-codeable-concept> <fhir-primitive key=\"estimate\" .value=${e.estimate} .type=${s.boolean}></fhir-primitive> <fhir-money key=\"amount\" .data=${e.amount}></fhir-money> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "yr",
          "default": "class extends x { constructor() { super(\"AccountCoverage\"); } renderDisplay(r, e) { return this.renderAll(r, e); } renderStructure(r, e) { return this.renderAll(r, e); } renderAll(r, e) { return [ o` <fhir-reference key=\"coverage\" .data=${e.coverage}></fhir-reference> <fhir-primitive key=\"priority\" .value=${e.priority} .type=${s.positiveInt}></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "vr",
          "default": "class extends x { constructor() { super(\"AccountDiagnosis\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"sequence\" .value=${e.sequence} .type=${s.positiveInt}></fhir-primitive> <fhir-codeable-reference key=\"condition\" .data=${e.condition}></fhir-codeable-reference> <fhir-primitive key=\"dateOfOrigin\" .value=${e.dateOfDiagnosis} type=${s.datetime} ></fhir-primitive> ${c({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} <fhir-primitive key=\"onAdmission\" .value=${e.onAdmission} .type=${s.boolean}></fhir-primitive> ${c({ key: \"packageCode\", collection: e.packageCode, generator: \"fhir-codeable-concept\", config: r })} ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"sequence\" .value=${e.sequence} .type=${s.positiveInt}></fhir-primitive> <fhir-codeable-reference key=\"condition\" .data=${e.condition}></fhir-codeable-reference> <fhir-primitive key=\"dateOfOrigin\" .value=${e.dateOfDiagnosis} type=${s.datetime} ></fhir-primitive> ${v({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} <fhir-primitive key=\"onAdmission\" .value=${e.onAdmission} .type=${s.boolean}></fhir-primitive> ${v({ key: \"packageCode\", collection: e.packageCode, generator: \"fhir-codeable-concept\", config: r })} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "dr",
          "default": "class extends x { constructor() { super(\"AccountGuarantor\"); } renderDisplay(r, e) { return this.renderAll(r, e); } renderStructure(r, e) { return this.renderAll(r, e); } renderAll(r, e) { return [ o` <fhir-reference key=\"party\" .data=${e.party}></fhir-reference> <fhir-primitive key=\"onHold\" .value=${e.onHold} .type=${s.boolean}></fhir-primitive> <fhir-period key=\"period\" .data=${e.period}></fhir-period> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "br",
          "default": "class extends x { constructor() { super(\"AccountProcedure\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"sequence\" .value=${e.sequence} .type=${gr}></fhir-primitive> <fhir-codeable-concept key=\"code\" .data=${e.code}></fhir-codeable-concept> <fhir-primitive key=\"dateOfService\" .value=${e.dateOfService} .type=${$r} ></fhir-primitive> ${c({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"packageCode\", collection: e.packageCode, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"device\", collection: e.device, generator: \"fhir-reference\", config: r })} ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"sequence\" .value=${e.sequence} .type=${gr}></fhir-primitive> <fhir-codeable-concept key=\"code\" .data=${e.code}></fhir-codeable-concept> <fhir-primitive key=\"dateOfService\" .value=${e.dateOfService} .type=${$r} ></fhir-primitive> ${v({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"packageCode\", collection: e.packageCode, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"device\", collection: e.device, generator: \"fhir-reference\", config: r })} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "kr",
          "default": "class extends x { constructor() { super(\"RelatedAccount\"); } renderDisplay(r, e) { return this.renderAll(r, e); } renderStructure(r, e) { return this.renderAll(r, e); } renderAll(r, e) { return [ o` <fhir-codeable-concept key=\"relationship\" .data=${e.relationship}></fhir-codeable-concept> <fhir-reference key=\"account\" .data=${e.account}></fhir-reference> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Dr",
          "default": "class extends x { constructor() { super(\"MonthlyTemplate\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"dayOfMonth\" .value=${e.dayOfWeek} .type=${s.positiveInt}></fhir-primitive> <fhir-coding key=\"nthWeekOfMonth\" .data=${e.nthWeekOfMonth}></fhir-coding> <fhir-coding key=\"dayOfWeek\" .data=${e.dayOfWeek}></fhir-coding> <fhir-primitive key=\"monthInterval\" .value=${e.monthInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"dayOfMonth\" .value=${e.dayOfWeek} .type=${s.positiveInt}></fhir-primitive> <fhir-coding key=\"nthWeekOfMonth\" .data=${e.nthWeekOfMonth}></fhir-coding> <fhir-coding key=\"dayOfWeek\" .data=${e.dayOfWeek}></fhir-coding> <fhir-primitive key=\"monthInterval\" .value=${e.monthInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "wr",
          "default": "class extends x { constructor() { super(\"Participant\"); } renderDisplay(r, e) { return [ o` ${c({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} <fhir-period key=\"period\" .data=${e.period}></fhir-period> <fhir-reference key=\"actor\" .data=${e.actor} summary></fhir-reference> <fhir-primitive key=\"required\" .value=${e.required} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"status\" .value=${e.status} .type=${s.code}></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` ${v({ key: \"type\", collection: e.type, generator: \"fhir-codeable-concept\", config: r })} <fhir-period key=\"period\" .data=${e.period}></fhir-period> <fhir-reference key=\"actor\" .data=${e.actor} summary></fhir-reference> <fhir-primitive key=\"required\" .value=${e.required} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"status\" .value=${e.status} .type=${s.code}></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "_r",
          "default": "class extends x { constructor() { super(\"RecurrenceTemplate\"); } renderDisplay(r, e) { return [ o` <fhir-codeable-concept key=\"timezone\" .data=${e.timezone}></fhir-codeable-concept> <fhir-codeable-concept key=\"recurrenceType\" .data=${e.recurrenceType}></fhir-codeable-concept> <fhir-primitive key=\"lastOccurrenceDate\" .value=${e.lastOccurrenceDate} .type=${s.date} ></fhir-primitive> <fhir-weekly-template key=\"weeklyTemplate\" .data=${e.weeklyTemplate}></fhir-weekly-template> <fhir-monthly-template key=\"monthlyTemplate\" .data=${e.monthlyTemplate}></fhir-monthly-template> <fhir-yearly-template key=\"yearlyTemplate\" .data=${e.yearlyTemplate}></fhir-yearly-template> <fhir-primitive key=\"excludingDate\" .value=${e.excludingDate} .type=${s.date} ></fhir-primitive> <fhir-primitive key=\"excludingRecurrenceId\" .value=${e.excludingRecurrenceId} .type=${s.date} ></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-codeable-concept key=\"timezone\" .data=${e.timezone}></fhir-codeable-concept> <fhir-codeable-concept key=\"recurrenceType\" .data=${e.recurrenceType}></fhir-codeable-concept> <fhir-primitive key=\"lastOccurrenceDate\" .value=${e.lastOccurrenceDate} .type=${s.date} ></fhir-primitive> <fhir-weekly-template key=\"weeklyTemplate\" .data=${e.weeklyTemplate}></fhir-weekly-template> <fhir-monthly-template key=\"monthlyTemplate\" .data=${e.monthlyTemplate}></fhir-monthly-template> <fhir-yearly-template key=\"yearlyTemplate\" .data=${e.yearlyTemplate}></fhir-yearly-template> ${v({ key: \"excludingData\", collection: e.excludingDate, generator: (n, t, i) => o` <fhir-primitive key=${i} .value=${n} .type=${s.date} ></fhir-primitive> `, summary: !1, config: r })} <fhir-primitive key=\"excludingRecurrenceId\" .value=${e.excludingRecurrenceId} .type=${s.date} ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "xr",
          "default": "class extends x { constructor() { super(\"WeeklyTemplate\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"monday\" .value=${e.monday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"tuesday\" .value=${e.tuesday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"wednesday\" .value=${e.wednesday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"thursday\" .value=${e.thursday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"friday\" .value=${e.friday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"saturday\" .value=${e.saturday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"sunday\" .value=${e.sunday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"weekInterval\" .value=${e.weekInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"monday\" .value=${e.monday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"tuesday\" .value=${e.tuesday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"wednesday\" .value=${e.wednesday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"thursday\" .value=${e.thursday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"friday\" .value=${e.friday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"saturday\" .value=${e.saturday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"sunday\" .value=${e.sunday} .type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"weekInterval\" .value=${e.weekInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Cr",
          "default": "class extends x { constructor() { super(\"YearlyTemplate\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"yearInterval\" .value=${e.yearInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"yearInterval\" .value=${e.yearInterval} .type=${s.positiveInt} ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Or",
          "default": "class extends V { constructor() { super(\"Appointment\"); } renderDisplay(r, e) { return [ o` ${c({ key: \"identifier\", collection: e.identifier, generator: \"fhir-identifier\", config: r })} <fhir-primitive key=\"status\" .value=${e.status} type=${Ir} required summary></fhir-primitive> <fhir-codeable-concept key=\"cancellationReason\" .data=${e.cancellationReason} summary ></fhir-codeable-concept> ${c({ key: \"class\", collection: e.class, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"serviceCategory\", collection: e.serviceCategory, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"serviceType\", collection: e.serviceType, generator: \"fhir-codeable-reference\", config: r })} ${c({ key: \"speciality\", collection: e.specialty, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"appointmentType\", collection: e.appointmentType, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"reason\", collection: e.reason, generator: \"fhir-codeable-reference\", config: r })} <fhir-codeable-concept key=\"priority\" .data=${e.priority}></fhir-codeable-concept> <fhir-primitive key=\"description\" .value=${e.description} .type=${Pr}></fhir-primitive> ${c({ key: \"replaces\", collection: e.replaces, generator: \"fhir-reference\", summary: !1, config: r })} ${c({ key: \"supportingInformation\", collection: e.supportingInformation, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-reference key=\"originationAppointment\" .data=${e.originationAppointment}></fhir-reference> <fhir-primitive key=\"start\" .value=${e.start} .type=${fe} summary></fhir-primitive> <fhir-primitive key=\"end\" .value=${e.end} .type=${fe} summary></fhir-primitive> <fhir-primitive key=\"minuteDuration\" .value=${e.minutesDuration} .type=${ue}></fhir-primitive> ${c({ key: \"slot\", collection: e.slot, generator: \"fhir-reference\", summary: !1, config: r })} ${c({ key: \"account\", collection: e.account, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-primitive key=\"created\" .value=${e.created} .type=${he}></fhir-primitive> <fhir-primitive key=\"cancellationDate\" .value=${e.cancellationReason} .type=${he}></fhir-primitive> <fhir-annotation key=\"note\" .data=${e.note}></fhir-annotation> ${c({ key: \"patientInstruction\", collection: e.patientInstruction, generator: \"fhir-codeable-reference\", summary: !1, config: r })} ${c({ key: \"basedOn\", collection: e.basedOn, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-reference key=\"subject\" .data=${e.subject}></fhir-reference> ${c({ key: \"participant\", collection: e.participant, generator: (n, t, i) => o` <fhir-appointment-participant key=${i} label=${t} .data=${n} ></fhir-appointment-participant> `, summary: !1, config: r })} <fhir-primitive key=\"recurrenceId\" .value=${e.recurrenceId} .type=${ue}></fhir-primitive> <fhir-primitive key=\"occurrenceChanged\" .value=${e.occurrenceChanged} .type=${Sr}></fhir-primitive> <fhir-appointment-recurrence-template key=\"recurrenceTemplate\" .data=${e.recurrenceTemplate} ></fhir-appointment-recurrence-template> ` ]; } renderStructure(r, e) { return [ o` ${v({ key: \"identifier\", collection: e.identifier, generator: \"fhir-identifier\", config: r })} <fhir-primitive key=\"status\" .value=${e.status} type=${Ir} required summary></fhir-primitive> <fhir-codeable-concept key=\"cancellationReason\" .data=${e.cancellationReason} summary ></fhir-codeable-concept> ${v({ key: \"class\", collection: e.class, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"serviceCategory\", collection: e.serviceCategory, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"serviceType\", collection: e.serviceType, generator: \"fhir-codeable-reference\", config: r })} ${v({ key: \"speciality\", collection: e.specialty, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"appointmentType\", collection: e.appointmentType, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"reason\", collection: e.reason, generator: \"fhir-codeable-reference\", config: r })} <fhir-codeable-concept key=\"priority\" .data=${e.priority}></fhir-codeable-concept> <fhir-primitive key=\"description\" .value=${e.description} .type=${Pr}></fhir-primitive> ${v({ key: \"replaces\", collection: e.replaces, generator: \"fhir-reference\", summary: !1, config: r })} ${v({ key: \"supportingInformation\", collection: e.supportingInformation, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-reference key=\"originationAppointment\" .data=${e.originationAppointment}></fhir-reference> <fhir-primitive key=\"start\" .value=${e.start} .type=${fe} summary></fhir-primitive> <fhir-primitive key=\"end\" .value=${e.end} .type=${fe} summary></fhir-primitive> <fhir-primitive key=\"minuteDuration\" .value=${e.minutesDuration} .type=${ue}></fhir-primitive> ${v({ key: \"slot\", collection: e.slot, generator: \"fhir-reference\", summary: !1, config: r })} ${v({ key: \"account\", collection: e.account, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-primitive key=\"created\" .value=${e.created} .type=${he}></fhir-primitive> <fhir-primitive key=\"cancellationDate\" .value=${e.cancellationReason} .type=${he}></fhir-primitive> <fhir-annotation key=\"note\" .data=${e.note}></fhir-annotation> ${v({ key: \"patientInstruction\", collection: e.patientInstruction, generator: \"fhir-codeable-reference\", summary: !1, config: r })} ${v({ key: \"basedOn\", collection: e.basedOn, generator: \"fhir-reference\", summary: !1, config: r })} <fhir-reference key=\"subject\" .data=${e.subject}></fhir-reference> ${v({ key: \"participant\", collection: e.participant, generator: (n, t, i) => o` <fhir-appointment-participant key=${i} label=${t} .data=${n} ></fhir-appointment-participant> `, summary: !1, config: r })} <fhir-primitive key=\"recurrenceId\" .value=${e.recurrenceId} .type=${ue}></fhir-primitive> <fhir-primitive key=\"occurrenceChanged\" .value=${e.occurrenceChanged} .type=${Sr}></fhir-primitive> <fhir-appointment-recurrence-template key=\"recurrenceTemplate\" .data=${e.recurrenceTemplate} ></fhir-appointment-recurrence-template> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Ar",
          "default": "class extends x { constructor() { super(\"Batch\"); } renderDisplay(r, e) { return [ o` <fhir-primitive key=\"lotNumber\" label=\"lot number\" .value=${e.lotNumber} .type=${s.fhir_string} ></fhir-primitive> <fhir-primitive key=\"expirationDate\" label=\"expiration date\" .value=${e.expirationDate} .type=${s.datetime} ></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive key=\"lotNumber\" .value=${e.lotNumber} .type=${s.fhir_string}></fhir-primitive> <fhir-primitive key=\"expirationDate\" .value=${e.expirationDate} .type=${s.datetime} ></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Tr",
          "default": "class extends x { constructor() { super(\"Ingredient\"); } renderDisplay(r, e) { return [ o` <fhir-codeable-reference key=\"item\" .data=${e.item} headless></fhir-codeable-reference> <fhir-primitive key=\"isActive\" .type=${Rr} .value=${e.isActive}></fhir-primitive> <fhir-ratio key=\"strengthRatio\" label=\"strength\" .data=${e.strengthRatio}></fhir-ratio> <fhir-codeable-concept key=\"strengthCodeableConcept\" label=\"strength\" .data=${e.strengthCodeableConcept} ></fhir-codeable-concept> <fhir-quantity key=\"strengthQuantity\" label=\"strength\" .data=${e.strengthQuantity} ></fhir-quantity> ` ]; } renderStructure(r, e) { return [ o` <fhir-codeable-reference key=\"item\" .data=${e.item}></fhir-codeable-reference> <fhir-primitive key=\"isActive\" .type=${Rr} .value=${e.isActive}></fhir-primitive> <fhir-ratio key=\"strengthRatio\" label=\"strength[x]\" .data=${e.strengthRatio}></fhir-ratio> <fhir-codeable-concept key=\"strengthCodeableConcept\" label=\"strength[x]\" .data=${e.strengthCodeableConcept} ></fhir-codeable-concept> <fhir-quantity key=\"strengthQuantity\" label=\"strength[x]\" .data=${e.strengthQuantity}></fhir-quantity> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "qr",
          "default": "class extends V { constructor() { super(\"Medication\"); } renderDisplay(r, e) { return [ o` <fhir-identifier key=\"identifier\" .data=${e.identifier} summary></fhir-identifier> <fhir-codeable-concept key=\"code\" .data=${e.code} summary></fhir-codeable-concept> <fhir-primitive key=\"status\" .type=${s.code} .value=${e.status} summary></fhir-primitive> <fhir-reference key=\"marketingAuthorizationHolder\" label=\"marketing authorization holder\" .data=${e.marketingAuthorizationHolder} summary></fhir-reference> <fhir-codeable-concept key=\"doseForm\" label=\"dose form\" .data=${e.doseForm}></fhir-codeable-concept> <fhir-quantity key=\"totalVolume\" label=\"total volume\" .data=${e.totalVolume} summary></fhir-quantity> ${c( { key: \"ingredient\", collection: e.ingredient || [], generator: (n, t, i) => o` <fhir-medication-ingredient key=\"${i}\" .data=${n} label=${t} ></fhir-medication-ingredient> `, summary: !1, config: r } )} <fhir-medication-batch key=\"batch\" .data=${e.batch}></fhir-medication-batch> <fhir-reference key=\"definition\" .data=${e.definition}></fhir-reference> ` ]; } renderStructure(r, e) { return [ o` <fhir-identifier key=\"identifier\" .data=${e.identifier} summary></fhir-identifier> <fhir-codeable-concept key=\"code\" .data=${e.code} summary></fhir-codeable-concept> <fhir-primitive key=\"status\" .type=${s.code} .value=${e.status} summary></fhir-primitive> <fhir-reference key=\"marketingAuthorizationHolder\" .data=${e.marketingAuthorizationHolder} summary ></fhir-reference> <fhir-codeable-concept key=\"doseForm\" .data=${e.doseForm}></fhir-codeable-concept> <fhir-quantity key=\"totalVolume\" .data=${e.totalVolume} summary></fhir-quantity> ${v({ key: \"ingredient\", pluralBase: \"ingredient\", collection: e.ingredient, generator: (n, t, i) => o` <fhir-medication-ingredient key=\"${i}\" .data=${n} label=\"${t}\" ></fhir-medication-ingredient> `, summary: !1, config: this.getDisplayConfig() })} <fhir-medication-batch key=\"batch\" .data=${e.batch}></fhir-medication-batch> <fhir-reference key=\"definition\" .data=${e.definition}></fhir-reference> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Er",
          "default": "class extends x { constructor() { super(\"ObservationComponent\"); } renderDisplay(r, e, n) { return this.renderAny(r, e, n); } renderStructure(r, e, n) { return this.renderAny(r, e, n); } renderAny(r, e, n) { const { integer: t, datetime: i, fhir_string: a, time: l, boolean: p } = s; return [ o` <fhir-codeable-concept key=\"code\" .data=${e.code} required></fhir-codeable-concept> ${E( this, \"value[x]\", n.msgFor(\"value[x]\"), [ d( e.valueQuantity, (m) => o` <fhir-quantity key=\"valueQuantity\" .data=${m} summary ></fhir-quantity>` ), d( e.valueCodeableConcept, (m) => o` <fhir-codeable-concept key=\"effectiveDateTime\" .data=${m} summary ></fhir-codeable-concept>` ), d( e.valueString, (m) => o` <fhir-primitive key=\"valueString\" .value=${m} .type=${a} summary ></fhir-primitive>` ), d( e.valueBoolean, (m) => o` <fhir-primitive key=\"valueBoolean\" .value=${m} .type=${p} summary ></fhir-primitive>` ), d( e.valueInteger, (m) => o` <fhir-primitive key=\"valueInteger\" .value=${m} .type=${t} summary ></fhir-primitive>` ), d( e.valueRange, (m) => o` <fhir-range key=\"valueRange\" .data=${m} summary ></fhir-range>` ), d( e.valueRatio, (m) => o` <fhir-ratio key=\"valueRatio\" .data=${m} summary ></fhir-ratio>` ), d( e.valueSampledData, (m) => o` <fhir-not-supported variant=\"no-impl\" label=\"valueSampledData\" .data=${m} summary ></fhir-not-supported>` ), d( e.valueTime, (m) => o` <fhir-primitive key=\"valueTime\" .value=${m} .type=${l} summary ></fhir-primitive>` ), d( e.valueDateTime, (m) => o` <fhir-primitive key=\"valueDateTime\" .value=${m} .type=${i} summary ></fhir-primitive>` ), d( e.valuePeriod, (m) => o` <fhir-period key=\"valuePeriod\" .data=${m} summary ></fhir-period>` ), d( e.valueAttachment, (m) => o` <fhir-attachment key=\"valueAttachment\" .data=${m} summary ></fhir-attachment>` ), d( e.valueReference, (m) => o` <fhir-reference key=\"valueReference\" .data=${m} summary ></fhir-reference>` ) ] )} <fhir-codeable-concept key=\"dataAbsentReason\" .data=${e.dataAbsentReason}></fhir-codeable-concept> <fhir-codeable-concept key=\"interpretation\" .data=${e.interpretation}></fhir-codeable-concept> ${c( { key: \"interpretation\", collection: e.interpretation ?? [], generator: (m, b, P) => o` <fhir-codeable-concept key=${P} label=${b} .data=${m}></fhir-codeable-concept>`, config: r } )} <fhir-not-supported label=\"referenceRange\" variant=\"no-impl\" description=\"not sure how to implement this\"></fhir-not-supported> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Mr",
          "default": "class extends x { constructor() { super(\"ObservationReferenceRange\"); } renderDisplay(r, e) { return this.renderAny(r, e); } renderStructure(r, e) { return this.renderAny(r, e); } renderAny(r, e) { return [ o` <fhir-quantity key=\"low\" .data=${e.low} simple></fhir-quantity> <fhir-quantity key=\"high\" .data=${e.high} simple></fhir-quantity> <fhir-codeable-concept key=\"normalValue\" .data=${e.normalValue}></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${e.type}></fhir-codeable-concept> ${c( { key: \"appliesTo\", collection: e.appliesTo ?? [], generator: (n, t, i) => o` <fhir-codeable-concept key=${i} label=${t} .data=${n}></fhir-codeable-concept>`, config: r } )} <fhir-range key=\"age\" .data=${e.age}></fhir-range> <fhir-primitive key=\"text\" .data=${e.text} .type=${s.markdown}></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Fr",
          "default": "class extends x { constructor() { super(\"ObservationTriggeredBy\"); } renderDisplay(r, e) { return this.renderAny(r, e); } renderStructure(r, e) { return this.renderAny(r, e); } renderAny(r, e) { return [o` <fhir-reference key=\"observation\" .data=${e.observation} required summary></fhir-reference> <fhir-primitive key=\"type\" .value=${e.type} .type=${s.code} required summary></fhir-primitive> <fhir-primitive key=\"reason\" .value=${e.reason} .type=${s.fhir_string}></fhir-primitive> `]; } }"
        },
        {
          "kind": "variable",
          "name": "jr",
          "default": "class extends V { constructor() { super(\"Observation\"); } renderDisplay(r, e, n) { return this.renderAny(r, e, n); } renderStructure(r, e, n) { return this.renderAny(r, e, n); } validate(r, e, n) { e.inspectCode({ node: \"status\", code: r.status, id: \"cs-observation-status\" }), e.inspectCodeableConcept({ node: \"category\", concept: r.category, bindingId: \"vs-observation-category\" }), e.inspectCodeableConcept({ node: \"dataAbsentReason\", concept: r.dataAbsentReason, bindingId: \"vs-data-absent-reason\" }); } renderAny(r, e, n) { return [ o` ${yi(e.identifier ?? [], r)} ${E( this, \"instantiate[x]\", n.msgFor(\"instantiate[x]\"), [ d( e.instantiatesCanonical, (t) => o` <fhir-primitive key=\"instantiateCanonical\" .value=${t} .type=${s.canonical} summary ></fhir-primitive>` ), d( e.instantiatesReference, (t) => o` <fhir-reference key=\"instantiateReference\" .data=${t} summary ></fhir-reference>` ) ] )} ${c( { key: \"basedOn\", collection: e.basedOn ?? [], generator: (t, i) => o` <fhir-reference label=${i} .data=${t}></fhir-reference>`, config: r } )} ${c( { key: \"triggeredBy\", collection: e.triggeredBy ?? [], generator: (t, i) => o` <fhir-observation-triggered-by key=${i} .data=${t}></fhir-observation-triggered-by>`, config: r } )} ${c( { key: \"partOf\", collection: e.partOf ?? [], generator: (t, i) => o` <fhir-reference label=${i} .data=${t}></fhir-reference>`, config: r } )} <fhir-primitive key=\"status\" .value=${e.status} .type=${s.code} errormessage=${n.msgFor(\"status\")} ></fhir-primitive> ${c( { key: \"category\", collection: e.category ?? [], generator: (t, i, a, l) => o` <fhir-codeable-concept key=${a} label=${i} .data=${t} .errors=${n.sliceForFQK({ path: [ { node: \"category\", index: l } ] })} ></fhir-codeable-concept>`, config: r } )} <fhir-codeable-concept key=\"code\" .data=${e.code} required></fhir-codeable-concept> <fhir-reference key='subject' .data=${e.subject}></fhir-reference> ${c( { key: \"focus\", collection: e.focus ?? [], generator: (t, i) => o` <fhir-reference label=${i} .data=${t}></fhir-reference>`, config: r } )} <fhir-reference key='encounter' .data=${e.encounter}></fhir-reference> ${E( this, \"effective[x]\", n.msgFor(\"effective[x]\"), [ d( e.effectiveDateTime, (t) => o` <fhir-primitive key=\"effectiveDateTime\" .value=${t} .type=${s.datetime} summary ></fhir-primitive>` ), d( e.effectivePeriod, (t) => o` <fhir-period key=\"effectivePeriod\" .data=${t} summary ></fhir-period>` ), d( e.effectiveTiming, (t) => o` <fhir-timing key=\"effectiveTiming\" .data=${t}></fhir-timing>` ), d( e.effectiveInstant, (t) => o` <fhir-primitive key=\"effectiveInstant\" .value=${t} .type=${s.instant} summary ></fhir-primitive>` ) ] )} <fhir-primitive key=\"issued\" .value=${e.issued} .type=${s.instant} summary></fhir-primitive> ${c( { key: \"performer\", collection: e.performer ?? [], generator: (t, i) => o` <fhir-reference label=${i} .data=${t}></fhir-reference>`, config: r } )} ${E( this, \"value[x]\", n.msgFor(\"value[x]\"), [ d( e.valueQuantity, (t) => o` <fhir-quantity key=\"valueQuantity\" .data=${t} summary ></fhir-quantity>` ), d( e.valueCodeableConcept, (t) => o` <fhir-codeable-concept key=\"effectiveDateTime\" .data=${t} summary ></fhir-codeable-concept>` ), d( e.valueString, (t) => o` <fhir-primitive key=\"valueString\" .value=${t} .type=${s.fhir_string} summary ></fhir-primitive>` ), d( e.valueBoolean, (t) => o` <fhir-primitive key=\"valueBoolean\" .value=${t} .type=${s.boolean} summary ></fhir-primitive>` ), d( e.valueInteger, (t) => o` <fhir-primitive key=\"valueInteger\" .value=${t} .type=${s.integer} summary ></fhir-primitive>` ), d( e.valueRange, (t) => o` <fhir-range key=\"valueRange\" .data=${t} summary ></fhir-range>` ), d( e.valueRatio, (t) => o` <fhir-ratio key=\"valueRatio\" .data=${t} summary ></fhir-ratio>` ), d( e.valueSampledData, (t) => o` <fhir-sampled-data key=\"valueSampledData\" .data=${t} summary ></fhir-sampled-data>` ), d( e.valueTime, (t) => o` <fhir-primitive key=\"valueTime\" .value=${t} .type=${s.time} summary ></fhir-primitive>` ), d( e.valueDateTime, (t) => o` <fhir-primitive key=\"valueDateTime\" .value=${t} .type=${s.datetime} summary ></fhir-primitive>` ), d( e.valuePeriod, (t) => o` <fhir-period key=\"valuePeriod\" .data=${t} summary ></fhir-period>` ), d( e.valueAttachment, (t) => o` <fhir-attachment key=\"valueAttachment\" .data=${t} summary ></fhir-attachment>` ), d( e.valueReference, (t) => o` <fhir-reference key=\"valueReference\" .data=${t} summary ></fhir-reference>` ) ] )} <fhir-codeable-concept key=\"dataAbsentReason\" .data=${e.dataAbsentReason} .errors=${n.sliceForFQK({ path: [{ node: \"dataAbsentReason\" }] })} ></fhir-codeable-concept> ${c( { key: \"interpretation\", collection: e.interpretation ?? [], generator: (t, i) => o` <fhir-codeable-concept key=${i} .data=${t}></fhir-codeable-concept>`, config: r } )} ${c( { key: \"note\", collection: e.note ?? [], generator: (t, i) => o` <fhir-annotation key=${i} .data=${t}></fhir-annotation>`, config: r } )} <fhir-codeable-concept key=\"bodySite\" .data=${e.bodySite}></fhir-codeable-concept> <fhir-reference key=\"bodyStructure\" .data=${e.bodyStructure}></fhir-reference> <fhir-codeable-concept key=\"method\" .data=${e.method}></fhir-codeable-concept> <fhir-reference key=\"specimen\" .data=${e.specimen}></fhir-reference> <fhir-reference key=\"device\" .data=${e.device}></fhir-reference> <fhir-observation-reference-range key=\"referenceRange\" .data=${e.referenceRange} ></fhir-observation-reference-range> ${c( { key: \"hasMember\", collection: e.hasMember ?? [], generator: (t, i) => o` <fhir-reference key=${i} .data=${t} summary></fhir-reference>`, config: r } )} ${c( { key: \"derivedFrom\", collection: e.derivedFrom ?? [], generator: (t, i) => o` <fhir-reference key=${i} .data=${t} summary></fhir-reference>`, config: r } )} ${c( { key: \"component\", collection: e.component ?? [], generator: (t, i) => o` <fhir-observation-component key=${i} .data=${t}></fhir-observation-component>`, config: r } )} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Br",
          "default": "class extends V { constructor() { super(\"ObservationDefinition\"); } renderDisplay() { return me; } renderStructure() { return me; } }"
        },
        {
          "kind": "variable",
          "name": "Vr",
          "default": "class extends x { constructor() { super(\"PatientCommunication\"); } renderDisplay(r, e) { return [ o` <fhir-codeable-concept key=\"language\" label=\"language\" .data=${e.language} required ></fhir-codeable-concept> <fhir-primitive key=\"preferred\" label=\"preferred\" .value=${e.preferred} .type=${Ur}></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` <fhir-codeable-concept key=\"language\" label=\"language\" .data=${e.language} required ></fhir-codeable-concept> <fhir-primitive key=\"preferred\" label=\"preferred\" .value=${e.preferred} .type=${Ur}></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Wr",
          "default": "class extends x { constructor() { super(\"PatientContact\"); } renderDisplay(r, e) { return [ o` ${c({ key: \"relationships\", pluralBase: \"relationship\", collection: e.relationship, generator: (n, t, i) => o` <fhir-codeable-concept key=${i} label=${t} .data=${n}></fhir-codeable-concept>`, summary: this.summary, config: r })} <fhir-human-name key=\"name\" label=\"name\" .data=${e.name}></fhir-human-name> ${c({ key: \"telecoms\", pluralBase: \"telecom\", collection: e.telecom, generator: (n, t, i) => o` <fhir-contact-point key=${i} label=${t} .data=${n}></fhir-contact-point>`, summary: this.summary, config: r })} <fhir-address key=\"address\" label=\"address\" .data=${e.address}></fhir-address> <fhir-primitive key=\"gender\" label=\"gender\" .value=${e.gender} .type=${Zr}></fhir-primitive> <fhir-reference key=\"organisation\" label=\"organisation\" .data=${e.organization}></fhir-reference> <fhir-period key=\"period\" label=\"period\" .data=${e.period}></fhir-period> ` ]; } renderStructure(r, e) { return [ o` ${v({ key: \"relationship\", pluralBase: \"relationship\", collection: e.relationship, generator: (n, t, i) => o` <fhir-codeable-concept key=${i} label=${t} .data=${n}></fhir-codeable-concept>`, summary: this.summary, config: this.getDisplayConfig() })} <fhir-human-name key=\"name\" label=\"name\" .data=${e.name}></fhir-human-name> ${v({ key: \"telecom\", pluralBase: \"telecom\", collection: e.telecom, generator: (n, t, i) => o` <fhir-contact-point key=${i} label=${t} .data=${n}></fhir-contact-point>`, summary: this.summary, config: this.getDisplayConfig() })} <fhir-address key=\"address\" label=\"address\" .data=${e.address}></fhir-address> <fhir-primitive key=\"gender\" label=\"gender\" .value=${e.gender} .type=${Zr}></fhir-primitive> <fhir-reference key=\"organisation\" label=\"organisation\" .data=${e.organization}></fhir-reference> <fhir-period key=\"period\" label=\"period\" .data=${e.period}></fhir-period> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "zr",
          "default": "class extends x { constructor() { super(\"PatientLink\"); } renderDisplay(r, e) { return this.generate(e); } renderStructure(r, e) { return this.generate(e); } generate(r) { return [ o` <fhir-reference key=\"other\" label=\"other\" .data=${r.other} required summary></fhir-reference> <fhir-primitive key=\"type\" label=\"type\" .value=${r.type} .type=${Ea} required summary></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Lr",
          "default": "class extends V { constructor() { super(\"Patient\"); } renderDisplay(r, e, n) { return this.renderAny(r, e, n); } renderStructure(r, e, n) { return this.renderAny(r, e, n); } renderAny(r, e, n) { return [ o` ${yi(e.identifier, r)} <fhir-primitive label=\"active\" .value=${e.active} .type=${Pe} summary></fhir-primitive> ${c( { key: \"name\", collection: e.name, generator: (t, i, a) => o` <fhir-human-name key=${a} label=${i} .data=${t} summary></fhir-human-name>`, config: r } )} ${c( { key: \"telecom\", collection: e.telecom, generator: (t, i, a) => o` <fhir-contact-point key=${a} label=\"${i}\" .data=${t} summary></fhir-contact-point> `, config: r } )} <fhir-primitive label=\"gender\" .value=${e.gender} .type=${ja} summary></fhir-primitive> <fhir-primitive label=\"birthDate\" .value=${e.birthDate} .type=${Ua} summary ></fhir-primitive> ${E( this, \"deceased[x]\", n.msgFor(\"deceased[x]\"), [ { data: e.deceasedBoolean, html: (t, i, a) => o` <fhir-primitive key=\"deceasedBoolean\" label=${i} .value=${t} .type=${Pe} .errormessage=${a} summary ></fhir-primitive>` }, { data: e.deceasedDateTime, html: (t, i, a) => o` <fhir-primitive key=\"deceasedDateTime\" label=${i} .value=${t} .type=${Ba} .errormessage=${a} summary ></fhir-primitive>` } ] )} ${c( { key: \"address\", collection: e.address, generator: (t, i, a) => o` <fhir-address key=${a} label=${i} .data=${t} summary></fhir-address> `, config: r } )} <fhir-codeable-concept key=\"maritalStatus\" .data=${e.maritalStatus}></fhir-codeable-concept> ${E( this, \"multipleBirth[x]\", n.msgFor(\"multipleBirth[x]\"), [ { data: e.multipleBirthBoolean, html: (t, i, a) => o` <fhir-primitive key='multipleBirthBoolean' label=${i} .value=${t} .type=${Pe} .errormessage=${a} ></fhir-primitive> ` }, { data: e.multipleBirthInteger, html: (t, i, a) => o` <fhir-primitive key='multipleBirthInteger' label=${i} .value=${t} .type=${Va} .errormessage=${a} ></fhir-primitive> ` } ] )} <fhir-attachment key=\"photo\" label=\"photo\" .data=${e.photo}></fhir-attachment> ${c( { key: \"contact\", collection: e.contact, generator: (t, i, a) => o` <fhir-patient-contact key=${a} label=${i} .data=${t} ></fhir-patient-contact> `, config: r } )} ${c( { key: \"communication\", collection: e.communication, generator: (t, i, a) => o` <fhir-patient-communication key=${a} label=${i} .data=${t} ></fhir-patient-communication> `, config: r } )} ${c( { key: \"generalPractitioner\", pluralBase: \"generalPractitioner\", collection: e.generalPractitioner, generator: \"fhir-reference\", config: r } )} <fhir-reference key=\"managingOrganisation\" label=\"managingOrganisation\" .data=${e.managingOrganization} summary ></fhir-reference> ${c( { key: \"link\", collection: e.link, generator: (t, i, a) => o` <fhir-patient-link key=${a} label=${i} .data=${t} ></fhir-patient-link> `, config: r } )} ` ]; } validate(r, e, n) { super.validate(r, e, n), Ve(r, e, \"deceased[x]\", [\"deceasedBoolean\", \"deceasedDateTime\"]), Ve(r, e, \"multipleBirth[x]\", [\"multipleBirthBoolean\", \"multipleBirthInteger\"]); } }"
        },
        {
          "kind": "variable",
          "name": "Yr",
          "default": "class extends V { constructor() { super(\"Slot\"); } renderDisplay(r, e) { return [ o` ${c({ key: \"identifier\", collection: e.identifier, generator: \"fhir-identifier\", config: r })} ${c({ key: \"serviceCategory\", collection: e.serviceCategory, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"serviceType\", collection: e.serviceType, generator: \"fhir-codeable-reference\", config: r })} ${c({ key: \"speciality\", collection: e.specialty, generator: \"fhir-codeable-concept\", config: r })} ${c({ key: \"appointmentType\", collection: e.appointmentType, generator: \"fhir-codeable-concept\", config: r })} <fhir-reference key=\"schedule\" .data=${e.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${e.status} type=${s.code}\" summary required .choices=${za.choices} ></fhir-primitive> <fhir-primitive key=\"start\" .value=${e.start} type=${s.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${e.end} type=${s.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${e.overbooked} type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${e.comment} type=${s.fhir_string}></fhir-primitive> ` ]; } renderStructure(r, e) { return [ o` ${v({ key: \"identifier\", collection: e.identifier, generator: \"fhir-identifier\", config: r })} ${v({ key: \"serviceCategory\", collection: e.serviceCategory, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"serviceType\", collection: e.serviceType, generator: \"fhir-codeable-reference\", config: r })} ${v({ key: \"speciality\", collection: e.specialty, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"appointmentType\", collection: e.appointmentType, generator: \"fhir-codeable-concept\", config: r })} <fhir-reference key=\"schedule\" .data=${e.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${e.status} type=${s.code}\" summary required ></fhir-primitive> <fhir-primitive key=\"start\" .value=${e.start} type=${s.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${e.end} type=${s.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${e.overbooked} type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${e.comment} type=${s.fhir_string}></fhir-primitive> ` ]; } renderEditableDisplay(r, e) { return [ o` ${v({ key: \"identifier\", collection: e.identifier, generator: \"fhir-identifier\", config: r })} ${v({ key: \"serviceCategory\", collection: e.serviceCategory, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"serviceType\", collection: e.serviceType, generator: \"fhir-codeable-reference\", config: r })} ${v({ key: \"speciality\", collection: e.specialty, generator: \"fhir-codeable-concept\", config: r })} ${v({ key: \"appointmentType\", collection: e.appointmentType, generator: \"fhir-codeable-concept\", config: r })} <fhir-reference key=\"schedule\" .data=${e.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${e.status} type=${s.code}\" summary required ></fhir-primitive> <fhir-primitive key=\"start\" .value=${e.start} type=${s.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${e.end} type=${s.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${e.overbooked} type=${s.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${e.comment} type=${s.fhir_string}></fhir-primitive> ` ]; } }"
        },
        {
          "kind": "function",
          "name": "Hr",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Qr",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Nr",
          "default": "class extends w { constructor() { super(\"Ingredient\"); } renderDisplay(r, e) { let n = o` <fhir-not-supported label=\"ingredient\" description=\"substance[x] choice not found\" ></fhir-not-supported >`; return Hr(e) && (n = o` <fhir-codeable-concept label=\"substance\" .data=${e.substanceCodeableConcept}></fhir-codeable-concept > `), Qr(e) && (n = o` <fhir-reference label=\"substance\" .data=${e.substanceReference}></fhir-reference > `), [ o` <fhir-wrapper .label=${this.label} ?summaryonly=${this.getDisplayConfig().summaryonly}> ${n} <fhir-ratio label=\"quantity\" .data=${e.quantity}></fhir-ratio > </fhir-wrapper> ` ]; } renderStructure(r, e) { let n = o` <fhir-not-supported label=\"ingredient\" description=\"substance[x] choice not found\" ></fhir-not-supported >`; return Hr(e) && (n = o` <fhir-codeable-concept label=\"substance\" .data=${e.substanceCodeableConcept}></fhir-codeable-concept > `), Qr(e) && (n = o` <fhir-reference label=\"substance\" .data=${e.substanceReference}></fhir-reference > `), [ o` ${n} <fhir-ratio label=\"quantity\" .data=${e.quantity}></fhir-ratio > ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Gr",
          "default": "class extends V { constructor() { super(\"Substance\"); } renderDisplay(r, e) { return [ o` <fhir-primitive label=\"description\" .value=${e.description} .context=\"id:${e.id}\" summary ></fhir-primitive> <fhir-identifier .label=\"identifier\" .data=${e.identifier} summary></fhir-identifier> <fhir-primitive label=\"instance or kind\" value=${e.instance ? \"instance\" : \"kind\"} summary ></fhir-primitive> <fhir-primitive label=\"status\" value=${e.status} .type=${s.code} summary></fhir-primitive> ${c({ key: \"\", pluralBase: \"category\", collection: e.category, generator: (n, t, i) => o` <fhir-codeable-concept .context=${i} label=\"substance\" .data=${n} summary ></fhir-codeable-concept> `, config: r })} <fhir-codeable-reference key=\"code\" label=\"code\" .data=${e.code} summary></fhir-codeable-reference> <fhir-primitive label=\"expiry\" value=${e.expiry} summary></fhir-primitive> <fhir-quantity label=\"quantity\" .data=${e.quantity} summary></fhir-quantity> ${c({ key: \"\", pluralBase: \"ingredient\", collection: e.ingredient, generator: (n, t, i) => o` <fhir-substance-ingredient .key=${i} .label=${\"ingredient\" + t} .data=${n} summary ></fhir-substance-ingredient> `, config: r })} ` ]; } renderStructure(r, e) { var n; return [ o` <fhir-identifier .label=\"identifier\" .data=${e.identifier} summary></fhir-identifier> <fhir-primitive label=\"instance\" value=${e.instance} summary></fhir-primitive> <fhir-primitive label=\"status\" value=${e.status} .type=${s.code} summary></fhir-primitive> ${e.category || this.verbose ? o` <fhir-wrapper variant=\"details\" label=\"categories\" ?headless=${((n = e.category) == null ? void 0 : n.length) > 1} ?summaryonly=${this.getDisplayConfig().summaryonly} summary > ${e.category ? ye(e.category, (t) => o` <fhir-codeable-concept label=\"category\" .data=${t} summary ></fhir-codeable-concept> `) : o` <fhir-empty-list></fhir-empty-list>`} </fhir-wrapper> ` : g} <fhir-codeable-reference label=\"code\" .data=${e.code} summary></fhir-codeable-reference> <fhir-primitive label=\"description\" .value=${e.description} summary></fhir-primitive> <fhir-primitive label=\"expiry\" value=${e.expiry} summary></fhir-primitive> <fhir-quantity label=\"quantity\" .data=${e.quantity} summary></fhir-quantity> ${e.ingredient || this.verbose ? o` <fhir-wrapper label=\"ingredients\" ?open=${this.open} summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${e.ingredient ? ye(e.ingredient, (t) => o` <fhir-substance-ingredient label=\"ingredient\" .data=${t} summary ></fhir-substance-ingredient> `) : o` <fhir-empty-list></fhir-empty-list>`} </fhir-wrapper> ` : g} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "Kr",
          "default": "class extends w { constructor() { super(\"Extension\"), Xr(this, T, []), Xr(this, X, \"unknown\"); } renderDisplay(r, e, n) { return this.renderAll(r, e, n); } renderStructure(r, e, n) { console.log(\"struct\"); let t = []; return t = [ o` <fhir-primitive key=\"url\" type=${s.uri} .value=${e.url}></fhir-primitive>` ], t; } renderAll(r, e, n) { let t = []; if (this.mode !== J.display && (t = [ o` <fhir-primitive key=\"url\" type=${s.uri} .value=${e.url}></fhir-primitive>` ]), R(this, X) === \"simple\" && R(this, T) && this.addTemplate(t, e, R(this, T)[0]), R(this, X) === \"complex\") { const i = []; e.extension.forEach((a, l) => this.addTemplate(i, a, R(this, T)[l])), t.push(o` <fhir-wrapper label=${I(e)}>${i}</fhir-wrapper>`); } return t; } decorate(r, e, n) { ei(R(this, T), r), R(this, T).length === 1 && Jr(this, X, \"simple\"), r.extension && r.extension.length > 0 && (Jr(this, X, \"complex\"), r.extension.reduce(ei, R(this, T))); } addTemplate(r, e, n) { switch (n) { case y.Age: r.push(this.notImplementedYet()); break; case y.Annotation: r.push(o` <fhir-annotation key=${e.url} label=${I(e)} .data=${e.valueAnnotation}></fhir-annotation> `); break; case y.Attachment: r.push(o` <fhir-attachment key=${e.url} label=${I(e)} .data=${e.valueAttachment}></fhir-attachment> `); break; case y.Base64Binary: r.push(C(e, \"valueBase64Binary\", s.base64, this.mode)); break; case y.Boolean: r.push(C(e, \"valueBoolean\", s.boolean, this.mode)); break; case y.Canonical: r.push(C(e, \"valueCanonical\", s.canonical, this.mode)); break; case y.Code: r.push(C(e, \"valueCode\", s.code, this.mode)); break; case y.CodeableConcept: r.push(o` <fhir-codeable-concept key=${e.url} label=${I(e)} .data=${e.valueCodeableConcept}></fhir-codeable-concept> `); break; case y.Coding: r.push(o` <fhir-coding key=${e.url} label=${I(e)} .data=${e.valueCoding}></fhir-coding> `); break; case y.ContactDetail: r.push(this.notImplementedYet()); break; case y.ContactPoint: r.push(o` <fhir-contact-point key=${e.url} label=${I(e)} .data=${e.valueContactPoint}></fhir-contact-point> `); break; case y.Count: r.push(this.notImplementedYet()); break; case y.DataRequirement: r.push(this.notImplementedYet()); break; case y.Date: r.push(C(e, \"valueDate\", s.date, this.mode)); break; case y.DateTime: r.push(C(e, \"valueDateTime\", s.datetime, this.mode)); break; case y.Decimal: r.push(C(e, \"valueDecimal\", s.decimal, this.mode)); break; case y.Distance: r.push(this.notImplementedYet()); break; case y.Dosage: r.push(this.notImplementedYet()); break; case y.Duration: r.push(this.notImplementedYet()); break; case y.Expression: r.push(this.notImplementedYet()); break; case y.HumanName: r.push(o` <fhir-human-name key=${e.url} label=${I(e)} .data=${e.valueHumanName}></fhir-human-name> `); break; case y.Id: r.push(C(e, \"valueId\", s.id, this.mode)); break; case y.Identifier: r.push(o` <fhir-identifier key=${e.url} label=${I(e)} .data=${e.valueIdentifier}></fhir-identifier> `); break; case y.Instant: r.push(C(e, \"valueInstant\", s.instant, this.mode)); break; case y.Integer: r.push(C(e, \"valueInteger\", s.integer, this.mode)); break; case y.Markdown: r.push(C(e, \"valueMarkdown\", s.markdown, this.mode)); break; case y.Money: r.push(o` <fhir-identifier key=${e.url} label=${I(e)} .data=${e.valueMoney}></fhir-identifier> `); break; case y.Oid: r.push(this.notImplementedYet()); break; case y.ParameterDefinition: r.push(this.notImplementedYet()); break; case y.Period: r.push(o` <fhir-period key=${e.url} label=${I(e)} .data=${e.valuePeriod}></fhir-period> `); break; case y.PositiveInt: r.push(C(e, \"valuePositiveInt\", s.positiveInt, this.mode)); break; case y.Quantity: r.push(o` <fhir-quantity key=${e.url} label=${I(e)} .data=${e.valueQuantity}></fhir-quantity> `); break; case y.Range: r.push(o` <fhir-range key=${e.url} label=${I(e)} .data=${e.valueRange}></fhir-range> `); break; case y.Ratio: r.push(o` <fhir-ratio key=${e.url} label=${I(e)} .data=${e.valueRatio}></fhir-ratio> `); break; case y.Reference: r.push(o` <fhir-reference key=${e.url} label=${I(e)} .data=${e.valueReference}></fhir-reference> `); break; case y.RelatedArtifact: r.push(this.notImplementedYet()); break; case y.SampledData: r.push(o` <fhir-sampled-data key=${e.url} label=${I(e)} .data=${e.valueSampledData}></fhir-sampled-data> `); break; case y.Signature: r.push(o` <fhir-signature key=${e.url} label=${I(e)} .data=${e.valueSignature}></fhir-signature> `); break; case y.String: r.push(C(e, \"valueString\", s.fhir_string, this.mode)); break; case y.Time: r.push(C(e, \"valueTime\", s.time, this.mode)); break; case y.Timing: r.push(o` <fhir-timing key=${e.url} label=${I(e)} .data=${e.valueTiming}></fhir-timing> `); break; case y.TriggerDefinition: r.push(this.notImplementedYet()); break; case y.UnsignedInt: r.push(C(e, \"valueUnsignedInt\", s.unsigned_int, this.mode)); break; case y.Uri: r.push(C(e, \"valueUri\", s.uri, this.mode)); break; case y.Url: r.push(C(e, \"valueUrl\", s.url, this.mode)); break; case y.UsageContext: r.push(this.notImplementedYet()); break; case y.Uuid: r.push(C(e, \"valueUuid\", s.uuid, this.mode)); break; } } notImplementedYet() { return o` <fhir-not-supported label=\"value${R(this, T)}\" description=\"${R(this, T)} not supported yet\" variant=\"no-impl\" ></fhir-not-supported>`; } }"
        },
        {
          "kind": "variable",
          "name": "ri",
          "default": "class extends w { constructor() { super(\"Meta\"); } renderDisplay(r, e) { return [ o` <fhir-primitive label=\"versionId\" type=${s.id} .value=${e.versionId} summary></fhir-primitive> <fhir-primitive label=\"lastUpdated\" type=${s.instant} .value=${e.lastUpdated} summary ></fhir-primitive> <fhir-primitive label=\"source\" type=${s.uri} .value=${e.source} summary></fhir-primitive> ${c({ key: \"profile\", pluralBase: \"profile\", collection: e.profile, generator: (n, t, i) => o` <fhir-primitive key=${i} label=${t} type=${s.canonical} .value=${n} summary ></fhir-primitive>`, summary: this.summary, config: r })} ${c({ key: \"security\", pluralBase: \"security\", collection: e.security, generator: (n, t, i) => o` <fhir-coding key=${i} label=${t} .data=${n} summary></fhir-coding> `, summary: this.summary, config: r })} ${c({ key: \"tag\", pluralBase: \"tag\", collection: e.tag, generator: (n, t, i) => o` <fhir-coding key=${i} label=${t} .data=${n} summary ?headless=${e.tag.length === 1} ></fhir-coding> `, summary: this.summary, config: r })} ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive label=\"versionId\" type=${s.id} .value=${e.versionId} summary></fhir-primitive> <fhir-primitive label=\"lastUpdated\" type=${s.instant} .value=${e.lastUpdated} summary ></fhir-primitive> <fhir-primitive label=\"source\" type=${s.uri} .value=${e.source} summary></fhir-primitive> ${e.profile ? o` <fhir-wrapper label=\"profiles\" variant=\"details\" summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${ye(e.profile, (n) => o` <fhir-primitive label=\"profile\" type=${s.canonical} .value=${n} summary ></fhir-primitive> `)} </fhir-wrapper> ` : g} ${e.security ? o` <fhir-wrapper label=\"security\" variant=\"details\" summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${ye(e.security, (n) => o` <fhir-coding label=\"security\" .data=${n} summary></fhir-coding> `)} </fhir-wrapper> ` : g} ${v({ key: \"tag\", pluralBase: \"tag\", collection: e.tag, generator: (n, t, i) => o` <fhir-coding key=${i} label=${t} .data=${n} summary></fhir-coding> `, summary: this.summary, config: this.getDisplayConfig() })} ` ]; } }"
        },
        {
          "kind": "variable",
          "name": "qe",
          "default": "class extends w { constructor() { super(\"Narrative\"); } renderNarrative(r, e) { return [ o` <div id=\"formatted-narrative\" part=\"narrative-styling\"> <div part=\"narrative\">${Be(e.div)}</div> </div> ` ]; } renderDisplay(r, e) { return [ o` <fhir-wrapper label=\"${r.verbose ? `summary (status:${e.status})` : \"summary\"}\" ?summaryonly=${this.getDisplayConfig().summaryonly} > <div id=\"formatted-narrative\" part=\"narrative-styling\"> <div part=\"narrative\">${Be(e.div)}</div > </div> </fhir-wrapper> ` ]; } renderStructure(r, e) { return [ o` <fhir-primitive label=\"status\" .value=${e.status}></fhir-primitive > <fhir-wrapper label=\"div\" variant=\"details\" ?summaryonly=${this.getDisplayConfig().summaryonly}> <fhir-primitive .value=${e.div}></fhir-primitive > </fhir-wrapper> ` ]; } /** * Override narrative styling */ async connectedCallback() { super.connectedCallback(); const r = document.getElementById(\"fhir-beacon-narrative\"); if (r && r.sheet && r.sheet.cssRules) { const e = r.sheet, n = new CSSStyleSheet(); Array.from(e.cssRules).forEach((t) => { n.insertRule(t.cssText); }), this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, n]; } } updated(r) { var e; super.updated(r), r.has(\"data\") && this.data !== Ii && (e = this.data) != null && e.status && (this.status = this.data.status); } }"
        },
        {
          "kind": "variable",
          "name": "ne",
          "default": "class extends w { constructor() { super(\"Reference\"), this.containedData = [], this.referenceType = \"unknown\"; } renderDisplay(r, e, n) { return [ o` ${li(this.referenceType, [ [ \"contained\", () => o` <fhir-wrapper label=\"${this.verbose ? \"contained ref \" + e.reference : \"\"}\" summary ?summaryonly=${r.summaryonly} > ${G(this.mappedResource, r, !0)} </fhir-wrapper> ` ], [ \"display\", () => o` <fhir-primitive label=${e.type ? W(e.type.toString()) : \"reference\"} .value=${e.display} .link=${e.reference} .errormessage=${n.msgFor(\"*\")} summary ></fhir-primitive >` ], [ \"reference\", () => o` <fhir-primitive label=${e.type ? W(e.type.toString()) : \"reference\"} .value=${e.display ? e.display : e.reference} .link=${e.reference} .errormessage=${n.msgFor(\"*\")} summary ></fhir-primitive >` ], [ \"identifier\", () => o` <fhir-identifier label=\"identifier\" .data=${e.identifier} summary ></fhir-identifier >` ], [ \"extension\", () => o` <fhir-primitive label=${e.type ? W(e.type.toString()) : \"reference\"} .value=${e.display || e.display || e.reference || \"undefined\"} .link=${e.reference} .errormessage=${n.msgFor(\"*\")} summary ></fhir-primitive >` ], [ \"unknown\", () => this.data ? o` <fhir-primitive label=${e.type ? W(e.type.toString()) : \"reference\"} .value=${e.display || e.display || e.reference || \"undefined\"} .link=${e.reference} .errormessage=${n.msgFor(\"*\")} summary ></fhir-primitive > ` : g ] ])} ` ]; } /** * @param config * @param data * @param validations * @protected */ renderStructure(r, e, n) { return [ o` <fhir-primitive label=\"reference\" .value=${e.reference} .errormessage=${n.msgFor(\"reference\")} summary ></fhir-primitive> <fhir-primitive type=${s.uri_type} label=\"type\" .value=${e.type} summary></fhir-primitive > <fhir-identifier label=\"identifier\" .data=${e.identifier} summary ></fhir-identifier > <fhir-primitive label=\"display\" .value=${e.display} summary></fhir-primitive > ` ]; } renderEditableDisplay(r, e, n) { return [ o` <fhir-primitive key=\"reference\" .value=${e.reference} .errormessage=${n.msgFor(\"*\")} summary ></fhir-primitive> <fhir-primitive type=${s.uri_type} key=\"type\" .value=${e.type} summary .input=${!1} ></fhir-primitive> <fhir-identifier key=\"identifier\" .data=${e.identifier} summary ></fhir-identifier> <fhir-primitive key=\"display\" .value=${e.display} summary .errormessage=${n.msgFor(\"*\")} ></fhir-primitive> ` ]; } validate(r, e, n) { super.validate(r, e, n), this.referenceType = \"unknown\"; let t = !1; if (this.data && this.data.reference) if (t = this.data.reference.startsWith(\"#\"), t && (this.referenceType = \"contained\"), this.containedData && this.containedData.length > 0) { const i = this.containedData.length > 0; t && i && (this.mappedResource = this.containedData.find((a) => \"#\" + a.id === this.data.reference), this.mappedResource && e.rmAll()); } else this.referenceType === \"contained\" && !this.mappedResource && (e.add({ fqk: { path: [{ node: \"*\" }] }, message: \"ref-1: Does not have a contained resource when reference starts with #\" }), this.referenceType = \"unknown\"); this.referenceType == \"unknown\" && (this.referenceType = Mi( r, [ (i) => !A(i.extension), \"extension\" /* extension */ ], [ (i) => !A(i.reference), \"reference\" /* reference */ ], [ (i) => !A(i.identifier), \"identifier\" /* identifier */ ], [ (i) => !A(i.display), \"display\" /* display */ ], Fi(() => (e.add({ fqk: { path: [{ node: \"*\" }] }, message: \"Ref-2: At least one of reference, identifier and display SHALL be present (unless an extension is provided).\" }), \"unknown\")) )), this.referenceType == \"extension\" && e.add({ fqk: { path: [{ node: \"*\" }] }, message: \"Support for reference extensions is not implemented yet.\" }), this.requestUpdate(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Account",
          "declaration": {
            "name": "fr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Address",
          "declaration": {
            "name": "Qe",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Annotation",
          "declaration": {
            "name": "Ne",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Appointment",
          "declaration": {
            "name": "Or",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentMonthlyTemplate",
          "declaration": {
            "name": "Dr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentParticipantBackbone",
          "declaration": {
            "name": "wr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "declaration": {
            "name": "_r",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentWeeklyTemplate",
          "declaration": {
            "name": "xr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "AppointmentYearlyTemplate",
          "declaration": {
            "name": "Cr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Attachment",
          "declaration": {
            "name": "Je",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Balance",
          "declaration": {
            "name": "mr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Bundle",
          "declaration": {
            "name": "Te",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "BundleEverything",
          "declaration": {
            "name": "ur",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConcept",
          "declaration": {
            "name": "Ke",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableReference",
          "declaration": {
            "name": "er",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Coding",
          "declaration": {
            "name": "te",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "ContactPoint",
          "declaration": {
            "name": "rr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Coverage",
          "declaration": {
            "name": "yr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Diagnosis",
          "declaration": {
            "name": "vr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Extension",
          "declaration": {
            "name": "Kr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Guarantor",
          "declaration": {
            "name": "dr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "HumanName",
          "declaration": {
            "name": "ir",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "tr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Medication",
          "declaration": {
            "name": "qr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "MedicationBatchBackbone",
          "declaration": {
            "name": "Ar",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "MedicationIngredientBackbone",
          "declaration": {
            "name": "Tr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Meta",
          "declaration": {
            "name": "ri",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "nr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "qe",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "NotSupported",
          "declaration": {
            "name": "K",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Observation",
          "declaration": {
            "name": "jr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationComponent",
          "declaration": {
            "name": "Er",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationDefinition",
          "declaration": {
            "name": "Br",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationReferenceRange",
          "declaration": {
            "name": "Mr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "ObservationTriggeredBy",
          "declaration": {
            "name": "Fr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Patient",
          "declaration": {
            "name": "Lr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientCommunicationBackbone",
          "declaration": {
            "name": "Vr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientContactBackbone",
          "declaration": {
            "name": "Wr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientLink",
          "declaration": {
            "name": "zr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Period",
          "declaration": {
            "name": "ar",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "D",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveContext",
          "declaration": {
            "name": "ve",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveError",
          "declaration": {
            "name": "de",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveInputEvent",
          "declaration": {
            "name": "$t",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveInvalidEvent",
          "declaration": {
            "name": "De",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveLabel",
          "declaration": {
            "name": "U",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveType",
          "declaration": {
            "name": "s",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValidEvent",
          "declaration": {
            "name": "Zi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValidator",
          "declaration": {
            "name": "dt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveValue",
          "declaration": {
            "name": "M",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveWrapper",
          "declaration": {
            "name": "Ae",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Procedure",
          "declaration": {
            "name": "br",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Quantity",
          "declaration": {
            "name": "$e",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "QuantityVariations",
          "declaration": {
            "name": "B",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Range",
          "declaration": {
            "name": "sr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Ratio",
          "declaration": {
            "name": "Re",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "ne",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "RelatedAccount",
          "declaration": {
            "name": "kr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "SampledData",
          "declaration": {
            "name": "lr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Signature",
          "declaration": {
            "name": "cr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Slot",
          "declaration": {
            "name": "Yr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Substance",
          "declaration": {
            "name": "Gr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "SubstanceIngredientBackbone",
          "declaration": {
            "name": "Nr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "Timing",
          "declaration": {
            "name": "hr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "TimingRepeat",
          "declaration": {
            "name": "pr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asDecodedBase64",
          "declaration": {
            "name": "bt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDate",
          "declaration": {
            "name": "Oe",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "St",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedInstant",
          "declaration": {
            "name": "hi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedTime",
          "declaration": {
            "name": "ui",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asLink",
          "declaration": {
            "name": "go",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asReadable",
          "declaration": {
            "name": "W",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asUcumUnit",
          "declaration": {
            "name": "bo",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "asWrapped",
          "declaration": {
            "name": "ko",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "convertToPrimitiveType",
          "declaration": {
            "name": "bi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "Co",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "format",
          "declaration": {
            "name": "Ot",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "identifiers",
          "declaration": {
            "name": "yi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorFhirString",
          "declaration": {
            "name": "xo",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorReference",
          "declaration": {
            "name": "_o",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "Do",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isDeceasedDateTime",
          "declaration": {
            "name": "wo",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isDecimal",
          "declaration": {
            "name": "yo",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isDomainResource",
          "declaration": {
            "name": "jn",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isQuantity",
          "declaration": {
            "name": "or",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isSimpleQuantity",
          "declaration": {
            "name": "Ie",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientConcept",
          "declaration": {
            "name": "Hr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientReference",
          "declaration": {
            "name": "Qr",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "mustRender",
          "declaration": {
            "name": "wi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toBase64",
          "declaration": {
            "name": "Wi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toBoolean",
          "declaration": {
            "name": "Qi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toCanonical",
          "declaration": {
            "name": "Ni",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toCode",
          "declaration": {
            "name": "Gi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toDate",
          "declaration": {
            "name": "Ji",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toDatetime",
          "declaration": {
            "name": "ci",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toDecimal",
          "declaration": {
            "name": "et",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toError",
          "declaration": {
            "name": "vo",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toFhirString",
          "declaration": {
            "name": "rt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toId",
          "declaration": {
            "name": "it",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toInstant",
          "declaration": {
            "name": "tt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toInteger",
          "declaration": {
            "name": "nt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toInteger64",
          "declaration": {
            "name": "at",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toLink",
          "declaration": {
            "name": "ot",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toMarkdown",
          "declaration": {
            "name": "lt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toPositiveInt",
          "declaration": {
            "name": "ct",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toReference",
          "declaration": {
            "name": "$o",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toTime",
          "declaration": {
            "name": "ut",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toType",
          "declaration": {
            "name": "He",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toUnsignedInt",
          "declaration": {
            "name": "ft",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toUri",
          "declaration": {
            "name": "mt",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "toUrl",
          "declaration": {
            "name": "pi",
            "module": "dist/fhir-beacon8.js"
          }
        },
        {
          "kind": "js",
          "name": "valueOrError",
          "declaration": {
            "name": "ti",
            "module": "dist/fhir-beacon8.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/hostStyles-D9a9XcW8.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "at"
        },
        {
          "kind": "variable",
          "name": "i"
        },
        {
          "kind": "variable",
          "name": "f",
          "default": "globalThis"
        },
        {
          "kind": "variable",
          "name": "j",
          "type": {
            "text": "object"
          },
          "default": "{ toAttribute(r, t) { switch (t) { case Boolean: r = r ? ft : null; break; case Object: case Array: r = r == null ? r : JSON.stringify(r); } return r; }, fromAttribute(r, t) { let e = r; switch (t) { case Boolean: e = r !== null; break; case Number: e = r === null ? null : Number(r); break; case Object: case Array: try { e = JSON.parse(r); } catch { e = null; } } return e; } }"
        },
        {
          "kind": "variable",
          "name": "st"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "h"
        },
        {
          "kind": "variable",
          "name": "x"
        },
        {
          "kind": "variable",
          "name": "Ut"
        },
        {
          "kind": "variable",
          "name": "E"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "u",
          "type": {
            "text": "number"
          },
          "default": "0"
        },
        {
          "kind": "class",
          "description": "",
          "name": "T",
          "members": [
            {
              "kind": "method",
              "name": "createRenderRoot"
            },
            {
              "kind": "method",
              "name": "update",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderOptions",
              "type": {
                "text": "object"
              },
              "default": "{ host: this }"
            },
            {
              "kind": "field",
              "name": "_$Do",
              "default": "void 0"
            }
          ],
          "superclass": {
            "name": "v",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "variable",
          "name": "Ot",
          "default": "at` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "d",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "T",
          "declaration": {
            "name": "E",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "T",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "st",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "Ot",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "at",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "j",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        },
        {
          "kind": "js",
          "name": "x",
          "declaration": {
            "name": "Ut",
            "module": "dist/hostStyles-D9a9XcW8.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/shell/types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal/BaseElement"
          }
        },
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "./src/internal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/codes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/fhirtypes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/internal/customization/fhir-context-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/shell"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/styles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/utilities"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/foundation"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/complex"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/metadata"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/special"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./src/components/resources"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "systemChoices",
            "module": "./src/codes/use-system"
          }
        },
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "useSystem",
            "module": "./src/codes/use-system"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "DisplayMode",
            "module": "./src/shell"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/vitest.setup.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents an error that occurs during the execution of a Beacon Test.",
          "name": "BeaconTestError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconTestError'"
            }
          ],
          "superclass": {
            "name": "Error",
            "module": "dist/vitest.setup.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconTestError",
          "declaration": {
            "name": "BeaconTestError",
            "module": "dist/vitest.setup.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/vitest.workspace.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "module": "dist/vitest.workspace.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/when-DMbeWbEH.js",
      "declarations": [
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "u",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "i",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "o"
        },
        {
          "kind": "function",
          "name": "l",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "function",
          "name": "h",
          "parameters": [
            {
              "name": "r"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "u",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "c",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "i",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "a",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "l",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "h",
            "module": "dist/when-DMbeWbEH.js"
          }
        },
        {
          "kind": "js",
          "name": "w",
          "declaration": {
            "name": "f",
            "module": "dist/when-DMbeWbEH.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/DatatypeDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR datatypes",
          "name": "DatatypeDef",
          "members": [
            {
              "kind": "field",
              "name": "Address",
              "static": true,
              "default": "new DatatypeDef('Address')"
            },
            {
              "kind": "field",
              "name": "Age",
              "static": true,
              "default": "new DatatypeDef('Age')"
            },
            {
              "kind": "field",
              "name": "Annotation",
              "static": true,
              "default": "new DatatypeDef('Annotation')"
            },
            {
              "kind": "field",
              "name": "Attachment",
              "static": true,
              "default": "new DatatypeDef('Attachment')"
            },
            {
              "kind": "field",
              "name": "Availability",
              "static": true,
              "default": "new DatatypeDef('Availability')"
            },
            {
              "kind": "field",
              "name": "CodeableConcept",
              "static": true,
              "default": "new DatatypeDef('CodeableConcept')"
            },
            {
              "kind": "field",
              "name": "CodeableReference",
              "static": true,
              "default": "new DatatypeDef('CodeableReference')"
            },
            {
              "kind": "field",
              "name": "Coding",
              "static": true,
              "default": "new DatatypeDef('Coding')"
            },
            {
              "kind": "field",
              "name": "ContactDetail",
              "static": true,
              "default": "new DatatypeDef('ContactDetail')"
            },
            {
              "kind": "field",
              "name": "ContactPoint",
              "static": true,
              "default": "new DatatypeDef('ContactPoint')"
            },
            {
              "kind": "field",
              "name": "Contributor",
              "static": true,
              "default": "new DatatypeDef('Contributor')"
            },
            {
              "kind": "field",
              "name": "Count",
              "static": true,
              "default": "new DatatypeDef('Count')"
            },
            {
              "kind": "field",
              "name": "DataRequirement",
              "static": true,
              "default": "new DatatypeDef('DataRequirement')"
            },
            {
              "kind": "field",
              "name": "Distance",
              "static": true,
              "default": "new DatatypeDef('Distance')"
            },
            {
              "kind": "field",
              "name": "Dosage",
              "static": true,
              "default": "new DatatypeDef('Dosage')"
            },
            {
              "kind": "field",
              "name": "Duration",
              "static": true,
              "default": "new DatatypeDef('Duration')"
            },
            {
              "kind": "field",
              "name": "ElementDefinition",
              "static": true,
              "default": "new DatatypeDef('ElementDefinition')"
            },
            {
              "kind": "field",
              "name": "Expression",
              "static": true,
              "default": "new DatatypeDef('Expression')"
            },
            {
              "kind": "field",
              "name": "ExtendedContactDetail",
              "static": true,
              "default": "new DatatypeDef('ExtendedContactDetail')"
            },
            {
              "kind": "field",
              "name": "Extension",
              "static": true,
              "default": "new DatatypeDef('Extension')"
            },
            {
              "kind": "field",
              "name": "HumanName",
              "static": true,
              "default": "new DatatypeDef('HumanName')"
            },
            {
              "kind": "field",
              "name": "Identifier",
              "static": true,
              "default": "new DatatypeDef('Identifier')"
            },
            {
              "kind": "field",
              "name": "MarketingStatus",
              "static": true,
              "default": "new DatatypeDef('MarketingStatus')"
            },
            {
              "kind": "field",
              "name": "Meta",
              "static": true,
              "default": "new DatatypeDef('Meta')"
            },
            {
              "kind": "field",
              "name": "MonetaryComponent",
              "static": true,
              "default": "new DatatypeDef('MonetaryComponent')"
            },
            {
              "kind": "field",
              "name": "Money",
              "static": true,
              "default": "new DatatypeDef('Money')"
            },
            {
              "kind": "field",
              "name": "Narrative",
              "static": true,
              "default": "new DatatypeDef('Narrative')"
            },
            {
              "kind": "field",
              "name": "ParameterDefinition",
              "static": true,
              "default": "new DatatypeDef('ParameterDefinition')"
            },
            {
              "kind": "field",
              "name": "Period",
              "static": true,
              "default": "new DatatypeDef('Period')"
            },
            {
              "kind": "field",
              "name": "ProductShelfLife",
              "static": true,
              "default": "new DatatypeDef('ProductShelfLife')"
            },
            {
              "kind": "field",
              "name": "Quantity",
              "static": true,
              "default": "new DatatypeDef('Quantity')"
            },
            {
              "kind": "field",
              "name": "Range",
              "static": true,
              "default": "new DatatypeDef('Range')"
            },
            {
              "kind": "field",
              "name": "Ratio",
              "static": true,
              "default": "new DatatypeDef('Ratio')"
            },
            {
              "kind": "field",
              "name": "RatioRange",
              "static": true,
              "default": "new DatatypeDef('RatioRange')"
            },
            {
              "kind": "field",
              "name": "Reference",
              "static": true,
              "default": "new DatatypeDef('Reference')"
            },
            {
              "kind": "field",
              "name": "RelatedArtifact",
              "static": true,
              "default": "new DatatypeDef('RelatedArtifact')"
            },
            {
              "kind": "field",
              "name": "SampledData",
              "static": true,
              "default": "new DatatypeDef('SampledData')"
            },
            {
              "kind": "field",
              "name": "SimpleQuantity",
              "static": true,
              "default": "new DatatypeDef('SimpledQuantity')"
            },
            {
              "kind": "field",
              "name": "Signature",
              "static": true,
              "default": "new DatatypeDef('Signature')"
            },
            {
              "kind": "field",
              "name": "Timing",
              "static": true,
              "default": "new DatatypeDef('Timing')"
            },
            {
              "kind": "field",
              "name": "TriggerDefinition",
              "static": true,
              "default": "new DatatypeDef('TriggerDefinition')"
            },
            {
              "kind": "field",
              "name": "UsageContext",
              "static": true,
              "default": "new DatatypeDef('UsageContext')"
            },
            {
              "kind": "field",
              "name": "VirtualServiceDetail",
              "static": true,
              "default": "new DatatypeDef('VirtualServiceDetail')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "DatatypeName | `${DatatypeName}${string}`"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "field",
              "name": "dataset",
              "type": {
                "text": "`${DatatypeName | `${DatatypeName}${string}`}Data`"
              },
              "readonly": true,
              "default": "`${value}Data`"
            },
            {
              "kind": "field",
              "name": "profileName",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "DatatypeDef[]"
                }
              },
              "description": "Get all available FHIR datatype names"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR datatype names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR datatype name"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "DatatypeDef|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
          "default": "DatatypeDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatatypeDef",
          "declaration": {
            "name": "DatatypeDef",
            "module": "src/DatatypeDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
          "declaration": {
            "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
            "module": "src/DatatypeDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/DatatypeName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/DatatypeType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/OpenType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR primitive datatypes",
          "name": "PrimitiveDef",
          "members": [
            {
              "kind": "field",
              "name": "base64Binary",
              "static": true,
              "default": "new PrimitiveDef('base64Binary')"
            },
            {
              "kind": "field",
              "name": "boolean",
              "static": true,
              "default": "new PrimitiveDef('boolean')"
            },
            {
              "kind": "field",
              "name": "canonical",
              "static": true,
              "default": "new PrimitiveDef('canonical')"
            },
            {
              "kind": "field",
              "name": "code",
              "static": true,
              "default": "new PrimitiveDef('code')"
            },
            {
              "kind": "field",
              "name": "date",
              "static": true,
              "default": "new PrimitiveDef('date')"
            },
            {
              "kind": "field",
              "name": "dateTime",
              "static": true,
              "default": "new PrimitiveDef('dateTime')"
            },
            {
              "kind": "field",
              "name": "decimal",
              "static": true,
              "default": "new PrimitiveDef('decimal')"
            },
            {
              "kind": "field",
              "name": "id",
              "static": true,
              "default": "new PrimitiveDef('id')"
            },
            {
              "kind": "field",
              "name": "instant",
              "static": true,
              "default": "new PrimitiveDef('instant')"
            },
            {
              "kind": "field",
              "name": "integer",
              "static": true,
              "default": "new PrimitiveDef('integer')"
            },
            {
              "kind": "field",
              "name": "integer64",
              "static": true,
              "default": "new PrimitiveDef('integer64')"
            },
            {
              "kind": "field",
              "name": "markdown",
              "static": true,
              "default": "new PrimitiveDef('markdown')"
            },
            {
              "kind": "field",
              "name": "oid",
              "static": true,
              "default": "new PrimitiveDef('oid')"
            },
            {
              "kind": "field",
              "name": "positiveInt",
              "static": true,
              "default": "new PrimitiveDef('positiveInt')"
            },
            {
              "kind": "field",
              "name": "string",
              "static": true,
              "default": "new PrimitiveDef('string')"
            },
            {
              "kind": "field",
              "name": "time",
              "static": true,
              "default": "new PrimitiveDef('time')"
            },
            {
              "kind": "field",
              "name": "unsignedInt",
              "static": true,
              "default": "new PrimitiveDef('unsignedInt')"
            },
            {
              "kind": "field",
              "name": "uri",
              "static": true,
              "default": "new PrimitiveDef('uri')"
            },
            {
              "kind": "field",
              "name": "url",
              "static": true,
              "default": "new PrimitiveDef('url')"
            },
            {
              "kind": "field",
              "name": "uuid",
              "static": true,
              "default": "new PrimitiveDef('uuid')"
            },
            {
              "kind": "field",
              "name": "xhtml",
              "static": true,
              "default": "new PrimitiveDef('xhtml')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "PrimitiveName"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available FHIR primitive datatype names",
              "return": {
                "type": {
                  "text": "PrimitiveDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR primitive datatype names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR primitive datatype name"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "PrimitiveDef|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
          "default": "PrimitiveDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveDef",
          "declaration": {
            "name": "PrimitiveDef",
            "module": "src/PrimitiveDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
          "declaration": {
            "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
            "module": "src/PrimitiveDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveTypes.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR resource types\nTODO: bind data models to these enums so we get something like `new\nResourceDef<AccountData>('Account','AccountData')`",
          "name": "ResourceDef",
          "members": [
            {
              "kind": "field",
              "name": "Account",
              "static": true,
              "default": "new ResourceDef('Account')"
            },
            {
              "kind": "field",
              "name": "ActivityDefinition",
              "static": true,
              "default": "new ResourceDef('ActivityDefinition')"
            },
            {
              "kind": "field",
              "name": "ActorDefinition",
              "static": true,
              "default": "new ResourceDef('ActorDefinition')"
            },
            {
              "kind": "field",
              "name": "AdministrableProductDefinition",
              "static": true,
              "default": "new ResourceDef('AdministrableProductDefinition')"
            },
            {
              "kind": "field",
              "name": "AdverseEvent",
              "static": true,
              "default": "new ResourceDef('AdverseEvent')"
            },
            {
              "kind": "field",
              "name": "AllergyIntolerance",
              "static": true,
              "default": "new ResourceDef('AllergyIntolerance')"
            },
            {
              "kind": "field",
              "name": "Appointment",
              "static": true,
              "default": "new ResourceDef('Appointment')"
            },
            {
              "kind": "field",
              "name": "AppointmentResponse",
              "static": true,
              "default": "new ResourceDef('AppointmentResponse')"
            },
            {
              "kind": "field",
              "name": "ArtifactAssessment",
              "static": true,
              "default": "new ResourceDef('ArtifactAssessment')"
            },
            {
              "kind": "field",
              "name": "AuditEvent",
              "static": true,
              "default": "new ResourceDef('AuditEvent')"
            },
            {
              "kind": "field",
              "name": "Basic",
              "static": true,
              "default": "new ResourceDef('Basic')"
            },
            {
              "kind": "field",
              "name": "Binary",
              "static": true,
              "default": "new ResourceDef('Binary')"
            },
            {
              "kind": "field",
              "name": "BiologicallyDerivedProduct",
              "static": true,
              "default": "new ResourceDef('BiologicallyDerivedProduct')"
            },
            {
              "kind": "field",
              "name": "BiologicallyDerivedProductDispense",
              "static": true,
              "default": "new ResourceDef('BiologicallyDerivedProductDispense')"
            },
            {
              "kind": "field",
              "name": "BodyStructure",
              "static": true,
              "default": "new ResourceDef('BodyStructure')"
            },
            {
              "kind": "field",
              "name": "Bundle",
              "static": true,
              "default": "new ResourceDef('Bundle')"
            },
            {
              "kind": "field",
              "name": "CapabilityStatement",
              "static": true,
              "default": "new ResourceDef('CapabilityStatement')"
            },
            {
              "kind": "field",
              "name": "CarePlan",
              "static": true,
              "default": "new ResourceDef('CarePlan')"
            },
            {
              "kind": "field",
              "name": "CareTeam",
              "static": true,
              "default": "new ResourceDef('CareTeam')"
            },
            {
              "kind": "field",
              "name": "ChargeItem",
              "static": true,
              "default": "new ResourceDef('ChargeItem')"
            },
            {
              "kind": "field",
              "name": "ChargeItemDefinition",
              "static": true,
              "default": "new ResourceDef('ChargeItemDefinition')"
            },
            {
              "kind": "field",
              "name": "Citation",
              "static": true,
              "default": "new ResourceDef('Citation')"
            },
            {
              "kind": "field",
              "name": "Claim",
              "static": true,
              "default": "new ResourceDef('Claim')"
            },
            {
              "kind": "field",
              "name": "ClaimResponse",
              "static": true,
              "default": "new ResourceDef('ClaimResponse')"
            },
            {
              "kind": "field",
              "name": "ClinicalImpression",
              "static": true,
              "default": "new ResourceDef('ClinicalImpression')"
            },
            {
              "kind": "field",
              "name": "ClinicalUseDefinition",
              "static": true,
              "default": "new ResourceDef('ClinicalUseDefinition')"
            },
            {
              "kind": "field",
              "name": "CodeSystem",
              "static": true,
              "default": "new ResourceDef('CodeSystem')"
            },
            {
              "kind": "field",
              "name": "Communication",
              "static": true,
              "default": "new ResourceDef('Communication')"
            },
            {
              "kind": "field",
              "name": "CommunicationRequest",
              "static": true,
              "default": "new ResourceDef('CommunicationRequest')"
            },
            {
              "kind": "field",
              "name": "CompartmentDefinition",
              "static": true,
              "default": "new ResourceDef('CompartmentDefinition')"
            },
            {
              "kind": "field",
              "name": "Composition",
              "static": true,
              "default": "new ResourceDef('Composition')"
            },
            {
              "kind": "field",
              "name": "ConceptMap",
              "static": true,
              "default": "new ResourceDef('ConceptMap')"
            },
            {
              "kind": "field",
              "name": "Condition",
              "static": true,
              "default": "new ResourceDef('Condition')"
            },
            {
              "kind": "field",
              "name": "ConditionDefinition",
              "static": true,
              "default": "new ResourceDef('ConditionDefinition')"
            },
            {
              "kind": "field",
              "name": "Consent",
              "static": true,
              "default": "new ResourceDef('Consent')"
            },
            {
              "kind": "field",
              "name": "Contract",
              "static": true,
              "default": "new ResourceDef('Contract')"
            },
            {
              "kind": "field",
              "name": "Coverage",
              "static": true,
              "default": "new ResourceDef('Coverage')"
            },
            {
              "kind": "field",
              "name": "CoverageEligibilityRequest",
              "static": true,
              "default": "new ResourceDef('CoverageEligibilityRequest')"
            },
            {
              "kind": "field",
              "name": "CoverageEligibilityResponse",
              "static": true,
              "default": "new ResourceDef('CoverageEligibilityResponse')"
            },
            {
              "kind": "field",
              "name": "DetectedIssue",
              "static": true,
              "default": "new ResourceDef('DetectedIssue')"
            },
            {
              "kind": "field",
              "name": "Device",
              "static": true,
              "default": "new ResourceDef('Device')"
            },
            {
              "kind": "field",
              "name": "DeviceAssociation",
              "static": true,
              "default": "new ResourceDef('DeviceAssociation')"
            },
            {
              "kind": "field",
              "name": "DeviceDefinition",
              "static": true,
              "default": "new ResourceDef('DeviceDefinition')"
            },
            {
              "kind": "field",
              "name": "DeviceDispense",
              "static": true,
              "default": "new ResourceDef('DeviceDispense')"
            },
            {
              "kind": "field",
              "name": "DeviceMetric",
              "static": true,
              "default": "new ResourceDef('DeviceMetric')"
            },
            {
              "kind": "field",
              "name": "DeviceRequest",
              "static": true,
              "default": "new ResourceDef('DeviceRequest')"
            },
            {
              "kind": "field",
              "name": "DeviceUsage",
              "static": true,
              "default": "new ResourceDef('DeviceUsage')"
            },
            {
              "kind": "field",
              "name": "DiagnosticReport",
              "static": true,
              "default": "new ResourceDef('DiagnosticReport')"
            },
            {
              "kind": "field",
              "name": "DocumentReference",
              "static": true,
              "default": "new ResourceDef('DocumentReference')"
            },
            {
              "kind": "field",
              "name": "Encounter",
              "static": true,
              "default": "new ResourceDef('Encounter')"
            },
            {
              "kind": "field",
              "name": "EncounterHistory",
              "static": true,
              "default": "new ResourceDef('EncounterHistory')"
            },
            {
              "kind": "field",
              "name": "Endpoint",
              "static": true,
              "default": "new ResourceDef('Endpoint')"
            },
            {
              "kind": "field",
              "name": "EnrollmentRequest",
              "static": true,
              "default": "new ResourceDef('EnrollmentRequest')"
            },
            {
              "kind": "field",
              "name": "EnrollmentResponse",
              "static": true,
              "default": "new ResourceDef('EnrollmentResponse')"
            },
            {
              "kind": "field",
              "name": "EpisodeOfCare",
              "static": true,
              "default": "new ResourceDef('EpisodeOfCare')"
            },
            {
              "kind": "field",
              "name": "EventDefinition",
              "static": true,
              "default": "new ResourceDef('EventDefinition')"
            },
            {
              "kind": "field",
              "name": "Evidence",
              "static": true,
              "default": "new ResourceDef('Evidence')"
            },
            {
              "kind": "field",
              "name": "EvidenceReport",
              "static": true,
              "default": "new ResourceDef('EvidenceReport')"
            },
            {
              "kind": "field",
              "name": "EvidenceVariable",
              "static": true,
              "default": "new ResourceDef('EvidenceVariable')"
            },
            {
              "kind": "field",
              "name": "ExampleScenario",
              "static": true,
              "default": "new ResourceDef('ExampleScenario')"
            },
            {
              "kind": "field",
              "name": "ExplanationOfBenefit",
              "static": true,
              "default": "new ResourceDef('ExplanationOfBenefit')"
            },
            {
              "kind": "field",
              "name": "FamilyMemberHistory",
              "static": true,
              "default": "new ResourceDef('FamilyMemberHistory')"
            },
            {
              "kind": "field",
              "name": "Flag",
              "static": true,
              "default": "new ResourceDef('Flag')"
            },
            {
              "kind": "field",
              "name": "FormularyItem",
              "static": true,
              "default": "new ResourceDef('FormularyItem')"
            },
            {
              "kind": "field",
              "name": "GenomicStudy",
              "static": true,
              "default": "new ResourceDef('GenomicStudy')"
            },
            {
              "kind": "field",
              "name": "Goal",
              "static": true,
              "default": "new ResourceDef('Goal')"
            },
            {
              "kind": "field",
              "name": "GraphDefinition",
              "static": true,
              "default": "new ResourceDef('GraphDefinition')"
            },
            {
              "kind": "field",
              "name": "Group",
              "static": true,
              "default": "new ResourceDef('Group')"
            },
            {
              "kind": "field",
              "name": "GuidanceResponse",
              "static": true,
              "default": "new ResourceDef('GuidanceResponse')"
            },
            {
              "kind": "field",
              "name": "HealthcareService",
              "static": true,
              "default": "new ResourceDef('HealthcareService')"
            },
            {
              "kind": "field",
              "name": "ImagingSelection",
              "static": true,
              "default": "new ResourceDef('ImagingSelection')"
            },
            {
              "kind": "field",
              "name": "ImagingStudy",
              "static": true,
              "default": "new ResourceDef('ImagingStudy')"
            },
            {
              "kind": "field",
              "name": "Immunization",
              "static": true,
              "default": "new ResourceDef('Immunization')"
            },
            {
              "kind": "field",
              "name": "ImmunizationEvaluation",
              "static": true,
              "default": "new ResourceDef('ImmunizationEvaluation')"
            },
            {
              "kind": "field",
              "name": "ImmunizationRecommendation",
              "static": true,
              "default": "new ResourceDef('ImmunizationRecommendation')"
            },
            {
              "kind": "field",
              "name": "ImplementationGuide",
              "static": true,
              "default": "new ResourceDef('ImplementationGuide')"
            },
            {
              "kind": "field",
              "name": "Ingredient",
              "static": true,
              "default": "new ResourceDef('Ingredient')"
            },
            {
              "kind": "field",
              "name": "InsurancePlan",
              "static": true,
              "default": "new ResourceDef('InsurancePlan')"
            },
            {
              "kind": "field",
              "name": "InventoryItem",
              "static": true,
              "default": "new ResourceDef('InventoryItem')"
            },
            {
              "kind": "field",
              "name": "InventoryReport",
              "static": true,
              "default": "new ResourceDef('InventoryReport')"
            },
            {
              "kind": "field",
              "name": "Invoice",
              "static": true,
              "default": "new ResourceDef('Invoice')"
            },
            {
              "kind": "field",
              "name": "Library",
              "static": true,
              "default": "new ResourceDef('Library')"
            },
            {
              "kind": "field",
              "name": "Linkage",
              "static": true,
              "default": "new ResourceDef('Linkage')"
            },
            {
              "kind": "field",
              "name": "List",
              "static": true,
              "default": "new ResourceDef('List')"
            },
            {
              "kind": "field",
              "name": "Location",
              "static": true,
              "default": "new ResourceDef('Location')"
            },
            {
              "kind": "field",
              "name": "ManufacturedItemDefinition",
              "static": true,
              "default": "new ResourceDef('ManufacturedItemDefinition')"
            },
            {
              "kind": "field",
              "name": "Measure",
              "static": true,
              "default": "new ResourceDef('Measure')"
            },
            {
              "kind": "field",
              "name": "MeasureReport",
              "static": true,
              "default": "new ResourceDef('MeasureReport')"
            },
            {
              "kind": "field",
              "name": "Media",
              "static": true,
              "default": "new ResourceDef('Media')"
            },
            {
              "kind": "field",
              "name": "Medication",
              "static": true,
              "default": "new ResourceDef('Medication')"
            },
            {
              "kind": "field",
              "name": "MedicationAdministration",
              "static": true,
              "default": "new ResourceDef('MedicationAdministration')"
            },
            {
              "kind": "field",
              "name": "MedicationDispense",
              "static": true,
              "default": "new ResourceDef('MedicationDispense')"
            },
            {
              "kind": "field",
              "name": "MedicationKnowledge",
              "static": true,
              "default": "new ResourceDef('MedicationKnowledge')"
            },
            {
              "kind": "field",
              "name": "MedicationRequest",
              "static": true,
              "default": "new ResourceDef('MedicationRequest')"
            },
            {
              "kind": "field",
              "name": "MedicationStatement",
              "static": true,
              "default": "new ResourceDef('MedicationStatement')"
            },
            {
              "kind": "field",
              "name": "MedicinalProductDefinition",
              "static": true,
              "default": "new ResourceDef('MedicinalProductDefinition')"
            },
            {
              "kind": "field",
              "name": "MessageDefinition",
              "static": true,
              "default": "new ResourceDef('MessageDefinition')"
            },
            {
              "kind": "field",
              "name": "MessageHeader",
              "static": true,
              "default": "new ResourceDef('MessageHeader')"
            },
            {
              "kind": "field",
              "name": "MolecularSequence",
              "static": true,
              "default": "new ResourceDef('MolecularSequence')"
            },
            {
              "kind": "field",
              "name": "NamingSystem",
              "static": true,
              "default": "new ResourceDef('NamingSystem')"
            },
            {
              "kind": "field",
              "name": "NutritionIntake",
              "static": true,
              "default": "new ResourceDef('NutritionIntake')"
            },
            {
              "kind": "field",
              "name": "NutritionOrder",
              "static": true,
              "default": "new ResourceDef('NutritionOrder')"
            },
            {
              "kind": "field",
              "name": "NutritionProduct",
              "static": true,
              "default": "new ResourceDef('NutritionProduct')"
            },
            {
              "kind": "field",
              "name": "Observation",
              "static": true,
              "default": "new ResourceDef('Observation')"
            },
            {
              "kind": "field",
              "name": "ObservationDefinition",
              "static": true,
              "default": "new ResourceDef('ObservationDefinition')"
            },
            {
              "kind": "field",
              "name": "OperationDefinition",
              "static": true,
              "default": "new ResourceDef('OperationDefinition')"
            },
            {
              "kind": "field",
              "name": "OperationOutcome",
              "static": true,
              "default": "new ResourceDef('OperationOutcome')"
            },
            {
              "kind": "field",
              "name": "Organization",
              "static": true,
              "default": "new ResourceDef('Organization')"
            },
            {
              "kind": "field",
              "name": "OrganizationAffiliation",
              "static": true,
              "default": "new ResourceDef('OrganizationAffiliation')"
            },
            {
              "kind": "field",
              "name": "PackagedProductDefinition",
              "static": true,
              "default": "new ResourceDef('PackagedProductDefinition')"
            },
            {
              "kind": "field",
              "name": "Parameters",
              "static": true,
              "default": "new ResourceDef('Parameters')"
            },
            {
              "kind": "field",
              "name": "Patient",
              "static": true,
              "default": "new ResourceDef('Patient')"
            },
            {
              "kind": "field",
              "name": "PaymentNotice",
              "static": true,
              "default": "new ResourceDef('PaymentNotice')"
            },
            {
              "kind": "field",
              "name": "PaymentReconciliation",
              "static": true,
              "default": "new ResourceDef('PaymentReconciliation')"
            },
            {
              "kind": "field",
              "name": "Permission",
              "static": true,
              "default": "new ResourceDef('Permission')"
            },
            {
              "kind": "field",
              "name": "Person",
              "static": true,
              "default": "new ResourceDef('Person')"
            },
            {
              "kind": "field",
              "name": "PlanDefinition",
              "static": true,
              "default": "new ResourceDef('PlanDefinition')"
            },
            {
              "kind": "field",
              "name": "Practitioner",
              "static": true,
              "default": "new ResourceDef('Practitioner')"
            },
            {
              "kind": "field",
              "name": "PractitionerRole",
              "static": true,
              "default": "new ResourceDef('PractitionerRole')"
            },
            {
              "kind": "field",
              "name": "Procedure",
              "static": true,
              "default": "new ResourceDef('Procedure')"
            },
            {
              "kind": "field",
              "name": "Provenance",
              "static": true,
              "default": "new ResourceDef('Provenance')"
            },
            {
              "kind": "field",
              "name": "Questionnaire",
              "static": true,
              "default": "new ResourceDef('Questionnaire')"
            },
            {
              "kind": "field",
              "name": "QuestionnaireResponse",
              "static": true,
              "default": "new ResourceDef('QuestionnaireResponse')"
            },
            {
              "kind": "field",
              "name": "RegulatedAuthorization",
              "static": true,
              "default": "new ResourceDef('RegulatedAuthorization')"
            },
            {
              "kind": "field",
              "name": "RelatedPerson",
              "static": true,
              "default": "new ResourceDef('RelatedPerson')"
            },
            {
              "kind": "field",
              "name": "RequestOrchestration",
              "static": true,
              "default": "new ResourceDef('RequestOrchestration')"
            },
            {
              "kind": "field",
              "name": "Requirements",
              "static": true,
              "default": "new ResourceDef('Requirements')"
            },
            {
              "kind": "field",
              "name": "ResearchStudy",
              "static": true,
              "default": "new ResourceDef('ResearchStudy')"
            },
            {
              "kind": "field",
              "name": "ResearchSubject",
              "static": true,
              "default": "new ResourceDef('ResearchSubject')"
            },
            {
              "kind": "field",
              "name": "RiskAssessment",
              "static": true,
              "default": "new ResourceDef('RiskAssessment')"
            },
            {
              "kind": "field",
              "name": "Schedule",
              "static": true,
              "default": "new ResourceDef('Schedule')"
            },
            {
              "kind": "field",
              "name": "SearchParameter",
              "static": true,
              "default": "new ResourceDef('SearchParameter')"
            },
            {
              "kind": "field",
              "name": "ServiceRequest",
              "static": true,
              "default": "new ResourceDef('ServiceRequest')"
            },
            {
              "kind": "field",
              "name": "Slot",
              "static": true,
              "default": "new ResourceDef('Slot')"
            },
            {
              "kind": "field",
              "name": "Specimen",
              "static": true,
              "default": "new ResourceDef('Specimen')"
            },
            {
              "kind": "field",
              "name": "SpecimenDefinition",
              "static": true,
              "default": "new ResourceDef('SpecimenDefinition')"
            },
            {
              "kind": "field",
              "name": "StructureDefinition",
              "static": true,
              "default": "new ResourceDef('StructureDefinition')"
            },
            {
              "kind": "field",
              "name": "StructureMap",
              "static": true,
              "default": "new ResourceDef('StructureMap')"
            },
            {
              "kind": "field",
              "name": "Subscription",
              "static": true,
              "default": "new ResourceDef('Subscription')"
            },
            {
              "kind": "field",
              "name": "SubscriptionStatus",
              "static": true,
              "default": "new ResourceDef('SubscriptionStatus')"
            },
            {
              "kind": "field",
              "name": "SubscriptionTopic",
              "static": true,
              "default": "new ResourceDef('SubscriptionTopic')"
            },
            {
              "kind": "field",
              "name": "Substance",
              "static": true,
              "default": "new ResourceDef('Substance')"
            },
            {
              "kind": "field",
              "name": "SubstanceDefinition",
              "static": true,
              "default": "new ResourceDef('SubstanceDefinition')"
            },
            {
              "kind": "field",
              "name": "SubstanceNucleicAcid",
              "static": true,
              "default": "new ResourceDef('SubstanceNucleicAcid')"
            },
            {
              "kind": "field",
              "name": "SubstancePolymer",
              "static": true,
              "default": "new ResourceDef('SubstancePolymer')"
            },
            {
              "kind": "field",
              "name": "SubstanceProtein",
              "static": true,
              "default": "new ResourceDef('SubstanceProtein')"
            },
            {
              "kind": "field",
              "name": "SubstanceReferenceInformation",
              "static": true,
              "default": "new ResourceDef('SubstanceReferenceInformation')"
            },
            {
              "kind": "field",
              "name": "SubstanceSourceMaterial",
              "static": true,
              "default": "new ResourceDef('SubstanceSourceMaterial')"
            },
            {
              "kind": "field",
              "name": "SupplyDelivery",
              "static": true,
              "default": "new ResourceDef('SupplyDelivery')"
            },
            {
              "kind": "field",
              "name": "SupplyRequest",
              "static": true,
              "default": "new ResourceDef('SupplyRequest')"
            },
            {
              "kind": "field",
              "name": "Task",
              "static": true,
              "default": "new ResourceDef('Task')"
            },
            {
              "kind": "field",
              "name": "TerminologyCapabilities",
              "static": true,
              "default": "new ResourceDef('TerminologyCapabilities')"
            },
            {
              "kind": "field",
              "name": "TestPlan",
              "static": true,
              "default": "new ResourceDef('TestPlan')"
            },
            {
              "kind": "field",
              "name": "TestReport",
              "static": true,
              "default": "new ResourceDef('TestReport')"
            },
            {
              "kind": "field",
              "name": "TestScript",
              "static": true,
              "default": "new ResourceDef('TestScript')"
            },
            {
              "kind": "field",
              "name": "Transport",
              "static": true,
              "default": "new ResourceDef('Transport')"
            },
            {
              "kind": "field",
              "name": "ValueSet",
              "static": true,
              "default": "new ResourceDef('ValueSet')"
            },
            {
              "kind": "field",
              "name": "VerificationResult",
              "static": true,
              "default": "new ResourceDef('VerificationResult')"
            },
            {
              "kind": "field",
              "name": "VisionPrescription",
              "static": true,
              "default": "new ResourceDef('VisionPrescription')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "ResourceName | `${ResourceName}${string}`"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "field",
              "name": "profileName",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "dataset",
              "type": {
                "text": "`${ResourceName | `${ResourceName}${string}`}Data`"
              },
              "readonly": true,
              "default": "`${value}Data`"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              },
              "description": "Get all available FHIR resource names"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR resource names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR resource name",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value",
              "return": {
                "type": {
                  "text": "ResourceDef|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "parameters": [
                {
                  "name": "prefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "The prefix to filter by"
                }
              ],
              "description": "Get resource names by category (resources that start with the same prefix)",
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "method",
              "name": "profile",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
          "default": "ResourceDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResourceDef",
          "declaration": {
            "name": "ResourceDef",
            "module": "src/ResourceDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
          "declaration": {
            "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
            "module": "src/ResourceDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "stories/storybook-utils.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "argTypes",
          "type": {
            "text": "Partial<ArgTypes<ShellArgs>>"
          },
          "default": "{ data: { table: { disable: true } }, mode: { description: 'display mode', options: ['display', 'structure', 'narrative', 'debug'], control: { type: 'inline-radio' }, defaultValue: 'display', table: { type: { summary: 'string' }, defaultValue: { summary: 'display' } } }, verbose: { description: 'show all properties defined in FHIR specification', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: false } }, summaryonly: { description: 'show properties marked as summary in the FHIR specification', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, open: { description: 'display collapsable structures as open', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', eq: 'structure' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, showerror: { description: 'display detailed error messages', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, headless: { description: 'do not display the element header', options: [false, true], control: { type: 'boolean' }, defaultValue: true, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: true } } }, input: { description: 'make editable', options: [false, true], control: { type: 'boolean' }, defaultValue: true, if: { arg: 'mode', eq: 'display' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: true } } } }"
        },
        {
          "kind": "function",
          "name": "wrapInShell",
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "(args: ShellArgs) => TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "argtypes",
          "return": {
            "type": {
              "text": "Meta"
            }
          }
        },
        {
          "kind": "function",
          "name": "renderTemplate",
          "return": {
            "type": {
              "text": "Meta<ShellArgs>"
            }
          },
          "parameters": [
            {
              "name": "component",
              "type": {
                "text": "(args: ShellArgs) => TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "renderTemplateInShell",
          "return": {
            "type": {
              "text": "Meta<ShellArgs>"
            }
          },
          "parameters": [
            {
              "name": "component",
              "type": {
                "text": "(args: ShellArgs) => TemplateResult"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "argTypes",
          "declaration": {
            "name": "argTypes",
            "module": "stories/storybook-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "wrapInShell",
          "declaration": {
            "name": "wrapInShell",
            "module": "stories/storybook-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "argtypes",
          "declaration": {
            "name": "argtypes",
            "module": "stories/storybook-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderTemplate",
          "declaration": {
            "name": "renderTemplate",
            "module": "stories/storybook-utils.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderTemplateInShell",
          "declaration": {
            "name": "renderTemplateInShell",
            "module": "stories/storybook-utils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/wrapInShell.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "tests/HtmlFormatter.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "formatHtml",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "htmlString",
              "type": {
                "text": "string"
              },
              "description": "The HTML string to format"
            },
            {
              "name": "options",
              "default": "{}",
              "type": {
                "text": "@param {number} [options.indentSize=2] - Number of spaces per indentation level\n * @param {number} [options.maxLineLength=80] - Maximum line length before wrapping\n * @param {boolean} [options.preserveCommentIndentation=true] - Whether to preserve indentation in comments\n * "
              },
              "description": "Formatting options",
              "optional": true
            }
          ],
          "description": "Formats HTML string by properly indenting, wrapping, and cleaning unnecessary whitespace\nwhile preserving meaningful newlines."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatHtml",
          "declaration": {
            "name": "formatHtml",
            "module": "tests/HtmlFormatter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/aTimeout.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "aTimeout",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          },
          "parameters": [
            {
              "name": "ms",
              "default": "100",
              "type": {
                "text": "number"
              },
              "description": "The duration in milliseconds to delay execution. Defaults to 100ms if not provided"
            }
          ],
          "description": "Delays execution for a specified amount of time."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "aTimeout",
          "declaration": {
            "name": "aTimeout",
            "module": "tests/aTimeout.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/dimensions.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "dimmensions",
          "parameters": [
            {
              "name": "div",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "as",
              "type": {
                "text": "'px' | 'rem'"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dimmensions",
          "declaration": {
            "name": "dimmensions",
            "module": "tests/dimensions.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/html-tags.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/storybook-utils.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "argTypes",
          "type": {
            "text": "object"
          },
          "default": "{ data: { table: { disable: true } }, mode: { description: 'display mode', options: ['display', 'structure', 'narrative', 'debug'], control: { type: 'inline-radio' }, defaultValue: 'display', table: { type: { summary: 'string' }, defaultValue: { summary: 'display' } } }, verbose: { description: 'show all properties defined in FHIR specification', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: false } }, summaryonly: { description: 'show properties marked as summary in the FHIR specification', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, open: { description: 'display collapsable structures as open', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', eq: 'structure' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, showerror: { description: 'display detailed error messages', options: [false, true], control: { type: 'boolean' }, defaultValue: false, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: false } } }, headless: { description: 'do not display the element header', options: [false, true], control: { type: 'boolean' }, defaultValue: true, if: { arg: 'mode', neq: 'narrative' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: true } } }, input: { description: 'make editable', options: [false, true], control: { type: 'boolean' }, defaultValue: true, if: { arg: 'mode', eq: 'display' }, table: { type: { summary: 'boolean' }, // @ts-ignore defaultValue: { summary: true } } } }"
        },
        {
          "kind": "function",
          "name": "wrapInShell",
          "parameters": [
            {
              "name": "fn"
            }
          ]
        },
        {
          "kind": "function",
          "name": "argtypes"
        },
        {
          "kind": "function",
          "name": "renderTemplate",
          "parameters": [
            {
              "name": "component"
            }
          ]
        },
        {
          "kind": "function",
          "name": "renderTemplateInShell",
          "parameters": [
            {
              "name": "component"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "argTypes",
          "declaration": {
            "name": "argTypes",
            "module": "dist/stories/storybook-utils.js"
          }
        },
        {
          "kind": "js",
          "name": "wrapInShell",
          "declaration": {
            "name": "wrapInShell",
            "module": "dist/stories/storybook-utils.js"
          }
        },
        {
          "kind": "js",
          "name": "argtypes",
          "declaration": {
            "name": "argtypes",
            "module": "dist/stories/storybook-utils.js"
          }
        },
        {
          "kind": "js",
          "name": "renderTemplate",
          "declaration": {
            "name": "renderTemplate",
            "module": "dist/stories/storybook-utils.js"
          }
        },
        {
          "kind": "js",
          "name": "renderTemplateInShell",
          "declaration": {
            "name": "renderTemplateInShell",
            "module": "dist/stories/storybook-utils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/wrapInShell.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/DatatypeDef.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR datatypes",
          "name": "DatatypeDef",
          "members": [
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available FHIR datatype names",
              "return": {
                "type": {
                  "text": "DatatypeDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "description": "Get all available FHIR datatype names as strings",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string to check",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Check if a string is a valid FHIR datatype name",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string value to look up",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get an enum by its string value",
              "return": {
                "type": {
                  "text": "DatatypeDef|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "dataset",
              "default": "`${value}Data`"
            },
            {
              "kind": "field",
              "name": "profileName"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ Address, Age, Annotation, Attachment, Availability, CodeableConcept, CodeableReference, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Distance, Dosage, Duration, ElementDefinition, Expression, ExtendedContactDetail, Extension, HumanName, Identifier, MarketingStatus, Meta, MonetaryComponent, Money, Narrative, ParameterDefinition, Period, ProductShelfLife, Quantity, Range, Ratio, RatioRange, Reference, RelatedArtifact, SampledData, SimpleQuantity, Signature, Timing, TriggerDefinition, UsageContext, VirtualServiceDetail }",
          "default": "DatatypeDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatatypeDef",
          "declaration": {
            "name": "DatatypeDef",
            "module": "dist/src/DatatypeDef.js"
          }
        },
        {
          "kind": "js",
          "name": "{ Address, Age, Annotation, Attachment, Availability, CodeableConcept, CodeableReference, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Distance, Dosage, Duration, ElementDefinition, Expression, ExtendedContactDetail, Extension, HumanName, Identifier, MarketingStatus, Meta, MonetaryComponent, Money, Narrative, ParameterDefinition, Period, ProductShelfLife, Quantity, Range, Ratio, RatioRange, Reference, RelatedArtifact, SampledData, SimpleQuantity, Signature, Timing, TriggerDefinition, UsageContext, VirtualServiceDetail }",
          "declaration": {
            "name": "{ Address, Age, Annotation, Attachment, Availability, CodeableConcept, CodeableReference, Coding, ContactDetail, ContactPoint, Contributor, Count, DataRequirement, Distance, Dosage, Duration, ElementDefinition, Expression, ExtendedContactDetail, Extension, HumanName, Identifier, MarketingStatus, Meta, MonetaryComponent, Money, Narrative, ParameterDefinition, Period, ProductShelfLife, Quantity, Range, Ratio, RatioRange, Reference, RelatedArtifact, SampledData, SimpleQuantity, Signature, Timing, TriggerDefinition, UsageContext, VirtualServiceDetail }",
            "module": "dist/src/DatatypeDef.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/DatatypeName.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/DatatypeType.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/OpenType.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "OpenTypeNameEnum"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "OpenTypeNameEnum",
          "declaration": {
            "name": "OpenTypeNameEnum",
            "module": "dist/src/OpenType.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/PrimitiveDef.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR primitive datatypes",
          "name": "PrimitiveDef",
          "members": [
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available FHIR primitive datatype names",
              "return": {
                "type": {
                  "text": "PrimitiveDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "description": "Get all available FHIR primitive datatype names as strings",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string to check",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Check if a string is a valid FHIR primitive datatype name",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string value to look up",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get an enum by its string value",
              "return": {
                "type": {
                  "text": "PrimitiveDef|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ base64Binary, boolean, canonical, code, date, dateTime, decimal, id, instant, integer, integer64, markdown, oid, positiveInt, string, time, unsignedInt, uri, url, uuid, xhtml }",
          "default": "PrimitiveDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveDef",
          "declaration": {
            "name": "PrimitiveDef",
            "module": "dist/src/PrimitiveDef.js"
          }
        },
        {
          "kind": "js",
          "name": "{ base64Binary, boolean, canonical, code, date, dateTime, decimal, id, instant, integer, integer64, markdown, oid, positiveInt, string, time, unsignedInt, uri, url, uuid, xhtml }",
          "declaration": {
            "name": "{ base64Binary, boolean, canonical, code, date, dateTime, decimal, id, instant, integer, integer64, markdown, oid, positiveInt, string, time, unsignedInt, uri, url, uuid, xhtml }",
            "module": "dist/src/PrimitiveDef.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/PrimitiveName.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/PrimitiveTypes.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/ResourceDef.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR resource types\nTODO: bind data models to these enums so we get something like `new\nResourceDef<AccountData>('Account','AccountData')`",
          "name": "ResourceDef",
          "members": [
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available FHIR resource names",
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "description": "Get all available FHIR resource names as strings",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string to check",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Check if a string is a valid FHIR resource name",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string value to look up",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get an enum by its string value",
              "return": {
                "type": {
                  "text": "ResourceDef|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "parameters": [
                {
                  "name": "prefix",
                  "description": "The prefix to filter by",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get resource names by category (resources that start with the same prefix)",
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "method",
              "name": "profile",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "dataset",
              "default": "`${value}Data`"
            },
            {
              "kind": "field",
              "name": "profileName"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ Account, ActivityDefinition, ActorDefinition, AdministrableProductDefinition, AdverseEvent, AllergyIntolerance, Appointment, AppointmentResponse, ArtifactAssessment, AuditEvent, Basic, Binary, BiologicallyDerivedProduct, BiologicallyDerivedProductDispense, BodyStructure, Bundle, CapabilityStatement, CarePlan, CareTeam, ChargeItem, ChargeItemDefinition, Citation, Claim, ClaimResponse, ClinicalImpression, ClinicalUseDefinition, CodeSystem, Communication, CommunicationRequest, CompartmentDefinition, Composition, ConceptMap, Condition, ConditionDefinition, Consent, Contract, Coverage, CoverageEligibilityRequest, CoverageEligibilityResponse, DetectedIssue, Device, DeviceAssociation, DeviceDefinition, DeviceDispense, DeviceMetric, DeviceRequest, DeviceUsage, DiagnosticReport, DocumentReference, Encounter, EncounterHistory, Endpoint, EnrollmentRequest, EnrollmentResponse, EpisodeOfCare, EventDefinition, Evidence, EvidenceReport, EvidenceVariable, ExampleScenario, ExplanationOfBenefit, FamilyMemberHistory, Flag, FormularyItem, GenomicStudy, Goal, GraphDefinition, Group, GuidanceResponse, HealthcareService, ImagingSelection, ImagingStudy, Immunization, ImmunizationEvaluation, ImmunizationRecommendation, ImplementationGuide, Ingredient, InsurancePlan, InventoryItem, InventoryReport, Invoice, Library, Linkage, List, Location, ManufacturedItemDefinition, Measure, MeasureReport, Media, Medication, MedicationAdministration, MedicationDispense, MedicationKnowledge, MedicationRequest, MedicationStatement, MedicinalProductDefinition, MessageDefinition, MessageHeader, MolecularSequence, NamingSystem, NutritionIntake, NutritionOrder, NutritionProduct, Observation, ObservationDefinition, OperationDefinition, OperationOutcome, Organization, OrganizationAffiliation, PackagedProductDefinition, Parameters, Patient, PaymentNotice, PaymentReconciliation, Permission, Person, PlanDefinition, Practitioner, PractitionerRole, Procedure, Provenance, Questionnaire, QuestionnaireResponse, RegulatedAuthorization, RelatedPerson, RequestOrchestration, Requirements, ResearchStudy, ResearchSubject, RiskAssessment, Schedule, SearchParameter, ServiceRequest, Slot, Specimen, SpecimenDefinition, StructureDefinition, StructureMap, Subscription, SubscriptionStatus, SubscriptionTopic, Substance, SubstanceDefinition, SubstanceNucleicAcid, SubstancePolymer, SubstanceProtein, SubstanceReferenceInformation, SubstanceSourceMaterial, SupplyDelivery, SupplyRequest, Task, TerminologyCapabilities, TestPlan, TestReport, TestScript, Transport, ValueSet, VerificationResult, VisionPrescription }",
          "default": "ResourceDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResourceDef",
          "declaration": {
            "name": "ResourceDef",
            "module": "dist/src/ResourceDef.js"
          }
        },
        {
          "kind": "js",
          "name": "{ Account, ActivityDefinition, ActorDefinition, AdministrableProductDefinition, AdverseEvent, AllergyIntolerance, Appointment, AppointmentResponse, ArtifactAssessment, AuditEvent, Basic, Binary, BiologicallyDerivedProduct, BiologicallyDerivedProductDispense, BodyStructure, Bundle, CapabilityStatement, CarePlan, CareTeam, ChargeItem, ChargeItemDefinition, Citation, Claim, ClaimResponse, ClinicalImpression, ClinicalUseDefinition, CodeSystem, Communication, CommunicationRequest, CompartmentDefinition, Composition, ConceptMap, Condition, ConditionDefinition, Consent, Contract, Coverage, CoverageEligibilityRequest, CoverageEligibilityResponse, DetectedIssue, Device, DeviceAssociation, DeviceDefinition, DeviceDispense, DeviceMetric, DeviceRequest, DeviceUsage, DiagnosticReport, DocumentReference, Encounter, EncounterHistory, Endpoint, EnrollmentRequest, EnrollmentResponse, EpisodeOfCare, EventDefinition, Evidence, EvidenceReport, EvidenceVariable, ExampleScenario, ExplanationOfBenefit, FamilyMemberHistory, Flag, FormularyItem, GenomicStudy, Goal, GraphDefinition, Group, GuidanceResponse, HealthcareService, ImagingSelection, ImagingStudy, Immunization, ImmunizationEvaluation, ImmunizationRecommendation, ImplementationGuide, Ingredient, InsurancePlan, InventoryItem, InventoryReport, Invoice, Library, Linkage, List, Location, ManufacturedItemDefinition, Measure, MeasureReport, Media, Medication, MedicationAdministration, MedicationDispense, MedicationKnowledge, MedicationRequest, MedicationStatement, MedicinalProductDefinition, MessageDefinition, MessageHeader, MolecularSequence, NamingSystem, NutritionIntake, NutritionOrder, NutritionProduct, Observation, ObservationDefinition, OperationDefinition, OperationOutcome, Organization, OrganizationAffiliation, PackagedProductDefinition, Parameters, Patient, PaymentNotice, PaymentReconciliation, Permission, Person, PlanDefinition, Practitioner, PractitionerRole, Procedure, Provenance, Questionnaire, QuestionnaireResponse, RegulatedAuthorization, RelatedPerson, RequestOrchestration, Requirements, ResearchStudy, ResearchSubject, RiskAssessment, Schedule, SearchParameter, ServiceRequest, Slot, Specimen, SpecimenDefinition, StructureDefinition, StructureMap, Subscription, SubscriptionStatus, SubscriptionTopic, Substance, SubstanceDefinition, SubstanceNucleicAcid, SubstancePolymer, SubstanceProtein, SubstanceReferenceInformation, SubstanceSourceMaterial, SupplyDelivery, SupplyRequest, Task, TerminologyCapabilities, TestPlan, TestReport, TestScript, Transport, ValueSet, VerificationResult, VisionPrescription }",
          "declaration": {
            "name": "{ Account, ActivityDefinition, ActorDefinition, AdministrableProductDefinition, AdverseEvent, AllergyIntolerance, Appointment, AppointmentResponse, ArtifactAssessment, AuditEvent, Basic, Binary, BiologicallyDerivedProduct, BiologicallyDerivedProductDispense, BodyStructure, Bundle, CapabilityStatement, CarePlan, CareTeam, ChargeItem, ChargeItemDefinition, Citation, Claim, ClaimResponse, ClinicalImpression, ClinicalUseDefinition, CodeSystem, Communication, CommunicationRequest, CompartmentDefinition, Composition, ConceptMap, Condition, ConditionDefinition, Consent, Contract, Coverage, CoverageEligibilityRequest, CoverageEligibilityResponse, DetectedIssue, Device, DeviceAssociation, DeviceDefinition, DeviceDispense, DeviceMetric, DeviceRequest, DeviceUsage, DiagnosticReport, DocumentReference, Encounter, EncounterHistory, Endpoint, EnrollmentRequest, EnrollmentResponse, EpisodeOfCare, EventDefinition, Evidence, EvidenceReport, EvidenceVariable, ExampleScenario, ExplanationOfBenefit, FamilyMemberHistory, Flag, FormularyItem, GenomicStudy, Goal, GraphDefinition, Group, GuidanceResponse, HealthcareService, ImagingSelection, ImagingStudy, Immunization, ImmunizationEvaluation, ImmunizationRecommendation, ImplementationGuide, Ingredient, InsurancePlan, InventoryItem, InventoryReport, Invoice, Library, Linkage, List, Location, ManufacturedItemDefinition, Measure, MeasureReport, Media, Medication, MedicationAdministration, MedicationDispense, MedicationKnowledge, MedicationRequest, MedicationStatement, MedicinalProductDefinition, MessageDefinition, MessageHeader, MolecularSequence, NamingSystem, NutritionIntake, NutritionOrder, NutritionProduct, Observation, ObservationDefinition, OperationDefinition, OperationOutcome, Organization, OrganizationAffiliation, PackagedProductDefinition, Parameters, Patient, PaymentNotice, PaymentReconciliation, Permission, Person, PlanDefinition, Practitioner, PractitionerRole, Procedure, Provenance, Questionnaire, QuestionnaireResponse, RegulatedAuthorization, RelatedPerson, RequestOrchestration, Requirements, ResearchStudy, ResearchSubject, RiskAssessment, Schedule, SearchParameter, ServiceRequest, Slot, Specimen, SpecimenDefinition, StructureDefinition, StructureMap, Subscription, SubscriptionStatus, SubscriptionTopic, Substance, SubstanceDefinition, SubstanceNucleicAcid, SubstancePolymer, SubstanceProtein, SubstanceReferenceInformation, SubstanceSourceMaterial, SupplyDelivery, SupplyRequest, Task, TerminologyCapabilities, TestPlan, TestReport, TestScript, Transport, ValueSet, VerificationResult, VisionPrescription }",
            "module": "dist/src/ResourceDef.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/ResourceName.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/ResourceType.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/HtmlFormatter.js",
      "declarations": [
        {
          "kind": "function",
          "name": "formatHtml",
          "parameters": [
            {
              "name": "htmlString",
              "description": "The HTML string to format",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "options",
              "default": "{}",
              "description": "Formatting options",
              "optional": true,
              "type": {
                "text": "@param {number} [options.indentSize=2] - Number of spaces per indentation level\n * @param {number} [options.maxLineLength=80] - Maximum line length before wrapping\n * @param {boolean} [options.preserveCommentIndentation=true] - Whether to preserve indentation in comments\n * "
              }
            }
          ],
          "description": "Formats HTML string by properly indenting, wrapping, and cleaning unnecessary whitespace\nwhile preserving meaningful newlines.",
          "return": {
            "type": {
              "text": "string"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "formatHtml",
          "declaration": {
            "name": "formatHtml",
            "module": "dist/tests/HtmlFormatter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/aTimeout.js",
      "declarations": [
        {
          "kind": "function",
          "name": "aTimeout",
          "parameters": [
            {
              "name": "ms",
              "default": "100",
              "description": "The duration in milliseconds to delay execution. Defaults to 100ms if not provided",
              "type": {
                "text": "number"
              }
            }
          ],
          "description": "Delays execution for a specified amount of time.",
          "return": {
            "type": {
              "text": "Promise<void>"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "aTimeout",
          "declaration": {
            "name": "aTimeout",
            "module": "dist/tests/aTimeout.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/dimensions.js",
      "declarations": [
        {
          "kind": "function",
          "name": "dimmensions",
          "parameters": [
            {
              "name": "div"
            },
            {
              "name": "as"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "dimmensions",
          "declaration": {
            "name": "dimmensions",
            "module": "dist/tests/dimensions.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/html-tags.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/Codes.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Codes",
          "members": [
            {
              "kind": "field",
              "name": "#map",
              "privacy": "private",
              "type": {
                "text": "Map<CodeIds, Choices>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "#translations",
              "privacy": "private",
              "type": {
                "text": "Map<string, string>"
              },
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "getById",
              "return": {
                "type": {
                  "text": "Choices | undefined"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBySystem",
              "return": {
                "type": {
                  "text": "Choices | undefined"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllSystemsAsChoices",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Choices"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "useCodeChoices",
          "return": {
            "type": {
              "text": "Choices | undefined"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "CodeIds"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Codes",
          "declaration": {
            "name": "Codes",
            "module": "src/codes/Codes.ts"
          }
        },
        {
          "kind": "js",
          "name": "useCodeChoices",
          "declaration": {
            "name": "useCodeChoices",
            "module": "src/codes/Codes.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Codes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./use-system"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/use-system.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useSystem",
          "return": {
            "type": {
              "text": "Choices"
            }
          },
          "parameters": [
            {
              "name": "url",
              "default": "''",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "systemChoices",
          "return": {
            "type": {
              "text": "Choices"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "useSystem",
            "module": "src/codes/use-system.ts"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "systemChoices",
            "module": "src/codes/use-system.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mustRender"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./complex/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./foundation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./metadata/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resources/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./special/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/mustRender.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "mustRender",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown | null | undefined"
              },
              "description": "The value to be rendered. Can be of any type or null/undefined."
            },
            {
              "name": "mode",
              "default": "DisplayMode.display",
              "type": {
                "text": "DisplayMode"
              },
              "description": "The display mode. Optional. Defaults to `DisplayMode.display` if not provided."
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if verbose rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if summary mode is enabled. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summary",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if summary rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "required",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Determines if a value should be rendered based on the provided context parameters."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mustRender",
          "declaration": {
            "name": "mustRender",
            "module": "src/components/mustRender.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/CodeSystem-fhir-types.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CodeSystemFhirTypes",
          "type": {
            "text": "object"
          },
          "default": "{ \"resourceType\": \"CodeSystem\", \"id\": \"fhir-types\", \"url\": \"http://hl7.org/fhir/fhir-types\", \"identifier\": [{\"system\": \"urn:ietf:rfc:3986\", \"value\": \"urn:oid:2.16.840.1.113883.4.642.4.1802\"}], \"version\": \"5.0.0\", \"name\": \"FHIRTypes\", \"title\": \"All FHIR Types\", \"status\": \"active\", \"experimental\": false, \"date\": \"2022-08-26T13:43:27+10:00\", \"publisher\": \"HL7 (FHIR Project)\", \"description\": \"One of the types defined as part of this version of FHIR.\", \"caseSensitive\": true, \"valueSet\": \"http://hl7.org/fhir/ValueSet/fhir-types\", \"content\": \"complete\", \"property\": [ {\"code\": \"abstract-type\", \"uri\": \"http://hl7.org/fhir/concept-properties#abstract-type\", \"type\": \"boolean\"}, {\"code\": \"kind\", \"uri\": \"http://hl7.org/fhir/concept-properties#kind\", \"type\": \"code\"}, {\"code\": \"interface\", \"uri\": \"http://hl7.org/fhir/concept-properties#interface\", \"type\": \"boolean\"} ], \"concept\": [ { \"code\": \"Base\", \"display\": \"Base\", \"definition\": \"Base Type: Base definition for all types defined in FHIR type system.\", \"property\": [{\"code\": \"abstract-type\", \"valueBoolean\": true}], \"concept\": [ { \"code\": \"Element\", \"display\": \"Element\", \"definition\": \"Element Type: Base definition for all elements in a resource.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"BackboneElement\", \"display\": \"BackboneElement\", \"definition\": \"BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ] }, { \"code\": \"DataType\", \"display\": \"DataType\", \"definition\": \"DataType Type: The base class for all re-useable types defined as part of the FHIR Specification.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Address\", \"display\": \"Address\", \"definition\": \"Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats). This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery. There are a variety of postal address formats defined around the world.\\nThe ISO21090-codedString may be used to provide a coded representation of the contents of strings in an Address.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Annotation\", \"display\": \"Annotation\", \"definition\": \"Annotation Type: A text note which also contains information about who made the statement and when.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Attachment\", \"display\": \"Attachment\", \"definition\": \"Attachment Type: For referring to data content defined in other formats.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Availability\", \"display\": \"Availability\", \"definition\": \"Availability Type: Availability data for an {item}.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"BackboneType\", \"display\": \"BackboneType\", \"definition\": \"BackboneType Type: Base definition for the few data types that are allowed to carry modifier extensions.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Dosage\", \"display\": \"Dosage\", \"definition\": \"Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ElementDefinition\", \"display\": \"ElementDefinition\", \"definition\": \"ElementDefinition Type: Captures constraints on each element within the resource, profile, or extension.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"MarketingStatus\", \"display\": \"MarketingStatus\", \"definition\": \"MarketingStatus Type: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ProductShelfLife\", \"display\": \"ProductShelfLife\", \"definition\": \"ProductShelfLife Type: The shelf-life and storage information for a medicinal product item or container can be described using this class.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Timing\", \"display\": \"Timing\", \"definition\": \"Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"CodeableConcept\", \"display\": \"CodeableConcept\", \"definition\": \"CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"CodeableReference\", \"display\": \"CodeableReference\", \"definition\": \"CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Coding\", \"display\": \"Coding\", \"definition\": \"Coding Type: A reference to a code defined by a terminology system.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ContactDetail\", \"display\": \"ContactDetail\", \"definition\": \"ContactDetail Type: Specifies contact information for a person or organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ContactPoint\", \"display\": \"ContactPoint\", \"definition\": \"ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Contributor\", \"display\": \"Contributor\", \"definition\": \"Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"DataRequirement\", \"display\": \"DataRequirement\", \"definition\": \"DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Expression\", \"display\": \"Expression\", \"definition\": \"Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ExtendedContactDetail\", \"display\": \"ExtendedContactDetail\", \"definition\": \"ExtendedContactDetail Type: Specifies contact information for a specific purpose over a period of time, might be handled/monitored by a specific named person or organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Extension\", \"display\": \"Extension\", \"definition\": \"Extension Type: Optional Extension Element - found in all resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"HumanName\", \"display\": \"HumanName\", \"definition\": \"HumanName Type: A name, normally of a human, that can be used for other living entities (e.g. animals but not organizations) that have been assigned names by a human and may need the use of name parts or the need for usage information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Identifier\", \"display\": \"Identifier\", \"definition\": \"Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Meta\", \"display\": \"Meta\", \"definition\": \"Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"MonetaryComponent\", \"display\": \"MonetaryComponent\", \"definition\": \"MonetaryComponent Type: Availability data for an {item}.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Money\", \"display\": \"Money\", \"definition\": \"Money Type: An amount of economic utility in some recognized currency.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Narrative\", \"display\": \"Narrative\", \"definition\": \"Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ParameterDefinition\", \"display\": \"ParameterDefinition\", \"definition\": \"ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Period\", \"display\": \"Period\", \"definition\": \"Period Type: A time period defined by a start and end date and optionally time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"PrimitiveType\", \"display\": \"PrimitiveType\", \"definition\": \"PrimitiveType Type: The base type for all re-useable types defined that have a simple property.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"base64Binary\", \"display\": \"base64Binary\", \"definition\": \"base64Binary Type: A stream of bytes\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"boolean\", \"display\": \"boolean\", \"definition\": \"boolean Type: Value of \\\"true\\\" or \\\"false\\\"\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"date\", \"display\": \"date\", \"definition\": \"date Type: A date or partial date (e.g. just year or year + month). There is no UTC offset. The format is a union of the schema types gYear, gYearMonth and date. Dates SHALL be valid dates.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"dateTime\", \"display\": \"dateTime\", \"definition\": \"dateTime Type: A date, date-time or partial date (e.g. just year or year + month). If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored. Dates SHALL be valid dates.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"decimal\", \"display\": \"decimal\", \"definition\": \"decimal Type: A rational number with implicit precision\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"instant\", \"display\": \"instant\", \"definition\": \"instant Type: An instant in time - known at least to the second\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"integer\", \"display\": \"integer\", \"definition\": \"integer Type: A whole number\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"positiveInt\", \"display\": \"positiveInt\", \"definition\": \"positiveInt type: An integer with a value that is positive (e.g. \\u003e0)\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"unsignedInt\", \"display\": \"unsignedInt\", \"definition\": \"unsignedInt type: An integer with a value that is not negative (e.g. \\u003e\\u003d 0)\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"integer64\", \"display\": \"integer64\", \"definition\": \"integer64 Type: A very large whole number\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"string\", \"display\": \"string\", \"definition\": \"string Type: A sequence of Unicode characters\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"code\", \"display\": \"code\", \"definition\": \"code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"id\", \"display\": \"id\", \"definition\": \"id type: Any combination of letters, numerals, \\\"-\\\" and \\\".\\\", with a length limit of 64 characters. (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.) Ids are case-insensitive.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"markdown\", \"display\": \"markdown\", \"definition\": \"markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"time\", \"display\": \"time\", \"definition\": \"time Type: A time during the day, with no date specified\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"uri\", \"display\": \"uri\", \"definition\": \"uri Type: String of characters used to identify a name or a resource\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"canonical\", \"display\": \"canonical\", \"definition\": \"canonical type: A URI that is a reference to a canonical URL on a FHIR resource\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"oid\", \"display\": \"oid\", \"definition\": \"oid type: An OID represented as a URI\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"url\", \"display\": \"url\", \"definition\": \"url type: A URI that is a literal reference\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"uuid\", \"display\": \"uuid\", \"definition\": \"uuid type: A UUID, represented as a URI\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] } ] }, { \"code\": \"Quantity\", \"display\": \"Quantity\", \"definition\": \"Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}], \"concept\": [ { \"code\": \"Age\", \"display\": \"Age\", \"definition\": \"Age Type: A duration of time during which an organism (or a process) has existed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Count\", \"display\": \"Count\", \"definition\": \"Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Distance\", \"display\": \"Distance\", \"definition\": \"Distance Type: A length - a value with a unit that is a physical distance.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Duration\", \"display\": \"Duration\", \"definition\": \"Duration Type: A length of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"Range\", \"display\": \"Range\", \"definition\": \"Range Type: A set of ordered Quantities defined by a low and high limit.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Ratio\", \"display\": \"Ratio\", \"definition\": \"Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"RatioRange\", \"display\": \"RatioRange\", \"definition\": \"RatioRange Type: A range of ratios expressed as a low and high numerator and a denominator.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { 'code': 'Ref', 'display': 'Ref', \"definition\": \"Reference Type: A reference from one resource to another.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"RelatedArtifact\", \"display\": \"RelatedArtifact\", \"definition\": \"RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"SampledData\", \"display\": \"SampledData\", \"definition\": \"Timing Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Signature\", \"display\": \"Signature\", \"definition\": \"Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"TriggerDefinition\", \"display\": \"TriggerDefinition\", \"definition\": \"TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"UsageContext\", \"display\": \"UsageContext\", \"definition\": \"UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"VirtualServiceDetail\", \"display\": \"VirtualServiceDetail\", \"definition\": \"VirtualServiceDetail Type: Virtual Service Contact Details.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"xhtml\", \"display\": \"xhtml\", \"definition\": \"xhtml Type definition\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"Resource\", \"display\": \"Resource\", \"definition\": \"This is the base resource type for everything.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Binary\", \"display\": \"Binary\", \"definition\": \"A resource that represents the data of a single raw artifact as digital content accessible in its native format. A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Bundle\", \"display\": \"Bundle\", \"definition\": \"A container for a collection of resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DomainResource\", \"display\": \"DomainResource\", \"definition\": \"A resource that includes narrative, extensions, and contained resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Account\", \"display\": \"Account\", \"definition\": \"A financial tool for tracking value accrued for a particular purpose. In the healthcare field, used to track charges for a patient, cost centers, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ActivityDefinition\", \"display\": \"ActivityDefinition\", \"definition\": \"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ActorDefinition\", \"display\": \"ActorDefinition\", \"definition\": \"The ActorDefinition resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AdministrableProductDefinition\", \"display\": \"AdministrableProductDefinition\", \"definition\": \"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AdverseEvent\", \"display\": \"AdverseEvent\", \"definition\": \"An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research participant. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical research trial management. Adverse events can be reported by healthcare providers, patients, caregivers or by medical products manufacturers. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AllergyIntolerance\", \"display\": \"AllergyIntolerance\", \"definition\": \"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Appointment\", \"display\": \"Appointment\", \"definition\": \"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AppointmentResponse\", \"display\": \"AppointmentResponse\", \"definition\": \"A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ArtifactAssessment\", \"display\": \"ArtifactAssessment\", \"definition\": \"This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AuditEvent\", \"display\": \"AuditEvent\", \"definition\": \"A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Basic\", \"display\": \"Basic\", \"definition\": \"Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don\\u0027t map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BiologicallyDerivedProduct\", \"display\": \"BiologicallyDerivedProduct\", \"definition\": \"A biological material originating from a biological entity intended to be transplanted or infused into another (possibly the same) biological entity.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BiologicallyDerivedProductDispense\", \"display\": \"BiologicallyDerivedProductDispense\", \"definition\": \"A record of dispensation of a biologically derived product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BodyStructure\", \"display\": \"BodyStructure\", \"definition\": \"Record details about an anatomical structure. This resource may be used when a coded concept does not provide the necessary detail needed for the use case.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CanonicalResource\", \"display\": \"CanonicalResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true}, {\"code\": \"interface\", \"valueBoolean\": true} ] }, { \"code\": \"CapabilityStatement\", \"display\": \"CapabilityStatement\", \"definition\": \"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CarePlan\", \"display\": \"CarePlan\", \"definition\": \"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CareTeam\", \"display\": \"CareTeam\", \"definition\": \"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ChargeItem\", \"display\": \"ChargeItem\", \"definition\": \"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ChargeItemDefinition\", \"display\": \"ChargeItemDefinition\", \"definition\": \"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Citation\", \"display\": \"Citation\", \"definition\": \"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Claim\", \"display\": \"Claim\", \"definition\": \"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClaimResponse\", \"display\": \"ClaimResponse\", \"definition\": \"This resource provides the adjudication details from the processing of a Claim resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClinicalImpression\", \"display\": \"ClinicalImpression\", \"definition\": \"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient\\u0027s condition. Assessments are often 1:1 with a clinical consultation / encounter, but this varies greatly depending on the clinical workflow. This resource is called \\\"ClinicalImpression\\\" rather than \\\"ClinicalAssessment\\\" to avoid confusion with the recording of assessment tools such as Apgar score.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClinicalUseDefinition\", \"display\": \"ClinicalUseDefinition\", \"definition\": \"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CodeSystem\", \"display\": \"CodeSystem\", \"definition\": \"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Communication\", \"display\": \"Communication\", \"definition\": \"A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CommunicationRequest\", \"display\": \"CommunicationRequest\", \"definition\": \"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CompartmentDefinition\", \"display\": \"CompartmentDefinition\", \"definition\": \"A compartment definition that defines how resources are accessed on a server.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Composition\", \"display\": \"Composition\", \"definition\": \"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ConceptMap\", \"display\": \"ConceptMap\", \"definition\": \"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Condition\", \"display\": \"Condition\", \"definition\": \"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ConditionDefinition\", \"display\": \"ConditionDefinition\", \"definition\": \"A definition of a condition and information relevant to managing it.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Consent\", \"display\": \"Consent\", \"definition\": \"A record of a healthcare consumer’s choices or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Contract\", \"display\": \"Contract\", \"definition\": \"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Coverage\", \"display\": \"Coverage\", \"definition\": \"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CoverageEligibilityRequest\", \"display\": \"CoverageEligibilityRequest\", \"definition\": \"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CoverageEligibilityResponse\", \"display\": \"CoverageEligibilityResponse\", \"definition\": \"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DetectedIssue\", \"display\": \"DetectedIssue\", \"definition\": \"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, gaps in care, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Device\", \"display\": \"Device\", \"definition\": \"This resource describes the properties (regulated, has real time clock, etc.), adminstrative (manufacturer name, model number, serial number, firmware, etc.), and type (knee replacement, blood pressure cuff, MRI, etc.) of a physical unit (these values do not change much within a given module, for example the serail number, manufacturer name, and model number). An actual unit may consist of several modules in a distinct hierarchy and these are represented by multiple Device resources and bound through the \\u0027parent\\u0027 element.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceAssociation\", \"display\": \"DeviceAssociation\", \"definition\": \"A record of association of a device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceDefinition\", \"display\": \"DeviceDefinition\", \"definition\": \"This is a specialized resource that defines the characteristics and capabilities of a device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceDispense\", \"display\": \"DeviceDispense\", \"definition\": \"Indicates that a device is to be or has been dispensed for a named person/patient. This includes a description of the product (supply) provided and the instructions for using the device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceMetric\", \"display\": \"DeviceMetric\", \"definition\": \"Describes a measurement, calculation or setting capability of a device. The DeviceMetric resource is derived from the ISO/IEEE 11073-10201 Domain Information Model standard, but is more widely applicable. \", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceRequest\", \"display\": \"DeviceRequest\", \"definition\": \"Represents a request a device to be provided to a specific patient. The device may be an implantable device to be subsequently implanted, or an external assistive device, such as a walker, to be delivered and subsequently be used.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceUsage\", \"display\": \"DeviceUsage\", \"definition\": \"A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DiagnosticReport\", \"display\": \"DiagnosticReport\", \"definition\": \"The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DocumentReference\", \"display\": \"DocumentReference\", \"definition\": \"A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this “document” encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare. The DocumentReference resource provides metadata about the document so that the document can be discovered and managed. The actual content may be inline base64 encoded data or provided by direct reference.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Encounter\", \"display\": \"Encounter\", \"definition\": \"An interaction between healthcare provider(s), and/or patient(s) for the purpose of providing healthcare service(s) or assessing the health status of patient(s).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EncounterHistory\", \"display\": \"EncounterHistory\", \"definition\": \"A record of significant events/milestones key data throughout the history of an Encounter\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Endpoint\", \"display\": \"Endpoint\", \"definition\": \"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EnrollmentRequest\", \"display\": \"EnrollmentRequest\", \"definition\": \"This resource provides the insurance enrollment details to the insurer regarding a specified coverage.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EnrollmentResponse\", \"display\": \"EnrollmentResponse\", \"definition\": \"This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EpisodeOfCare\", \"display\": \"EpisodeOfCare\", \"definition\": \"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EventDefinition\", \"display\": \"EventDefinition\", \"definition\": \"The EventDefinition resource provides a reusable description of when a particular event can occur.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Evidence\", \"display\": \"Evidence\", \"definition\": \"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EvidenceReport\", \"display\": \"EvidenceReport\", \"definition\": \"The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EvidenceVariable\", \"display\": \"EvidenceVariable\", \"definition\": \"The EvidenceVariable resource describes an element that knowledge (Evidence) is about.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ExampleScenario\", \"display\": \"ExampleScenario\", \"definition\": \"A walkthrough of a workflow showing the interaction between systems and the instances shared, possibly including the evolution of instances over time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ExplanationOfBenefit\", \"display\": \"ExplanationOfBenefit\", \"definition\": \"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"FamilyMemberHistory\", \"display\": \"FamilyMemberHistory\", \"definition\": \"Significant health conditions for a person related to the patient relevant in the context of care for the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Flag\", \"display\": \"Flag\", \"definition\": \"Prospective warnings of potential issues when providing care to the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"FormularyItem\", \"display\": \"FormularyItem\", \"definition\": \"This resource describes a product or service that is available through a program and includes the conditions and constraints of availability. All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GenomicStudy\", \"display\": \"GenomicStudy\", \"definition\": \"A set of analyses performed to analyze and generate genomic data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Goal\", \"display\": \"Goal\", \"definition\": \"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GraphDefinition\", \"display\": \"GraphDefinition\", \"definition\": \"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Group\", \"display\": \"Group\", \"definition\": \"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\\u0027t an Organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GuidanceResponse\", \"display\": \"GuidanceResponse\", \"definition\": \"A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"HealthcareService\", \"display\": \"HealthcareService\", \"definition\": \"The details of a healthcare service available at a location or in a catalog. In the case where there is a hierarchy of services (for example, Lab -\\u003e Pathology -\\u003e Wound Cultures), this can be represented using a set of linked HealthcareServices.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImagingSelection\", \"display\": \"ImagingSelection\", \"definition\": \"A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImagingStudy\", \"display\": \"ImagingStudy\", \"definition\": \"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context. A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Immunization\", \"display\": \"Immunization\", \"definition\": \"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImmunizationEvaluation\", \"display\": \"ImmunizationEvaluation\", \"definition\": \"Describes a comparison of an immunization event against published recommendations to determine if the administration is \\\"valid\\\" in relation to those recommendations.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImmunizationRecommendation\", \"display\": \"ImmunizationRecommendation\", \"definition\": \"A patient\\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImplementationGuide\", \"display\": \"ImplementationGuide\", \"definition\": \"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Ingredient\", \"display\": \"Ingredient\", \"definition\": \"An ingredient of a manufactured item or pharmaceutical product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InsurancePlan\", \"display\": \"InsurancePlan\", \"definition\": \"Details of a Health Insurance product/plan provided by an organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InventoryItem\", \"display\": \"InventoryItem\", \"definition\": \"functional description of an inventory item used in inventory and supply-related workflows.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InventoryReport\", \"display\": \"InventoryReport\", \"definition\": \"A report of inventory or stock items.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Invoice\", \"display\": \"Invoice\", \"definition\": \"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Library\", \"display\": \"Library\", \"definition\": \"The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Linkage\", \"display\": \"Linkage\", \"definition\": \"Identifies two or more records (resource instances) that refer to the same real-world \\\"occurrence\\\".\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"List\", \"display\": \"List\", \"definition\": \"A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Location\", \"display\": \"Location\", \"definition\": \"Details and position information for a place where services are provided and resources and participants may be stored, found, contained, or accommodated.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ManufacturedItemDefinition\", \"display\": \"ManufacturedItemDefinition\", \"definition\": \"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Measure\", \"display\": \"Measure\", \"definition\": \"The Measure resource provides the definition of a quality measure.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MeasureReport\", \"display\": \"MeasureReport\", \"definition\": \"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Medication\", \"display\": \"Medication\", \"definition\": \"This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationAdministration\", \"display\": \"MedicationAdministration\", \"definition\": \"Describes the event of a patient consuming or otherwise being administered a medication. This may be as simple as swallowing a tablet or it may be a long running infusion. Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner. This event can also be used to record waste using a status of not-done and the appropriate statusReason.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationDispense\", \"display\": \"MedicationDispense\", \"definition\": \"Indicates that a medication product is to be or has been dispensed for a named person/patient. This includes a description of the medication product (supply) provided and the instructions for administering the medication. The medication dispense is the result of a pharmacy system responding to a medication order.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationKnowledge\", \"display\": \"MedicationKnowledge\", \"definition\": \"Information about a medication that is used to support knowledge.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationRequest\", \"display\": \"MedicationRequest\", \"definition\": \"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\\"MedicationRequest\\\" rather than \\\"MedicationPrescription\\\" or \\\"MedicationOrder\\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationStatement\", \"display\": \"MedicationStatement\", \"definition\": \"A record of a medication that is being consumed by a patient. A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay. The medication information may come from sources such as the patient\\u0027s memory, from a prescription bottle, or from a list of medications the patient, clinician or other party maintains. \\n\\nThe primary difference between a medicationstatement and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication. A medicationstatement is often, if not always, less specific. There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise. As stated earlier, the Medication Statement information may come from the patient\\u0027s memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains. Medication administration is more formal and is not missing detailed information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicinalProductDefinition\", \"display\": \"MedicinalProductDefinition\", \"definition\": \"Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs, to support prescribing, adverse events management etc.).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MessageDefinition\", \"display\": \"MessageDefinition\", \"definition\": \"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MessageHeader\", \"display\": \"MessageHeader\", \"definition\": \"The header for a message exchange that is either requesting or responding to an action. The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MetadataResource\", \"display\": \"MetadataResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true}, {\"code\": \"interface\", \"valueBoolean\": true} ] }, { \"code\": \"MolecularSequence\", \"display\": \"MolecularSequence\", \"definition\": \"Representation of a molecular sequence.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NamingSystem\", \"display\": \"NamingSystem\", \"definition\": \"A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc. Represents a \\\"System\\\" used within the Identifier and Coding data types.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionIntake\", \"display\": \"NutritionIntake\", \"definition\": \"A record of food or fluid that is being consumed by a patient. A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed. The consumption information may come from sources such as the patient\\u0027s memory, from a nutrition label, or from a clinician documenting observed intake.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionOrder\", \"display\": \"NutritionOrder\", \"definition\": \"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionProduct\", \"display\": \"NutritionProduct\", \"definition\": \"A food or supplement that is consumed by patients.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Observation\", \"display\": \"Observation\", \"definition\": \"Measurements and simple assertions made about a patient, device or other subject.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ObservationDefinition\", \"display\": \"ObservationDefinition\", \"definition\": \"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OperationDefinition\", \"display\": \"OperationDefinition\", \"definition\": \"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OperationOutcome\", \"display\": \"OperationOutcome\", \"definition\": \"A collection of error, warning, or information messages that result from a system action.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Organization\", \"display\": \"Organization\", \"definition\": \"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OrganizationAffiliation\", \"display\": \"OrganizationAffiliation\", \"definition\": \"Defines an affiliation/assotiation/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PackagedProductDefinition\", \"display\": \"PackagedProductDefinition\", \"definition\": \"A medically related item or items, in a container or package.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Patient\", \"display\": \"Patient\", \"definition\": \"Demographics and other administrative information about an individual or animal receiving care or other health-related services.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PaymentNotice\", \"display\": \"PaymentNotice\", \"definition\": \"This resource provides the status of the payment for goods and services rendered, and the request and response resource references.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PaymentReconciliation\", \"display\": \"PaymentReconciliation\", \"definition\": \"This resource provides the details including amount of a payment and allocates the payment items being paid.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Permission\", \"display\": \"Permission\", \"definition\": \"Permission resource holds access rules for a given data and context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Person\", \"display\": \"Person\", \"definition\": \"Demographics and administrative information about a person independent of a specific health-related context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PlanDefinition\", \"display\": \"PlanDefinition\", \"definition\": \"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Practitioner\", \"display\": \"Practitioner\", \"definition\": \"A person who is directly or indirectly involved in the provisioning of healthcare or related services.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PractitionerRole\", \"display\": \"PractitionerRole\", \"definition\": \"A specific set of Roles/Locations/specialties/services that a practitioner may perform, or has performed at an organization during a period of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Procedure\", \"display\": \"Procedure\", \"definition\": \"An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy. This can be a quality or safety inspection for a location, organization, or device. This can be an accreditation procedure on a practitioner for licensing.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Provenance\", \"display\": \"Provenance\", \"definition\": \"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Questionnaire\", \"display\": \"Questionnaire\", \"definition\": \"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"QuestionnaireResponse\", \"display\": \"QuestionnaireResponse\", \"definition\": \"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RegulatedAuthorization\", \"display\": \"RegulatedAuthorization\", \"definition\": \"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RelatedPerson\", \"display\": \"RelatedPerson\", \"definition\": \"Information about a person that is involved in a patient\\u0027s health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RequestOrchestration\", \"display\": \"RequestOrchestration\", \"definition\": \"A set of related requests that can be used to capture intended activities that have inter-dependencies such as \\\"give this medication after that one\\\".\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Requirements\", \"display\": \"Requirements\", \"definition\": \"The Requirements resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ResearchStudy\", \"display\": \"ResearchStudy\", \"definition\": \"A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ResearchSubject\", \"display\": \"ResearchSubject\", \"definition\": \"A ResearchSubject is a participant or object which is the recipient of investigative activities in a research study.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RiskAssessment\", \"display\": \"RiskAssessment\", \"definition\": \"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Schedule\", \"display\": \"Schedule\", \"definition\": \"A container for slots of time that may be available for booking appointments.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SearchParameter\", \"display\": \"SearchParameter\", \"definition\": \"A search parameter that defines a named search item that can be used to search/filter on a resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ServiceRequest\", \"display\": \"ServiceRequest\", \"definition\": \"A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Slot\", \"display\": \"Slot\", \"definition\": \"A slot of time on a schedule that may be available for booking appointments.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Specimen\", \"display\": \"Specimen\", \"definition\": \"A sample to be used for analysis.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SpecimenDefinition\", \"display\": \"SpecimenDefinition\", \"definition\": \"A kind of specimen with associated set of requirements.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"StructureDefinition\", \"display\": \"StructureDefinition\", \"definition\": \"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"StructureMap\", \"display\": \"StructureMap\", \"definition\": \"A Map of relationships between 2 structures that can be used to transform data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Subscription\", \"display\": \"Subscription\", \"definition\": \"The subscription resource describes a particular client\\u0027s request to be notified about a SubscriptionTopic.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubscriptionStatus\", \"display\": \"SubscriptionStatus\", \"definition\": \"The SubscriptionStatus resource describes the state of a Subscription during notifications. It is not persisted.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubscriptionTopic\", \"display\": \"SubscriptionTopic\", \"definition\": \"Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Substance\", \"display\": \"Substance\", \"definition\": \"A homogeneous material with a definite composition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceDefinition\", \"display\": \"SubstanceDefinition\", \"definition\": \"The detailed description of a substance, typically at a level beyond what is used for prescribing.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceNucleicAcid\", \"display\": \"SubstanceNucleicAcid\", \"definition\": \"Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstancePolymer\", \"display\": \"SubstancePolymer\", \"definition\": \"Properties of a substance specific to it being a polymer.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceProtein\", \"display\": \"SubstanceProtein\", \"definition\": \"A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceReferenceInformation\", \"display\": \"SubstanceReferenceInformation\", \"definition\": \"Todo.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceSourceMaterial\", \"display\": \"SubstanceSourceMaterial\", \"definition\": \"Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SupplyDelivery\", \"display\": \"SupplyDelivery\", \"definition\": \"Record of delivery of what is supplied.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SupplyRequest\", \"display\": \"SupplyRequest\", \"definition\": \"A record of a non-patient specific request for a medication, substance, device, certain types of biologically derived product, and nutrition product used in the healthcare setting.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Task\", \"display\": \"Task\", \"definition\": \"A task to be performed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TerminologyCapabilities\", \"display\": \"TerminologyCapabilities\", \"definition\": \"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestPlan\", \"display\": \"TestPlan\", \"definition\": \"A plan for executing testing on an artifact or specifications\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestReport\", \"display\": \"TestReport\", \"definition\": \"A summary of information based on the results of executing a TestScript.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestScript\", \"display\": \"TestScript\", \"definition\": \"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Transport\", \"display\": \"Transport\", \"definition\": \"Record of transport.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ValueSet\", \"display\": \"ValueSet\", \"definition\": \"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"VerificationResult\", \"display\": \"VerificationResult\", \"definition\": \"Describes validation requirements, source(s), status and dates for one or more elements.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"VisionPrescription\", \"display\": \"VisionPrescription\", \"definition\": \"An authorization for the provision of glasses and/or contact lenses to a patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] } ] }, { \"code\": \"Parameters\", \"display\": \"Parameters\", \"definition\": \"This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment). It is not persisted or allowed to be referenced by other resources except as described in the definition of the Parameters resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] } ] } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "src/fhirtypes/CodeSystem-fhir-types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/code-systems.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FhirTypes",
          "type": {
            "text": "FhirType[]"
          },
          "deprecated": "true"
        },
        {
          "kind": "variable",
          "name": "FhirTypeChoices",
          "type": {
            "text": "Choice[]"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "src/fhirtypes/code-systems.ts"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypes",
          "declaration": {
            "name": "FhirTypes",
            "module": "src/fhirtypes/code-systems.ts"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypeChoices",
          "declaration": {
            "name": "FhirTypeChoices",
            "module": "src/fhirtypes/code-systems.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/codesystem.fhirtypes.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/generate-types.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./CodeSystem-fhir-types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./code-systems"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/BaseElement.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a base element in the FHIR data model. This is the class to extend when creating components.",
          "name": "BaseElement",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters."
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered."
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirPresentableElement",
            "module": "/src/internal/base/presentable/fhir-presentable-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "src/internal/BaseElement.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BaseElement"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./base/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./customization/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./errors/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resource/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/profile.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "profile",
          "return": {
            "type": {
              "text": "StructureDefinition<T>"
            }
          },
          "parameters": [
            {
              "name": "{\n                            type,\n                            base = new StructureDefinition<T>(type),\n                            constraints = [],\n                            props = []\n                           }",
              "type": {
                "text": "ProfileArgs<T>"
              }
            }
          ],
          "description": "DSL for creating FHIR profiles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "src/profiling/profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/profile.type.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/profileValidation.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/displayMode.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./displayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shell"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shoelace-styled-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./layout/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/shell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Shell",
          "members": [
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "display",
              "privacy": "protected",
              "default": "new ContextProvider(this, { context: displayConfigContext, initialValue: { source: 'shell', mode: DisplayMode.display, summaryonly: false, showerror: false, verbose: false, open: false, input: false } })"
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "createRenderRoot",
              "privacy": "protected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Shell",
          "declaration": {
            "name": "Shell",
            "module": "src/shell/shell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/shoelace-styled-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ShoelaceStyledElement",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ShoelaceStyledElement",
          "declaration": {
            "name": "ShoelaceStyledElement",
            "module": "src/shell/shoelace-styled-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/hostStyles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "hostStyles",
          "default": "css` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostStyles",
          "declaration": {
            "name": "hostStyles",
            "module": "src/styles/hostStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hostStyles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./textHostStyles"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/textHostStyles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textHostStyles",
          "type": {
            "text": "array"
          },
          "default": "[ css` :host { display: inline; } ::slotted(*) { user-select: text; } `, hostStyles ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textHostStyles",
          "declaration": {
            "name": "textHostStyles",
            "module": "src/styles/textHostStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/countNodes.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "countNodes",
          "parameters": [
            {
              "name": "jsonData",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "Count the number of nodes in a JSON structure"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "countNodes",
          "declaration": {
            "name": "countNodes",
            "module": "src/utilities/countNodes.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasAll.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAll",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAll",
          "declaration": {
            "name": "hasAll",
            "module": "src/utilities/hasAll.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasAllOrNone.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAllOrNone",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "unknown"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require\nto exist together.\n\nTODO: Move to some error handling package"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAllOrNone",
          "declaration": {
            "name": "hasAllOrNone",
            "module": "src/utilities/hasAllOrNone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasNone.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasNone",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "unknown"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasNone",
          "declaration": {
            "name": "hasNone",
            "module": "src/utilities/hasNone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasOnly.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasOnly",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              },
              "description": "the object to inspect"
            },
            {
              "name": "prop",
              "type": {
                "text": "string"
              },
              "description": "the property to check for"
            }
          ],
          "description": "Check if object has only one specific property defined. This is useful with some types that have no required\nproperties and require different display logic based on what is defined."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasOnly",
          "declaration": {
            "name": "hasOnly",
            "module": "src/utilities/hasOnly.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasSameAncestor.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasSameAncestor.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSameAncestor",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "child",
              "type": {
                "text": "HTMLElement | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSameAncestor",
          "declaration": {
            "name": "hasSameAncestor",
            "module": "src/utilities/hasSameAncestor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./countNodes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAll"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAllOrNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasOnly"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasSameAncestor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isBlank"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isWhole"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDisplayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./when"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/isBlank.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isBlank",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isBlank",
          "declaration": {
            "name": "isBlank",
            "module": "src/utilities/isBlank.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/isWhole.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isWholeNumber",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "num",
              "type": {
                "text": "string | number | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isWholeNumber",
          "declaration": {
            "name": "isWholeNumber",
            "module": "src/utilities/isWhole.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/toDisplayMode.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDisplayMode",
          "return": {
            "type": {
              "text": "DisplayMode"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "toDisplayOrStructure",
          "return": {
            "type": {
              "text": "DisplayMode"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDisplayMode",
          "declaration": {
            "name": "toDisplayMode",
            "module": "src/utilities/toDisplayMode.ts"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayOrStructure",
          "declaration": {
            "name": "toDisplayOrStructure",
            "module": "src/utilities/toDisplayMode.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/when.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "when",
          "return": {
            "type": {
              "text": "THEN"
            }
          },
          "parameters": [
            {
              "name": "target",
              "type": {
                "text": "WHEN"
              },
              "description": "The target to evaluate the evaluations against."
            },
            {
              "name": "evaluations",
              "type": {
                "text": "Array<Evaluation<WHEN, THEN>>"
              }
            }
          ],
          "description": "A function that passes a target value to an array of evaluating WHEN evaluations and returns the first corresponding\nTHEN\n\n```js\nconst year = 2022\n\nconst color = when(year,\n    [2022, () => 'green'],\n    [year => year > 2022, 'red'],\n    otherwise('blue')\n)\n\nconsole.log(color) // green\n\n```"
        },
        {
          "kind": "function",
          "name": "otherwise",
          "parameters": [
            {
              "name": "t"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "when",
          "declaration": {
            "name": "when",
            "module": "src/utilities/when.ts"
          }
        },
        {
          "kind": "js",
          "name": "otherwise",
          "declaration": {
            "name": "otherwise",
            "module": "src/utilities/when.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/ValueSet.data.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isLoadableStore",
          "return": {
            "type": {
              "text": "source is LoadableStore"
            }
          },
          "parameters": [
            {
              "name": "source",
              "type": {
                "text": "ValueSetSource | LoadableStore"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResolutionError",
          "return": {
            "type": {
              "text": "origin is ResolutionError"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "ValueSetData | ResolutionError"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResource",
          "return": {
            "type": {
              "text": "origin is ResourceData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isValueSet",
          "return": {
            "type": {
              "text": "origin is ValueSetData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBundle",
          "return": {
            "type": {
              "text": "origin is BundleData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isCodeSystem",
          "return": {
            "type": {
              "text": "origin is CodeSystemData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isLoadableStore",
          "declaration": {
            "name": "isLoadableStore",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isResolutionError",
          "declaration": {
            "name": "isResolutionError",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isResource",
          "declaration": {
            "name": "isResource",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isValueSet",
          "declaration": {
            "name": "isValueSet",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isBundle",
          "declaration": {
            "name": "isBundle",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isCodeSystem",
          "declaration": {
            "name": "isCodeSystem",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/ValueSets.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValueSets",
          "members": [
            {
              "kind": "field",
              "name": "processor",
              "type": {
                "text": "ValueSetProcessor"
              },
              "privacy": "private",
              "default": "new ValueSetProcessor(fsSource)"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ValueSetStore"
              },
              "privacy": "private",
              "default": "new FSStore(target)"
            },
            {
              "kind": "method",
              "name": "processAll",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "process",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetsFactory",
          "members": [
            {
              "kind": "method",
              "name": "fs",
              "static": true,
              "return": {
                "type": {
                  "text": "ValueSets"
                }
              },
              "parameters": [
                {
                  "name": "source",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "regex",
                  "type": {
                    "text": "RegExp | undefined"
                  }
                },
                {
                  "name": "skipUrl",
                  "default": "() => false",
                  "type": {
                    "text": "(url: string) => boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "singleSource",
              "static": true,
              "return": {
                "type": {
                  "text": "ValueSets"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "skipUrl",
                  "default": "() => false",
                  "type": {
                    "text": "(url: string) => boolean"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValueSets",
          "declaration": {
            "name": "ValueSets",
            "module": "src/valuesets/ValueSets.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetsFactory",
          "declaration": {
            "name": "ValueSetsFactory",
            "module": "src/valuesets/ValueSets.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSet.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSets"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./processor/ValueSetProcessor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FSSource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/Fetch"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FetchError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/LogFetchRequest"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveBundle"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveCodeSystem"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveValueSet"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./store/FSStore"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/toolkit/custom.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: path, component: 'fhir-shell', subcomponents: { 'fhir-medication': 'fhir-medication' }, argTypes: {}, render: ({ data }: ShellArgs) => html` <!-- Theming change --> <style > :root { --sl-color-primary-700: var(--sl-color-purple-700); } </style > <fhir-shell > <fhir-medication .data=${data} override-template=\"med\"> <template id=\"med\"> <style > h4 { color: var(--sl-color-primary-700); display: flex; align-items: center; column-gap: 0.5rem } .footer { color: var(--sl-color-primary-700) } sl-icon { font-size: 1.5rem; color: var(--sl-color-primary-700) } </style > <h3 >Medication Card</h3 > <sl-card class=\"card-header\"> <h4 slot=\"header\"> <sl-icon name=\"capsule-pill\"></sl-icon > <fhir-primitive value-path=\"$.code.coding[0].display\"></fhir-primitive > </h4 > <fhir-codeable-concept key=\"dose\" data-path=\"$.doseForm\" mode=\"display\"></fhir-codeable-concept > <fhir-primitive key=\"lot\" value-path=\"$.batch.lotNumber\" mode=\"display\"></fhir-primitive > <div class='footer' slot=\"footer\"> <custom-lit-element label=\"manufacturer\" data-path=\"$.contained[0].name\"></custom-lit-element > <custom-element ></custom-element > </div > </sl-card > </template > </fhir-medication > </fhir-shell > ` }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/toolkit/custom.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "stories/toolkit/custom.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/component/componentTestingUtils.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "BeaconAssert",
          "type": {
            "text": "object"
          },
          "default": "{ hasLabelsAndValues: { for: { quantity: { whenSimple: function simple( quantity: Quantity, label: string, { id, variation, value, unit, system, code }: QuantitySimple ) { expect(quantity.queryShadow<PrimitiveLabel[]>({ select: 'label', expect: 7 })[0]).toHaveTextContent(label) const primitives = quantity.queryShadow<Primitive[]>({ select: 'fhir-primitive', expect: 6 }) testPrimitive(primitives[0], { key: 'id', value: id }) testPrimitive(primitives[1], { key: 'variation', value: variation }) testPrimitive(primitives[2], { key: 'value', value: value }) testPrimitive(primitives[3], { key: 'unit', value: unit }) testPrimitive(primitives[4], { key: 'system', value: system }) testPrimitive(primitives[5], { key: 'code', value: code }) } } } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconAssert",
          "declaration": {
            "name": "BeaconAssert",
            "module": "tests/component/componentTestingUtils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/component/testPrimitive.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "testPrimitive",
          "parameters": [
            {
              "name": "p",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "prop",
              "type": {
                "text": "{ key: string, value: string | null | undefined }"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "testPrimitive",
          "declaration": {
            "name": "testPrimitive",
            "module": "tests/component/testPrimitive.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/lit/lit-vitest-fixture.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents an error that is thrown when the current state is invalid or unexpected.",
          "name": "IllegalStateError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'IllegalStateError'"
            }
          ],
          "superclass": {
            "name": "Error",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        },
        {
          "kind": "variable",
          "name": "emptyLitShadow",
          "default": "/^(?:<!--[\\s\\S]*?-->|\\s)*$/"
        },
        {
          "kind": "variable",
          "name": "emptySlotLitShadow",
          "default": "/^<!---->\\n\\s+<slot><\\/slot>$/"
        },
        {
          "kind": "function",
          "name": "fixture",
          "return": {
            "type": {
              "text": "Promise<T[]>"
            }
          },
          "parameters": [
            {
              "name": "template",
              "type": {
                "text": "TemplateResult"
              },
              "description": "The template to be rendered."
            },
            {
              "name": "tagname",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type"
            }
          ],
          "description": "Asynchronously renders the provided template within a div element and returns an array of elements that extend\nLitElement for testing purposes. This is designed to work with Vitest in browser testing."
        },
        {
          "kind": "function",
          "name": "fixtureCleanUp",
          "description": "Cleans up the fixture by removing all elements.",
          "return": {
            "type": {
              "text": "void"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IllegalStateError",
          "declaration": {
            "name": "IllegalStateError",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        },
        {
          "kind": "js",
          "name": "emptyLitShadow",
          "declaration": {
            "name": "emptyLitShadow",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        },
        {
          "kind": "js",
          "name": "emptySlotLitShadow",
          "declaration": {
            "name": "emptySlotLitShadow",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        },
        {
          "kind": "js",
          "name": "fixture",
          "declaration": {
            "name": "fixture",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        },
        {
          "kind": "js",
          "name": "fixtureCleanUp",
          "declaration": {
            "name": "fixtureCleanUp",
            "module": "tests/lit/lit-vitest-fixture.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/shadowDomUtils/get-slot-content.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "getSlotContent",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "slot",
              "type": {
                "text": "HTMLSlotElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getSlotContent",
          "declaration": {
            "name": "getSlotContent",
            "module": "tests/shadowDomUtils/get-slot-content.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/shadowDomUtils/query-shadow.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "queryShadow",
          "return": {
            "type": {
              "text": "E"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "LitElement"
              }
            },
            {
              "name": "tag",
              "type": {
                "text": "HtmlTags | string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "queryShadow",
          "declaration": {
            "name": "queryShadow",
            "module": "tests/shadowDomUtils/query-shadow.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/shadowDomUtils/query-slot.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "querySlot",
          "return": {
            "type": {
              "text": "Element[]"
            }
          },
          "parameters": [
            {
              "name": "shadowedElement",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The element with a shadow DOM."
            },
            {
              "name": "slotName",
              "type": {
                "text": "string"
              },
              "description": "The name of the slot to query for."
            }
          ],
          "description": "Queries for elements assigned to a named slot within a shadow DOM."
        },
        {
          "kind": "function",
          "name": "queryDefaultSlot",
          "return": {
            "type": {
              "text": "Node[]"
            }
          },
          "parameters": [
            {
              "name": "shadowedElement",
              "type": {
                "text": "HTMLElement"
              },
              "description": "The shadowed element to query."
            }
          ],
          "description": "Queries for the nodes assigned to the default slot of a shadow DOM element."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "querySlot",
          "declaration": {
            "name": "querySlot",
            "module": "tests/shadowDomUtils/query-slot.ts"
          }
        },
        {
          "kind": "js",
          "name": "queryDefaultSlot",
          "declaration": {
            "name": "queryDefaultSlot",
            "module": "tests/shadowDomUtils/query-slot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "tests/shadowDomUtils/shadowDomUtils.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hostOf",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "el",
              "type": {
                "text": "HTMLElement"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostOf",
          "declaration": {
            "name": "hostOf",
            "module": "tests/shadowDomUtils/shadowDomUtils.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "demo-code/customisation/custom-components/custom-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Simple Component that doesn't implement LitElement reactive elements",
          "name": "MyCustomElement",
          "members": [
            {
              "kind": "method",
              "name": "render",
              "description": "The render method is called when data resolved with `data-path` attribute is resolved and attached to the `this.value` field.\n\nTODO: this example shouldn't depend on the Lit's html template.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "description": "attribute update handling",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "default": "dataPath",
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirContextElement",
            "module": "/src/internal"
          },
          "tagName": "custom-element",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "custom-element",
          "declaration": {
            "name": "MyCustomElement",
            "module": "demo-code/customisation/custom-components/custom-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "demo-code/customisation/custom-components/custom-lit-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Custom Lit element example",
          "name": "CustomLitElement",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "Custom display label attribute"
            },
            {
              "kind": "method",
              "name": "render",
              "description": "Override this method to render something useful after the context value has been retrieved",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            },
            {
              "kind": "method",
              "name": "createRenderRoot",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "description": "attribute update handling",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "default": "dataPath",
              "inheritedFrom": {
                "name": "FhirContextElement",
                "module": "dist/src/internal/customization/fhir-context-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirContextElement",
            "module": "/src/internal/customization/fhir-context-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CustomLitElement",
          "declaration": {
            "name": "CustomLitElement",
            "module": "demo-code/customisation/custom-components/custom-lit-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/Color-F6OSRLHC-Fi-uM5xL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "rr"
        },
        {
          "kind": "variable",
          "name": "ur",
          "default": "rr"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ColorControl",
          "declaration": {
            "name": "rr",
            "module": "storybook-static/assets/Color-F6OSRLHC-Fi-uM5xL.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "ur",
            "module": "storybook-static/assets/Color-F6OSRLHC-Fi-uM5xL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/DocsRenderer-CFRXHY34-o9N4iHLL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "A",
          "type": {
            "text": "object"
          },
          "default": "{code:v,a:R,...d}"
        },
        {
          "kind": "variable",
          "name": "P",
          "default": "class{constructor(){this.render=async(e,t,r)=>{let o={...A,...t==null?void 0:t.components},u=f;return new Promise((c,h)=>{p(async()=>{const{MDXProvider:l}=await import(\"./index-DCk3hht1.js\");return{MDXProvider:l}},__vite__mapDeps([0,1,2,3,4,5]),import.meta.url).then(({MDXProvider:l})=>C(n.createElement(M,{showException:h,key:Math.random()},n.createElement(l,{components:o},n.createElement(u,{context:e,docsParameter:t}))),r)).then(()=>c())})},this.unmount=e=>{D(e)}}}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DocsRenderer",
          "declaration": {
            "name": "P",
            "module": "storybook-static/assets/DocsRenderer-CFRXHY34-o9N4iHLL.js"
          }
        },
        {
          "kind": "js",
          "name": "defaultComponents",
          "declaration": {
            "name": "A",
            "module": "storybook-static/assets/DocsRenderer-CFRXHY34-o9N4iHLL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/Resource-DP-8R2c8.js",
      "declarations": [
        {
          "kind": "function",
          "name": "p",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "j"
        },
        {
          "kind": "function",
          "name": "Ue",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "r"
        },
        {
          "kind": "variable",
          "name": "u"
        },
        {
          "kind": "function",
          "name": "k",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "function",
          "name": "X",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Ce",
          "members": [
            {
              "kind": "method",
              "name": "getById",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBySystem",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllSystemsAsChoices"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "t"
        },
        {
          "kind": "variable",
          "name": "l",
          "type": {
            "text": "number"
          },
          "default": "0"
        },
        {
          "kind": "variable",
          "name": "o"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "variable",
          "name": "A"
        },
        {
          "kind": "variable",
          "name": "w"
        },
        {
          "kind": "variable",
          "name": "C"
        },
        {
          "kind": "class",
          "description": "",
          "name": "L",
          "members": [
            {
              "kind": "method",
              "name": "mapForAll"
            },
            {
              "kind": "method",
              "name": "msgFor",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a",
                  "default": "\";\""
                }
              ]
            },
            {
              "kind": "method",
              "name": "sliceForFQK",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "{fqk:e,message:a}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rm",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rmAll"
            },
            {
              "kind": "method",
              "name": "inspectCode",
              "parameters": [
                {
                  "name": "{node:e,code:a,id:t}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "inspectCodeableConcept",
              "parameters": [
                {
                  "name": "{node:e,concept:a,bindingId:t}"
                }
              ]
            },
            {
              "kind": "method",
              "name": "all"
            },
            {
              "kind": "method",
              "name": "choices",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "allFor",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "code",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "h"
        },
        {
          "kind": "variable",
          "name": "m"
        },
        {
          "kind": "variable",
          "name": "v"
        },
        {
          "kind": "variable",
          "name": "F"
        },
        {
          "kind": "class",
          "description": "",
          "name": "D",
          "superclass": {
            "name": "It",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "variable",
          "name": "I"
        },
        {
          "kind": "function",
          "name": "ye",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "function",
          "name": "ke",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Ae",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "$t",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "re",
          "default": "Z` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        },
        {
          "kind": "variable",
          "name": "V",
          "default": "class extends le{constructor(){super(...arguments),this.data={},this.longest=0}willUpdate(i){super.willUpdate(i),i.has(\"data\")&&(this.longest=0,Object.entries(this.data).forEach(([e])=>{e.length>this.longest&&(this.longest=e.length)}))}render(){return O` <div> <ul >${$t(Object.entries(this.data),i=>O` <li ><span class=\"key\">${i[0]}</span > : <pre>${V.stringify(i[1])}</pre> </li>`)} </ul > </div> `}}"
        },
        {
          "kind": "function",
          "name": "ve",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e",
              "default": "b.display"
            },
            {
              "name": "a",
              "default": "!1"
            },
            {
              "name": "t",
              "default": "!1"
            },
            {
              "name": "l",
              "default": "!1"
            },
            {
              "name": "r",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "function",
          "name": "be",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e",
              "default": "\"none\""
            }
          ]
        },
        {
          "kind": "function",
          "name": "Zt",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ql"
        },
        {
          "kind": "variable",
          "name": "Bl"
        },
        {
          "kind": "variable",
          "name": "Ml"
        },
        {
          "kind": "variable",
          "name": "Hl",
          "type": {
            "text": "array"
          },
          "default": "[Z` :host { display: inline; } ::slotted(*) { user-select: text; } `,re]"
        },
        {
          "kind": "class",
          "description": "",
          "name": "s",
          "members": [
            {
              "kind": "field",
              "name": "version",
              "static": true,
              "readonly": true
            },
            {
              "kind": "method",
              "name": "toString",
              "static": true
            },
            {
              "kind": "method",
              "name": "addUnaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addBinaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addIdentifierChar",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "addLiteral",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeUnaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeAllUnaryOps",
              "static": true
            },
            {
              "kind": "method",
              "name": "removeIdentifierChar",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeBinaryOp",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeAllBinaryOps",
              "static": true
            },
            {
              "kind": "method",
              "name": "removeLiteral",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "removeAllLiterals",
              "static": true
            },
            {
              "kind": "field",
              "name": "char",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "code",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "parse",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getMaxKeyLen",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isDecimalDigit",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "binaryPrecedence",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isIdentifierStart",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isIdentifierPart",
              "static": true,
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "throwError",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "runHook",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                }
              ]
            },
            {
              "kind": "method",
              "name": "searchHook",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "gobbleSpaces"
            },
            {
              "kind": "method",
              "name": "parse"
            },
            {
              "kind": "method",
              "name": "gobbleExpressions",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "gobbleExpression"
            },
            {
              "kind": "method",
              "name": "gobbleBinaryOp"
            },
            {
              "kind": "method",
              "name": "gobbleBinaryExpression"
            },
            {
              "kind": "method",
              "name": "gobbleToken"
            },
            {
              "kind": "method",
              "name": "gobbleTokenProperty",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "gobbleNumericLiteral"
            },
            {
              "kind": "method",
              "name": "gobbleStringLiteral"
            },
            {
              "kind": "method",
              "name": "gobbleIdentifier"
            },
            {
              "kind": "method",
              "name": "gobbleArguments",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "gobbleGroup"
            },
            {
              "kind": "method",
              "name": "gobbleArray"
            },
            {
              "kind": "field",
              "name": "expr",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "index",
              "type": {
                "text": "number"
              },
              "default": "0"
            }
          ]
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "v"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "object"
          },
          "default": "{evalAst(i,e){switch(i.type){case\"BinaryExpression\":case\"LogicalExpression\":return g.evalBinaryExpression(i,e);case\"Compound\":return g.evalCompound(i,e);case\"ConditionalExpression\":return g.evalConditionalExpression(i,e);case\"Identifier\":return g.evalIdentifier(i,e);case\"Literal\":return g.evalLiteral(i,e);case\"MemberExpression\":return g.evalMemberExpression(i,e);case\"UnaryExpression\":return g.evalUnaryExpression(i,e);case\"ArrayExpression\":return g.evalArrayExpression(i,e);case\"CallExpression\":return g.evalCallExpression(i,e);case\"AssignmentExpression\":return g.evalAssignmentExpression(i,e);default:throw SyntaxError(\"Unexpected expression\",i)}},evalBinaryExpression(i,e){return{\"||\":(t,l)=>t||l(),\"&&\":(t,l)=>t&&l(),\"|\":(t,l)=>t|l(),\"^\":(t,l)=>t^l(),\"&\":(t,l)=>t&l(),\"==\":(t,l)=>t==l(),\"!=\":(t,l)=>t!=l(),\"===\":(t,l)=>t===l(),\"!==\":(t,l)=>t!==l(),\"<\":(t,l)=>t<l(),\">\":(t,l)=>t>l(),\"<=\":(t,l)=>t<=l(),\">=\":(t,l)=>t>=l(),\"<<\":(t,l)=>t<<l(),\">>\":(t,l)=>t>>l(),\">>>\":(t,l)=>t>>>l(),\"+\":(t,l)=>t+l(),\"-\":(t,l)=>t-l(),\"*\":(t,l)=>t*l(),\"/\":(t,l)=>t/l(),\"%\":(t,l)=>t%l()}[i.operator](g.evalAst(i.left,e),()=>g.evalAst(i.right,e))},evalCompound(i,e){let a;for(let t=0;t<i.body.length;t++){i.body[t].type===\"Identifier\"&&[\"var\",\"let\",\"const\"].includes(i.body[t].name)&&i.body[t+1]&&i.body[t+1].type===\"AssignmentExpression\"&&(t+=1);const l=i.body[t];a=g.evalAst(l,e)}return a},evalConditionalExpression(i,e){return g.evalAst(i.test,e)?g.evalAst(i.consequent,e):g.evalAst(i.alternate,e)},evalIdentifier(i,e){if(Object.hasOwn(e,i.name))return e[i.name];throw ReferenceError(`${i.name} is not defined`)},evalLiteral(i){return i.value},evalMemberExpression(i,e){const a=i.computed?g.evalAst(i.property):i.property.name,t=g.evalAst(i.object,e);if(t==null)throw TypeError(`Cannot read properties of ${t} (reading '${a}')`);if(!Object.hasOwn(t,a)&&ol.has(a))throw TypeError(`Cannot read properties of ${t} (reading '${a}')`);const l=t[a];return typeof l==\"function\"?l.bind(t):l},evalUnaryExpression(i,e){return{\"-\":t=>-g.evalAst(t,e),\"!\":t=>!g.evalAst(t,e),\"~\":t=>~g.evalAst(t,e),\"+\":t=>+g.evalAst(t,e),typeof:t=>typeof g.evalAst(t,e)}[i.operator](i.argument)},evalArrayExpression(i,e){return i.elements.map(a=>g.evalAst(a,e))},evalCallExpression(i,e){const a=i.arguments.map(l=>g.evalAst(l,e));return g.evalAst(i.callee,e)(...a)},evalAssignmentExpression(i,e){if(i.left.type!==\"Identifier\")throw SyntaxError(\"Invalid left-hand side in assignment\");const a=i.left.name,t=g.evalAst(i.right,e);return e[a]=t,e[a]}}"
        },
        {
          "kind": "function",
          "name": "h",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "E"
        },
        {
          "kind": "class",
          "description": "",
          "name": "ie",
          "members": [
            {
              "kind": "method",
              "name": "attachListeners"
            },
            {
              "kind": "method",
              "name": "hostConnected"
            },
            {
              "kind": "field",
              "name": "onContextRequest"
            },
            {
              "kind": "field",
              "name": "onProviderRequest"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "e"
            },
            {
              "kind": "field",
              "default": "(this.value=e)",
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "field",
              "name": "value",
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "setValue",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a",
                  "default": "!1"
                }
              ],
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "addCallback",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "clearCallbacks",
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "field",
              "name": "subscriptions",
              "default": "new Map",
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "field",
              "name": "updateObservers",
              "inheritedFrom": {
                "name": "cl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            }
          ],
          "superclass": {
            "name": "cl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "function",
          "name": "vl",
          "parameters": [
            {
              "name": "{context:i,subscribe:e}"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "El",
          "default": "gl"
        },
        {
          "kind": "variable",
          "name": "we",
          "default": "fl"
        },
        {
          "kind": "variable",
          "name": "ne",
          "default": "bl"
        },
        {
          "kind": "function",
          "name": "q",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e"
            },
            {
              "name": "a"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "R",
          "members": [
            {
              "kind": "field",
              "name": "mode"
            },
            {
              "kind": "field",
              "name": "showerror"
            },
            {
              "kind": "field",
              "name": "input"
            },
            {
              "kind": "field",
              "name": "verbose"
            },
            {
              "kind": "field",
              "name": "summaryonly"
            },
            {
              "kind": "field",
              "name": "open"
            },
            {
              "kind": "method",
              "name": "getDisplayConfig"
            },
            {
              "kind": "method",
              "name": "config"
            }
          ],
          "superclass": {
            "name": "le",
            "module": "/storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "function",
          "name": "B",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "e"
            },
            {
              "name": "a"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "H",
          "type": {
            "text": "array"
          },
          "default": "[O``]"
        },
        {
          "kind": "variable",
          "name": "N",
          "default": "de"
        },
        {
          "kind": "class",
          "description": "",
          "name": "Pl",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                }
              ]
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ]
            }
          ],
          "superclass": {
            "name": "N",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ue",
          "members": [
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "default": "e"
            }
          ],
          "superclass": {
            "name": "le",
            "module": "/storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "Rl",
          "members": [
            {
              "kind": "method",
              "name": "override"
            },
            {
              "kind": "method",
              "name": "renderOverride"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNoData"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "!0"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "a"
                },
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "Pl",
                "module": "storybook-static/assets/Resource-DP-8R2c8.js"
              }
            }
          ],
          "superclass": {
            "name": "Pl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "i",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "B",
          "declaration": {
            "name": "Pl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "C",
          "declaration": {
            "name": "Ce",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "H",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "F",
          "declaration": {
            "name": "ue",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "I",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "R",
          "declaration": {
            "name": "Rl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "V",
          "declaration": {
            "name": "L",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "Ae",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "ie",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "we",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "ye",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "re",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "Ml",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "A",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "Zt",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "ke",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "j",
          "declaration": {
            "name": "ql",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "k",
          "declaration": {
            "name": "Bl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "l",
          "declaration": {
            "name": "vl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "m",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "n",
          "declaration": {
            "name": "k",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "$t",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "p",
          "declaration": {
            "name": "El",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "q",
          "declaration": {
            "name": "be",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "X",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "s",
          "declaration": {
            "name": "Hl",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "t",
          "declaration": {
            "name": "Ue",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "v",
          "declaration": {
            "name": "ve",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        },
        {
          "kind": "js",
          "name": "w",
          "declaration": {
            "name": "ne",
            "module": "storybook-static/assets/Resource-DP-8R2c8.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/account-Dlr344xV.js",
      "declarations": [
        {
          "kind": "function",
          "name": "I",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "I",
            "module": "storybook-static/assets/account-Dlr344xV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/account.stories-C5Aug9UV.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "x"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/account.stories-C5Aug9UV.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "x",
            "module": "storybook-static/assets/account.stories-C5Aug9UV.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/account.stories-C5Aug9UV.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/address-Dyp5EcvL.js",
      "declarations": [
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/address-Dyp5EcvL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/address.stories-cEOzxinH.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,mode:\"structure\",showerror:!0,verbose:!0,open:!0,input:!1}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "g"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/address.stories-cEOzxinH.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/address.stories-cEOzxinH.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/address.stories-cEOzxinH.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/all.stories-N1rj9YiW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "We",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Components/Datatypes/Primitive Type/All\",component:\"fhir-primitive\"}"
        },
        {
          "kind": "variable",
          "name": "i",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"VGhpcyBpcyBCYXNlNjQgZW5jb2RlZCB2YWx1ZS4uLiBub3cgZGVjb2RlZA==\",errorValue:\"something else\",type:e.base64})}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"true\",errorValue:\"yes\",type:e.boolean,variant:\"checkbox\"})}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"http://hl7.org/fhir/ValueSet/my-valueset|0.8\",errorValue:\"not a uri\",type:e.canonical})}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>{const a=[{value:\"registered\",display:\"Registered\"},{value:\"preliminary\",display:\"Preliminary\"},{value:\"final\",display:\"Final\"},{value:\"amended\",display:\"Amended\"},{value:\"cancelled\",display:\"Cancelled\"},{value:\"entered-in-error\",display:\"Entered in Error\"},{value:\"unknown\",display:\"Unknown\"}];return r({value:\"registered\",errorValue:\"register\",type:e.code,choices:a})}}"
        },
        {
          "kind": "variable",
          "name": "c",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"2006-11-23\",errorValue:\"11/23/2006\",type:e.date})}"
        },
        {
          "kind": "variable",
          "name": "l",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"1971-12-31T23:59:59.999\",errorValue:\"23-NOV-2025 1:30\",type:e.datetime})}"
        },
        {
          "kind": "variable",
          "name": "u",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"1.0000000\",errorValue:\"one hundred\",type:e.decimal})}"
        },
        {
          "kind": "variable",
          "name": "d",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"Unicode text less than 1'048'576 char long 😎\",errorValue:{val:\"text\"},type:e.fhir_string})}"
        },
        {
          "kind": "variable",
          "name": "p",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"abc-123\",errorValue:\"abc-\"+\"123\".repeat(21),type:e.id})}"
        },
        {
          "kind": "variable",
          "name": "m",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"2015-12-31T23:28:17.239-05:00\",errorValue:\"1971-12-31T23:59:59.999\",type:e.instant})}"
        },
        {
          "kind": "variable",
          "name": "v",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:1234,errorValue:10.002,type:e.integer})}"
        },
        {
          "kind": "variable",
          "name": "y",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"https://example.com\",errorValue:\"foo/bar/baz\",type:e.link})}"
        },
        {
          "kind": "variable",
          "name": "P",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:`# title ## Section This is a sentence`,errorValue:\" \",type:e.markdown})}"
        },
        {
          "kind": "variable",
          "name": "b",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"foo bar\",errorValue:1234,type:e.none})}"
        },
        {
          "kind": "variable",
          "name": "f",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:1234,errorValue:-1234.5,type:e.positiveInt})}"
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"Patient\",errorValue:\"Professional\",type:e.string_reference,choices:[{value:\"Patient\",display:\"Patient\"},{value:\"Practitioner\",display:\"Practitioner\"},{value:\"Medication\",display:\"Medication\"},{value:\"Substances\",display:\"Substances\"}]})}"
        },
        {
          "kind": "variable",
          "name": "h",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"23:59:59\",errorValue:\"24:00:00\",type:e.time})}"
        },
        {
          "kind": "variable",
          "name": "V",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:123456,errorValue:\"+123456\",type:e.unsigned_int})}"
        },
        {
          "kind": "variable",
          "name": "S",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"urn:uuid:53fefa32-fcbb-4ff8-8a92-55ee120877b7\",errorValue:\"htpp://foo/bar baz-123\",type:e.uri})}"
        },
        {
          "kind": "variable",
          "name": "T",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"http://server/resource/53fefa32-fcbb-4ff8-8a92-55ee120877b7\",errorValue:\"foo/bar/baz-123\",type:e.url})}"
        },
        {
          "kind": "variable",
          "name": "$",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r({value:\"AdministrableProductDefinition\",errorValue:\"Aspirin\",type:e.uri_type,choices:[{value:\"Patient\",display:\"Patient\"},{value:\"Practitioner\",display:\"Practitioner\"},{value:\"Medication\",display:\"Medication\"},{value:\"Substances\",display:\"Substances\"}]})}"
        },
        {
          "kind": "variable",
          "name": "Ye",
          "type": {
            "text": "array"
          },
          "default": "[\"base64\",\"boolean\",\"canonical\",\"code\",\"date\",\"dateTime\",\"decimal\",\"fhir_string\",\"id\",\"instant\",\"integer\",\"link\",\"markdown\",\"none\",\"positiveInt\",\"stringReference\",\"time\",\"unsignedInt\",\"uri\",\"url\",\"uriType\"]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "__namedExportsOrder",
          "declaration": {
            "name": "Ye",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "base64",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "boolean",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "canonical",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "code",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "date",
          "declaration": {
            "name": "c",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "dateTime",
          "declaration": {
            "name": "l",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "decimal",
          "declaration": {
            "name": "u",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "We",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "fhir_string",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "id",
          "declaration": {
            "name": "p",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "instant",
          "declaration": {
            "name": "m",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "integer",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "link",
          "declaration": {
            "name": "y",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "markdown",
          "declaration": {
            "name": "P",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "none",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "positiveInt",
          "declaration": {
            "name": "f",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "stringReference",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "time",
          "declaration": {
            "name": "h",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "unsignedInt",
          "declaration": {
            "name": "V",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "uri",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "uriType",
          "declaration": {
            "name": "$",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        },
        {
          "kind": "js",
          "name": "url",
          "declaration": {
            "name": "T",
            "module": "storybook-static/assets/all.stories-N1rj9YiW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/annotation-BE4OMYAm.js",
      "declarations": [
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/annotation-BE4OMYAm.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/annotation.stories-TwBcsmQ8.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "S",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Components/Datatypes/Complex Type/Annotation\",subcomponents:{\"fhir-annotation\":\"fhir-annotation\"},...f(h=>l` <fhir-annotation .data=\"${h.data}\" summary></fhir-annotation > `)}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{authorReference:{reference:\"Patient/example\"},authorString:\"Jack Smith\",time:\"2022-02-08T10:18:14.034+10:00\",text:\"I don't think that this is true, or what I said, and it should be corrected\"},mode:\"display\",showerror:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "y"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/annotation.stories-TwBcsmQ8.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "y",
            "module": "storybook-static/assets/annotation.stories-TwBcsmQ8.js"
          }
        },
        {
          "kind": "js",
          "name": "V",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/annotation.stories-TwBcsmQ8.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/annotation.stories-TwBcsmQ8.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/appointment-bujJgyMo.js",
      "declarations": [
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "_",
            "module": "storybook-static/assets/appointment-bujJgyMo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/appointment.stories-BUAS-RbP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:m,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:g,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:m,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "w"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/appointment.stories-BUAS-RbP.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/appointment.stories-BUAS-RbP.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/appointment.stories-BUAS-RbP.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/appointment.stories-BUAS-RbP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/attachment-Cdx2kc6j.js",
      "declarations": [
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "e",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/attachment-Cdx2kc6j.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/attachment.stories-B5fXFzcB.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "A",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:c}}"
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n}}"
        },
        {
          "kind": "variable",
          "name": "M",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"structure\",showerror:!0,verbose:!0}}"
        },
        {
          "kind": "variable",
          "name": "D"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "G"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "A",
            "module": "storybook-static/assets/attachment.stories-B5fXFzcB.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "G",
            "module": "storybook-static/assets/attachment.stories-B5fXFzcB.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/attachment.stories-B5fXFzcB.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/attachment.stories-B5fXFzcB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/badge-group-Chq1v10B.js",
      "declarations": [
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "n",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/badge-group-Chq1v10B.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/badge-group.stories-SM62-M1H.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>u` <fhir-badge-group resource='Human Name' summary constraint required></fhir-badge-group> `}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>u` <fhir-badge-group resource='Human Name'></fhir-badge-group> `}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>u` <fhir-badge-group summary></fhir-badge-group> `}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>u` <fhir-badge-group constraint></fhir-badge-group> `}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>u` <fhir-badge-group required></fhir-badge-group> `}"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "B"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "H"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "B",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "H",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/badge-group.stories-SM62-M1H.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/bundle-BkzBgNhx.js",
      "declarations": [
        {
          "kind": "function",
          "name": "D",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "D",
            "module": "storybook-static/assets/bundle-BkzBgNhx.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/bundle.stories-B_4LDRjY.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:b,mode:\"display\",showerror:!1,verbose:!1,open:!1},render:h=>m` <fhir-bundle-everything .data=${h.data} ></fhir-bundle-everything>`}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "R"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/bundle.stories-B_4LDRjY.js"
          }
        },
        {
          "kind": "js",
          "name": "M",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/bundle.stories-B_4LDRjY.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/bundle.stories-B_4LDRjY.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/bundle.stories-B_4LDRjY.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/codeableConcept-BQkXl9qB.js",
      "declarations": [
        {
          "kind": "function",
          "name": "M",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/codeableConcept-BQkXl9qB.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/codeableConcept.stories-5UHVJ7vt.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{coding:[{system:\"http://hl7.org/fhir/sid/icd-10\",code:\"R51\"},{system:\"http://snomed.info/sct\",code:\"25064002\",display:\"Headache\",userSelected:\"true\"}],text:\"general headache\"},headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{coding:[{system:\"http://hl7.org/fhir/sid/icd-10\",code:\"R51\"},{system:\"http://snomed.info/sct\",code:\"25064002\",display:\"Headache\",userSelected:\"true\"}],text:\"general headache\"},mode:\"structure\",verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{coding:[{system:\"http://hl7.org/fhir/sid/ex-icd-10-procedures\",code:\"123000\"}]},mode:\"display\",showerror:!0,open:!0},render:e=>{const[s,r,a]=_(e.data,\"cs-icd-10-procedures\");return f` <fhir-shell .mode=${b(e.mode)} ?showerror=${e.showerror} ?verbose=${e.verbose} ?open=${e.open??!0} ?summaryonly=${e.summaryonly} ?input=${e.input} > <fhir-codeable-concept label=\"codeable concept with binding on 'cs-icd-10-procedures'\" key=\"procedure\" .data=${r} summary ?headless=${e.headless} .errors=${s.sliceForFQK({path:[{node:\"_root\"}]})} ></fhir-codeable-concept> </fhir-shell> `}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "default": "new S(r)"
        },
        {
          "kind": "variable",
          "name": "R"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/codeableConcept.stories-5UHVJ7vt.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/codeableConcept.stories-5UHVJ7vt.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/codeableConcept.stories-5UHVJ7vt.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/codeableConcept.stories-5UHVJ7vt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/codeableReference-DrK0ffJM.js",
      "declarations": [
        {
          "kind": "function",
          "name": "H",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "H",
            "module": "storybook-static/assets/codeableReference-DrK0ffJM.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/codeableReference.stories-BGBJ8Tmx.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "b",
          "type": {
            "text": "string"
          },
          "default": "\"components/Datatypes/Complex Type/Codeable Reference\""
        },
        {
          "kind": "variable",
          "name": "S",
          "type": {
            "text": "object"
          },
          "default": "{title:b,component:\"fhir-shell\",...f(l=>h` <fhir-codeable-reference .data=${l.data} summary headless></fhir-codeable-reference>`)}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:i,showerror:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:g,showerror:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:i,mode:\"structure\",verbose:!0,showerror:!0}}"
        },
        {
          "kind": "variable",
          "name": "_"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "H",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/codeableReference.stories-BGBJ8Tmx.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "_",
            "module": "storybook-static/assets/codeableReference.stories-BGBJ8Tmx.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/codeableReference.stories-BGBJ8Tmx.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/codeableReference.stories-BGBJ8Tmx.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/coding-Df18Aas6.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/coding-Df18Aas6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/coding.stories-DQSCE2kO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{system:\"http://hl7.org/fhir/sid/icd-10\",code:\"G44.1\",display:\"Vascular headache, not elsewhere classified\"},headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{system:\"http://hl7.org/fhir/sid/icd-10\",code:\"G44.1\"},headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{id:\"123-456\",extension:[],version:\"1.0\",system:\"hl7.org/fhir/sid/icd-10\",code:\"not a valid code\",display:\"Vascular headache, not elsewhere classified\"},mode:\"structure\",verbose:!1,showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "b"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/coding.stories-DQSCE2kO.js"
          }
        },
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/coding.stories-DQSCE2kO.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/coding.stories-DQSCE2kO.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/coding.stories-DQSCE2kO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/contact-point-b-ljHBLF.js",
      "declarations": [
        {
          "kind": "function",
          "name": "M",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/contact-point-b-ljHBLF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/contact-point.stories-Di6NKf0E.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "g"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/contact-point.stories-Di6NKf0E.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/contact-point.stories-Di6NKf0E.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/contact-point.stories-Di6NKf0E.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/context.stories-BgsCs6UL.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Toolkit/Primitive Elements/Context Element\"}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>n` <fhir-wrapper> <fhir-context text=\"some context\"></fhir-value> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "i",
          "type": {
            "text": "array"
          },
          "default": "[\"ContextElement\"]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContextElement",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/context.stories-BgsCs6UL.js"
          }
        },
        {
          "kind": "js",
          "name": "__namedExportsOrder",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/context.stories-BgsCs6UL.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/context.stories-BgsCs6UL.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/custom-CwnVIyeh.js",
      "declarations": [
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "n",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/custom-CwnVIyeh.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/custom.stories-7UqVnm_O.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "v",
          "members": [
            {
              "kind": "method",
              "name": "render"
            }
          ],
          "superclass": {
            "name": "h",
            "module": "/storybook-static/assets/Resource-DP-8R2c8.js"
          },
          "tagName": "custom-element",
          "customElement": true
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:k}}"
        },
        {
          "kind": "variable",
          "name": "R"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "custom-element",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/custom.stories-7UqVnm_O.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/custom.stories-7UqVnm_O.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/custom.stories-7UqVnm_O.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/directive-helpers-Ln5PApPe.js",
      "declarations": [
        {
          "kind": "function",
          "name": "p",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "$"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "s"
        },
        {
          "kind": "variable",
          "name": "d"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "p",
            "module": "storybook-static/assets/directive-helpers-Ln5PApPe.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/directive-helpers-Ln5PApPe.js"
          }
        },
        {
          "kind": "js",
          "name": "m",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/directive-helpers-Ln5PApPe.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/entry-preview-BOtmnIW2.js",
      "declarations": [
        {
          "kind": "function",
          "name": "T",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "M",
          "parameters": [
            {
              "name": "{storyFn:n,kind:o,name:t,showMain:i,showError:d,forceRemount:p}"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "object"
          },
          "default": "{renderer:\"web-components\"}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "parameters",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/entry-preview-BOtmnIW2.js"
          }
        },
        {
          "kind": "js",
          "name": "render",
          "declaration": {
            "name": "T",
            "module": "storybook-static/assets/entry-preview-BOtmnIW2.js"
          }
        },
        {
          "kind": "js",
          "name": "renderToCanvas",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/entry-preview-BOtmnIW2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/entry-preview-docs-AWhNjYGo.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "W",
          "type": {
            "text": "array"
          },
          "default": "[k]"
        },
        {
          "kind": "variable",
          "name": "q",
          "type": {
            "text": "object"
          },
          "default": "{docs:{extractArgTypes:I,extractComponentDescription:U,story:{inline:!0},source:{type:d.DYNAMIC,language:\"html\"}}}"
        },
        {
          "kind": "variable",
          "name": "H",
          "type": {
            "text": "array"
          },
          "default": "[w]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "argTypesEnhancers",
          "declaration": {
            "name": "H",
            "module": "storybook-static/assets/entry-preview-docs-AWhNjYGo.js"
          }
        },
        {
          "kind": "js",
          "name": "decorators",
          "declaration": {
            "name": "W",
            "module": "storybook-static/assets/entry-preview-docs-AWhNjYGo.js"
          }
        },
        {
          "kind": "js",
          "name": "parameters",
          "declaration": {
            "name": "q",
            "module": "storybook-static/assets/entry-preview-docs-AWhNjYGo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/error.stories-nr7nTTgh.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Toolkit/Primitive Elements/Error Element\"}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>m` <fhir-error text=\"Some Error\"></fhir-value> `}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "array"
          },
          "default": "[\"ErrorElement\"]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ErrorElement",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/error.stories-nr7nTTgh.js"
          }
        },
        {
          "kind": "js",
          "name": "__namedExportsOrder",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/error.stories-nr7nTTgh.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/error.stories-nr7nTTgh.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/home-2Xo7JR3Y.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "s",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/home-2Xo7JR3Y.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/human-name-BTuNB2CA.js",
      "declarations": [
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/human-name-BTuNB2CA.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/human-name.stories-46nUSwMP.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "S",
          "type": {
            "text": "string"
          },
          "default": "\"Components/Datatypes/Complex Type/Human Name\""
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:g,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,mode:\"structure\",showerror:!0,verbose:!0}}"
        },
        {
          "kind": "variable",
          "name": "D",
          "type": {
            "text": "array"
          },
          "default": "[\"Display\",\"Display2\",\"Structure\"]"
        },
        {
          "kind": "variable",
          "name": "b"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/human-name.stories-46nUSwMP.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/human-name.stories-46nUSwMP.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/human-name.stories-46nUSwMP.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/human-name.stories-46nUSwMP.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/identifier-CgK6xNzQ.js",
      "declarations": [
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "i",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/identifier-CgK6xNzQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/identifier.stories-SKAU2Zxv.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:h,mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:y,mode:\"structure\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "x"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "H",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/identifier.stories-SKAU2Zxv.js"
          }
        },
        {
          "kind": "js",
          "name": "P",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/identifier.stories-SKAU2Zxv.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "x",
            "module": "storybook-static/assets/identifier.stories-SKAU2Zxv.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/if-defined-DfKB2D9e.js",
      "declarations": [
        {
          "kind": "function",
          "name": "m",
          "parameters": [
            {
              "name": "o"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "m",
            "module": "storybook-static/assets/if-defined-DfKB2D9e.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/iframe-B1qpIiud.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "__vitePreload",
          "default": "function(t,r,o){let a=Promise.resolve();if(r&&r.length>0){const i=document.getElementsByTagName(\"link\"),u=document.querySelector(\"meta[property=csp-nonce]\"),l=(u==null?void 0:u.nonce)||(u==null?void 0:u.getAttribute(\"nonce\"));a=Promise.allSettled(r.map(c=>{if(c=assetsURL(c,o),c in seen)return;seen[c]=!0;const m=c.endsWith(\".css\"),d=m?'[rel=\"stylesheet\"]':\"\";if(!!o)for(let A=i.length-1;A>=0;A--){const S=i[A];if(S.href===c&&(!m||S.rel===\"stylesheet\"))return}else if(document.querySelector(`link[href=\"${c}\"]${d}`))return;const _=document.createElement(\"link\");if(_.rel=m?\"stylesheet\":scriptRel,m||(_.as=\"script\"),_.crossOrigin=\"\",_.href=c,l&&_.setAttribute(\"nonce\",l),document.head.appendChild(_),m)return new Promise((A,S)=>{_.addEventListener(\"load\",A),_.addEventListener(\"error\",()=>S(new Error(`Unable to preload CSS for ${c}`)))})}))}function s(i){const u=new Event(\"vite:preloadError\",{cancelable:!0});if(u.payload=i,window.dispatchEvent(u),!u.defaultPrevented)throw i}return a.then(i=>{for(const u of i||[])u.status===\"rejected\"&&s(u.reason);return t().catch(s)})}"
        },
        {
          "kind": "variable",
          "name": "_"
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "g"
            },
            {
              "name": "v"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "p"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "_",
          "declaration": {
            "name": "__vitePreload",
            "module": "storybook-static/assets/iframe-B1qpIiud.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/index-BGbAfZeU.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "variable",
          "name": "r"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "variable",
          "name": "g"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "function",
          "name": "_"
        },
        {
          "kind": "variable",
          "name": "A"
        },
        {
          "kind": "variable",
          "name": "R"
        },
        {
          "kind": "function",
          "name": "j",
          "parameters": [
            {
              "name": "N"
            }
          ]
        },
        {
          "kind": "function",
          "name": "q",
          "parameters": [
            {
              "name": "N"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "G",
          "type": {
            "text": "object"
          },
          "default": "{\"=\":\"=0\",\":\":\"=2\"}"
        },
        {
          "kind": "variable",
          "name": "Fe"
        },
        {
          "kind": "variable",
          "name": "u"
        },
        {
          "kind": "variable",
          "name": "D"
        },
        {
          "kind": "function",
          "name": "Pa",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "f2"
        },
        {
          "kind": "function",
          "name": "f"
        },
        {
          "kind": "function",
          "name": "VQ",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t",
              "default": "0"
            },
            {
              "name": "r",
              "default": "{}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "Kr",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "H"
        },
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "fe"
            }
          ]
        },
        {
          "kind": "function",
          "name": "G",
          "parameters": [
            {
              "name": "fe"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "S"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "m"
            },
            {
              "name": "g"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "M"
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "Y"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "Y"
            },
            {
              "name": "re"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "Y"
            }
          ]
        },
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "Y"
            },
            {
              "name": "re"
            }
          ]
        },
        {
          "kind": "function",
          "name": "q"
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "o"
            },
            {
              "name": "l"
            },
            {
              "name": "c"
            },
            {
              "name": "h"
            }
          ]
        },
        {
          "kind": "function",
          "name": "G",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "h",
          "default": "W"
        },
        {
          "kind": "variable",
          "name": "C"
        },
        {
          "kind": "variable",
          "name": "T"
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "V"
            },
            {
              "name": "$"
            }
          ]
        },
        {
          "kind": "function",
          "name": "h",
          "parameters": [
            {
              "name": "V"
            },
            {
              "name": "$"
            }
          ]
        },
        {
          "kind": "function",
          "name": "C",
          "parameters": [
            {
              "name": "V"
            },
            {
              "name": "$"
            },
            {
              "name": "U"
            }
          ]
        },
        {
          "kind": "function",
          "name": "T",
          "parameters": [
            {
              "name": "V"
            }
          ]
        },
        {
          "kind": "function",
          "name": "xO"
        },
        {
          "kind": "function",
          "name": "e"
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "m"
            },
            {
              "name": "g"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r"
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "f"
            },
            {
              "name": "m"
            },
            {
              "name": "g"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "f"
            },
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "x"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "x"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "S"
            },
            {
              "name": "_"
            },
            {
              "name": "F"
            }
          ]
        },
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "I"
            },
            {
              "name": "z"
            },
            {
              "name": "B"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "S"
            },
            {
              "name": "_"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "S"
            },
            {
              "name": "_"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "G",
          "parameters": [
            {
              "name": "ae"
            },
            {
              "name": "de"
            }
          ]
        },
        {
          "kind": "function",
          "name": "q",
          "parameters": [
            {
              "name": "J"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "A"
            },
            {
              "name": "k"
            },
            {
              "name": "R"
            },
            {
              "name": "I"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "A"
            },
            {
              "name": "k"
            },
            {
              "name": "R"
            },
            {
              "name": "I"
            },
            {
              "name": "z"
            },
            {
              "name": "B"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_"
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "B"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A",
          "parameters": [
            {
              "name": "B"
            },
            {
              "name": "O"
            },
            {
              "name": "j"
            }
          ]
        },
        {
          "kind": "function",
          "name": "R",
          "parameters": [
            {
              "name": "B"
            }
          ]
        },
        {
          "kind": "function",
          "name": "j"
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "F"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "F"
            },
            {
              "name": "A"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "F"
            },
            {
              "name": "A"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "b"
            },
            {
              "name": "w"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "b"
            },
            {
              "name": "w"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "w"
            },
            {
              "name": "v"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b"
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "x"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g"
        },
        {
          "kind": "function",
          "name": "b"
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "m"
            },
            {
              "name": "g"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "E"
            },
            {
              "name": "S"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "E"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "E"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_"
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "b"
            },
            {
              "name": "w"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "ki"
        },
        {
          "kind": "variable",
          "name": "dW"
        },
        {
          "kind": "variable",
          "name": "hW"
        },
        {
          "kind": "variable",
          "name": "KQ"
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "m"
            },
            {
              "name": "g"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "k"
            },
            {
              "name": "R"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "k"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "k"
            }
          ]
        },
        {
          "kind": "function",
          "name": "A"
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "b"
            },
            {
              "name": "w"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d"
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "w"
            }
          ]
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "b"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "_",
          "parameters": [
            {
              "name": "F"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "v"
            }
          ]
        },
        {
          "kind": "function",
          "name": "b",
          "parameters": [
            {
              "name": "E"
            }
          ]
        },
        {
          "kind": "function",
          "name": "g",
          "parameters": [
            {
              "name": "v"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "x"
            }
          ]
        },
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "i"
            },
            {
              "name": "s",
              "default": "null"
            },
            {
              "name": "d",
              "default": "!1"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "nQ"
        },
        {
          "kind": "function",
          "name": "f",
          "parameters": [
            {
              "name": "m"
            }
          ]
        },
        {
          "kind": "function",
          "name": "sQ",
          "parameters": [
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "uQ"
        },
        {
          "kind": "variable",
          "name": "dQ"
        },
        {
          "kind": "variable",
          "name": "mQ"
        },
        {
          "kind": "function",
          "name": "eee",
          "parameters": [
            {
              "name": "{context:e,docsParameter:t}"
            }
          ]
        },
        {
          "kind": "function",
          "name": "tee",
          "parameters": [
            {
              "name": "{of:e}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "A",
          "declaration": {
            "name": "dQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "C",
          "declaration": {
            "name": "nQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "eee",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "G",
          "declaration": {
            "name": "ki",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "H",
          "declaration": {
            "name": "mQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "M",
          "declaration": {
            "name": "tee",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "R",
          "declaration": {
            "name": "D",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "T",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "_",
          "declaration": {
            "name": "f2",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "sQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "hW",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "KQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "VQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "Pa",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "xO",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "Kr",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "h",
          "declaration": {
            "name": "uQ",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "j",
          "declaration": {
            "name": "Fe",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "q",
          "declaration": {
            "name": "dW",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "u",
            "module": "storybook-static/assets/index-BGbAfZeU.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/index-CfOrKyLd.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "y"
        },
        {
          "kind": "variable",
          "name": "g"
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Fn"
        },
        {
          "kind": "variable",
          "name": "Un",
          "default": "`${An}/snippet-rendered`"
        },
        {
          "kind": "variable",
          "name": "Rn"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "Fn",
            "module": "storybook-static/assets/index-CfOrKyLd.js"
          }
        },
        {
          "kind": "js",
          "name": "g",
          "declaration": {
            "name": "Rn",
            "module": "storybook-static/assets/index-CfOrKyLd.js"
          }
        },
        {
          "kind": "js",
          "name": "y",
          "declaration": {
            "name": "Un",
            "module": "storybook-static/assets/index-CfOrKyLd.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/index-Cu4lwwaE.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "P"
        },
        {
          "kind": "variable",
          "name": "E"
        },
        {
          "kind": "variable",
          "name": "I"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "O",
          "declaration": {
            "name": "I",
            "module": "storybook-static/assets/index-Cu4lwwaE.js"
          }
        },
        {
          "kind": "js",
          "name": "P",
          "declaration": {
            "name": "E",
            "module": "storybook-static/assets/index-Cu4lwwaE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/index-DCk3hht1.js",
      "declarations": [
        {
          "kind": "function",
          "name": "m",
          "parameters": [
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "t"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MDXProvider",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/index-DCk3hht1.js"
          }
        },
        {
          "kind": "js",
          "name": "useMDXComponents",
          "declaration": {
            "name": "m",
            "module": "storybook-static/assets/index-DCk3hht1.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/index-DrFu-skq.js",
      "declarations": [
        {
          "kind": "function",
          "name": "l",
          "parameters": [
            {
              "name": "o"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "d",
          "default": "new RegExp(` [ ]{`+Math.min.apply(Math,s)+\"}\",\"g\")"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "l",
            "module": "storybook-static/assets/index-DrFu-skq.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/label.stories-DFj7ULli.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Toolkit/Primitive Elements/Label Element\"}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>l` <fhir-wrapper> <fhir-primitive label=\"Doctor\" value=\"Alice Nixon\" link=\"/practitioner/1234\"></fhir-primitive > <fhir-primitive label=\"Doctor\" delimiter=\" - \" value=\"Jenny Nixon\"></fhir-primitive > <fhir-primitive label=\"link\" value=\"1234\" type=\"url\" ?showerror=${!0}></fhir-primitive > </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "array"
          },
          "default": "[\"LabelElement\"]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "LabelElement",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/label.stories-DFj7ULli.js"
          }
        },
        {
          "kind": "js",
          "name": "__namedExportsOrder",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/label.stories-DFj7ULli.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/label.stories-DFj7ULli.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/lit-element-Bl1k89NR.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "T",
          "default": "globalThis"
        },
        {
          "kind": "variable",
          "name": "wt"
        },
        {
          "kind": "variable",
          "name": "i"
        },
        {
          "kind": "variable",
          "name": "f",
          "default": "globalThis"
        },
        {
          "kind": "variable",
          "name": "B",
          "type": {
            "text": "object"
          },
          "default": "{toAttribute(r,t){switch(t){case Boolean:r=r?$t:null;break;case Object:case Array:r=r==null?r:JSON.stringify(r)}return r},fromAttribute(r,t){let e=r;switch(t){case Boolean:e=r!==null;break;case Number:e=r===null?null:Number(r);break;case Object:case Array:try{e=JSON.parse(r)}catch{e=null}}return e}}"
        },
        {
          "kind": "variable",
          "name": "et"
        },
        {
          "kind": "variable",
          "name": "Pt"
        },
        {
          "kind": "variable",
          "name": "v"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "u",
          "type": {
            "text": "number"
          },
          "default": "0"
        },
        {
          "kind": "function",
          "name": "E",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "t"
            },
            {
              "name": "e",
              "default": "r"
            },
            {
              "name": "s"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "x",
          "members": [
            {
              "kind": "field",
              "name": "_$AU",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "parentNode",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "startNode",
              "readonly": true
            },
            {
              "kind": "field",
              "name": "endNode",
              "readonly": true
            },
            {
              "kind": "method",
              "name": "_$AI",
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e",
                  "default": "this"
                }
              ]
            },
            {
              "kind": "method",
              "name": "O",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "T",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "$",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_$AC",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "k",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_$AR",
              "parameters": [
                {
                  "name": "t",
                  "default": "this._$AA.nextSibling"
                },
                {
                  "name": "e"
                }
              ]
            },
            {
              "kind": "method",
              "name": "setConnected",
              "parameters": [
                {
                  "name": "t"
                }
              ]
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "number"
              },
              "default": "2"
            },
            {
              "kind": "field",
              "name": "_$AH",
              "default": "d"
            },
            {
              "kind": "field",
              "name": "_$AN",
              "default": "void 0"
            },
            {
              "kind": "field",
              "name": "_$AA",
              "default": "t"
            },
            {
              "kind": "field",
              "name": "_$AB",
              "default": "e"
            },
            {
              "kind": "field",
              "name": "_$AM",
              "default": "s"
            },
            {
              "kind": "field",
              "name": "options",
              "default": "i"
            },
            {
              "kind": "field",
              "name": "_$Cv"
            }
          ]
        },
        {
          "kind": "function",
          "name": "bt",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "t"
            },
            {
              "name": "e"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "O",
          "members": [
            {
              "kind": "method",
              "name": "createRenderRoot",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "update",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "field",
              "name": "renderOptions",
              "type": {
                "text": "object"
              },
              "default": "{host:this}"
            },
            {
              "kind": "field",
              "name": "_$Do",
              "default": "void 0"
            },
            {
              "kind": "method",
              "name": "addInitializer",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "createProperty",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e",
                  "default": "J"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "getPropertyDescriptor",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                },
                {
                  "name": "s"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "getPropertyOptions",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$Ei",
              "static": true,
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "finalize",
              "static": true,
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "finalizeStyles",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$Eu",
              "static": true,
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$Ev",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "addController",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "removeController",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$E_",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "enableUpdating",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$EC",
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$AK",
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "requestUpdate",
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                },
                {
                  "name": "s"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "P",
              "parameters": [
                {
                  "name": "t"
                },
                {
                  "name": "e"
                },
                {
                  "name": "s"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$ET",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "scheduleUpdate",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "performUpdate",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$AE",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "_$EU",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "field",
              "name": "updateComplete",
              "readonly": true,
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "getUpdateComplete",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldUpdate",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "method",
              "name": "firstUpdated",
              "parameters": [
                {
                  "name": "t"
                }
              ],
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "field",
              "name": "_$Ep",
              "default": "void 0",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "field",
              "name": "isUpdatePending",
              "type": {
                "text": "boolean"
              },
              "default": "!1",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "field",
              "name": "hasUpdated",
              "type": {
                "text": "boolean"
              },
              "default": "!1",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            },
            {
              "kind": "field",
              "name": "_$Em",
              "type": {
                "text": "null"
              },
              "default": "null",
              "inheritedFrom": {
                "name": "y",
                "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
              }
            }
          ],
          "superclass": {
            "name": "y",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "B",
          "declaration": {
            "name": "bt",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "T",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "et",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "wt",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "O",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "u",
          "declaration": {
            "name": "B",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        },
        {
          "kind": "js",
          "name": "x",
          "declaration": {
            "name": "Pt",
            "module": "storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/medication-DBACCb7H.js",
      "declarations": [
        {
          "kind": "function",
          "name": "C",
          "parameters": [
            {
              "name": "n",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "C",
            "module": "storybook-static/assets/medication-DBACCb7H.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/medication.stories-Blh-tjvO.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"display\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"structure\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"narrative\"}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:G,mode:\"display\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:q,mode:\"structure\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "d",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:T,mode:\"display\",summaryonly:!1,showerror:!1,verbose:!1,open:!0,headless:!0,input:!1},render:e=>R`<h3 style=\"color:var(--sl-color-primary-900); padding: 0;margin: 0\">Medication</h3> <fhir-medication .data=${e.data} .mode=${e.mode} ?summaryonly=${e.summaryonly} ?showerror=${e.showerror} ?verbose=${e.verbose} ?open=${e.open} ?headless=${e.headless} ?input=${e.input} > </fhir-medication> `}"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "M"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "N"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "F",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "M",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "N",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/medication.stories-Blh-tjvO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/meta-UzWiTdav.js",
      "declarations": [
        {
          "kind": "function",
          "name": "E",
          "parameters": [
            {
              "name": "n",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "E",
            "module": "storybook-static/assets/meta-UzWiTdav.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/meta.stories-CPdfGMyZ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:T,mode:\"display\",showerror:!0,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:T,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:C,mode:\"display\",showerror:!0,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:_,mode:\"display\",showerror:!0,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:O,mode:\"display\",showerror:!0,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "I"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "I",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/meta.stories-CPdfGMyZ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/money-Ctf2K0GW.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/money-XO78g3nr.js",
      "declarations": [
        {
          "kind": "function",
          "name": "X",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "X",
            "module": "storybook-static/assets/money-XO78g3nr.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/money.stories-CXNfRg3C.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:m,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:m,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "S"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/money.stories-CXNfRg3C.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/money.stories-CXNfRg3C.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/money.stories-CXNfRg3C.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/narrative-CWONkyzO.js",
      "declarations": [
        {
          "kind": "function",
          "name": "v",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/narrative-CWONkyzO.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/narrative.stories-ByivNdHx.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{status:\"generated\",div:`<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0310\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0310&quot; </p></div><p><b>code</b>: Oral Form Oxycodone (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#430127000)</span></p><p><b>doseForm</b>: Tablet dose form (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385055001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Reference</b></td></tr><tr><td>*</td><td><a name=\"sub03\"> </a><blockquote><p/><p><a name=\"sub03\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Oxycodone (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#55452001)</span></td></tr></table></blockquote></td></tr></table><p><b>strength</b>: 5 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = 'mg')</span>/1(unit TAB from http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm)<span style=\"background: LightGoldenRodYellow\"> (Details: http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm code TAB = 'Tablet')</span></p></blockquote></div>`}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:a,mode:\"display\",showerror:!1,verbose:!1}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:a,mode:\"narrative\",showerror:!1,verbose:!1,open:!1}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:a,mode:\"structure\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "g"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/narrative.stories-ByivNdHx.js"
          }
        },
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/narrative.stories-ByivNdHx.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/narrative.stories-ByivNdHx.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/narrative.stories-ByivNdHx.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/observation-CoYTxn6d.js",
      "declarations": [
        {
          "kind": "function",
          "name": "v",
          "parameters": [
            {
              "name": "t",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/observation-CoYTxn6d.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/observation-definition-QNDs7t8e.js",
      "declarations": [
        {
          "kind": "function",
          "name": "C",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "C",
            "module": "storybook-static/assets/observation-definition-QNDs7t8e.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/observation-definition.stories-D_EGBF4J.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:l,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:l,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "b"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/observation-definition.stories-D_EGBF4J.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "b",
            "module": "storybook-static/assets/observation-definition.stories-D_EGBF4J.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/observation-definition.stories-D_EGBF4J.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/observation.stories-BWnGDCaF.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:r,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:r,mode:\"structure\",showerror:!0,verbose:!0,open:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{...r,status:\"not found\",category:[{coding:[{system:\"http://terminology.hl7.org/CodeSystem/observation-category\",code:\"vital-signss\",display:\"Vital Signs\"}]}],dataAbsentReason:{coding:[{system:\"http://terminology.hl7.org/CodeSystem/data-absent-reason\",code:\"null\",display:\"null\"}],text:\"null\"}},showerror:!0,verbose:!0,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "f"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/observation.stories-BWnGDCaF.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "f",
            "module": "storybook-static/assets/observation.stories-BWnGDCaF.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/observation.stories-BWnGDCaF.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/observation.stories-BWnGDCaF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/patient-Bfvk6mQj.js",
      "declarations": [
        {
          "kind": "function",
          "name": "v",
          "parameters": [
            {
              "name": "n",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/patient-Bfvk6mQj.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/patient.stories-tgWZVhzF.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:u,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "g"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/patient.stories-tgWZVhzF.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/patient.stories-tgWZVhzF.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/patient.stories-tgWZVhzF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/period-DzZRCDLq.js",
      "declarations": [
        {
          "kind": "function",
          "name": "S",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/period-DzZRCDLq.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/period.stories-n0CtE6ze.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:f,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:v,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:_,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:f,mode:\"structure\",showerror:!0,verbose:!0}}"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "D",
          "type": {
            "text": "array"
          },
          "default": "[\"Display\",\"Start\",\"End\",\"Structure\"]"
        },
        {
          "kind": "variable",
          "name": "T"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/period.stories-n0CtE6ze.js"
          }
        },
        {
          "kind": "js",
          "name": "E",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/period.stories-n0CtE6ze.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "T",
            "module": "storybook-static/assets/period.stories-n0CtE6ze.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/period.stories-n0CtE6ze.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/period.stories-n0CtE6ze.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-0VpK37Pg.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "l",
          "type": {
            "text": "object"
          },
          "default": "{docs:{renderer:async()=>{let{DocsRenderer:e}=await a(()=>import(\"./DocsRenderer-CFRXHY34-o9N4iHLL.js\"),__vite__mapDeps([0,1,2,3,4,5]),import.meta.url);return new e},stories:{filter:e=>{var r;return(e.tags||[]).filter(t=>s[t]).length===0&&!((r=e.parameters.docs)!=null&&r.disable)}}}}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "parameters",
          "declaration": {
            "name": "l",
            "module": "storybook-static/assets/preview-0VpK37Pg.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-1l6V4UsQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Y",
          "type": {
            "text": "array"
          },
          "default": "[M,B]"
        },
        {
          "kind": "variable",
          "name": "N",
          "type": {
            "text": "array"
          },
          "default": "[P]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "argsEnhancers",
          "declaration": {
            "name": "Y",
            "module": "storybook-static/assets/preview-1l6V4UsQ.js"
          }
        },
        {
          "kind": "js",
          "name": "loaders",
          "declaration": {
            "name": "N",
            "module": "storybook-static/assets/preview-1l6V4UsQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-B3PTUHS7.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "T",
          "type": {
            "text": "array"
          },
          "default": "[R]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "decorators",
          "declaration": {
            "name": "T",
            "module": "storybook-static/assets/preview-B3PTUHS7.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-BWzBA1C2.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "h",
          "type": {
            "text": "array"
          },
          "default": "[e]"
        },
        {
          "kind": "variable",
          "name": "g",
          "type": {
            "text": "object"
          },
          "default": "{[m]:!1}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "decorators",
          "declaration": {
            "name": "h",
            "module": "storybook-static/assets/preview-BWzBA1C2.js"
          }
        },
        {
          "kind": "js",
          "name": "initialGlobals",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/preview-BWzBA1C2.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-Br-h4d84.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "a"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "initialGlobals",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/preview-Br-h4d84.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-CPX9RCe3.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ct",
          "type": {
            "text": "array"
          },
          "default": "[gt]"
        },
        {
          "kind": "variable",
          "name": "wt",
          "type": {
            "text": "object"
          },
          "default": "{[j]:!1}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "decorators",
          "declaration": {
            "name": "ct",
            "module": "storybook-static/assets/preview-CPX9RCe3.js"
          }
        },
        {
          "kind": "js",
          "name": "initialGlobals",
          "declaration": {
            "name": "wt",
            "module": "storybook-static/assets/preview-CPX9RCe3.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-D-B8cUQ6.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "i",
          "default": "f"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/preview-D-B8cUQ6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-D77C14du.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "V"
        },
        {
          "kind": "variable",
          "name": "ee",
          "type": {
            "text": "object"
          },
          "default": "{[g]:{grid:{cellSize:20,opacity:.5,cellAmount:5},disable:!1,...!(FEATURES!=null&&FEATURES.backgroundsStoryGlobals)&&{values:Object.values(C)}}}"
        },
        {
          "kind": "variable",
          "name": "re"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "decorators",
          "declaration": {
            "name": "V",
            "module": "storybook-static/assets/preview-D77C14du.js"
          }
        },
        {
          "kind": "js",
          "name": "initialGlobals",
          "declaration": {
            "name": "re",
            "module": "storybook-static/assets/preview-D77C14du.js"
          }
        },
        {
          "kind": "js",
          "name": "parameters",
          "declaration": {
            "name": "ee",
            "module": "storybook-static/assets/preview-D77C14du.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-DGUiP6tS.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/preview-DiE4qfN5.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "l",
          "type": {
            "text": "object"
          },
          "default": "{parameters:{layout:\"centered\",options:{storySort:{method:\"alphabetical\",order:[\"Getting Started\",[\"Home\",\"Installation\",\"Usage\",\"Customization\"],\"Components\",[\"Datatypes\",[\"Primitive Type\",\"Complex Type\",\"Special Type\",\"*\"],\"Resources\",\"*\"],\"Toolkit\",[\"Primitive Elements\",[\"Primitive Element\",\"*\"],\"*\"],\"Use Cases\",[\"Static HTML\",\"Frameworks\",\"Modelling & Tracing\",\"*\"],\"*\"]}}},controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}}"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "l",
            "module": "storybook-static/assets/preview-DiE4qfN5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/primitive-Dq5w3Yxl.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "i",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/primitive-Dq5w3Yxl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js",
      "declarations": [
        {
          "kind": "function",
          "name": "F",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "o"
        },
        {
          "kind": "function",
          "name": "k",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "n"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "n"
        },
        {
          "kind": "variable",
          "name": "r"
        },
        {
          "kind": "function",
          "name": "Oo",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "t",
          "default": "e[Ni(\"asyncIterator\")]"
        },
        {
          "kind": "variable",
          "name": "e"
        },
        {
          "kind": "class",
          "description": "",
          "name": "anonymous_1",
          "superclass": {
            "name": "t",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          },
          "tagName": "t",
          "customElement": true,
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "\"BeaconStateError\"",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            },
            {
              "kind": "field",
              "name": "element",
              "default": "e",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            },
            {
              "kind": "field",
              "name": "message",
              "default": "a",
              "inheritedFrom": {
                "name": "t",
                "module": "dist/fhir-beacon3.js"
              }
            }
          ]
        },
        {
          "kind": "variable",
          "name": "S",
          "default": "c[p?u===\"floating\"?\"reference\":\"floating\":u]"
        },
        {
          "kind": "function",
          "name": "a"
        },
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "R"
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o"
        },
        {
          "kind": "variable",
          "name": "Si"
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "d"
            },
            {
              "name": "h"
            },
            {
              "name": "f"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "d"
            },
            {
              "name": "h"
            },
            {
              "name": "f"
            },
            {
              "name": "u"
            },
            {
              "name": "p"
            },
            {
              "name": "m"
            },
            {
              "name": "g"
            },
            {
              "name": "v"
            },
            {
              "name": "S"
            }
          ]
        },
        {
          "kind": "function",
          "name": "r",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "a",
          "parameters": [
            {
              "name": "c"
            },
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "e",
          "parameters": [
            {
              "name": "d"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t"
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "d"
            },
            {
              "name": "h"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "function",
          "name": "o",
          "parameters": [
            {
              "name": "a"
            }
          ]
        },
        {
          "kind": "function",
          "name": "id",
          "parameters": [
            {
              "name": "e"
            },
            {
              "name": "t"
            },
            {
              "name": "i"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "jr"
        },
        {
          "kind": "class",
          "description": "",
          "name": "pi",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted"
            }
          ],
          "superclass": {
            "name": "go",
            "module": "/storybook-static/assets/lit-element-Bl1k89NR.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "e",
          "declaration": {
            "name": "anonymous_1",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "F",
          "declaration": {
            "name": "jr",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "pi",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "R",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "k",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "n",
          "declaration": {
            "name": "Oo",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "o",
          "declaration": {
            "name": "Si",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "id",
            "module": "storybook-static/assets/primitive-wrapper-BRzvUzpE.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/primitive.stories-vf2pg3KK.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>a` <fhir-primitive label=\"quantity\" type='decimal' value=\"100\" showerror ><span slot=\"after\">ml</span ></fhir-primitive > `}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>a` <fhir-primitive-wrapper > <fhir-label text=\"quantity\"></fhir-label > <fhir-value text=\"100,0\"><span slot=\"after\">ml</span ></fhir-value > <fhir-error text=\"oopsy!\"></fhir-error > </fhir-primitive-wrapper > `}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>a` <fhir-primitive label=\"quantity\" type='decimal' value=\"100,0\" context=\"25064002\" showerror ></fhir-primitive > `}"
        },
        {
          "kind": "variable",
          "name": "i",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>a` <fhir-primitive label=\"quantity\" type='decimal' value=\"100.0\" context=\"25064002\" ></fhir-primitive > `}"
        },
        {
          "kind": "variable",
          "name": "S"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/primitive.stories-vf2pg3KK.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/primitive.stories-vf2pg3KK.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/primitive.stories-vf2pg3KK.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/primitive.stories-vf2pg3KK.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/primitive.stories-vf2pg3KK.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/quantity-SBTgnYR-.js",
      "declarations": [
        {
          "kind": "function",
          "name": "v",
          "parameters": [
            {
              "name": "i",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/quantity-SBTgnYR-.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/quantity.stories-BTFDjcLQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"25\",unit:\"sec\",system:\"http://unitsofmeasure.org\",code:\"s\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"40000\",comparator:\"&gt;\",unit:\"ug/L\",system:\"http://unitsofmeasure.org\",code:\"ug\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"3\",unit:\"capsules\",system:\"http://snomed.info/sct\",code:\"385049006\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"100\",unit:\"US$\",system:\"urn:iso:std:iso:4217\",code:\"USD\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"1\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"abc\",unit:\"sec\",system:\"http://unitsofmeasure.org\",code:\"s\"},mode:\"structure\",showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"100\",unit:\"kilometers\",system:\"http://unitsofmeasure.org\",code:\"km\"},mode:\"structure\",showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "u",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"18\",unit:\"months\",system:\"http://unitsofmeasure.org\",code:\"mo\"},mode:\"structure\",showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "d",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"0\",unit:\"milliseconds\",system:\"http://unitsofmeasure.org\",code:\"ms\"},mode:\"structure\",showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "c",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{value:\"1\",code:\"1\"},mode:\"structure\",showerror:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "f"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "D"
        },
        {
          "kind": "variable",
          "name": "M"
        },
        {
          "kind": "variable",
          "name": "A"
        },
        {
          "kind": "variable",
          "name": "C"
        },
        {
          "kind": "variable",
          "name": "K"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "A",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "C",
          "declaration": {
            "name": "c",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "M",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "K",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "u",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        },
        {
          "kind": "js",
          "name": "f",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/quantity.stories-BTFDjcLQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/range-O1GQOwQ5.js",
      "declarations": [
        {
          "kind": "function",
          "name": "y",
          "parameters": [
            {
              "name": "t",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "y",
            "module": "storybook-static/assets/range-O1GQOwQ5.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/range.stories-Dzwlc8YD.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{low:{value:\"1.6\",unit:\"m\"},high:{value:\"1.9\",unit:\"m\"}},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "g"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/range.stories-Dzwlc8YD.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "g",
            "module": "storybook-static/assets/range.stories-Dzwlc8YD.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/ratio-BpaNWRww.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/ratio-BpaNWRww.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/ratio.stories-DBxs1nvF.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{numerator:{value:\"1\"},denominator:{value:\"128\"}},mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{numerator:{value:\"103.50\",unit:\"US$\",code:\"USD\",system:\"urn:iso:std:iso:4217\"},denominator:{value:\"1\",unit:\"day\",code:\"day\",system:\"http://unitsofmeasure.org\"}},mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "y"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "y",
            "module": "storybook-static/assets/ratio.stories-DBxs1nvF.js"
          }
        },
        {
          "kind": "js",
          "name": "U",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/ratio.stories-DBxs1nvF.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/ratio.stories-DBxs1nvF.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/reference-CqyucANo.js",
      "declarations": [
        {
          "kind": "function",
          "name": "T",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "T",
            "module": "storybook-static/assets/reference-CqyucANo.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/reference.stories-BB_aOv2r.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p,mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{reference:\"http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{reference:\"http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b\",type:\"StructureDefinition\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{display:\"Dr. John Q. Public\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{type:\"Practitioner\",display:\"Dr. John Q. Public\"},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{identifier:{system:\"http://hl7.org/fhir/sid/us-ssn\",value:\"000111111\"}},mode:\"display\",showerror:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{type:\"Practitioner\"},mode:\"display\",showerror:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "i",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p,mode:\"structure\",showerror:!1,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "d",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{reference:\"#1234\",type:\"Patient\"},mode:\"display\",showerror:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "c",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:{extension:[{url:\"http://example.org/fhir/StructureDefinition/participation-agreement\",valueUri:\"http://example.org/phr/documents/patient/general/v1\"}],...p},mode:\"display\",showerror:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "D"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "R"
        },
        {
          "kind": "variable",
          "name": "U"
        },
        {
          "kind": "variable",
          "name": "W"
        },
        {
          "kind": "variable",
          "name": "I"
        },
        {
          "kind": "variable",
          "name": "L"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "I",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "R",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "L",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "U",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        },
        {
          "kind": "js",
          "name": "e",
          "declaration": {
            "name": "c",
            "module": "storybook-static/assets/reference.stories-BB_aOv2r.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/sampled-data-CmcX0mtm.js",
      "declarations": [
        {
          "kind": "function",
          "name": "w",
          "parameters": [
            {
              "name": "e",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "w",
            "module": "storybook-static/assets/sampled-data-CmcX0mtm.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/sampled-data-DbdIjGrb.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/sampled-data.stories-BfOpHXNQ.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p,mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!1}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:p,mode:\"structure\",showerror:!0,verbose:!0,open:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "S"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/sampled-data.stories-BfOpHXNQ.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "S",
            "module": "storybook-static/assets/sampled-data.stories-BfOpHXNQ.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/sampled-data.stories-BfOpHXNQ.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/signature-uyrA5eMs.js",
      "declarations": [
        {
          "kind": "function",
          "name": "D",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "D",
            "module": "storybook-static/assets/signature-uyrA5eMs.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/signature.stories-C0nF6MSX.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:A,mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:A,mode:\"structure\",showerror:!0,verbose:!0,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "V"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/signature.stories-C0nF6MSX.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "V",
            "module": "storybook-static/assets/signature.stories-C0nF6MSX.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/signature.stories-C0nF6MSX.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/slot-f9keR8yu.js",
      "declarations": [
        {
          "kind": "function",
          "name": "I",
          "parameters": [
            {
              "name": "o",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "I",
            "module": "storybook-static/assets/slot-f9keR8yu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/slot.stories-CD3_bSi8.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:d,mode:\"structure\",showerror:!0,verbose:!0,open:!0,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "h"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/slot.stories-CD3_bSi8.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "h",
            "module": "storybook-static/assets/slot.stories-CD3_bSi8.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/slot.stories-CD3_bSi8.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/storybook-utils-BzMJAJFI.js",
      "declarations": [
        {
          "kind": "function",
          "name": "u"
        },
        {
          "kind": "variable",
          "name": "i"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "u",
            "module": "storybook-static/assets/storybook-utils-BzMJAJFI.js"
          }
        },
        {
          "kind": "js",
          "name": "r",
          "declaration": {
            "name": "i",
            "module": "storybook-static/assets/storybook-utils-BzMJAJFI.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/substance-KdmVwv4H.js",
      "declarations": [
        {
          "kind": "function",
          "name": "M",
          "parameters": [
            {
              "name": "e",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/substance-KdmVwv4H.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/substance.stories-BekGGyxy.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:k,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "o",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:k,mode:\"structure\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"display\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"structure\",showerror:!0,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:n,mode:\"narrative\",showerror:!1,verbose:!1,open:!0}}"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "D",
          "type": {
            "text": "array"
          },
          "default": "[\"Display_f204\",\"Structure_f204\",\"Display\",\"Structure\",\"Narrative\"]"
        },
        {
          "kind": "variable",
          "name": "M"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        },
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "o",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/substance.stories-BekGGyxy.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/systemchoice-hLnib95v.js",
      "declarations": [
        {
          "kind": "function",
          "name": "d",
          "parameters": [
            {
              "name": "t",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "d",
            "module": "storybook-static/assets/systemchoice-hLnib95v.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/systemchoice.stories-YWAbPAhW.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>b` <fhir-system-choice .value=${\"foo\"} .valuesets=${[{value:\"foo\",label:\"a Foo\"},{value:\"bar\",label:\"a Bar\"}]} .codingsystems=${[{value:\"baz\",label:\"a Baz\"},{value:\"buzz\",label:\"a Buz\"}]} ?overridable=${!1} label=\"the label\" > </fhir-system-choice> `}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>b` <fhir-system-choice .value=${\"foo\"} .valuesets=${[{value:\"foo\",label:\"a Foo\"},{value:\"bar\",label:\"a Bar\"}]} .codingsystems=${[{value:\"baz\",label:\"a Baz\"},{value:\"buzz\",label:\"a Buz\"}]} ?overridable=${!0} > <fhir-label slot=\"label\" text=\"the label\"></fhir-label> </fhir-system-choice> `}"
        },
        {
          "kind": "variable",
          "name": "v"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/systemchoice.stories-YWAbPAhW.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/systemchoice.stories-YWAbPAhW.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/timing-CliTSvij.js",
      "declarations": [
        {
          "kind": "function",
          "name": "X",
          "parameters": [
            {
              "name": "r",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "X",
            "module": "storybook-static/assets/timing-CliTSvij.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/timing-isMidRlt.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/timing.stories-BYT2qwLt.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:l,mode:\"display\",showerror:!1,verbose:!1,open:!0,headless:!1}}"
        },
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{args:{data:l,mode:\"structure\",showerror:!0,verbose:!0,open:!1,headless:!0}}"
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "variable",
          "name": "y"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "D",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/timing.stories-BYT2qwLt.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "y",
            "module": "storybook-static/assets/timing.stories-BYT2qwLt.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/timing.stories-BYT2qwLt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/tiny-invariant-CopsF_GD.js",
      "declarations": [
        {
          "kind": "function",
          "name": "n",
          "parameters": [
            {
              "name": "r"
            },
            {
              "name": "i"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "i",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/tiny-invariant-CopsF_GD.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/type-converters-4KLoXBo6.js",
      "declarations": [
        {
          "kind": "function",
          "name": "t",
          "parameters": [
            {
              "name": "n"
            },
            {
              "name": "r"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "a"
        },
        {
          "kind": "function",
          "name": "c",
          "parameters": [
            {
              "name": "n"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "P",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/type-converters-4KLoXBo6.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "c",
            "module": "storybook-static/assets/type-converters-4KLoXBo6.js"
          }
        },
        {
          "kind": "js",
          "name": "v",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/type-converters-4KLoXBo6.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/value.stories-fd5NxL1H.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "n",
          "type": {
            "text": "object"
          },
          "default": "{title:\"Toolkit/Primitive Elements/Value Element\"}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>r` <h2 >Value</h2 > <fhir-wrapper> <h3 >simple value</h3 > <fhir-value text=\"John Smith\"></fhir-value > <h3 >link value</h3 > <fhir-value text=\"John Smith\" link=\"http://foo.com/patient/1234\"></fhir-value > <h3 >placeholder value</h3 > <fhir-value text=\"\" placeholder=\"missing value\"></fhir-value > <h3 >prefix and suffix value</h3 > <fhir-value text=\"100\"> <span slot=\"before\">></span > <span slot=\"after\">%</span > </fhir-value > <h3 >long value value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\"></fhir-value > <h3 ><code >hide-overflow</code > variant on long value</h3 > <fhir-value id=\"debug-target\" text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida. Tellus in hac habitasse platea. Posuere urna nec tincidunt praesent semper feugiat nibh. Tortor pretium viverra suspendisse potenti nullam ac tortor. Fusce id velit ut tortor pretium viverra suspendisse potenti. Enim eu turpis egestas pretium aenean pharetra. Non consectetur a erat nam at lectus. Amet est placerat in egestas erat imperdiet sed.\" variant=\"hide-overflow\"></fhir-value > <h3 ><code >fixed-width</code > variant on long value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\" variant=\"fixed-width\"></fhir-value > </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "s",
          "type": {
            "text": "array"
          },
          "default": "[\"ValueElement\"]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValueElement",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/value.stories-fd5NxL1H.js"
          }
        },
        {
          "kind": "js",
          "name": "__namedExportsOrder",
          "declaration": {
            "name": "s",
            "module": "storybook-static/assets/value.stories-fd5NxL1H.js"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "n",
            "module": "storybook-static/assets/value.stories-fd5NxL1H.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/wrapper.stories-CdQTStSz.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "r",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "e",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-wrapper label=\"name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "a",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-wrapper key=\"name\" label=\"name\" variant=\"details\" badge-resource='Human Name' badge-summary badge-constraint > <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "t",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "m",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <div> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </div> `}"
        },
        {
          "kind": "variable",
          "name": "v",
          "type": {
            "text": "object"
          },
          "default": "{render:()=>i` <fhir-wrapper label=\"Contact\" badge-resource=\"Practitioner\" variant=\"details\"> <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Name\" badge-resource=\"Human Name\" variant=\"details\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> `}"
        },
        {
          "kind": "variable",
          "name": "c"
        },
        {
          "kind": "variable",
          "name": "b"
        },
        {
          "kind": "variable",
          "name": "d"
        },
        {
          "kind": "variable",
          "name": "S"
        },
        {
          "kind": "variable",
          "name": "W"
        },
        {
          "kind": "variable",
          "name": "N"
        },
        {
          "kind": "variable",
          "name": "C"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "N",
          "declaration": {
            "name": "m",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "S",
          "declaration": {
            "name": "C",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "W",
          "declaration": {
            "name": "r",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "a",
          "declaration": {
            "name": "e",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "b",
          "declaration": {
            "name": "a",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "c",
          "declaration": {
            "name": "t",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        },
        {
          "kind": "js",
          "name": "d",
          "declaration": {
            "name": "v",
            "module": "storybook-static/assets/wrapper.stories-CdQTStSz.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/assets/wrappers-BnH-HuWq.js",
      "declarations": [
        {
          "kind": "function",
          "name": "M",
          "parameters": [
            {
              "name": "t",
              "default": "{}"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "M",
            "module": "storybook-static/assets/wrappers-BnH-HuWq.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-manager/globals-module-info.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "S"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "globalsModuleInfoMap",
          "declaration": {
            "name": "S",
            "module": "storybook-static/sb-manager/globals-module-info.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-manager/globals-runtime.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-manager/globals.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "_",
          "type": {
            "text": "object"
          },
          "default": "{ react: \"__REACT__\", \"react-dom\": \"__REACT_DOM__\", \"react-dom/client\": \"__REACT_DOM_CLIENT__\", \"@storybook/icons\": \"__STORYBOOK_ICONS__\", \"storybook/internal/manager-api\": \"__STORYBOOK_API__\", \"@storybook/manager-api\": \"__STORYBOOK_API__\", \"@storybook/core/manager-api\": \"__STORYBOOK_API__\", \"storybook/internal/components\": \"__STORYBOOK_COMPONENTS__\", \"@storybook/components\": \"__STORYBOOK_COMPONENTS__\", \"@storybook/core/components\": \"__STORYBOOK_COMPONENTS__\", \"storybook/internal/channels\": \"__STORYBOOK_CHANNELS__\", \"@storybook/channels\": \"__STORYBOOK_CHANNELS__\", \"@storybook/core/channels\": \"__STORYBOOK_CHANNELS__\", \"storybook/internal/core-errors\": \"__STORYBOOK_CORE_EVENTS__\", \"@storybook/core-events\": \"__STORYBOOK_CORE_EVENTS__\", \"@storybook/core/core-events\": \"__STORYBOOK_CORE_EVENTS__\", \"storybook/internal/manager-errors\": \"__STORYBOOK_CORE_EVENTS_MANAGER_ERRORS__\", \"@storybook/core-events/manager-errors\": \"__STORYBOOK_CORE_EVENTS_MANAGER_ERRORS__\", \"@storybook/core/manager-errors\": \"__STORYBOOK_CORE_EVENTS_MANAGER_ERRORS__\", \"storybook/internal/router\": \"__STORYBOOK_ROUTER__\", \"@storybook/router\": \"__STORYBOOK_ROUTER__\", \"@storybook/core/router\": \"__STORYBOOK_ROUTER__\", \"storybook/internal/theming\": \"__STORYBOOK_THEMING__\", \"@storybook/theming\": \"__STORYBOOK_THEMING__\", \"@storybook/core/theming\": \"__STORYBOOK_THEMING__\", \"storybook/internal/theming/create\": \"__STORYBOOK_THEMING_CREATE__\", \"@storybook/theming/create\": \"__STORYBOOK_THEMING_CREATE__\", \"@storybook/core/theming/create\": \"__STORYBOOK_THEMING_CREATE__\", \"storybook/internal/client-logger\": \"__STORYBOOK_CLIENT_LOGGER__\", \"@storybook/client-logger\": \"__STORYBOOK_CLIENT_LOGGER__\", \"@storybook/core/client-logger\": \"__STORYBOOK_CLIENT_LOGGER__\", \"storybook/internal/types\": \"__STORYBOOK_TYPES__\", \"@storybook/types\": \"__STORYBOOK_TYPES__\", \"@storybook/core/types\": \"__STORYBOOK_TYPES__\" }"
        },
        {
          "kind": "variable",
          "name": "o"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "globalPackages",
          "declaration": {
            "name": "o",
            "module": "storybook-static/sb-manager/globals.js"
          }
        },
        {
          "kind": "js",
          "name": "globalsNameReferenceMap",
          "declaration": {
            "name": "_",
            "module": "storybook-static/sb-manager/globals.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-manager/runtime.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/toolkit/custom.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: 'fhir-shell', subcomponents: { 'fhir-medication': 'fhir-medication' }, argTypes: {}, render: ({ data }) => html ` <!-- Theming change --> <style > :root { --sl-color-primary-700: var(--sl-color-purple-700); } </style > <fhir-shell > <fhir-medication .data=${data} override-template=\"med\"> <template id=\"med\"> <style > h4 { color: var(--sl-color-primary-700); display: flex; align-items: center; column-gap: 0.5rem } .footer { color: var(--sl-color-primary-700) } sl-icon { font-size: 1.5rem; color: var(--sl-color-primary-700) } </style > <h3 >Medication Card</h3 > <sl-card class=\"card-header\"> <h4 slot=\"header\"> <sl-icon name=\"capsule-pill\"></sl-icon > <fhir-primitive value-path=\"$.code.coding[0].display\"></fhir-primitive > </h4 > <fhir-codeable-concept key=\"dose\" data-path=\"$.doseForm\" mode=\"display\"></fhir-codeable-concept > <fhir-primitive key=\"lot\" value-path=\"$.batch.lotNumber\" mode=\"display\"></fhir-primitive > <div class='footer' slot=\"footer\"> <custom-lit-element label=\"manufacturer\" data-path=\"$.contained[0].name\"></custom-lit-element > <custom-element ></custom-element > </div > </sl-card > </template > </fhir-medication > </fhir-shell > ` }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/toolkit/custom.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/stories/toolkit/custom.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/codes/Codes.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Codes",
          "members": [
            {
              "kind": "method",
              "name": "getById",
              "parameters": [
                {
                  "name": "id"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBySystem",
              "parameters": [
                {
                  "name": "url"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllSystemsAsChoices"
            }
          ]
        },
        {
          "kind": "function",
          "name": "useCodeChoices",
          "parameters": [
            {
              "name": "id"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Codes",
          "declaration": {
            "name": "Codes",
            "module": "dist/src/codes/Codes.js"
          }
        },
        {
          "kind": "js",
          "name": "useCodeChoices",
          "declaration": {
            "name": "useCodeChoices",
            "module": "dist/src/codes/Codes.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/codes/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Codes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./use-system"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/codes/types.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/codes/use-system.js",
      "declarations": [
        {
          "kind": "function",
          "name": "useSystem",
          "parameters": [
            {
              "name": "url",
              "default": "''"
            }
          ]
        },
        {
          "kind": "function",
          "name": "systemChoices"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "useSystem",
            "module": "dist/src/codes/use-system.js"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "systemChoices",
            "module": "dist/src/codes/use-system.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mustRender"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./complex/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./foundation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./metadata/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resources/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./special/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/mustRender.js",
      "declarations": [
        {
          "kind": "function",
          "name": "mustRender",
          "parameters": [
            {
              "name": "value",
              "description": "The value to be rendered. Can be of any type or null/undefined."
            },
            {
              "name": "mode",
              "default": "DisplayMode.display",
              "description": "The display mode. Optional. Defaults to `DisplayMode.display` if not provided."
            },
            {
              "name": "verbose",
              "default": "false",
              "description": "Specifies if verbose rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summaryMode",
              "default": "false",
              "description": "Specifies if summary mode is enabled. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summary",
              "default": "false",
              "description": "Specifies if summary rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "required",
              "default": "false"
            }
          ],
          "description": "Determines if a value should be rendered based on the provided context parameters.",
          "return": {
            "type": {
              "text": ""
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mustRender",
          "declaration": {
            "name": "mustRender",
            "module": "dist/src/components/mustRender.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/BaseElement.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a base element in the FHIR data model. This is the class to extend when creating components.",
          "name": "BaseElement",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead."
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirPresentableElement",
            "module": "/dist/src/internal/base/presentable/fhir-presentable-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "dist/src/internal/BaseElement.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BaseElement"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./base/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./customization/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./errors/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resource/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/fhirtypes/CodeSystem-fhir-types.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CodeSystemFhirTypes",
          "type": {
            "text": "object"
          },
          "default": "{ \"resourceType\": \"CodeSystem\", \"id\": \"fhir-types\", \"url\": \"http://hl7.org/fhir/fhir-types\", \"identifier\": [{ \"system\": \"urn:ietf:rfc:3986\", \"value\": \"urn:oid:2.16.840.1.113883.4.642.4.1802\" }], \"version\": \"5.0.0\", \"name\": \"FHIRTypes\", \"title\": \"All FHIR Types\", \"status\": \"active\", \"experimental\": false, \"date\": \"2022-08-26T13:43:27+10:00\", \"publisher\": \"HL7 (FHIR Project)\", \"description\": \"One of the types defined as part of this version of FHIR.\", \"caseSensitive\": true, \"valueSet\": \"http://hl7.org/fhir/ValueSet/fhir-types\", \"content\": \"complete\", \"property\": [ { \"code\": \"abstract-type\", \"uri\": \"http://hl7.org/fhir/concept-properties#abstract-type\", \"type\": \"boolean\" }, { \"code\": \"kind\", \"uri\": \"http://hl7.org/fhir/concept-properties#kind\", \"type\": \"code\" }, { \"code\": \"interface\", \"uri\": \"http://hl7.org/fhir/concept-properties#interface\", \"type\": \"boolean\" } ], \"concept\": [ { \"code\": \"Base\", \"display\": \"Base\", \"definition\": \"Base Type: Base definition for all types defined in FHIR type system.\", \"property\": [{ \"code\": \"abstract-type\", \"valueBoolean\": true }], \"concept\": [ { \"code\": \"Element\", \"display\": \"Element\", \"definition\": \"Element Type: Base definition for all elements in a resource.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"datatype\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"BackboneElement\", \"display\": \"BackboneElement\", \"definition\": \"BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"datatype\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ] }, { \"code\": \"DataType\", \"display\": \"DataType\", \"definition\": \"DataType Type: The base class for all re-useable types defined as part of the FHIR Specification.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"datatype\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"Address\", \"display\": \"Address\", \"definition\": \"Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats). This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery. There are a variety of postal address formats defined around the world.\\nThe ISO21090-codedString may be used to provide a coded representation of the contents of strings in an Address.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Annotation\", \"display\": \"Annotation\", \"definition\": \"Annotation Type: A text note which also contains information about who made the statement and when.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Attachment\", \"display\": \"Attachment\", \"definition\": \"Attachment Type: For referring to data content defined in other formats.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Availability\", \"display\": \"Availability\", \"definition\": \"Availability Type: Availability data for an {item}.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"BackboneType\", \"display\": \"BackboneType\", \"definition\": \"BackboneType Type: Base definition for the few data types that are allowed to carry modifier extensions.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"datatype\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"Dosage\", \"display\": \"Dosage\", \"definition\": \"Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ElementDefinition\", \"display\": \"ElementDefinition\", \"definition\": \"ElementDefinition Type: Captures constraints on each element within the resource, profile, or extension.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"MarketingStatus\", \"display\": \"MarketingStatus\", \"definition\": \"MarketingStatus Type: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ProductShelfLife\", \"display\": \"ProductShelfLife\", \"definition\": \"ProductShelfLife Type: The shelf-life and storage information for a medicinal product item or container can be described using this class.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Timing\", \"display\": \"Timing\", \"definition\": \"Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] } ] }, { \"code\": \"CodeableConcept\", \"display\": \"CodeableConcept\", \"definition\": \"CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"CodeableReference\", \"display\": \"CodeableReference\", \"definition\": \"CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Coding\", \"display\": \"Coding\", \"definition\": \"Coding Type: A reference to a code defined by a terminology system.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ContactDetail\", \"display\": \"ContactDetail\", \"definition\": \"ContactDetail Type: Specifies contact information for a person or organization.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ContactPoint\", \"display\": \"ContactPoint\", \"definition\": \"ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Contributor\", \"display\": \"Contributor\", \"definition\": \"Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"DataRequirement\", \"display\": \"DataRequirement\", \"definition\": \"DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Expression\", \"display\": \"Expression\", \"definition\": \"Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ExtendedContactDetail\", \"display\": \"ExtendedContactDetail\", \"definition\": \"ExtendedContactDetail Type: Specifies contact information for a specific purpose over a period of time, might be handled/monitored by a specific named person or organization.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Extension\", \"display\": \"Extension\", \"definition\": \"Extension Type: Optional Extension Element - found in all resources.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"HumanName\", \"display\": \"HumanName\", \"definition\": \"HumanName Type: A name, normally of a human, that can be used for other living entities (e.g. animals but not organizations) that have been assigned names by a human and may need the use of name parts or the need for usage information.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Identifier\", \"display\": \"Identifier\", \"definition\": \"Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Meta\", \"display\": \"Meta\", \"definition\": \"Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"MonetaryComponent\", \"display\": \"MonetaryComponent\", \"definition\": \"MonetaryComponent Type: Availability data for an {item}.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Money\", \"display\": \"Money\", \"definition\": \"Money Type: An amount of economic utility in some recognized currency.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Narrative\", \"display\": \"Narrative\", \"definition\": \"Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"ParameterDefinition\", \"display\": \"ParameterDefinition\", \"definition\": \"ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Period\", \"display\": \"Period\", \"definition\": \"Period Type: A time period defined by a start and end date and optionally time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"PrimitiveType\", \"display\": \"PrimitiveType\", \"definition\": \"PrimitiveType Type: The base type for all re-useable types defined that have a simple property.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"datatype\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"base64Binary\", \"display\": \"base64Binary\", \"definition\": \"base64Binary Type: A stream of bytes\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"boolean\", \"display\": \"boolean\", \"definition\": \"boolean Type: Value of \\\"true\\\" or \\\"false\\\"\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"date\", \"display\": \"date\", \"definition\": \"date Type: A date or partial date (e.g. just year or year + month). There is no UTC offset. The format is a union of the schema types gYear, gYearMonth and date. Dates SHALL be valid dates.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"dateTime\", \"display\": \"dateTime\", \"definition\": \"dateTime Type: A date, date-time or partial date (e.g. just year or year + month). If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored. Dates SHALL be valid dates.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"decimal\", \"display\": \"decimal\", \"definition\": \"decimal Type: A rational number with implicit precision\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"instant\", \"display\": \"instant\", \"definition\": \"instant Type: An instant in time - known at least to the second\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"integer\", \"display\": \"integer\", \"definition\": \"integer Type: A whole number\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }], \"concept\": [ { \"code\": \"positiveInt\", \"display\": \"positiveInt\", \"definition\": \"positiveInt type: An integer with a value that is positive (e.g. \\u003e0)\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"unsignedInt\", \"display\": \"unsignedInt\", \"definition\": \"unsignedInt type: An integer with a value that is not negative (e.g. \\u003e\\u003d 0)\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] } ] }, { \"code\": \"integer64\", \"display\": \"integer64\", \"definition\": \"integer64 Type: A very large whole number\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"string\", \"display\": \"string\", \"definition\": \"string Type: A sequence of Unicode characters\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }], \"concept\": [ { \"code\": \"code\", \"display\": \"code\", \"definition\": \"code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"id\", \"display\": \"id\", \"definition\": \"id type: Any combination of letters, numerals, \\\"-\\\" and \\\".\\\", with a length limit of 64 characters. (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.) Ids are case-insensitive.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"markdown\", \"display\": \"markdown\", \"definition\": \"markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] } ] }, { \"code\": \"time\", \"display\": \"time\", \"definition\": \"time Type: A time during the day, with no date specified\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"uri\", \"display\": \"uri\", \"definition\": \"uri Type: String of characters used to identify a name or a resource\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }], \"concept\": [ { \"code\": \"canonical\", \"display\": \"canonical\", \"definition\": \"canonical type: A URI that is a reference to a canonical URL on a FHIR resource\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"oid\", \"display\": \"oid\", \"definition\": \"oid type: An OID represented as a URI\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"url\", \"display\": \"url\", \"definition\": \"url type: A URI that is a literal reference\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] }, { \"code\": \"uuid\", \"display\": \"uuid\", \"definition\": \"uuid type: A UUID, represented as a URI\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] } ] } ] }, { \"code\": \"Quantity\", \"display\": \"Quantity\", \"definition\": \"Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }], \"concept\": [ { \"code\": \"Age\", \"display\": \"Age\", \"definition\": \"Age Type: A duration of time during which an organism (or a process) has existed.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Count\", \"display\": \"Count\", \"definition\": \"Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Distance\", \"display\": \"Distance\", \"definition\": \"Distance Type: A length - a value with a unit that is a physical distance.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Duration\", \"display\": \"Duration\", \"definition\": \"Duration Type: A length of time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] } ] }, { \"code\": \"Range\", \"display\": \"Range\", \"definition\": \"Range Type: A set of ordered Quantities defined by a low and high limit.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Ratio\", \"display\": \"Ratio\", \"definition\": \"Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"RatioRange\", \"display\": \"RatioRange\", \"definition\": \"RatioRange Type: A range of ratios expressed as a low and high numerator and a denominator.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { 'code': 'Ref', 'display': 'Ref', \"definition\": \"Reference Type: A reference from one resource to another.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"RelatedArtifact\", \"display\": \"RelatedArtifact\", \"definition\": \"RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"SampledData\", \"display\": \"SampledData\", \"definition\": \"Timing Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"Signature\", \"display\": \"Signature\", \"definition\": \"Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"TriggerDefinition\", \"display\": \"TriggerDefinition\", \"definition\": \"TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"UsageContext\", \"display\": \"UsageContext\", \"definition\": \"UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] }, { \"code\": \"VirtualServiceDetail\", \"display\": \"VirtualServiceDetail\", \"definition\": \"VirtualServiceDetail Type: Virtual Service Contact Details.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"datatype\" }] } ] }, { \"code\": \"xhtml\", \"display\": \"xhtml\", \"definition\": \"xhtml Type definition\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"primitive\" }] } ] }, { \"code\": \"Resource\", \"display\": \"Resource\", \"definition\": \"This is the base resource type for everything.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"resource\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"Binary\", \"display\": \"Binary\", \"definition\": \"A resource that represents the data of a single raw artifact as digital content accessible in its native format. A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Bundle\", \"display\": \"Bundle\", \"definition\": \"A container for a collection of resources.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DomainResource\", \"display\": \"DomainResource\", \"definition\": \"A resource that includes narrative, extensions, and contained resources.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"resource\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true } ], \"concept\": [ { \"code\": \"Account\", \"display\": \"Account\", \"definition\": \"A financial tool for tracking value accrued for a particular purpose. In the healthcare field, used to track charges for a patient, cost centers, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ActivityDefinition\", \"display\": \"ActivityDefinition\", \"definition\": \"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ActorDefinition\", \"display\": \"ActorDefinition\", \"definition\": \"The ActorDefinition resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"AdministrableProductDefinition\", \"display\": \"AdministrableProductDefinition\", \"definition\": \"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"AdverseEvent\", \"display\": \"AdverseEvent\", \"definition\": \"An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research participant. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical research trial management. Adverse events can be reported by healthcare providers, patients, caregivers or by medical products manufacturers. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"AllergyIntolerance\", \"display\": \"AllergyIntolerance\", \"definition\": \"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Appointment\", \"display\": \"Appointment\", \"definition\": \"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"AppointmentResponse\", \"display\": \"AppointmentResponse\", \"definition\": \"A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ArtifactAssessment\", \"display\": \"ArtifactAssessment\", \"definition\": \"This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"AuditEvent\", \"display\": \"AuditEvent\", \"definition\": \"A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Basic\", \"display\": \"Basic\", \"definition\": \"Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don\\u0027t map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"BiologicallyDerivedProduct\", \"display\": \"BiologicallyDerivedProduct\", \"definition\": \"A biological material originating from a biological entity intended to be transplanted or infused into another (possibly the same) biological entity.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"BiologicallyDerivedProductDispense\", \"display\": \"BiologicallyDerivedProductDispense\", \"definition\": \"A record of dispensation of a biologically derived product.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"BodyStructure\", \"display\": \"BodyStructure\", \"definition\": \"Record details about an anatomical structure. This resource may be used when a coded concept does not provide the necessary detail needed for the use case.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CanonicalResource\", \"display\": \"CanonicalResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"resource\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true }, { \"code\": \"interface\", \"valueBoolean\": true } ] }, { \"code\": \"CapabilityStatement\", \"display\": \"CapabilityStatement\", \"definition\": \"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CarePlan\", \"display\": \"CarePlan\", \"definition\": \"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CareTeam\", \"display\": \"CareTeam\", \"definition\": \"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ChargeItem\", \"display\": \"ChargeItem\", \"definition\": \"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ChargeItemDefinition\", \"display\": \"ChargeItemDefinition\", \"definition\": \"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Citation\", \"display\": \"Citation\", \"definition\": \"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Claim\", \"display\": \"Claim\", \"definition\": \"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ClaimResponse\", \"display\": \"ClaimResponse\", \"definition\": \"This resource provides the adjudication details from the processing of a Claim resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ClinicalImpression\", \"display\": \"ClinicalImpression\", \"definition\": \"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient\\u0027s condition. Assessments are often 1:1 with a clinical consultation / encounter, but this varies greatly depending on the clinical workflow. This resource is called \\\"ClinicalImpression\\\" rather than \\\"ClinicalAssessment\\\" to avoid confusion with the recording of assessment tools such as Apgar score.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ClinicalUseDefinition\", \"display\": \"ClinicalUseDefinition\", \"definition\": \"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CodeSystem\", \"display\": \"CodeSystem\", \"definition\": \"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Communication\", \"display\": \"Communication\", \"definition\": \"A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CommunicationRequest\", \"display\": \"CommunicationRequest\", \"definition\": \"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CompartmentDefinition\", \"display\": \"CompartmentDefinition\", \"definition\": \"A compartment definition that defines how resources are accessed on a server.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Composition\", \"display\": \"Composition\", \"definition\": \"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ConceptMap\", \"display\": \"ConceptMap\", \"definition\": \"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Condition\", \"display\": \"Condition\", \"definition\": \"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ConditionDefinition\", \"display\": \"ConditionDefinition\", \"definition\": \"A definition of a condition and information relevant to managing it.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Consent\", \"display\": \"Consent\", \"definition\": \"A record of a healthcare consumer’s choices or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Contract\", \"display\": \"Contract\", \"definition\": \"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Coverage\", \"display\": \"Coverage\", \"definition\": \"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CoverageEligibilityRequest\", \"display\": \"CoverageEligibilityRequest\", \"definition\": \"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"CoverageEligibilityResponse\", \"display\": \"CoverageEligibilityResponse\", \"definition\": \"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DetectedIssue\", \"display\": \"DetectedIssue\", \"definition\": \"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, gaps in care, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Device\", \"display\": \"Device\", \"definition\": \"This resource describes the properties (regulated, has real time clock, etc.), adminstrative (manufacturer name, model number, serial number, firmware, etc.), and type (knee replacement, blood pressure cuff, MRI, etc.) of a physical unit (these values do not change much within a given module, for example the serail number, manufacturer name, and model number). An actual unit may consist of several modules in a distinct hierarchy and these are represented by multiple Device resources and bound through the \\u0027parent\\u0027 element.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceAssociation\", \"display\": \"DeviceAssociation\", \"definition\": \"A record of association of a device.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceDefinition\", \"display\": \"DeviceDefinition\", \"definition\": \"This is a specialized resource that defines the characteristics and capabilities of a device.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceDispense\", \"display\": \"DeviceDispense\", \"definition\": \"Indicates that a device is to be or has been dispensed for a named person/patient. This includes a description of the product (supply) provided and the instructions for using the device.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceMetric\", \"display\": \"DeviceMetric\", \"definition\": \"Describes a measurement, calculation or setting capability of a device. The DeviceMetric resource is derived from the ISO/IEEE 11073-10201 Domain Information Model standard, but is more widely applicable. \", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceRequest\", \"display\": \"DeviceRequest\", \"definition\": \"Represents a request a device to be provided to a specific patient. The device may be an implantable device to be subsequently implanted, or an external assistive device, such as a walker, to be delivered and subsequently be used.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DeviceUsage\", \"display\": \"DeviceUsage\", \"definition\": \"A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DiagnosticReport\", \"display\": \"DiagnosticReport\", \"definition\": \"The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"DocumentReference\", \"display\": \"DocumentReference\", \"definition\": \"A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this “document” encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare. The DocumentReference resource provides metadata about the document so that the document can be discovered and managed. The actual content may be inline base64 encoded data or provided by direct reference.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Encounter\", \"display\": \"Encounter\", \"definition\": \"An interaction between healthcare provider(s), and/or patient(s) for the purpose of providing healthcare service(s) or assessing the health status of patient(s).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EncounterHistory\", \"display\": \"EncounterHistory\", \"definition\": \"A record of significant events/milestones key data throughout the history of an Encounter\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Endpoint\", \"display\": \"Endpoint\", \"definition\": \"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EnrollmentRequest\", \"display\": \"EnrollmentRequest\", \"definition\": \"This resource provides the insurance enrollment details to the insurer regarding a specified coverage.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EnrollmentResponse\", \"display\": \"EnrollmentResponse\", \"definition\": \"This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EpisodeOfCare\", \"display\": \"EpisodeOfCare\", \"definition\": \"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EventDefinition\", \"display\": \"EventDefinition\", \"definition\": \"The EventDefinition resource provides a reusable description of when a particular event can occur.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Evidence\", \"display\": \"Evidence\", \"definition\": \"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EvidenceReport\", \"display\": \"EvidenceReport\", \"definition\": \"The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"EvidenceVariable\", \"display\": \"EvidenceVariable\", \"definition\": \"The EvidenceVariable resource describes an element that knowledge (Evidence) is about.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ExampleScenario\", \"display\": \"ExampleScenario\", \"definition\": \"A walkthrough of a workflow showing the interaction between systems and the instances shared, possibly including the evolution of instances over time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ExplanationOfBenefit\", \"display\": \"ExplanationOfBenefit\", \"definition\": \"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"FamilyMemberHistory\", \"display\": \"FamilyMemberHistory\", \"definition\": \"Significant health conditions for a person related to the patient relevant in the context of care for the patient.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Flag\", \"display\": \"Flag\", \"definition\": \"Prospective warnings of potential issues when providing care to the patient.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"FormularyItem\", \"display\": \"FormularyItem\", \"definition\": \"This resource describes a product or service that is available through a program and includes the conditions and constraints of availability. All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"GenomicStudy\", \"display\": \"GenomicStudy\", \"definition\": \"A set of analyses performed to analyze and generate genomic data.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Goal\", \"display\": \"Goal\", \"definition\": \"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"GraphDefinition\", \"display\": \"GraphDefinition\", \"definition\": \"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Group\", \"display\": \"Group\", \"definition\": \"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\\u0027t an Organization.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"GuidanceResponse\", \"display\": \"GuidanceResponse\", \"definition\": \"A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"HealthcareService\", \"display\": \"HealthcareService\", \"definition\": \"The details of a healthcare service available at a location or in a catalog. In the case where there is a hierarchy of services (for example, Lab -\\u003e Pathology -\\u003e Wound Cultures), this can be represented using a set of linked HealthcareServices.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ImagingSelection\", \"display\": \"ImagingSelection\", \"definition\": \"A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ImagingStudy\", \"display\": \"ImagingStudy\", \"definition\": \"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context. A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Immunization\", \"display\": \"Immunization\", \"definition\": \"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ImmunizationEvaluation\", \"display\": \"ImmunizationEvaluation\", \"definition\": \"Describes a comparison of an immunization event against published recommendations to determine if the administration is \\\"valid\\\" in relation to those recommendations.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ImmunizationRecommendation\", \"display\": \"ImmunizationRecommendation\", \"definition\": \"A patient\\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ImplementationGuide\", \"display\": \"ImplementationGuide\", \"definition\": \"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Ingredient\", \"display\": \"Ingredient\", \"definition\": \"An ingredient of a manufactured item or pharmaceutical product.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"InsurancePlan\", \"display\": \"InsurancePlan\", \"definition\": \"Details of a Health Insurance product/plan provided by an organization.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"InventoryItem\", \"display\": \"InventoryItem\", \"definition\": \"functional description of an inventory item used in inventory and supply-related workflows.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"InventoryReport\", \"display\": \"InventoryReport\", \"definition\": \"A report of inventory or stock items.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Invoice\", \"display\": \"Invoice\", \"definition\": \"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Library\", \"display\": \"Library\", \"definition\": \"The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Linkage\", \"display\": \"Linkage\", \"definition\": \"Identifies two or more records (resource instances) that refer to the same real-world \\\"occurrence\\\".\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"List\", \"display\": \"List\", \"definition\": \"A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Location\", \"display\": \"Location\", \"definition\": \"Details and position information for a place where services are provided and resources and participants may be stored, found, contained, or accommodated.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ManufacturedItemDefinition\", \"display\": \"ManufacturedItemDefinition\", \"definition\": \"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Measure\", \"display\": \"Measure\", \"definition\": \"The Measure resource provides the definition of a quality measure.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MeasureReport\", \"display\": \"MeasureReport\", \"definition\": \"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Medication\", \"display\": \"Medication\", \"definition\": \"This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicationAdministration\", \"display\": \"MedicationAdministration\", \"definition\": \"Describes the event of a patient consuming or otherwise being administered a medication. This may be as simple as swallowing a tablet or it may be a long running infusion. Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner. This event can also be used to record waste using a status of not-done and the appropriate statusReason.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicationDispense\", \"display\": \"MedicationDispense\", \"definition\": \"Indicates that a medication product is to be or has been dispensed for a named person/patient. This includes a description of the medication product (supply) provided and the instructions for administering the medication. The medication dispense is the result of a pharmacy system responding to a medication order.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicationKnowledge\", \"display\": \"MedicationKnowledge\", \"definition\": \"Information about a medication that is used to support knowledge.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicationRequest\", \"display\": \"MedicationRequest\", \"definition\": \"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\\"MedicationRequest\\\" rather than \\\"MedicationPrescription\\\" or \\\"MedicationOrder\\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicationStatement\", \"display\": \"MedicationStatement\", \"definition\": \"A record of a medication that is being consumed by a patient. A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay. The medication information may come from sources such as the patient\\u0027s memory, from a prescription bottle, or from a list of medications the patient, clinician or other party maintains. \\n\\nThe primary difference between a medicationstatement and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication. A medicationstatement is often, if not always, less specific. There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise. As stated earlier, the Medication Statement information may come from the patient\\u0027s memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains. Medication administration is more formal and is not missing detailed information.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MedicinalProductDefinition\", \"display\": \"MedicinalProductDefinition\", \"definition\": \"Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs, to support prescribing, adverse events management etc.).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MessageDefinition\", \"display\": \"MessageDefinition\", \"definition\": \"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MessageHeader\", \"display\": \"MessageHeader\", \"definition\": \"The header for a message exchange that is either requesting or responding to an action. The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"MetadataResource\", \"display\": \"MetadataResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ { \"code\": \"kind\", \"valueCode\": \"resource\" }, { \"code\": \"abstract-type\", \"valueBoolean\": true }, { \"code\": \"interface\", \"valueBoolean\": true } ] }, { \"code\": \"MolecularSequence\", \"display\": \"MolecularSequence\", \"definition\": \"Representation of a molecular sequence.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"NamingSystem\", \"display\": \"NamingSystem\", \"definition\": \"A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc. Represents a \\\"System\\\" used within the Identifier and Coding data types.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"NutritionIntake\", \"display\": \"NutritionIntake\", \"definition\": \"A record of food or fluid that is being consumed by a patient. A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed. The consumption information may come from sources such as the patient\\u0027s memory, from a nutrition label, or from a clinician documenting observed intake.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"NutritionOrder\", \"display\": \"NutritionOrder\", \"definition\": \"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"NutritionProduct\", \"display\": \"NutritionProduct\", \"definition\": \"A food or supplement that is consumed by patients.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Observation\", \"display\": \"Observation\", \"definition\": \"Measurements and simple assertions made about a patient, device or other subject.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ObservationDefinition\", \"display\": \"ObservationDefinition\", \"definition\": \"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"OperationDefinition\", \"display\": \"OperationDefinition\", \"definition\": \"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"OperationOutcome\", \"display\": \"OperationOutcome\", \"definition\": \"A collection of error, warning, or information messages that result from a system action.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Organization\", \"display\": \"Organization\", \"definition\": \"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"OrganizationAffiliation\", \"display\": \"OrganizationAffiliation\", \"definition\": \"Defines an affiliation/assotiation/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"PackagedProductDefinition\", \"display\": \"PackagedProductDefinition\", \"definition\": \"A medically related item or items, in a container or package.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Patient\", \"display\": \"Patient\", \"definition\": \"Demographics and other administrative information about an individual or animal receiving care or other health-related services.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"PaymentNotice\", \"display\": \"PaymentNotice\", \"definition\": \"This resource provides the status of the payment for goods and services rendered, and the request and response resource references.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"PaymentReconciliation\", \"display\": \"PaymentReconciliation\", \"definition\": \"This resource provides the details including amount of a payment and allocates the payment items being paid.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Permission\", \"display\": \"Permission\", \"definition\": \"Permission resource holds access rules for a given data and context.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Person\", \"display\": \"Person\", \"definition\": \"Demographics and administrative information about a person independent of a specific health-related context.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"PlanDefinition\", \"display\": \"PlanDefinition\", \"definition\": \"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Practitioner\", \"display\": \"Practitioner\", \"definition\": \"A person who is directly or indirectly involved in the provisioning of healthcare or related services.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"PractitionerRole\", \"display\": \"PractitionerRole\", \"definition\": \"A specific set of Roles/Locations/specialties/services that a practitioner may perform, or has performed at an organization during a period of time.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Procedure\", \"display\": \"Procedure\", \"definition\": \"An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy. This can be a quality or safety inspection for a location, organization, or device. This can be an accreditation procedure on a practitioner for licensing.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Provenance\", \"display\": \"Provenance\", \"definition\": \"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Questionnaire\", \"display\": \"Questionnaire\", \"definition\": \"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"QuestionnaireResponse\", \"display\": \"QuestionnaireResponse\", \"definition\": \"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"RegulatedAuthorization\", \"display\": \"RegulatedAuthorization\", \"definition\": \"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"RelatedPerson\", \"display\": \"RelatedPerson\", \"definition\": \"Information about a person that is involved in a patient\\u0027s health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"RequestOrchestration\", \"display\": \"RequestOrchestration\", \"definition\": \"A set of related requests that can be used to capture intended activities that have inter-dependencies such as \\\"give this medication after that one\\\".\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Requirements\", \"display\": \"Requirements\", \"definition\": \"The Requirements resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ResearchStudy\", \"display\": \"ResearchStudy\", \"definition\": \"A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ResearchSubject\", \"display\": \"ResearchSubject\", \"definition\": \"A ResearchSubject is a participant or object which is the recipient of investigative activities in a research study.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"RiskAssessment\", \"display\": \"RiskAssessment\", \"definition\": \"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Schedule\", \"display\": \"Schedule\", \"definition\": \"A container for slots of time that may be available for booking appointments.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SearchParameter\", \"display\": \"SearchParameter\", \"definition\": \"A search parameter that defines a named search item that can be used to search/filter on a resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ServiceRequest\", \"display\": \"ServiceRequest\", \"definition\": \"A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Slot\", \"display\": \"Slot\", \"definition\": \"A slot of time on a schedule that may be available for booking appointments.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Specimen\", \"display\": \"Specimen\", \"definition\": \"A sample to be used for analysis.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SpecimenDefinition\", \"display\": \"SpecimenDefinition\", \"definition\": \"A kind of specimen with associated set of requirements.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"StructureDefinition\", \"display\": \"StructureDefinition\", \"definition\": \"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"StructureMap\", \"display\": \"StructureMap\", \"definition\": \"A Map of relationships between 2 structures that can be used to transform data.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Subscription\", \"display\": \"Subscription\", \"definition\": \"The subscription resource describes a particular client\\u0027s request to be notified about a SubscriptionTopic.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubscriptionStatus\", \"display\": \"SubscriptionStatus\", \"definition\": \"The SubscriptionStatus resource describes the state of a Subscription during notifications. It is not persisted.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubscriptionTopic\", \"display\": \"SubscriptionTopic\", \"definition\": \"Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Substance\", \"display\": \"Substance\", \"definition\": \"A homogeneous material with a definite composition.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstanceDefinition\", \"display\": \"SubstanceDefinition\", \"definition\": \"The detailed description of a substance, typically at a level beyond what is used for prescribing.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstanceNucleicAcid\", \"display\": \"SubstanceNucleicAcid\", \"definition\": \"Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstancePolymer\", \"display\": \"SubstancePolymer\", \"definition\": \"Properties of a substance specific to it being a polymer.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstanceProtein\", \"display\": \"SubstanceProtein\", \"definition\": \"A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstanceReferenceInformation\", \"display\": \"SubstanceReferenceInformation\", \"definition\": \"Todo.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SubstanceSourceMaterial\", \"display\": \"SubstanceSourceMaterial\", \"definition\": \"Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SupplyDelivery\", \"display\": \"SupplyDelivery\", \"definition\": \"Record of delivery of what is supplied.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"SupplyRequest\", \"display\": \"SupplyRequest\", \"definition\": \"A record of a non-patient specific request for a medication, substance, device, certain types of biologically derived product, and nutrition product used in the healthcare setting.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Task\", \"display\": \"Task\", \"definition\": \"A task to be performed.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"TerminologyCapabilities\", \"display\": \"TerminologyCapabilities\", \"definition\": \"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"TestPlan\", \"display\": \"TestPlan\", \"definition\": \"A plan for executing testing on an artifact or specifications\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"TestReport\", \"display\": \"TestReport\", \"definition\": \"A summary of information based on the results of executing a TestScript.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"TestScript\", \"display\": \"TestScript\", \"definition\": \"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"Transport\", \"display\": \"Transport\", \"definition\": \"Record of transport.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"ValueSet\", \"display\": \"ValueSet\", \"definition\": \"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"VerificationResult\", \"display\": \"VerificationResult\", \"definition\": \"Describes validation requirements, source(s), status and dates for one or more elements.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] }, { \"code\": \"VisionPrescription\", \"display\": \"VisionPrescription\", \"definition\": \"An authorization for the provision of glasses and/or contact lenses to a patient.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] } ] }, { \"code\": \"Parameters\", \"display\": \"Parameters\", \"definition\": \"This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment). It is not persisted or allowed to be referenced by other resources except as described in the definition of the Parameters resource.\", \"property\": [{ \"code\": \"kind\", \"valueCode\": \"resource\" }] } ] } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "dist/src/fhirtypes/CodeSystem-fhir-types.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/fhirtypes/code-systems.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "FhirTypes",
          "deprecated": "true"
        },
        {
          "kind": "variable",
          "name": "FhirTypeChoices"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "dist/src/fhirtypes/code-systems.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypes",
          "declaration": {
            "name": "FhirTypes",
            "module": "dist/src/fhirtypes/code-systems.js"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypeChoices",
          "declaration": {
            "name": "FhirTypeChoices",
            "module": "dist/src/fhirtypes/code-systems.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/fhirtypes/codesystem.fhirtypes.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/fhirtypes/generate-types.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/fhirtypes/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./CodeSystem-fhir-types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./code-systems"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/profile.js",
      "declarations": [
        {
          "kind": "function",
          "name": "profile",
          "parameters": [
            {
              "name": "{ type, base = new StructureDefinition(type), constraints = [], props = [] }"
            }
          ],
          "description": "DSL for creating FHIR profiles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "dist/src/profiling/profile.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/profile.type.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/profileValidation.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/displayMode.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "DisplayMode"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "DisplayMode",
            "module": "dist/src/shell/displayMode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./displayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shell"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shoelace-styled-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./layout/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/shell.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Shell",
          "default": "class Shell extends LitElement { constructor() { super(...arguments); this.mode = DisplayMode.display; this.open = false; this.verbose = false; this.showerror = false; this.summaryonly = false; this.input = false; this.display = new ContextProvider(this, { context: displayConfigContext, initialValue: { source: 'shell', mode: DisplayMode.display, summaryonly: false, showerror: false, verbose: false, open: false, input: false } }); } updated(_changedProperties) { super.updated(_changedProperties); if (_changedProperties.has('mode')) { this.display.setValue({ ...this.display.value, mode: this.mode }); } if (_changedProperties.has('showerror')) { this.display.setValue({ ...this.display.value, showerror: this.showerror }, true); } if (_changedProperties.has('verbose')) { this.display.setValue({ ...this.display.value, verbose: this.verbose }); } if (_changedProperties.has('open')) { this.display.setValue({ ...this.display.value, open: this.open }); } if (_changedProperties.has('summaryonly')) { this.display.setValue({ ...this.display.value, summaryonly: this.summaryonly }); } if (_changedProperties.has('input')) { this.display.setValue({ ...this.display.value, input: this.input }); } } createRenderRoot() { return this; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Shell",
          "declaration": {
            "name": "Shell",
            "module": "dist/src/shell/shell.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/shoelace-styled-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ShoelaceStyledElement",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ShoelaceStyledElement",
          "declaration": {
            "name": "ShoelaceStyledElement",
            "module": "dist/src/shell/shoelace-styled-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/types.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/styles/hostStyles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "hostStyles",
          "default": "css ` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostStyles",
          "declaration": {
            "name": "hostStyles",
            "module": "dist/src/styles/hostStyles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/styles/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hostStyles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./textHostStyles"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/styles/textHostStyles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "textHostStyles",
          "type": {
            "text": "array"
          },
          "default": "[ css ` :host { display: inline; } ::slotted(*) { user-select: text; } `, hostStyles ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textHostStyles",
          "declaration": {
            "name": "textHostStyles",
            "module": "dist/src/styles/textHostStyles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/ValueSet.data.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isLoadableStore",
          "parameters": [
            {
              "name": "source"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResolutionError",
          "parameters": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResource",
          "parameters": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isValueSet",
          "parameters": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBundle",
          "parameters": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isCodeSystem",
          "parameters": [
            {
              "name": "origin"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isLoadableStore",
          "declaration": {
            "name": "isLoadableStore",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        },
        {
          "kind": "js",
          "name": "isResolutionError",
          "declaration": {
            "name": "isResolutionError",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        },
        {
          "kind": "js",
          "name": "isResource",
          "declaration": {
            "name": "isResource",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        },
        {
          "kind": "js",
          "name": "isValueSet",
          "declaration": {
            "name": "isValueSet",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        },
        {
          "kind": "js",
          "name": "isBundle",
          "declaration": {
            "name": "isBundle",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        },
        {
          "kind": "js",
          "name": "isCodeSystem",
          "declaration": {
            "name": "isCodeSystem",
            "module": "dist/src/valuesets/ValueSet.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/ValueSets.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValueSets",
          "members": [
            {
              "kind": "method",
              "name": "processAll",
              "parameters": [
                {
                  "name": "debug",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "process",
              "parameters": [
                {
                  "name": "id"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "id"
                }
              ]
            },
            {
              "kind": "field",
              "name": "processor",
              "default": "new ValueSetProcessor(fsSource)"
            },
            {
              "kind": "field",
              "name": "store",
              "default": "new FSStore(target)"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetsFactory",
          "members": [
            {
              "kind": "method",
              "name": "fs",
              "static": true,
              "parameters": [
                {
                  "name": "source"
                },
                {
                  "name": "target"
                },
                {
                  "name": "regex"
                },
                {
                  "name": "skipUrl",
                  "default": "() => false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "singleSource",
              "static": true,
              "parameters": [
                {
                  "name": "file"
                },
                {
                  "name": "target"
                },
                {
                  "name": "skipUrl",
                  "default": "() => false"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValueSets",
          "declaration": {
            "name": "ValueSets",
            "module": "dist/src/valuesets/ValueSets.js"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetsFactory",
          "declaration": {
            "name": "ValueSetsFactory",
            "module": "dist/src/valuesets/ValueSets.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSet.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSets"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./processor/ValueSetProcessor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FSSource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/Fetch"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FetchError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/LogFetchRequest"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveBundle"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveCodeSystem"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveValueSet"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./store/FSStore"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/countNodes.js",
      "declarations": [
        {
          "kind": "function",
          "name": "countNodes",
          "parameters": [
            {
              "name": "jsonData"
            }
          ],
          "description": "Count the number of nodes in a JSON structure"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "countNodes",
          "declaration": {
            "name": "countNodes",
            "module": "dist/src/utilities/countNodes.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasAll.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAll",
          "parameters": [
            {
              "name": "obj",
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAll",
          "declaration": {
            "name": "hasAll",
            "module": "dist/src/utilities/hasAll.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasAllOrNone.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAllOrNone",
          "parameters": [
            {
              "name": "obj",
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require\nto exist together.\n\nTODO: Move to some error handling package"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAllOrNone",
          "declaration": {
            "name": "hasAllOrNone",
            "module": "dist/src/utilities/hasAllOrNone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasNone.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasNone",
          "parameters": [
            {
              "name": "obj",
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasNone",
          "declaration": {
            "name": "hasNone",
            "module": "dist/src/utilities/hasNone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasOnly.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasOnly",
          "parameters": [
            {
              "name": "obj",
              "description": "the object to inspect"
            },
            {
              "name": "prop",
              "description": "the property to check for"
            }
          ],
          "description": "Check if object has only one specific property defined. This is useful with some types that have no required\nproperties and require different display logic based on what is defined."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasOnly",
          "declaration": {
            "name": "hasOnly",
            "module": "dist/src/utilities/hasOnly.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasSameAncestor.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSameAncestor",
          "parameters": [
            {
              "name": "child"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSameAncestor",
          "declaration": {
            "name": "hasSameAncestor",
            "module": "dist/src/utilities/hasSameAncestor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/hasSameAncestor.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./countNodes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAll"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAllOrNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasOnly"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasSameAncestor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isBlank"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isWhole"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDisplayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./when"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/isBlank.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isBlank",
          "parameters": [
            {
              "name": "val"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isBlank",
          "declaration": {
            "name": "isBlank",
            "module": "dist/src/utilities/isBlank.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/isWhole.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isWholeNumber",
          "parameters": [
            {
              "name": "num"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isWholeNumber",
          "declaration": {
            "name": "isWholeNumber",
            "module": "dist/src/utilities/isWhole.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/toDisplayMode.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toDisplayMode",
          "parameters": [
            {
              "name": "value"
            }
          ]
        },
        {
          "kind": "function",
          "name": "toDisplayOrStructure",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDisplayMode",
          "declaration": {
            "name": "toDisplayMode",
            "module": "dist/src/utilities/toDisplayMode.js"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayOrStructure",
          "declaration": {
            "name": "toDisplayOrStructure",
            "module": "dist/src/utilities/toDisplayMode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/when.js",
      "declarations": [
        {
          "kind": "function",
          "name": "when",
          "parameters": [
            {
              "name": "target",
              "description": "The target to evaluate the evaluations against.",
              "type": {
                "text": "WHEN"
              }
            },
            {
              "name": "evaluations"
            }
          ],
          "description": "A function that passes a target value to an array of evaluating WHEN evaluations and returns the first corresponding\nTHEN\n\n```js\nconst year = 2022\n\nconst color = when(year,\n    [2022, () => 'green'],\n    [year => year > 2022, 'red'],\n    otherwise('blue')\n)\n\nconsole.log(color) // green\n\n```"
        },
        {
          "kind": "function",
          "name": "otherwise",
          "parameters": [
            {
              "name": "t"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "when",
          "declaration": {
            "name": "when",
            "module": "dist/src/utilities/when.js"
          }
        },
        {
          "kind": "js",
          "name": "otherwise",
          "declaration": {
            "name": "otherwise",
            "module": "dist/src/utilities/when.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/component/componentTestingUtils.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "BeaconAssert",
          "type": {
            "text": "object"
          },
          "default": "{ hasLabelsAndValues: { for: { quantity: { whenSimple: function simple(quantity, label, { id, variation, value, unit, system, code }) { expect(quantity.queryShadow({ select: 'label', expect: 7 })[0]).toHaveTextContent(label); const primitives = quantity.queryShadow({ select: 'fhir-primitive', expect: 6 }); testPrimitive(primitives[0], { key: 'id', value: id }); testPrimitive(primitives[1], { key: 'variation', value: variation }); testPrimitive(primitives[2], { key: 'value', value: value }); testPrimitive(primitives[3], { key: 'unit', value: unit }); testPrimitive(primitives[4], { key: 'system', value: system }); testPrimitive(primitives[5], { key: 'code', value: code }); } } } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconAssert",
          "declaration": {
            "name": "BeaconAssert",
            "module": "dist/tests/component/componentTestingUtils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/component/testPrimitive.js",
      "declarations": [
        {
          "kind": "function",
          "name": "testPrimitive",
          "parameters": [
            {
              "name": "p"
            },
            {
              "name": "prop"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "testPrimitive",
          "declaration": {
            "name": "testPrimitive",
            "module": "dist/tests/component/testPrimitive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/lit/lit-vitest-fixture.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents an error that is thrown when the current state is invalid or unexpected.",
          "name": "IllegalStateError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'IllegalStateError'"
            }
          ],
          "superclass": {
            "name": "Error",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        },
        {
          "kind": "variable",
          "name": "emptyLitShadow",
          "default": "/^(?:<!--[\\s\\S]*?-->|\\s)*$/"
        },
        {
          "kind": "variable",
          "name": "emptySlotLitShadow",
          "default": "/^<!---->\\n\\s+<slot><\\/slot>$/"
        },
        {
          "kind": "function",
          "name": "fixture",
          "parameters": [
            {
              "name": "template",
              "description": "The template to be rendered.",
              "type": {
                "text": "TemplateResult"
              }
            },
            {
              "name": "tagname"
            },
            {
              "name": "type"
            }
          ],
          "description": "Asynchronously renders the provided template within a div element and returns an array of elements that extend\nLitElement for testing purposes. This is designed to work with Vitest in browser testing.",
          "return": {
            "type": {
              "text": "Promise<T[]>"
            }
          }
        },
        {
          "kind": "function",
          "name": "fixtureCleanUp",
          "description": "Cleans up the fixture by removing all elements.",
          "return": {
            "type": {
              "text": "void"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "IllegalStateError",
          "declaration": {
            "name": "IllegalStateError",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        },
        {
          "kind": "js",
          "name": "emptyLitShadow",
          "declaration": {
            "name": "emptyLitShadow",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        },
        {
          "kind": "js",
          "name": "emptySlotLitShadow",
          "declaration": {
            "name": "emptySlotLitShadow",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        },
        {
          "kind": "js",
          "name": "fixture",
          "declaration": {
            "name": "fixture",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        },
        {
          "kind": "js",
          "name": "fixtureCleanUp",
          "declaration": {
            "name": "fixtureCleanUp",
            "module": "dist/tests/lit/lit-vitest-fixture.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/shadowDomUtils/get-slot-content.js",
      "declarations": [
        {
          "kind": "function",
          "name": "getSlotContent",
          "parameters": [
            {
              "name": "slot"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "getSlotContent",
          "declaration": {
            "name": "getSlotContent",
            "module": "dist/tests/shadowDomUtils/get-slot-content.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/shadowDomUtils/query-shadow.js",
      "declarations": [
        {
          "kind": "function",
          "name": "queryShadow",
          "parameters": [
            {
              "name": "el"
            },
            {
              "name": "tag"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "queryShadow",
          "declaration": {
            "name": "queryShadow",
            "module": "dist/tests/shadowDomUtils/query-shadow.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/shadowDomUtils/query-slot.js",
      "declarations": [
        {
          "kind": "function",
          "name": "querySlot",
          "parameters": [
            {
              "name": "shadowedElement",
              "description": "The element with a shadow DOM.",
              "type": {
                "text": "HTMLElement"
              }
            },
            {
              "name": "slotName",
              "description": "The name of the slot to query for.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Queries for elements assigned to a named slot within a shadow DOM.",
          "return": {
            "type": {
              "text": "Element[]"
            }
          }
        },
        {
          "kind": "function",
          "name": "queryDefaultSlot",
          "parameters": [
            {
              "name": "shadowedElement",
              "description": "The shadowed element to query.",
              "type": {
                "text": "HTMLElement"
              }
            }
          ],
          "description": "Queries for the nodes assigned to the default slot of a shadow DOM element.",
          "return": {
            "type": {
              "text": "Node[]"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "querySlot",
          "declaration": {
            "name": "querySlot",
            "module": "dist/tests/shadowDomUtils/query-slot.js"
          }
        },
        {
          "kind": "js",
          "name": "queryDefaultSlot",
          "declaration": {
            "name": "queryDefaultSlot",
            "module": "dist/tests/shadowDomUtils/query-slot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/tests/shadowDomUtils/shadowDomUtils.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hostOf",
          "parameters": [
            {
              "name": "el"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostOf",
          "declaration": {
            "name": "hostOf",
            "module": "dist/tests/shadowDomUtils/shadowDomUtils.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "generation/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/comparator/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/address/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/identifier/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/order/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/drug/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/ucum/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/types/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "generation/unitsofmeasure/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "generation/observation/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-details/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./not-supported"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.validator"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInputEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInvalidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveValidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-formatters/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/not-supported.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/not-supported.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "NotSupported",
          "members": [
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "createRenderRoot",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotSupported",
          "declaration": {
            "name": "NotSupported",
            "module": "src/components/primitive/not-supported.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for displaying and parsing primitive values.",
          "name": "Primitive",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[textHostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "contextData",
              "type": {
                "text": "FhirDataContext"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "': '"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "valuePath",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "choices",
              "type": {
                "text": "Choice[]"
              }
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "showProvided",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "translate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "trialuse",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "presentableValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableError",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableTypeError",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "validator",
              "type": {
                "text": "PrimitiveValidator"
              },
              "privacy": "private",
              "default": "new PrimitiveValidator(this)"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changed",
                  "type": {
                    "text": "PropertyValues"
                  },
                  "description": "Map of changed properties with their previous values."
                }
              ],
              "description": "Invoked before the component updates its properties.\nIt validates the updates based on the properties that have changed.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              },
              "description": "Renders the appropriate template or content based on the current component's state and properties."
            },
            {
              "kind": "method",
              "name": "renderValid",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders when p[rovided value is valid. Displays FHIR data, incorporating labels, values, contexts,\nand additional structured elements based on the provided parameters."
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders an input element based on the type and configuration of the current object.\n\nValidation errors related to the input are displayed, if present."
            },
            {
              "kind": "field",
              "name": "renderError",
              "privacy": "private",
              "description": "Generates a rendered error representation based on the current state and properties of the object.",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "handleChange",
              "privacy": "private",
              "description": "Handles change events and updates the internal state of the component based on the event type\nand target element's properties. The method processes events originating from various input\ntypes and updates the `value`, `presentableValue`, `error`, and `errormessage` fields.\nIt also dispatches a custom event when the `value` changes.",
              "parameters": [
                {
                  "description": "The event object triggered by user interaction or programmatic changes.\n   The method processes this event to determine how to update the component state.",
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "getLabel",
              "privacy": "private",
              "description": "Retrieves the label associated with the current context.\nIf the \"label\" property is defined, it will be used. Otherwise, the \"key\" property\nis used as the label's default value.\n\nThe resulting label is formatted into a readable string in lowercase form.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/src/internal/base/configurable/fhir-configurable-element"
          },
          "tagName": "fhir-primitive",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "Primitive",
            "module": "src/components/primitive/primitive.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.validator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidator",
          "members": [
            {
              "kind": "field",
              "name": "#host",
              "privacy": "private",
              "type": {
                "text": "PrimitiveValueHost"
              },
              "readonly": true,
              "default": "host"
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{\n             valueChanged = false,\n             typeChanged = false,\n             valuePathChanged = false,\n             errormessageChanged = false,\n             requiredChanged = false,\n             choicesChanged = false\n           }",
                  "type": {
                    "text": "changedProperties"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "value",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "field",
              "name": "validOrError",
              "privacy": "private",
              "parameters": [
                {
                  "name": "fn"
                },
                {
                  "name": "original"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidator",
          "declaration": {
            "name": "PrimitiveValidator",
            "module": "src/components/primitive/primitive.validator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveInputEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInputEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "oldValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "oldValue"
            },
            {
              "kind": "field",
              "name": "newValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "newValue"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveInputEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInputEvent",
          "declaration": {
            "name": "PrimitiveInputEvent",
            "module": "src/components/primitive/primitiveInputEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveInvalidEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInvalidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "FullyQualifiedKey"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "errormessage"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveInvalidEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInvalidEvent",
          "declaration": {
            "name": "PrimitiveInvalidEvent",
            "module": "src/components/primitive/primitiveInvalidEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveValidEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveValidEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidEvent",
          "declaration": {
            "name": "PrimitiveValidEvent",
            "module": "src/components/primitive/primitiveValidEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitve.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { user-select: text; } li { display: flex; flex-wrap: wrap; gap: 0; list-style-type: none; align-items: baseline; padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); } sl-badge::part(base) { color: var(--sl-color-gray-400); background-color: var(--sl-color-gray-100); border-color: var(--sl-color-gray-300); font-weight: var(--sl-font-weight-normal); font-style: italic; } sl-input::part(form-control-label) { font-size: 16px; } sl-input::part(input) { font-size: 15px; } sl-switch { margin-bottom: 1rem; } .code { font-weight: bold } .display { color: gray } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitve.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/FhirContextData.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirDataContextImpl",
          "members": [
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "{} & FhirElementData"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "{} & FhirElementData"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getAt",
              "return": {
                "type": {
                  "text": "X"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataContextImpl",
          "declaration": {
            "name": "FhirDataContextImpl",
            "module": "src/internal/contexts/FhirContextData.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context-consumer-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The DataContextConsumerController class is a controller that allows a custom element to consume data from a data\ncontext.",
          "name": "DataContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "dataContext",
              "default": "new FhirDataContextImpl()"
            },
            {
              "kind": "field",
              "name": "data",
              "default": "{}"
            }
          ]
        },
        {
          "kind": "class",
          "description": "The DisplayContextConsumerController class is responsible for handling the display configuration context\nfor a given host element. It subscribes to changes in the displayConfigContext and updates the host element\naccordingly.\n\nThis class implements the ReactiveController interface and can be added to a host element using the addController\nmethod.",
          "name": "DisplayContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataContextConsumerController",
          "declaration": {
            "name": "DataContextConsumerController",
            "module": "src/internal/contexts/context-consumer-controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayContextConsumerController",
          "declaration": {
            "name": "DisplayContextConsumerController",
            "module": "src/internal/contexts/context-consumer-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context-provider-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ContextProviderController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "B"
              },
              "privacy": "private",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "displayCtx",
              "type": {
                "text": "ContextProvider<typeof displayConfigContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: displayConfigContext })"
            },
            {
              "kind": "field",
              "name": "dataCtx",
              "type": {
                "text": "ContextProvider<typeof dataContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: dataContext })"
            },
            {
              "kind": "field",
              "name": "containedCtx",
              "type": {
                "text": "ContextProvider<typeof containedResourcesContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: containedResourcesContext })"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContextProviderController",
          "declaration": {
            "name": "ContextProviderController",
            "module": "src/internal/contexts/context-provider-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "containedResourcesKey"
        },
        {
          "kind": "variable",
          "name": "displayConfigKey"
        },
        {
          "kind": "variable",
          "name": "dataKey"
        },
        {
          "kind": "variable",
          "name": "containedResourcesContext"
        },
        {
          "kind": "variable",
          "name": "displayConfigContext"
        },
        {
          "kind": "variable",
          "name": "dataContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "containedResourcesKey",
          "declaration": {
            "name": "containedResourcesKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigKey",
          "declaration": {
            "name": "displayConfigKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataKey",
          "declaration": {
            "name": "dataKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesContext",
          "declaration": {
            "name": "containedResourcesContext",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigContext",
          "declaration": {
            "name": "displayConfigContext",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataContext",
          "declaration": {
            "name": "dataContext",
            "module": "src/internal/contexts/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirContextData"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-consumer-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-provider-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/ArraySortingFunction.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sort",
          "return": {
            "type": {
              "text": "[FullyQualifiedKey, string[]][]"
            }
          },
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "[FullyQualifiedKey, string[]][]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "reindex",
          "return": {
            "type": {
              "text": "[FullyQualifiedKey, string[]][]"
            }
          },
          "parameters": [
            {
              "name": "original",
              "type": {
                "text": "[FullyQualifiedKey, string[]][]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sort",
          "declaration": {
            "name": "sort",
            "module": "src/internal/base/ArraySortingFunction.ts"
          }
        },
        {
          "kind": "js",
          "name": "reindex",
          "declaration": {
            "name": "reindex",
            "module": "src/internal/base/ArraySortingFunction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/DataHandling.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Decorate.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NoDataObject",
          "type": {
            "text": "FhirElementData"
          },
          "description": "The NoDataSet variable is a constant value of type FhirElementData.\nIt represents a null value for FHIR objects in the context of the Beacon system.\n\nThe NoDataSet value is created by freezing an object with a single property 'id',\nwhich is set to the string value 'FHIR::BEACON::NULL::OBJECT'.\n\nThe NoDataSet value is immutable and cannot be modified once created.\nIt can be used to indicate the absence or unavailability of valid FHIR data. It is meant to be used as a default\nvalue to differentiate between default emptiness and user-set emptiness."
        },
        {
          "kind": "function",
          "name": "decorate",
          "return": {
            "type": {
              "text": "Decorated<T>"
            }
          },
          "parameters": [
            {
              "name": "_key",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "data",
              "optional": true,
              "type": {
                "text": "T"
              }
            },
            {
              "name": "_errorMap",
              "optional": true,
              "type": {
                "text": "FqkMap"
              }
            },
            {
              "name": "_profile",
              "default": "undefined",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NoDataObject",
          "declaration": {
            "name": "NoDataObject",
            "module": "src/internal/base/Decorate.ts"
          }
        },
        {
          "kind": "js",
          "name": "decorate",
          "declaration": {
            "name": "decorate",
            "module": "src/internal/base/Decorate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Decorate.types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/DeepKeyMap.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "AI Generated code",
          "name": "DeepKeyMap",
          "members": [
            {
              "kind": "field",
              "name": "#entries",
              "privacy": "private",
              "type": {
                "text": "{ key: K, value: V }[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#matcher",
              "privacy": "private",
              "type": {
                "text": "((k1: K, k2: K) => boolean) | undefined"
              },
              "default": "matcher"
            },
            {
              "kind": "method",
              "name": "deepEquals",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "obj1",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "obj2",
                  "type": {
                    "text": "K"
                  }
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks."
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  },
                  "description": "The value to associate with the key."
                }
              ],
              "description": "Sets a value in the DeepKeyMap."
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "return": {
                "type": {
                  "text": "[K, V][]"
                }
              },
              "description": "Returns all key-value pairs as entries."
            },
            {
              "kind": "method",
              "name": "keys",
              "return": {
                "type": {
                  "text": "K[]"
                }
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FqkMap",
          "superclass": {
            "name": "DeepKeyMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          },
          "members": [
            {
              "kind": "method",
              "name": "deepEquals",
              "parameters": [
                {
                  "name": "obj1"
                },
                {
                  "name": "obj2"
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "value",
                  "description": "The value to associate with the key.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets a value in the DeepKeyMap.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "description": "Returns all key-value pairs as entries.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "keys",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeepKeyMap",
          "declaration": {
            "name": "DeepKeyMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          }
        },
        {
          "kind": "js",
          "name": "FqkMap",
          "declaration": {
            "name": "FqkMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/FhirElement.type.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Rendering.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Templating.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Validations.impl.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValidationsImpl",
          "members": [
            {
              "kind": "field",
              "name": "#data",
              "privacy": "private",
              "type": {
                "text": "Decorated<D>"
              },
              "readonly": true,
              "default": "decorated"
            },
            {
              "kind": "field",
              "name": "#codes",
              "privacy": "private",
              "readonly": true,
              "default": "new Codes()"
            },
            {
              "kind": "method",
              "name": "mapForAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "FqkMap"
                }
              }
            },
            {
              "kind": "method",
              "name": "msgFor",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "FullyQualifiedKey | string"
                  }
                },
                {
                  "name": "delimiter",
                  "default": "';'",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sliceForFQK",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "FqkMap"
                }
              },
              "parameters": [
                {
                  "name": "sliceKey",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{ fqk, message }",
                  "type": {
                    "text": "KeyErrorPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rm",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rmAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "inspectCode",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "{ node, code, id }",
                  "type": {
                    "text": "{ node: KeyBase } & CodeIdPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "inspectCodeableConcept",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "{ node, concept, bindingId }",
                  "type": {
                    "text": "{ node: KeyBase } & CodeableConceptIdPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "all",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "KeyErrorPair[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "choices",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Choices"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "allFor",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "KeyErrorPair[]"
                }
              },
              "parameters": [
                {
                  "name": "fqks",
                  "type": {
                    "text": "FullyQualifiedKey[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "code",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Choices"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "slice",
          "return": {
            "type": {
              "text": "FullyQualifiedKey"
            }
          },
          "parameters": [
            {
              "name": "fqk",
              "type": {
                "text": "FullyQualifiedKey"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "matches",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "sliceKey",
              "type": {
                "text": "FullyQualifiedKey"
              }
            },
            {
              "name": "storeKey",
              "type": {
                "text": "FullyQualifiedKey"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidationsImpl",
          "declaration": {
            "name": "ValidationsImpl",
            "module": "src/internal/base/Validations.impl.ts"
          }
        },
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "src/internal/base/Validations.impl.ts"
          }
        },
        {
          "kind": "js",
          "name": "matches",
          "declaration": {
            "name": "matches",
            "module": "src/internal/base/Validations.impl.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Validations.type.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "errors"
        },
        {
          "kind": "variable",
          "name": "meta"
        },
        {
          "kind": "variable",
          "name": "profile"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "errors",
          "declaration": {
            "name": "errors",
            "module": "src/internal/base/Validations.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "meta",
          "declaration": {
            "name": "meta",
            "module": "src/internal/base/Validations.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "src/internal/base/Validations.type.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/display-config.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ArraySortingFunction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DataHandling"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate.types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DeepKeyMap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirElement.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Rendering"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Templating"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.impl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./configurable/fhir-configurable-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./presentable/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/customization/fhir-context-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirContextElement",
          "members": [
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "FhirDataContext"
              },
              "description": "Request data context from parent element"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "null | string"
              },
              "description": "define json path to be requested from parent data. Lookup corresponding FHIR model of parent.",
              "default": "dataPath"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "description": "value retrieved from context for `dataPath` property, based on the `data-path` attribute or as a constructor\nargument."
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValueMap<any>"
                  }
                }
              ],
              "description": "attribute update handling"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Override this method to render something useful after the context value has been retrieved"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirContextElement",
          "declaration": {
            "name": "FhirContextElement",
            "module": "src/internal/customization/fhir-context-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/customization/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-context-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/beacon-data-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconDataError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconDataError'"
            },
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "msg"
            },
            {
              "kind": "field",
              "name": "stack",
              "type": {
                "text": "string | undefined | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconDataError",
          "declaration": {
            "name": "BeaconDataError",
            "module": "src/internal/errors/beacon-data-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/beacon-element-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconElementError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconStateError'"
            },
            {
              "kind": "field",
              "name": "stack",
              "type": {
                "text": "string | undefined | undefined"
              }
            },
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "msg"
            },
            {
              "kind": "field",
              "name": "element",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "element"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconElementError",
          "declaration": {
            "name": "BeaconElementError",
            "module": "src/internal/errors/beacon-element-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-data-error"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-element-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/Backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Backbone",
          "members": [
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/BaseElement"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Backbone",
          "declaration": {
            "name": "Backbone",
            "module": "src/internal/resource/Backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/DomainResource.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DomainResource",
          "members": [
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Resource",
            "module": "/src/internal/resource/Resource"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DomainResource",
          "declaration": {
            "name": "DomainResource",
            "module": "src/internal/resource/DomainResource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/Resource.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Resource",
          "members": [
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/BaseElement"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "src/internal/resource/Resource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/backbone.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/domain-resource.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DomainResource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Resource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./domain-resource.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderResourceComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/renderResourceComponent.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderResourceComponent",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "ResourceData | undefined"
              }
            },
            {
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              }
            },
            {
              "name": "summary",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderResourceComponent",
          "declaration": {
            "name": "renderResourceComponent",
            "module": "src/internal/resource/renderResourceComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/StructureDefinition.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "StructureDefinition class serves as a blueprint for defining a resource structure.\nIt provides functionality to set, retrieve, and manipulate properties and constraints\nfor a given resource definition. The class also supports creating deep clones,\nserializing, and converting structure definitions into a JSON or string representation.",
          "name": "StructureDefinition",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ResourceDef | DatatypeDef"
              },
              "default": "name"
            },
            {
              "kind": "field",
              "name": "props",
              "default": "new Map<string, Defs<T>>()"
            },
            {
              "kind": "field",
              "name": "constraints",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "extendRender",
              "type": {
                "text": "Map<DisplayMode, TemplateGenerator<T>>"
              },
              "default": "new Map<DisplayMode, TemplateGenerator<T>>()"
            },
            {
              "kind": "field",
              "name": "overrideRender",
              "type": {
                "text": "Map<DisplayMode, TemplateGenerator<T>>"
              },
              "default": "new Map<DisplayMode, TemplateGenerator<T>>()"
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "Defs<T>"
                  }
                },
                {
                  "name": "key",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Defs<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSlice",
              "return": {
                "type": {
                  "text": "PropertySliceDef<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getProperty",
              "return": {
                "type": {
                  "text": "PropertyDef<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getExtension",
              "return": {
                "type": {
                  "text": "ExtensionDef | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clone",
              "return": {
                "type": {
                  "text": "StructureDefinition<T>"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "indent",
                  "default": "'    '",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toJSON",
              "return": {
                "type": {
                  "text": "object"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propToString",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "iterable",
                  "type": {
                    "text": "Defs<T>[]"
                  }
                },
                {
                  "name": "indent",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "flattenKey",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "choicePrefix",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Context"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StructureDefinition",
          "declaration": {
            "name": "StructureDefinition",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        },
        {
          "kind": "js",
          "name": "flattenKey",
          "declaration": {
            "name": "flattenKey",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        },
        {
          "kind": "js",
          "name": "Context",
          "declaration": {
            "name": "Context",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/definition.type.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isExtensionDef",
          "return": {
            "type": {
              "text": "def is ExtensionDef"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitiveExtensionDef",
          "return": {
            "type": {
              "text": "def is ExtensionDef"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertyDef",
          "return": {
            "type": {
              "text": "def is PropertyDef<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertySliceDef",
          "return": {
            "type": {
              "text": "def is PropertySliceDef<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithChildren",
          "return": {
            "type": {
              "text": "def is { subdefs: Map<string, PropertyDef<T>> }"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithConstraints",
          "return": {
            "type": {
              "text": "def is { constraints: DefConstraintAssertion<T>[] }"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isExtensionDef",
          "declaration": {
            "name": "isExtensionDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitiveExtensionDef",
          "declaration": {
            "name": "isPrimitiveExtensionDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPropertyDef",
          "declaration": {
            "name": "isPropertyDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPropertySliceDef",
          "declaration": {
            "name": "isPropertySliceDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithChildren",
          "declaration": {
            "name": "isDefWithChildren",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithConstraints",
          "declaration": {
            "name": "isDefWithConstraints",
            "module": "src/profiling/definition/definition.type.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./StructureDefinition"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition.type"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/builder.type.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/define.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "define",
          "type": {
            "text": "Define"
          },
          "default": "{ oneOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..1', [], Example, [] as DefConstraintAssertion<T>[])), optionOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [] as DefConstraintAssertion<T>[])), choiceOf: <T extends Decorateable>(choice: string, k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [] as DefConstraintAssertion<T>[], choice)), minOneOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [] as DefConstraintAssertion<T>[])), listOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [] as DefConstraintAssertion<T>[])), optionalListOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..*', [], Example, [] as DefConstraintAssertion<T>[])), backboneOf: <T extends Decorateable>(key: string, def: StructureDefinition<T>) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..1', [], Example, [] as DefConstraintAssertion<T>[], undefined, def.props)), backboneListOf: <T extends Decorateable>(key: string, def: StructureDefinition<T>) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..*', [], Example, [] as DefConstraintAssertion<T>[], undefined, def.props)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "define",
          "declaration": {
            "name": "define",
            "module": "src/profiling/builder/define.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/definitionBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionBuilder",
          "return": {
            "type": {
              "text": "PropertyBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "PropertyDef<T>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionBuilder",
          "declaration": {
            "name": "definitionBuilder",
            "module": "src/profiling/builder/definitionBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/definitionProperty.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionProperty",
          "return": {
            "type": {
              "text": "PropertyDef<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "typeName",
              "type": {
                "text": "TypeName"
              }
            },
            {
              "name": "typeNarrowing",
              "default": "[]",
              "type": {
                "text": "NarrowableNames[]"
              }
            },
            {
              "name": "cardinality",
              "default": "'1..1'",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "bindings",
              "default": "[]",
              "type": {
                "text": "CodeIds | Choice[] | Choices"
              }
            },
            {
              "name": "bindingStrength",
              "default": "Example",
              "type": {
                "text": "BindingStrength"
              }
            },
            {
              "name": "constraints",
              "default": "[]",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              }
            },
            {
              "name": "choice",
              "default": "undefined",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "subdefs",
              "default": "undefined",
              "type": {
                "text": "Map<string, Defs<T>> | undefined"
              }
            },
            {
              "name": "mustSupport",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "name": "isModifier",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "name": "isSummary",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionProperty",
          "declaration": {
            "name": "definitionProperty",
            "module": "src/profiling/builder/definitionProperty.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/extend.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "extend",
          "type": {
            "text": "Extend"
          },
          "default": "{ withOne: <T extends Decorateable>(key: string, extension: Extension): RenderBuilder<T> => extensionBuilder(key, extension), withComplex: <T extends Decorateable>(key: string, extensions: Extensions): RenderBuilder<T> => complexExtensionBuilder(key, extensions), primitive: <T extends Decorateable>(primtiveKey: string, url: string, extensions: Extension[]): RenderBuilder<T> => primitiveExtensionBuilder( primtiveKey, url, extensions) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extend",
          "declaration": {
            "name": "extend",
            "module": "src/profiling/builder/extend.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/extensionBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "extensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extension"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "complexExtensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extensions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "primitiveExtensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "primitiveKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extension[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extensionBuilder",
          "declaration": {
            "name": "extensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        },
        {
          "kind": "js",
          "name": "complexExtensionBuilder",
          "declaration": {
            "name": "complexExtensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        },
        {
          "kind": "js",
          "name": "primitiveExtensionBuilder",
          "declaration": {
            "name": "primitiveExtensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./define"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionProperty"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extend"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extensionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceProp"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/slice.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slice",
          "type": {
            "text": "Slice"
          },
          "default": "{ oneFor: <T extends Decorateable>(key: string[], constraints: DefConstraintAssertion<T>[], fixedValues: unknown[] = [], choice: string = '') => sliceBuilder<T>(sliceProp(key, choice, constraints, fixedValues)), constraint: <T extends Decorateable>(key: string[], constraints: DefConstraintAssertion<T>[], fixedValues: unknown[] = [], choice: string = '') => sliceBuilder<T>(sliceProp(key, choice, constraints, fixedValues)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "src/profiling/builder/slice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/sliceBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceBuilder",
          "return": {
            "type": {
              "text": "Builder<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "PropertySliceDef<T>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceBuilder",
          "declaration": {
            "name": "sliceBuilder",
            "module": "src/profiling/builder/sliceBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/sliceProp.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceProp",
          "return": {
            "type": {
              "text": "PropertySliceDef<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "choice",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "constraints",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              }
            },
            {
              "name": "fixedValues",
              "type": {
                "text": "unknown[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceProp",
          "declaration": {
            "name": "sliceProp",
            "module": "src/profiling/builder/sliceProp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/AlternatingLogger.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "alternatingColor"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alternatingColor",
          "declaration": {
            "name": "alternatingColor",
            "module": "src/profiling/util/AlternatingLogger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/BindingStrength.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BindingStrength",
          "members": [
            {
              "kind": "field",
              "name": "Required",
              "static": true,
              "default": "new BindingStrength('required')"
            },
            {
              "kind": "field",
              "name": "Extensible",
              "static": true,
              "default": "new BindingStrength('extensible')"
            },
            {
              "kind": "field",
              "name": "Preferred",
              "static": true,
              "default": "new BindingStrength('preferred')"
            },
            {
              "kind": "field",
              "name": "Example",
              "static": true,
              "default": "new BindingStrength('example')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              },
              "description": "Get all available binding strength values"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available binding strength values as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "The value to check"
                }
              ],
              "description": "Check if a value is a valid binding strength"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get a binding strength by its string value"
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              },
              "parameters": [
                {
                  "name": "prefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "The prefix to filter by"
                }
              ],
              "description": "Get binding strengths that start with the given prefix"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ Required, Extensible, Example, Preferred }",
          "default": "BindingStrength"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BindingStrength",
          "declaration": {
            "name": "BindingStrength",
            "module": "src/profiling/util/BindingStrength.ts"
          }
        },
        {
          "kind": "js",
          "name": "{ Required, Extensible, Example, Preferred }",
          "declaration": {
            "name": "{ Required, Extensible, Example, Preferred }",
            "module": "src/profiling/util/BindingStrength.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/BoundArray.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BoundArray",
          "members": [
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "max"
            },
            {
              "kind": "field",
              "name": "array",
              "type": {
                "text": "any[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "initialValues"
            },
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be added."
                }
              ],
              "description": "Adds an element to the array. Enforces the maximum"
            },
            {
              "kind": "method",
              "name": "remove",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be removed."
                }
              ],
              "description": "Removes an element from the array. Enforces the minimum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "insert",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  },
                  "description": "The index at which to insert the element."
                },
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be inserted."
                }
              ],
              "description": "Inserts an element at a specified index. Enforces the maximum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "contains",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to check."
                }
              ],
              "description": "Checks if an element exists in the array."
            },
            {
              "kind": "method",
              "name": "getArray",
              "return": {
                "type": {
                  "text": "Array"
                }
              },
              "description": "Gets the current array."
            },
            {
              "kind": "method",
              "name": "size",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "description": "Gets the current size of the array."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BoundArray",
          "declaration": {
            "name": "BoundArray",
            "module": "src/profiling/util/BoundArray.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AlternatingLogger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BindingStrength"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BoundArray"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./valuePresent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/valuePresent.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "aValuePresent",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Record<string, unknown>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "aValuePresent",
          "declaration": {
            "name": "aValuePresent",
            "module": "src/profiling/util/valuePresent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/directives.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSome",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasMany",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              },
              "description": "The data array to check."
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Optional parameter to enable verbose mode.",
              "optional": true
            }
          ],
          "description": "The hasMany function determines if an array has more than 1 item.",
          "return": {
            "type": {
              "text": "boolean"
            }
          }
        },
        {
          "kind": "function",
          "name": "hasOnlyOne",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefined",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "any | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSome",
          "declaration": {
            "name": "hasSome",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasMany",
          "declaration": {
            "name": "hasMany",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasOnlyOne",
          "declaration": {
            "name": "hasOnlyOne",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "isDefined",
            "module": "src/shell/layout/directives.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/empty-set.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EmptySet",
          "members": [
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptySet",
          "declaration": {
            "name": "EmptySet",
            "module": "src/shell/layout/empty-set.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./directives"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./empty-set"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pluralize"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderBackboneCollection"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./show"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./combo/systemChoice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/pluralize.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pluralize",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "word",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pluralize",
          "declaration": {
            "name": "pluralize",
            "module": "src/shell/layout/pluralize.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/renderBackboneCollection.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderSingleBackbone",
          "parameters": [
            {
              "name": "itemLabel",
              "type": {
                "text": "null | string"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number | null"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "template",
              "type": {
                "text": "TemplateResult"
              }
            }
          ],
          "deprecated": "true"
        },
        {
          "kind": "function",
          "name": "renderBackboneCollection",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "groupLabel",
              "type": {
                "text": "string"
              },
              "description": "The label for the collection group."
            },
            {
              "name": "itemLabel",
              "type": {
                "text": "string | null"
              },
              "description": "The label for each item in the collection."
            },
            {
              "name": "collection",
              "type": {
                "text": "T[]"
              },
              "description": "The collection of items to render."
            },
            {
              "name": "templateGenerator",
              "type": {
                "text": "(item: T, index: number) => TemplateResult"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to display verbose output.",
              "optional": true
            },
            {
              "description": ", index: number): TemplateResult} templateGenerator - The function that generates the\ntemplate for each item in the collection.",
              "name": "",
              "type": {
                "text": "function(item: T"
              }
            }
          ],
          "description": "Renders a Backbone collection using provided template and labels.",
          "deprecated": "true"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderSingleBackbone",
          "declaration": {
            "name": "renderSingleBackbone",
            "module": "src/shell/layout/renderBackboneCollection.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderBackboneCollection",
          "declaration": {
            "name": "renderBackboneCollection",
            "module": "src/shell/layout/renderBackboneCollection.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/show.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "show",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "idx",
              "type": {
                "text": "number|string"
              },
              "description": "The index to be displayed."
            }
          ],
          "description": "Displays the index if it is a number, otherwise returns an empty string."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "show",
          "declaration": {
            "name": "show",
            "module": "src/shell/layout/show.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapperCollection.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/debug.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` div { padding: 0; margin: 0; } ul { display: inline-block; background-color: var(--sl-color-blue-200); color: #0c2d6b; border-radius: 0.5rem; border: solid 0.1rem var(--sl-color-blue-400); margin: 0.5rem; padding: 0.5rem 1rem; } li { font-family: monospace; font-size: 0.8rem; margin-top: 0.5rem; list-style-type: none; color: var(--sl-color-yellow-900); } pre { max-width: 40rem; word-wrap: anywhere; white-space: pre-wrap; margin: 0rem; padding: 0.3rem; color: var(--sl-color-blue-800); border-radius: 0.5rem; background-color: var(--sl-color-blue-300); } .key { font-weight: bold; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/utilities/debug/debug.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/debug.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debug",
          "parameters": [
            {
              "name": "debug",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "object"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Debug",
          "members": [
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "object"
              },
              "privacy": "public",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "longest",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            },
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "stringify",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debug",
          "declaration": {
            "name": "debug",
            "module": "src/utilities/debug/debug.ts"
          }
        },
        {
          "kind": "js",
          "name": "Debug",
          "declaration": {
            "name": "Debug",
            "module": "src/utilities/debug/debug.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/processor/ValueSetProcessor.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "removeValues",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "included",
              "type": {
                "text": "ResolvedValue[]"
              },
              "description": "The array to filter."
            },
            {
              "name": "excluded",
              "type": {
                "text": "ResolvedValue[]"
              },
              "description": "The array of values to remove from the source array."
            }
          ],
          "description": "Removes values from the source array that are included in the valuesToRemove array."
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetProcessor",
          "members": [
            {
              "kind": "field",
              "name": "#source",
              "privacy": "private",
              "type": {
                "text": "ValueSetSource | LoadableStore"
              },
              "default": "source"
            },
            {
              "kind": "field",
              "name": "#ready",
              "privacy": "private",
              "type": {
                "text": "Promise<boolean>"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "debug",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "processAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "all",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "removeValues",
          "declaration": {
            "name": "removeValues",
            "module": "src/valuesets/processor/ValueSetProcessor.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetProcessor",
          "declaration": {
            "name": "ValueSetProcessor",
            "module": "src/valuesets/processor/ValueSetProcessor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/FSSource.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "empty",
          "return": {
            "type": {
              "text": "ResolvedSet"
            }
          },
          "parameters": [
            {
              "name": "source",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'CodeSystem' | 'ValueSet' | 'unknown'"
              }
            },
            {
              "name": "err",
              "optional": true,
              "type": {
                "text": "FetchError"
              }
            },
            {
              "name": "isError",
              "default": "true",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FSSource",
          "members": [
            {
              "kind": "field",
              "name": "#criteria",
              "privacy": "private",
              "type": {
                "text": "Criteria"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#path",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "default": "path"
            },
            {
              "kind": "field",
              "name": "#loaded",
              "privacy": "private",
              "type": {
                "text": "boolean | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#files",
              "privacy": "private",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#cache",
              "privacy": "private",
              "type": {
                "text": "Map<string, ResolvedSet>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "#basePath",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "method",
              "name": "allIds",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string[]>"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadDir",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadfile",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "isLoaded",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "size",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "exists",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolve",
              "return": {
                "type": {
                  "text": "Promise<ResolvedSet[]>"
                }
              },
              "parameters": [
                {
                  "name": "source",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "cacheAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "matchAll",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "_",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "valueSetCriteria",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "file",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "codesystemCriteria",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "file",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "empty",
          "declaration": {
            "name": "empty",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "FSSource",
          "declaration": {
            "name": "FSSource",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "matchAll",
          "declaration": {
            "name": "matchAll",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "valueSetCriteria",
          "declaration": {
            "name": "valueSetCriteria",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "codesystemCriteria",
          "declaration": {
            "name": "codesystemCriteria",
            "module": "src/valuesets/source/FSSource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/Fetch.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "fetchIt",
          "return": {
            "type": {
              "text": "Promise<ResolveResponse>"
            }
          },
          "parameters": [
            {
              "name": "{\n                                url,\n                                options = defaultOptions,\n                                retries = 3,\n                                retryFactor = 1000,\n                                debug = true\n                              }",
              "type": {
                "text": "ResolveRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fetchIt",
          "declaration": {
            "name": "fetchIt",
            "module": "src/valuesets/source/Fetch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/FetchError.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FetchError",
          "superclass": {
            "name": "Error",
            "module": "src/valuesets/source/FetchError.ts"
          }
        },
        {
          "kind": "function",
          "name": "throwError",
          "return": {
            "type": {
              "text": "FetchError"
            }
          },
          "parameters": [
            {
              "name": "response",
              "type": {
                "text": "Response | FetchError"
              }
            },
            {
              "name": "body",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "message",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "cause",
              "optional": true,
              "type": {
                "text": "Error | unknown"
              }
            },
            {
              "name": "retryable",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FetchError",
          "declaration": {
            "name": "FetchError",
            "module": "src/valuesets/source/FetchError.ts"
          }
        },
        {
          "kind": "js",
          "name": "throwError",
          "declaration": {
            "name": "throwError",
            "module": "src/valuesets/source/FetchError.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/LogFetchRequest.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "logFetchRequest",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "statusText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'basic' | 'cors' | 'default' | 'error' | 'opaque' | 'opaqueredirect' | string"
              }
            },
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "cause",
              "optional": true,
              "type": {
                "text": "Error | unknown"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "logFetchRequest",
          "declaration": {
            "name": "logFetchRequest",
            "module": "src/valuesets/source/LogFetchRequest.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveBundle.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveBundle",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "bundle",
              "type": {
                "text": "BundleData"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveBundle",
          "declaration": {
            "name": "resolveBundle",
            "module": "src/valuesets/source/ResolveBundle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveCodeSystem.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveCodeSystem",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "vs",
              "type": {
                "text": "CodeSystemData"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveCodeSystem",
          "declaration": {
            "name": "resolveCodeSystem",
            "module": "src/valuesets/source/ResolveCodeSystem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveValueSet.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveValueSet",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "vs",
              "type": {
                "text": "ValueSetData"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resolveIncludesOrExclude",
          "return": {
            "type": {
              "text": "Promise<ResolvedValue[][]>"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "segment",
              "type": {
                "text": "ValueSetIncludeExcludeData[]"
              }
            },
            {
              "name": "variant",
              "default": "'include'",
              "type": {
                "text": "'include' | 'exclude'"
              }
            },
            {
              "name": "debug",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveValueSet",
          "declaration": {
            "name": "resolveValueSet",
            "module": "src/valuesets/source/ResolveValueSet.ts"
          }
        },
        {
          "kind": "js",
          "name": "resolveIncludesOrExclude",
          "declaration": {
            "name": "resolveIncludesOrExclude",
            "module": "src/valuesets/source/ResolveValueSet.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/store/FSStore.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FSStore",
          "members": [
            {
              "kind": "field",
              "name": "#created",
              "privacy": "private",
              "type": {
                "text": "Promise<string | undefined>"
              }
            },
            {
              "kind": "field",
              "name": "#choices",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "write",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "choices",
                  "type": {
                    "text": "Choices"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "writeMeta",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "sets",
                  "type": {
                    "text": "Choices[]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FSStore",
          "declaration": {
            "name": "FSStore",
            "module": "src/valuesets/store/FSStore.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/layout/badge-group.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/Badge Group' }"
        },
        {
          "kind": "variable",
          "name": "All",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group summary constraint required resource='Human Name' profile='Profile Name'></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Resource",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group resource='Human Name'></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Summary",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group summary></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Constraint",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group constraint></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Required",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group required></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Profile",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-badge-group profile=\"Profile Name\"></fhir-badge-group> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "All",
          "declaration": {
            "name": "All",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Summary",
          "declaration": {
            "name": "Summary",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Constraint",
          "declaration": {
            "name": "Constraint",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Profile",
          "declaration": {
            "name": "Profile",
            "module": "stories/system/layout/badge-group.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/layout/systemchoice.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/SystemChoice' }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-system-choice .value=${'foo'} .valuesets=${[{ value: 'foo', label: 'a Foo' }, { value: 'bar', label: 'a Bar' }]} .codingsystems=${[{ value: 'baz', label: 'a Baz' }, { value: 'buzz', label: 'a Buz' }]} ?overridable=${false} label=\"the label\" > </fhir-system-choice> ` }"
        },
        {
          "kind": "variable",
          "name": "Override",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-system-choice .value=${'foo'} .valuesets=${[{ value: 'foo', label: 'a Foo' }, { value: 'bar', label: 'a Bar' }]} .codingsystems=${[{ value: 'baz', label: 'a Baz' }, { value: 'buzz', label: 'a Buz' }]} ?overridable=${true} > <fhir-label slot=\"label\" text=\"the label\"></fhir-label> </fhir-system-choice> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/layout/systemchoice.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "stories/system/layout/systemchoice.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Override",
          "declaration": {
            "name": "Override",
            "module": "stories/system/layout/systemchoice.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/layout/wrapper.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/Wrappers' }"
        },
        {
          "kind": "variable",
          "name": "WrapperEmpty",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperWithLabel",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper label=\"name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperStructure",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper key=\"name\" label=\"name\" variant=\"details\" badge-resource='Human Name' badge-summary badge-constraint > <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperNoLabel",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "Wrapper",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperType",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Human Name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "NoWrapper",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <div> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </div> ` }"
        },
        {
          "kind": "variable",
          "name": "StructureWrapper",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper label=\"Contact\" badge-resource=\"Practitioner\" variant=\"details\"> <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Name\" badge-resource=\"Human Name\" variant=\"details\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WrapperEmpty",
          "declaration": {
            "name": "WrapperEmpty",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WrapperWithLabel",
          "declaration": {
            "name": "WrapperWithLabel",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WrapperStructure",
          "declaration": {
            "name": "WrapperStructure",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WrapperNoLabel",
          "declaration": {
            "name": "WrapperNoLabel",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WrapperType",
          "declaration": {
            "name": "WrapperType",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoWrapper",
          "declaration": {
            "name": "NoWrapper",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "StructureWrapper",
          "declaration": {
            "name": "StructureWrapper",
            "module": "stories/system/layout/wrapper.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/primitive_elements/context.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "default": "{ title: 'Toolkit/Primitive Elements/Context Element' } satisfies Meta"
        },
        {
          "kind": "variable",
          "name": "ContextElement",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper> <fhir-context text=\"some context\"></fhir-value> </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/primitive_elements/context.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ContextElement",
          "declaration": {
            "name": "ContextElement",
            "module": "stories/system/primitive_elements/context.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/primitive_elements/error.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "default": "{ title: 'Toolkit/Primitive Elements/Error Element' } satisfies Meta"
        },
        {
          "kind": "variable",
          "name": "ErrorElement",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-error text=\"Some Error\"></fhir-value> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/primitive_elements/error.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ErrorElement",
          "declaration": {
            "name": "ErrorElement",
            "module": "stories/system/primitive_elements/error.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/primitive_elements/label.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "default": "{ title: 'Toolkit/Primitive Elements/Label Element' } satisfies Meta"
        },
        {
          "kind": "variable",
          "name": "LabelElement",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-wrapper> <fhir-primitive label=\"Doctor\" value=\"Alice Nixon\" link=\"/practitioner/1234\"></fhir-primitive > <fhir-primitive label=\"Doctor\" delimiter=\" - \" value=\"Jenny Nixon\"></fhir-primitive > <fhir-primitive label=\"link\" value=\"1234\" type=\"url\" ?showerror=${true}></fhir-primitive > </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/primitive_elements/label.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "LabelElement",
          "declaration": {
            "name": "LabelElement",
            "module": "stories/system/primitive_elements/label.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/primitive_elements/primitive.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Primitive Element' }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"quantity\" type='decimal' value=\"100\" showerror ><span slot=\"after\">ml</span ></fhir-primitive > ` }"
        },
        {
          "kind": "variable",
          "name": "Static",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive-wrapper > <fhir-label text=\"quantity\"></fhir-label > <fhir-value text=\"100,0\"><span slot=\"after\">ml</span ></fhir-value > <fhir-error text=\"oopsy!\"></fhir-error > </fhir-primitive-wrapper > ` }"
        },
        {
          "kind": "variable",
          "name": "Dynamic",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"quantity\" type='decimal' value=\"100,0\" context=\"25064002\" showerror ></fhir-primitive > ` }"
        },
        {
          "kind": "variable",
          "name": "WithContext",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <fhir-primitive label=\"quantity\" type='decimal' value=\"100.0\" context=\"25064002\" ></fhir-primitive > ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/primitive_elements/primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "stories/system/primitive_elements/primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Static",
          "declaration": {
            "name": "Static",
            "module": "stories/system/primitive_elements/primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Dynamic",
          "declaration": {
            "name": "Dynamic",
            "module": "stories/system/primitive_elements/primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithContext",
          "declaration": {
            "name": "WithContext",
            "module": "stories/system/primitive_elements/primitive.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/primitive_elements/value.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "default": "{ title: 'Toolkit/Primitive Elements/Value Element' } satisfies Meta"
        },
        {
          "kind": "variable",
          "name": "ValueElement",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => html` <h2 >Value</h2 > <fhir-wrapper> <h3 >simple value</h3 > <fhir-value text=\"John Smith\"></fhir-value > <h3 >link value</h3 > <fhir-value text=\"John Smith\" link=\"http://foo.com/patient/1234\"></fhir-value > <h3 >placeholder value</h3 > <fhir-value text=\"\" placeholder=\"missing value\"></fhir-value > <h3 >prefix and suffix value</h3 > <fhir-value text=\"100\"> <span slot=\"before\">></span > <span slot=\"after\">%</span > </fhir-value > <h3 >long value value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\"></fhir-value > <h3 ><code >hide-overflow</code > variant on long value</h3 > <fhir-value id=\"debug-target\" text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida. Tellus in hac habitasse platea. Posuere urna nec tincidunt praesent semper feugiat nibh. Tortor pretium viverra suspendisse potenti nullam ac tortor. Fusce id velit ut tortor pretium viverra suspendisse potenti. Enim eu turpis egestas pretium aenean pharetra. Non consectetur a erat nam at lectus. Amet est placerat in egestas erat imperdiet sed.\" variant=\"hide-overflow\"></fhir-value > <h3 ><code >fixed-width</code > variant on long value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\" variant=\"fixed-width\"></fhir-value > </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/primitive_elements/value.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValueElement",
          "declaration": {
            "name": "ValueElement",
            "module": "stories/system/primitive_elements/value.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/chromatic-com-storybook-9/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/docs-11/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-actions-3/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-controls-2/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-backgrounds-4/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-measure-7/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-outline-8/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-toolbars-6/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/essentials-viewport-5/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/links-1/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/storybook-12/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/storybook-core-core-server-presets-0/common-manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "storybook-static/sb-addons/whitespace-html-10/manager-bundle.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/layout/badge-group.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/Badge Group' }"
        },
        {
          "kind": "variable",
          "name": "All",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group summary constraint required resource='Human Name' profile='Profile Name'></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Resource",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group resource='Human Name'></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Summary",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group summary></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Constraint",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group constraint></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Required",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group required></fhir-badge-group> ` }"
        },
        {
          "kind": "variable",
          "name": "Profile",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-badge-group profile=\"Profile Name\"></fhir-badge-group> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "All",
          "declaration": {
            "name": "All",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Summary",
          "declaration": {
            "name": "Summary",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Constraint",
          "declaration": {
            "name": "Constraint",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Required",
          "declaration": {
            "name": "Required",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Profile",
          "declaration": {
            "name": "Profile",
            "module": "dist/stories/system/layout/badge-group.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/layout/systemchoice.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/SystemChoice' }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-system-choice .value=${'foo'} .valuesets=${[{ value: 'foo', label: 'a Foo' }, { value: 'bar', label: 'a Bar' }]} .codingsystems=${[{ value: 'baz', label: 'a Baz' }, { value: 'buzz', label: 'a Buz' }]} ?overridable=${false} label=\"the label\" > </fhir-system-choice> ` }"
        },
        {
          "kind": "variable",
          "name": "Override",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-system-choice .value=${'foo'} .valuesets=${[{ value: 'foo', label: 'a Foo' }, { value: 'bar', label: 'a Bar' }]} .codingsystems=${[{ value: 'baz', label: 'a Baz' }, { value: 'buzz', label: 'a Buz' }]} ?overridable=${true} > <fhir-label slot=\"label\" text=\"the label\"></fhir-label> </fhir-system-choice> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/layout/systemchoice.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "dist/stories/system/layout/systemchoice.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Override",
          "declaration": {
            "name": "Override",
            "module": "dist/stories/system/layout/systemchoice.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/layout/wrapper.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Layout/Wrappers' }"
        },
        {
          "kind": "variable",
          "name": "WrapperEmpty",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperWithLabel",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper label=\"name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperStructure",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper key=\"name\" label=\"name\" variant=\"details\" badge-resource='Human Name' badge-summary badge-constraint > <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperNoLabel",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "Wrapper",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "WrapperType",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Human Name\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> ` }"
        },
        {
          "kind": "variable",
          "name": "NoWrapper",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <div> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </div> ` }"
        },
        {
          "kind": "variable",
          "name": "StructureWrapper",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper label=\"Contact\" badge-resource=\"Practitioner\" variant=\"details\"> <fhir-primitive label=\"gender\" value=\"male\"></fhir-primitive> <fhir-wrapper label=\"Name\" badge-resource=\"Human Name\" variant=\"details\"> <fhir-primitive label=\"title\" value=\"Dr.\"></fhir-primitive> <fhir-primitive label=\"first name\" value=\"Jack\"></fhir-primitive> <fhir-primitive label=\"last name\" value=\"Smith\"></fhir-primitive> </fhir-wrapper> </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WrapperEmpty",
          "declaration": {
            "name": "WrapperEmpty",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WrapperWithLabel",
          "declaration": {
            "name": "WrapperWithLabel",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WrapperStructure",
          "declaration": {
            "name": "WrapperStructure",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WrapperNoLabel",
          "declaration": {
            "name": "WrapperNoLabel",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WrapperType",
          "declaration": {
            "name": "WrapperType",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "NoWrapper",
          "declaration": {
            "name": "NoWrapper",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "StructureWrapper",
          "declaration": {
            "name": "StructureWrapper",
            "module": "dist/stories/system/layout/wrapper.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/primitive_elements/context.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Context Element' }"
        },
        {
          "kind": "variable",
          "name": "ContextElement",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper> <fhir-context text=\"some context\"></fhir-value> </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/primitive_elements/context.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ContextElement",
          "declaration": {
            "name": "ContextElement",
            "module": "dist/stories/system/primitive_elements/context.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/primitive_elements/error.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Error Element' }"
        },
        {
          "kind": "variable",
          "name": "ErrorElement",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-error text=\"Some Error\"></fhir-value> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/primitive_elements/error.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ErrorElement",
          "declaration": {
            "name": "ErrorElement",
            "module": "dist/stories/system/primitive_elements/error.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/primitive_elements/label.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Label Element' }"
        },
        {
          "kind": "variable",
          "name": "LabelElement",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-wrapper> <fhir-primitive label=\"Doctor\" value=\"Alice Nixon\" link=\"/practitioner/1234\"></fhir-primitive > <fhir-primitive label=\"Doctor\" delimiter=\" - \" value=\"Jenny Nixon\"></fhir-primitive > <fhir-primitive label=\"link\" value=\"1234\" type=\"url\" ?showerror=${true}></fhir-primitive > </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/primitive_elements/label.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "LabelElement",
          "declaration": {
            "name": "LabelElement",
            "module": "dist/stories/system/primitive_elements/label.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/primitive_elements/primitive.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Primitive Element' }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"quantity\" type='decimal' value=\"100\" showerror ><span slot=\"after\">ml</span ></fhir-primitive > ` }"
        },
        {
          "kind": "variable",
          "name": "Static",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive-wrapper > <fhir-label text=\"quantity\"></fhir-label > <fhir-value text=\"100,0\"><span slot=\"after\">ml</span ></fhir-value > <fhir-error text=\"oopsy!\"></fhir-error > </fhir-primitive-wrapper > ` }"
        },
        {
          "kind": "variable",
          "name": "Dynamic",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"quantity\" type='decimal' value=\"100,0\" context=\"25064002\" showerror ></fhir-primitive > ` }"
        },
        {
          "kind": "variable",
          "name": "WithContext",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <fhir-primitive label=\"quantity\" type='decimal' value=\"100.0\" context=\"25064002\" ></fhir-primitive > ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/primitive_elements/primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "dist/stories/system/primitive_elements/primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Static",
          "declaration": {
            "name": "Static",
            "module": "dist/stories/system/primitive_elements/primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Dynamic",
          "declaration": {
            "name": "Dynamic",
            "module": "dist/stories/system/primitive_elements/primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WithContext",
          "declaration": {
            "name": "WithContext",
            "module": "dist/stories/system/primitive_elements/primitive.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/primitive_elements/value.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Toolkit/Primitive Elements/Value Element' }"
        },
        {
          "kind": "variable",
          "name": "ValueElement",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => html ` <h2 >Value</h2 > <fhir-wrapper> <h3 >simple value</h3 > <fhir-value text=\"John Smith\"></fhir-value > <h3 >link value</h3 > <fhir-value text=\"John Smith\" link=\"http://foo.com/patient/1234\"></fhir-value > <h3 >placeholder value</h3 > <fhir-value text=\"\" placeholder=\"missing value\"></fhir-value > <h3 >prefix and suffix value</h3 > <fhir-value text=\"100\"> <span slot=\"before\">></span > <span slot=\"after\">%</span > </fhir-value > <h3 >long value value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\"></fhir-value > <h3 ><code >hide-overflow</code > variant on long value</h3 > <fhir-value id=\"debug-target\" text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida. Tellus in hac habitasse platea. Posuere urna nec tincidunt praesent semper feugiat nibh. Tortor pretium viverra suspendisse potenti nullam ac tortor. Fusce id velit ut tortor pretium viverra suspendisse potenti. Enim eu turpis egestas pretium aenean pharetra. Non consectetur a erat nam at lectus. Amet est placerat in egestas erat imperdiet sed.\" variant=\"hide-overflow\"></fhir-value > <h3 ><code >fixed-width</code > variant on long value</h3 > <fhir-value text=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Praesent elementum facilisis leo vel fringilla est ullamcorper eget. Massa ultricies mi quis hendrerit dolor magna eget est lorem. Amet luctus venenatis lectus magna fringilla urna porttitor. Dolor sed viverra ipsum nunc aliquet bibendum enim facilisis gravida.\" variant=\"fixed-width\"></fhir-value > </fhir-wrapper> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/primitive_elements/value.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ValueElement",
          "declaration": {
            "name": "ValueElement",
            "module": "dist/stories/system/primitive_elements/value.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/metadata/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-details/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./not-supported"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.validator"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInputEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInvalidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveValidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-formatters/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/not-supported.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "NotSupported",
          "default": "class NotSupported extends LitElement { createRenderRoot() { return this; } render() { if (!this.variant && (this.label || this.description)) { return html ` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" .errormessage=${this.error} .type=${PrimitiveType.forced_error}></fhir-primitive > `; } switch (this.variant) { case 'no-data': return html ` <fhir-primitive .label=\"${this.label ?? 'error'}\" .value=\"${this.description ?? 'No data provided.'}\" errormessage=\"the data or data-path property must be provided\" .type=${PrimitiveType.forced_error} > </fhir-primitive > `; case 'no-impl': return html ` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" errormessage=\"Not Implemented\" .type=${PrimitiveType.forced_error}> </fhir-primitive > `; case 'no-sup': return html ` <fhir-primitive .label=\"${this.label}\" .value=\"${this.description}\" errormessage=\"Not Supported\" .type=${PrimitiveType.forced_error}> </fhir-primitive > `; case 'stop': return html ` <fhir-primitive .label=\"${this.label || 'error'}\" value=\"Rendering Stopped\" .errormessage=${this.error} .type=${PrimitiveType.forced_error} > </fhir-primitive > `; default: return html ` <fhir-primitive label=\"error\" value=\"Undefined reason\" errormessage=\"The reason is unknown\" .type=${PrimitiveType.forced_error}></fhir-primitive > <slot ></slot > `; } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotSupported",
          "declaration": {
            "name": "NotSupported",
            "module": "dist/src/components/primitive/not-supported.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/not-supported.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Primitive",
          "default": "class Primitive extends ConfigurableElement { constructor() { super(); this.delimiter = ': '; this.type = PrimitiveType.none; this.showProvided = false; this.summary = false; this.translate = false; this.trialuse = false; this.required = false; this.error = false; this.presentableValue = ''; this.presentableError = ''; this.presentableTypeError = ''; /** * Generates a rendered error representation based on the current state and properties of the object. * * @returns {TemplateResult} A lit-html template representing the error state or an empty template if no rendering is * required. */ this.renderError = () => { const errors = []; if (this.presentableTypeError) errors.push(this.presentableTypeError); if (this.presentableError) errors.push(this.presentableError); return !isBlank(this.value) || this.verbose || this.required ? html ` <li> <fhir-label text=${this.getLabel()} delimiter=${this.delimiter} variant=\"error\" ></fhir-label> <fhir-value text=${this.value} link=${this.link} variant=\"error\" ></fhir-value> ${this.context ? html ` <fhir-context .text=\"${this.context}\"></fhir-context>` : nothing} ${this.mode === DisplayMode.structure ? html ` <fhir-badge-group ?required=${this.required} ?summary=${this.summary}></fhir-badge-group>` : nothing} ${this.showerror ? html ` <fhir-error text=${errors.join(' | ')}></fhir-error>` : nothing} </li>` : html ``; }; /** * Handles change events and updates the internal state of the component based on the event type * and target element's properties. The method processes events originating from various input * types and updates the `value`, `presentableValue`, `error`, and `errormessage` fields. * It also dispatches a custom event when the `value` changes. * * @param {Event} e - The event object triggered by user interaction or programmatic changes. * The method processes this event to determine how to update the component state. */ this.handleChange = (e) => { const oldValue = this.value; if (e.type === 'sl-input') { if (e.target instanceof SlInput && e.target.type === 'date') { this.value = e.target.valueAsDate?.toISOString() ?? ''; } else { this.value = e.target.value; } } if (e.type === 'sl-change' && e.target.tagName === 'SL-SWITCH') { this.value = (String(!this.value)); } if (e.type === 'fhir-change') { // eslint-disable-next-line @typescript-eslint/ban-ts-comment // @ts-expect-error this.value = e.detail.value; } if (oldValue === this.value) return; this.presentableValue = ''; this.error = false; this.errormessage = ''; this.dispatchEvent(new PrimitiveInputEvent(this.key, oldValue, this.value, this.type)); }; /** * Retrieves the label associated with the current context. * If the \"label\" property is defined, it will be used. Otherwise, the \"key\" property * is used as the label's default value. * * The resulting label is formatted into a readable string in lowercase form. * * @function * @returns {string} A readable string representation of the label in lowercase format. */ this.getLabel = () => { let label = ''; if (this.label) label = this.label; else label = asReadable(this.key, 'lower'); return label; }; this.validator = new PrimitiveValidator(this); } /** * Invoked before the component updates its properties. * It validates the updates based on the properties that have changed. * * @param {PropertyValues} changed - Map of changed properties with their previous values. * @return {void} No return value. */ willUpdate(changed) { super.willUpdate(changed); this.validator .validate({ valuePathChanged: changed.has('valuePath'), valueChanged: changed.has('value'), typeChanged: changed.has('type'), requiredChanged: changed.has('required'), errormessageChanged: changed.has('errormessage'), choicesChanged: changed.has('choices') }); } /** * Renders the appropriate template or content based on the current component's state and properties. * * @return {unknown} The rendered output, which could be an HTML template or other content, or an empty * result if rendering conditions are not met. */ render() { if (!mustRender(this.value, this.mode, this.verbose, this.summaryonly, this.summary, this.required) && !this.valuePath && this.mode !== DisplayMode.override && !this.input) { return html ``; } return this.input ? this.renderInput() : this.error ? this.renderError() : this.renderValid(); } /** * Renders when p[rovided value is valid. Displays FHIR data, incorporating labels, values, contexts, * and additional structured elements based on the provided parameters. * * @returns {TemplateResult} A lit-html template result containing the rendered elements. */ renderValid() { // biome-ignore lint/suspicious/noExplicitAny: <explanation> const elements = []; if (this.getLabel()) elements.push(html ` <fhir-label text=${this.getLabel()} delimiter=${this.delimiter}></fhir-label>`); if (!isBlank(this.value)) // console.log(this.value, this.presentableValue, this.showProvided, this.type, this.mode, this.verbose, // this.summaryonly, this.summary, this.required) elements.push(html ` <fhir-value text=${this.showProvided ? this.value : this.mode !== DisplayMode.display ? this.presentableValue : format(this.presentableValue, this.type)} link=${this.link} .variant=${this.variant} > <span slot=\"before\"><slot name=\"before\"></slot></span> <span slot=\"after\"><slot name=\"after\"></slot></span> </fhir-value>`); if (this.context && this.verbose) elements.push(html ` <fhir-context .text=\"${this.context ?? ''}${this.context && this.verbose ? ' - ' : ''}${this.verbose ? this.type : ''}\" ></fhir-context>`); if (this.mode === DisplayMode.structure) elements.push(html ` <fhir-badge-group ?required=${this.required} ?summary=${this.summary}></fhir-badge-group>`); return (elements.length > 1 || !isBlank(this.value) || this.verbose) ? html ` <li> ${elements}</li>` : html ``; } /** * Renders an input element based on the type and configuration of the current object. * * Validation errors related to the input are displayed, if present. * * @returns {TemplateResult} A rendered Lit-html template representing the input element. */ renderInput() { const errors = []; if (this.presentableTypeError) errors.push(this.presentableTypeError); if (this.presentableError) errors.push(this.presentableError); if (this.type === PrimitiveType.boolean) { return html ` <sl-switch id=${this.key} value=${this.value} @sl-change=${this.handleChange} >${this.getLabel()} </sl-switch> `; } //TODO: this only works for date only fields. Does not work for time component. if (this.type === PrimitiveType.date || this.type === PrimitiveType.datetime || this.type === PrimitiveType.instant) { return html ` <sl-input name=${this.key} .valueAsDate=${new Date(this.value)} clearable @sl-input=${this.handleChange} size=\"small\" type=\"date\" > <fhir-label slot=\"label\" text=${this.getLabel()}></fhir-label> <fhir-error slot=\"help-text\" text=${errors.join(' | ')}></fhir-error> </sl-input> `; } if (this.choices) { return html ` <fhir-system-choice id=${this.key} .value=${this.value} .valuesets=${this.choices.map(choice => ({ value: choice.value, label: choice.display }))} label=${this.getLabel()} error=${errors.join(' | ')} @fhir-change=${this.handleChange} .overridable=${false} > </fhir-system-choice> `; } return html ` <sl-input name=${this.key} value=${this.value} clearable @sl-input=${this.handleChange} size=\"small\" > <fhir-label slot=\"label\" text=${this.getLabel()}></fhir-label> <fhir-error slot=\"help-text\" text=${errors.join(' | ')}></fhir-error> </sl-input> `; } }",
          "description": "Represents a custom element for displaying and parsing primitive values."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "Primitive",
            "module": "dist/src/components/primitive/primitive.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive.validator.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidator",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "{ valueChanged = false, typeChanged = false, valuePathChanged = false, errormessageChanged = false, requiredChanged = false, choicesChanged = false }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "value"
            },
            {
              "kind": "field",
              "name": "validOrError",
              "parameters": [
                {
                  "name": "fn"
                },
                {
                  "name": "original"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidator",
          "declaration": {
            "name": "PrimitiveValidator",
            "module": "dist/src/components/primitive/primitive.validator.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitiveInputEvent.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInputEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "oldValue",
              "default": "oldValue"
            },
            {
              "kind": "field",
              "name": "newValue",
              "default": "newValue"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/src/components/primitive/primitiveInputEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInputEvent",
          "declaration": {
            "name": "PrimitiveInputEvent",
            "module": "dist/src/components/primitive/primitiveInputEvent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitiveInvalidEvent.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInvalidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "default": "errormessage"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/src/components/primitive/primitiveInvalidEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInvalidEvent",
          "declaration": {
            "name": "PrimitiveInvalidEvent",
            "module": "dist/src/components/primitive/primitiveInvalidEvent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitiveValidEvent.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "dist/src/components/primitive/primitiveValidEvent.js"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidEvent",
          "declaration": {
            "name": "PrimitiveValidEvent",
            "module": "dist/src/components/primitive/primitiveValidEvent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitve.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { user-select: text; } li { display: flex; flex-wrap: wrap; gap: 0; list-style-type: none; align-items: baseline; padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); } sl-badge::part(base) { color: var(--sl-color-gray-400); background-color: var(--sl-color-gray-100); border-color: var(--sl-color-gray-300); font-weight: var(--sl-font-weight-normal); font-style: italic; } sl-input::part(form-control-label) { font-size: 16px; } sl-input::part(input) { font-size: 15px; } sl-switch { margin-bottom: 1rem; } .code { font-weight: bold } .display { color: gray } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/primitive/primitve.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/ArraySortingFunction.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sort",
          "parameters": [
            {
              "name": "arr"
            }
          ]
        },
        {
          "kind": "function",
          "name": "reindex",
          "parameters": [
            {
              "name": "original"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sort",
          "declaration": {
            "name": "sort",
            "module": "dist/src/internal/base/ArraySortingFunction.js"
          }
        },
        {
          "kind": "js",
          "name": "reindex",
          "declaration": {
            "name": "reindex",
            "module": "dist/src/internal/base/ArraySortingFunction.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/DataHandling.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Decorate.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "NoDataObject",
          "description": "The NoDataSet variable is a constant value of type FhirElementData.\nIt represents a null value for FHIR objects in the context of the Beacon system.\n\nThe NoDataSet value is created by freezing an object with a single property 'id',\nwhich is set to the string value 'FHIR::BEACON::NULL::OBJECT'.\n\nThe NoDataSet value is immutable and cannot be modified once created.\nIt can be used to indicate the absence or unavailability of valid FHIR data. It is meant to be used as a default\nvalue to differentiate between default emptiness and user-set emptiness.",
          "type": {
            "text": "FhirElementData"
          }
        },
        {
          "kind": "function",
          "name": "decorate",
          "parameters": [
            {
              "name": "_key"
            },
            {
              "name": "data"
            },
            {
              "name": "_errorMap"
            },
            {
              "name": "_profile",
              "default": "undefined"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NoDataObject",
          "declaration": {
            "name": "NoDataObject",
            "module": "dist/src/internal/base/Decorate.js"
          }
        },
        {
          "kind": "js",
          "name": "decorate",
          "declaration": {
            "name": "decorate",
            "module": "dist/src/internal/base/Decorate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Decorate.types.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/DeepKeyMap.js",
      "declarations": [
        {
          "kind": "class",
          "description": "AI Generated code",
          "name": "DeepKeyMap",
          "members": [
            {
              "kind": "method",
              "name": "deepEquals",
              "parameters": [
                {
                  "name": "obj1"
                },
                {
                  "name": "obj2"
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks."
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "value",
                  "description": "The value to associate with the key.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets a value in the DeepKeyMap."
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "deleteAll"
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "description": "Returns all key-value pairs as entries."
            },
            {
              "kind": "method",
              "name": "keys"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FqkMap",
          "superclass": {
            "name": "DeepKeyMap",
            "module": "dist/src/internal/base/DeepKeyMap.js"
          },
          "members": [
            {
              "kind": "method",
              "name": "deepEquals",
              "parameters": [
                {
                  "name": "obj1"
                },
                {
                  "name": "obj2"
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "value",
                  "description": "The value to associate with the key.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Sets a value in the DeepKeyMap.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "description": "The object key.",
                  "type": {
                    "text": "Object"
                  }
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "description": "Returns all key-value pairs as entries.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            },
            {
              "kind": "method",
              "name": "keys",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "dist/src/internal/base/DeepKeyMap.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeepKeyMap",
          "declaration": {
            "name": "DeepKeyMap",
            "module": "dist/src/internal/base/DeepKeyMap.js"
          }
        },
        {
          "kind": "js",
          "name": "FqkMap",
          "declaration": {
            "name": "FqkMap",
            "module": "dist/src/internal/base/DeepKeyMap.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/FhirElement.type.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Rendering.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Templating.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Validations.impl.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValidationsImpl",
          "members": [
            {
              "kind": "method",
              "name": "mapForAll"
            },
            {
              "kind": "method",
              "name": "msgFor",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "delimiter",
                  "default": "';'"
                }
              ]
            },
            {
              "kind": "method",
              "name": "sliceForFQK",
              "parameters": [
                {
                  "name": "sliceKey"
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "{ fqk, message }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "path"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rm",
              "parameters": [
                {
                  "name": "key"
                }
              ]
            },
            {
              "kind": "method",
              "name": "rmAll"
            },
            {
              "kind": "method",
              "name": "inspectCode",
              "parameters": [
                {
                  "name": "{ node, code, id }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "inspectCodeableConcept",
              "parameters": [
                {
                  "name": "{ node, concept, bindingId }"
                }
              ]
            },
            {
              "kind": "method",
              "name": "all"
            },
            {
              "kind": "method",
              "name": "choices",
              "parameters": [
                {
                  "name": "id"
                }
              ]
            },
            {
              "kind": "method",
              "name": "allFor",
              "parameters": [
                {
                  "name": "fqks"
                }
              ]
            },
            {
              "kind": "method",
              "name": "code",
              "parameters": [
                {
                  "name": "id"
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "slice",
          "parameters": [
            {
              "name": "fqk"
            }
          ]
        },
        {
          "kind": "function",
          "name": "matches",
          "parameters": [
            {
              "name": "sliceKey"
            },
            {
              "name": "storeKey"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidationsImpl",
          "declaration": {
            "name": "ValidationsImpl",
            "module": "dist/src/internal/base/Validations.impl.js"
          }
        },
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "dist/src/internal/base/Validations.impl.js"
          }
        },
        {
          "kind": "js",
          "name": "matches",
          "declaration": {
            "name": "matches",
            "module": "dist/src/internal/base/Validations.impl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/Validations.type.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "errors"
        },
        {
          "kind": "variable",
          "name": "meta"
        },
        {
          "kind": "variable",
          "name": "profile"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "errors",
          "declaration": {
            "name": "errors",
            "module": "dist/src/internal/base/Validations.type.js"
          }
        },
        {
          "kind": "js",
          "name": "meta",
          "declaration": {
            "name": "meta",
            "module": "dist/src/internal/base/Validations.type.js"
          }
        },
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "dist/src/internal/base/Validations.type.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/display-config.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ArraySortingFunction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DataHandling"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate.types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DeepKeyMap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirElement.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Rendering"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Templating"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.impl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./configurable/fhir-configurable-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./presentable/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/contexts/FhirContextData.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirDataContextImpl",
          "members": [
            {
              "kind": "field",
              "name": "data"
            },
            {
              "kind": "method",
              "name": "getAt",
              "parameters": [
                {
                  "name": "path"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataContextImpl",
          "declaration": {
            "name": "FhirDataContextImpl",
            "module": "dist/src/internal/contexts/FhirContextData.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/contexts/context-consumer-controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "The DataContextConsumerController class is a controller that allows a custom element to consume data from a data\ncontext.",
          "name": "DataContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "dataContext",
              "default": "new FhirDataContextImpl()"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "object"
              },
              "default": "{}"
            }
          ]
        },
        {
          "kind": "class",
          "description": "The DisplayContextConsumerController class is responsible for handling the display configuration context\nfor a given host element. It subscribes to changes in the displayConfigContext and updates the host element\naccordingly.\n\nThis class implements the ReactiveController interface and can be added to a host element using the addController\nmethod.",
          "name": "DisplayContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataContextConsumerController",
          "declaration": {
            "name": "DataContextConsumerController",
            "module": "dist/src/internal/contexts/context-consumer-controller.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayContextConsumerController",
          "declaration": {
            "name": "DisplayContextConsumerController",
            "module": "dist/src/internal/contexts/context-consumer-controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/contexts/context-provider-controller.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ContextProviderController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "host",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "displayCtx",
              "default": "new ContextProvider(reactive, { context: displayConfigContext })"
            },
            {
              "kind": "field",
              "name": "dataCtx",
              "default": "new ContextProvider(reactive, { context: dataContext })"
            },
            {
              "kind": "field",
              "name": "containedCtx",
              "default": "new ContextProvider(reactive, { context: containedResourcesContext })"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContextProviderController",
          "declaration": {
            "name": "ContextProviderController",
            "module": "dist/src/internal/contexts/context-provider-controller.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/contexts/context.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "containedResourcesKey"
        },
        {
          "kind": "variable",
          "name": "displayConfigKey"
        },
        {
          "kind": "variable",
          "name": "dataKey"
        },
        {
          "kind": "variable",
          "name": "containedResourcesContext"
        },
        {
          "kind": "variable",
          "name": "displayConfigContext"
        },
        {
          "kind": "variable",
          "name": "dataContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "containedResourcesKey",
          "declaration": {
            "name": "containedResourcesKey",
            "module": "dist/src/internal/contexts/context.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigKey",
          "declaration": {
            "name": "displayConfigKey",
            "module": "dist/src/internal/contexts/context.js"
          }
        },
        {
          "kind": "js",
          "name": "dataKey",
          "declaration": {
            "name": "dataKey",
            "module": "dist/src/internal/contexts/context.js"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesContext",
          "declaration": {
            "name": "containedResourcesContext",
            "module": "dist/src/internal/contexts/context.js"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigContext",
          "declaration": {
            "name": "displayConfigContext",
            "module": "dist/src/internal/contexts/context.js"
          }
        },
        {
          "kind": "js",
          "name": "dataContext",
          "declaration": {
            "name": "dataContext",
            "module": "dist/src/internal/contexts/context.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/contexts/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirContextData"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-consumer-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-provider-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/customization/fhir-context-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirContextElement",
          "members": [
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "description": "attribute update handling",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "render",
              "description": "Override this method to render something useful after the context value has been retrieved",
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "default": "dataPath"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirContextElement",
          "declaration": {
            "name": "FhirContextElement",
            "module": "dist/src/internal/customization/fhir-context-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/customization/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-context-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/errors/beacon-data-error.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconDataError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconDataError'"
            },
            {
              "kind": "field",
              "name": "message",
              "default": "msg"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconDataError",
          "declaration": {
            "name": "BeaconDataError",
            "module": "dist/src/internal/errors/beacon-data-error.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/errors/beacon-element-error.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconElementError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconStateError'"
            },
            {
              "kind": "field",
              "name": "element",
              "default": "element"
            },
            {
              "kind": "field",
              "name": "message",
              "default": "msg"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconElementError",
          "declaration": {
            "name": "BeaconElementError",
            "module": "dist/src/internal/errors/beacon-element-error.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/errors/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-data-error"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-element-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/builder.type.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/define.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "define",
          "type": {
            "text": "object"
          },
          "default": "{ oneOf: (k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..1', [], Example, [])), optionOf: (k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [])), choiceOf: (choice, k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [], choice)), minOneOf: (k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [])), listOf: (k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [])), optionalListOf: (k, t, s = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..*', [], Example, [])), backboneOf: (key, def) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..1', [], Example, [], undefined, def.props)), backboneListOf: (key, def) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..*', [], Example, [], undefined, def.props)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "define",
          "declaration": {
            "name": "define",
            "module": "dist/src/profiling/builder/define.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/definitionBuilder.js",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionBuilder",
          "parameters": [
            {
              "name": "def"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionBuilder",
          "declaration": {
            "name": "definitionBuilder",
            "module": "dist/src/profiling/builder/definitionBuilder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/definitionProperty.js",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionProperty",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "typeName"
            },
            {
              "name": "typeNarrowing",
              "default": "[]"
            },
            {
              "name": "cardinality",
              "default": "'1..1'"
            },
            {
              "name": "bindings",
              "default": "[]"
            },
            {
              "name": "bindingStrength",
              "default": "Example"
            },
            {
              "name": "constraints",
              "default": "[]"
            },
            {
              "name": "choice",
              "default": "undefined"
            },
            {
              "name": "subdefs",
              "default": "undefined"
            },
            {
              "name": "mustSupport",
              "default": "undefined"
            },
            {
              "name": "isModifier",
              "default": "undefined"
            },
            {
              "name": "isSummary",
              "default": "undefined"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionProperty",
          "declaration": {
            "name": "definitionProperty",
            "module": "dist/src/profiling/builder/definitionProperty.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/extend.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "extend",
          "type": {
            "text": "object"
          },
          "default": "{ withOne: (key, extension) => extensionBuilder(key, extension), withComplex: (key, extensions) => complexExtensionBuilder(key, extensions), primitive: (primtiveKey, url, extensions) => primitiveExtensionBuilder(primtiveKey, url, extensions) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extend",
          "declaration": {
            "name": "extend",
            "module": "dist/src/profiling/builder/extend.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/extensionBuilder.js",
      "declarations": [
        {
          "kind": "function",
          "name": "extensionBuilder",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "complexExtensionBuilder",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "primitiveExtensionBuilder",
          "parameters": [
            {
              "name": "primitiveKey"
            },
            {
              "name": "url"
            },
            {
              "name": "def"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extensionBuilder",
          "declaration": {
            "name": "extensionBuilder",
            "module": "dist/src/profiling/builder/extensionBuilder.js"
          }
        },
        {
          "kind": "js",
          "name": "complexExtensionBuilder",
          "declaration": {
            "name": "complexExtensionBuilder",
            "module": "dist/src/profiling/builder/extensionBuilder.js"
          }
        },
        {
          "kind": "js",
          "name": "primitiveExtensionBuilder",
          "declaration": {
            "name": "primitiveExtensionBuilder",
            "module": "dist/src/profiling/builder/extensionBuilder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./define"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionProperty"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extend"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extensionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceProp"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/slice.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "slice",
          "type": {
            "text": "object"
          },
          "default": "{ oneFor: (key, constraints, fixedValues = [], choice = '') => sliceBuilder(sliceProp(key, choice, constraints, fixedValues)), constraint: (key, constraints, fixedValues = [], choice = '') => sliceBuilder(sliceProp(key, choice, constraints, fixedValues)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "dist/src/profiling/builder/slice.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/sliceBuilder.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceBuilder",
          "parameters": [
            {
              "name": "def"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceBuilder",
          "declaration": {
            "name": "sliceBuilder",
            "module": "dist/src/profiling/builder/sliceBuilder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/builder/sliceProp.js",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceProp",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "choice"
            },
            {
              "name": "constraints"
            },
            {
              "name": "fixedValues"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceProp",
          "declaration": {
            "name": "sliceProp",
            "module": "dist/src/profiling/builder/sliceProp.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/definition/StructureDefinition.js",
      "declarations": [
        {
          "kind": "class",
          "description": "StructureDefinition class serves as a blueprint for defining a resource structure.\nIt provides functionality to set, retrieve, and manipulate properties and constraints\nfor a given resource definition. The class also supports creating deep clones,\nserializing, and converting structure definitions into a JSON or string representation.",
          "name": "StructureDefinition",
          "members": [
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "prop"
                },
                {
                  "name": "key"
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "choicePrefix"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSlice",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "choicePrefix"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getProperty",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "choicePrefix"
                }
              ]
            },
            {
              "kind": "method",
              "name": "getExtension",
              "parameters": [
                {
                  "name": "key"
                },
                {
                  "name": "choicePrefix"
                }
              ]
            },
            {
              "kind": "method",
              "name": "clone"
            },
            {
              "kind": "method",
              "name": "toString",
              "parameters": [
                {
                  "name": "indent",
                  "default": "'    '"
                }
              ]
            },
            {
              "kind": "method",
              "name": "toJSON"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ]
            },
            {
              "kind": "method",
              "name": "propToString",
              "parameters": [
                {
                  "name": "iterable"
                },
                {
                  "name": "indent"
                }
              ]
            },
            {
              "kind": "field",
              "name": "props",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "constraints",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "extendRender",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "overrideRender",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "type",
              "default": "name"
            }
          ]
        },
        {
          "kind": "function",
          "name": "flattenKey",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "choicePrefix"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Context",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "default": "name"
            },
            {
              "kind": "field",
              "name": "def",
              "default": "new StructureDefinition(this.type)"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StructureDefinition",
          "declaration": {
            "name": "StructureDefinition",
            "module": "dist/src/profiling/definition/StructureDefinition.js"
          }
        },
        {
          "kind": "js",
          "name": "flattenKey",
          "declaration": {
            "name": "flattenKey",
            "module": "dist/src/profiling/definition/StructureDefinition.js"
          }
        },
        {
          "kind": "js",
          "name": "Context",
          "declaration": {
            "name": "Context",
            "module": "dist/src/profiling/definition/StructureDefinition.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/definition/definition.type.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isExtensionDef",
          "parameters": [
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitiveExtensionDef",
          "parameters": [
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertyDef",
          "parameters": [
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertySliceDef",
          "parameters": [
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithChildren",
          "parameters": [
            {
              "name": "def"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithConstraints",
          "parameters": [
            {
              "name": "def"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isExtensionDef",
          "declaration": {
            "name": "isExtensionDef",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitiveExtensionDef",
          "declaration": {
            "name": "isPrimitiveExtensionDef",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        },
        {
          "kind": "js",
          "name": "isPropertyDef",
          "declaration": {
            "name": "isPropertyDef",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        },
        {
          "kind": "js",
          "name": "isPropertySliceDef",
          "declaration": {
            "name": "isPropertySliceDef",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithChildren",
          "declaration": {
            "name": "isDefWithChildren",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithConstraints",
          "declaration": {
            "name": "isDefWithConstraints",
            "module": "dist/src/profiling/definition/definition.type.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/definition/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./StructureDefinition"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition.type"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/util/AlternatingLogger.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "alternatingColor"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alternatingColor",
          "declaration": {
            "name": "alternatingColor",
            "module": "dist/src/profiling/util/AlternatingLogger.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/util/BindingStrength.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BindingStrength",
          "members": [
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available binding strength values",
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "description": "Get all available binding strength values as strings",
              "return": {
                "type": {
                  "text": "string[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The value to check",
                  "type": {
                    "text": "unknown"
                  }
                }
              ],
              "description": "Check if a value is a valid binding strength",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "description": "The string value to look up",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get a binding strength by its string value",
              "return": {
                "type": {
                  "text": "BindingStrength|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "parameters": [
                {
                  "name": "prefix",
                  "description": "The prefix to filter by",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Get binding strengths that start with the given prefix",
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "field",
              "name": "value",
              "default": "value"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ Required, Extensible, Example, Preferred }",
          "default": "BindingStrength"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BindingStrength",
          "declaration": {
            "name": "BindingStrength",
            "module": "dist/src/profiling/util/BindingStrength.js"
          }
        },
        {
          "kind": "js",
          "name": "{ Required, Extensible, Example, Preferred }",
          "declaration": {
            "name": "{ Required, Extensible, Example, Preferred }",
            "module": "dist/src/profiling/util/BindingStrength.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/util/BoundArray.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BoundArray",
          "members": [
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "element",
                  "description": "The element to be added.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Adds an element to the array. Enforces the maximum"
            },
            {
              "kind": "method",
              "name": "remove",
              "parameters": [
                {
                  "name": "element",
                  "description": "The element to be removed.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Removes an element from the array. Enforces the minimum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "insert",
              "parameters": [
                {
                  "name": "index",
                  "description": "The index at which to insert the element.",
                  "type": {
                    "text": "number"
                  }
                },
                {
                  "name": "element",
                  "description": "The element to be inserted.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Inserts an element at a specified index. Enforces the maximum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "contains",
              "parameters": [
                {
                  "name": "element",
                  "description": "The element to check.",
                  "type": {
                    "text": "any"
                  }
                }
              ],
              "description": "Checks if an element exists in the array.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getArray",
              "description": "Gets the current array.",
              "return": {
                "type": {
                  "text": "Array"
                }
              }
            },
            {
              "kind": "method",
              "name": "size",
              "description": "Gets the current size of the array.",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "field",
              "name": "min",
              "default": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "default": "max"
            },
            {
              "kind": "field",
              "name": "array",
              "default": "initialValues"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BoundArray",
          "declaration": {
            "name": "BoundArray",
            "module": "dist/src/profiling/util/BoundArray.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/util/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AlternatingLogger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BindingStrength"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BoundArray"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./valuePresent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/profiling/util/valuePresent.js",
      "declarations": [
        {
          "kind": "function",
          "name": "aValuePresent",
          "parameters": [
            {
              "name": "data"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "aValuePresent",
          "declaration": {
            "name": "aValuePresent",
            "module": "dist/src/profiling/util/valuePresent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/Backbone.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Backbone",
          "members": [
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/dist/src/internal/BaseElement"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Backbone",
          "declaration": {
            "name": "Backbone",
            "module": "dist/src/internal/resource/Backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/DomainResource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DomainResource",
          "members": [
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructureContained"
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Resource",
            "module": "/dist/src/internal/resource/Resource"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DomainResource",
          "declaration": {
            "name": "DomainResource",
            "module": "dist/src/internal/resource/DomainResource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/Resource.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Resource",
          "members": [
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNoData"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/dist/src/internal/BaseElement"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "dist/src/internal/resource/Resource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/backbone.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/domain-resource.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DomainResource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Resource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./domain-resource.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderResourceComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/resource/renderResourceComponent.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderResourceComponent",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "displayConfig"
            },
            {
              "name": "summary",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderResourceComponent",
          "declaration": {
            "name": "renderResourceComponent",
            "module": "dist/src/internal/resource/renderResourceComponent.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/directives.js",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSome",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "verbose",
              "default": "false"
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasMany",
          "parameters": [
            {
              "name": "data",
              "description": "The data array to check.",
              "type": {
                "text": "Array<any> | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "description": "Optional parameter to enable verbose mode.",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "The hasMany function determines if an array has more than 1 item.",
          "return": {
            "type": {
              "text": "boolean"
            }
          }
        },
        {
          "kind": "function",
          "name": "hasOnlyOne",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "verbose",
              "default": "false"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefined",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "verbose",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSome",
          "declaration": {
            "name": "hasSome",
            "module": "dist/src/shell/layout/directives.js"
          }
        },
        {
          "kind": "js",
          "name": "hasMany",
          "declaration": {
            "name": "hasMany",
            "module": "dist/src/shell/layout/directives.js"
          }
        },
        {
          "kind": "js",
          "name": "hasOnlyOne",
          "declaration": {
            "name": "hasOnlyOne",
            "module": "dist/src/shell/layout/directives.js"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "isDefined",
            "module": "dist/src/shell/layout/directives.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/empty-set.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "EmptySet",
          "default": "class EmptySet extends ShoelaceStyledElement { render() { return html ` <fhir-value placeholder=\"empty list\"></fhir-value > `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptySet",
          "declaration": {
            "name": "EmptySet",
            "module": "dist/src/shell/layout/empty-set.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./directives"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./empty-set"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pluralize"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderBackboneCollection"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./show"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./combo/systemChoice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/pluralize.js",
      "declarations": [
        {
          "kind": "function",
          "name": "pluralize",
          "parameters": [
            {
              "name": "word"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pluralize",
          "declaration": {
            "name": "pluralize",
            "module": "dist/src/shell/layout/pluralize.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/renderBackboneCollection.js",
      "declarations": [
        {
          "kind": "function",
          "name": "renderSingleBackbone",
          "parameters": [
            {
              "name": "itemLabel"
            },
            {
              "name": "idx"
            },
            {
              "name": "verbose"
            },
            {
              "name": "template"
            }
          ],
          "deprecated": "true"
        },
        {
          "kind": "function",
          "name": "renderBackboneCollection",
          "parameters": [
            {
              "name": "groupLabel",
              "description": "The label for the collection group.",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "itemLabel",
              "description": "The label for each item in the collection.",
              "type": {
                "text": "string | null"
              }
            },
            {
              "name": "collection",
              "description": "The collection of items to render.",
              "type": {
                "text": "T[]"
              }
            },
            {
              "name": "templateGenerator"
            },
            {
              "name": "verbose",
              "default": "false",
              "description": "Whether to display verbose output.",
              "optional": true,
              "type": {
                "text": "boolean"
              }
            },
            {
              "description": ", index: number): TemplateResult} templateGenerator - The function that generates the\ntemplate for each item in the collection.",
              "name": "",
              "type": {
                "text": "function(item: T"
              }
            }
          ],
          "description": "Renders a Backbone collection using provided template and labels.",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "deprecated": "true"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderSingleBackbone",
          "declaration": {
            "name": "renderSingleBackbone",
            "module": "dist/src/shell/layout/renderBackboneCollection.js"
          }
        },
        {
          "kind": "js",
          "name": "renderBackboneCollection",
          "declaration": {
            "name": "renderBackboneCollection",
            "module": "dist/src/shell/layout/renderBackboneCollection.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/show.js",
      "declarations": [
        {
          "kind": "function",
          "name": "show",
          "parameters": [
            {
              "name": "idx",
              "description": "The index to be displayed.",
              "type": {
                "text": "number|string"
              }
            }
          ],
          "description": "Displays the index if it is a number, otherwise returns an empty string.",
          "return": {
            "type": {
              "text": "string"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "show",
          "declaration": {
            "name": "show",
            "module": "dist/src/shell/layout/show.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapperCollection.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/FSSource.js",
      "declarations": [
        {
          "kind": "function",
          "name": "empty",
          "parameters": [
            {
              "name": "source"
            },
            {
              "name": "path"
            },
            {
              "name": "error"
            },
            {
              "name": "type"
            },
            {
              "name": "err"
            },
            {
              "name": "isError",
              "default": "true"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FSSource",
          "members": [
            {
              "kind": "method",
              "name": "allIds"
            },
            {
              "kind": "method",
              "name": "loadDir"
            },
            {
              "kind": "method",
              "name": "loadfile"
            },
            {
              "kind": "method",
              "name": "isLoaded"
            },
            {
              "kind": "method",
              "name": "size"
            },
            {
              "kind": "method",
              "name": "exists",
              "parameters": [
                {
                  "name": "name"
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolve",
              "parameters": [
                {
                  "name": "source"
                },
                {
                  "name": "debug",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "cacheAll",
              "parameters": [
                {
                  "name": "debug",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "field",
              "name": "skipUrl",
              "default": "skipUrl"
            }
          ]
        },
        {
          "kind": "function",
          "name": "matchAll",
          "parameters": [
            {
              "name": "_"
            }
          ]
        },
        {
          "kind": "function",
          "name": "valueSetCriteria",
          "parameters": [
            {
              "name": "file"
            }
          ]
        },
        {
          "kind": "function",
          "name": "codesystemCriteria",
          "parameters": [
            {
              "name": "file"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "empty",
          "declaration": {
            "name": "empty",
            "module": "dist/src/valuesets/source/FSSource.js"
          }
        },
        {
          "kind": "js",
          "name": "FSSource",
          "declaration": {
            "name": "FSSource",
            "module": "dist/src/valuesets/source/FSSource.js"
          }
        },
        {
          "kind": "js",
          "name": "matchAll",
          "declaration": {
            "name": "matchAll",
            "module": "dist/src/valuesets/source/FSSource.js"
          }
        },
        {
          "kind": "js",
          "name": "valueSetCriteria",
          "declaration": {
            "name": "valueSetCriteria",
            "module": "dist/src/valuesets/source/FSSource.js"
          }
        },
        {
          "kind": "js",
          "name": "codesystemCriteria",
          "declaration": {
            "name": "codesystemCriteria",
            "module": "dist/src/valuesets/source/FSSource.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/Fetch.js",
      "declarations": [
        {
          "kind": "function",
          "name": "fetchIt",
          "parameters": [
            {
              "name": "{ url, options = defaultOptions, retries = 3, retryFactor = 1000, debug = true }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fetchIt",
          "declaration": {
            "name": "fetchIt",
            "module": "dist/src/valuesets/source/Fetch.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/FetchError.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FetchError",
          "members": [
            {
              "kind": "field",
              "name": "url",
              "default": "url"
            },
            {
              "kind": "field",
              "name": "status",
              "default": "status"
            },
            {
              "kind": "field",
              "name": "statusText",
              "default": "statusText"
            },
            {
              "kind": "field",
              "name": "body",
              "default": "body"
            },
            {
              "kind": "field",
              "name": "cause",
              "default": "cause"
            },
            {
              "kind": "field",
              "name": "retryable",
              "default": "retryable"
            }
          ],
          "superclass": {
            "name": "Error",
            "module": "dist/src/valuesets/source/FetchError.js"
          }
        },
        {
          "kind": "function",
          "name": "throwError",
          "parameters": [
            {
              "name": "response"
            },
            {
              "name": "body"
            },
            {
              "name": "message"
            },
            {
              "name": "cause"
            },
            {
              "name": "retryable",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FetchError",
          "declaration": {
            "name": "FetchError",
            "module": "dist/src/valuesets/source/FetchError.js"
          }
        },
        {
          "kind": "js",
          "name": "throwError",
          "declaration": {
            "name": "throwError",
            "module": "dist/src/valuesets/source/FetchError.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/LogFetchRequest.js",
      "declarations": [
        {
          "kind": "function",
          "name": "logFetchRequest",
          "parameters": [
            {
              "name": "id"
            },
            {
              "name": "status"
            },
            {
              "name": "statusText"
            },
            {
              "name": "type"
            },
            {
              "name": "url"
            },
            {
              "name": "cause"
            },
            {
              "name": "debug",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "logFetchRequest",
          "declaration": {
            "name": "logFetchRequest",
            "module": "dist/src/valuesets/source/LogFetchRequest.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/ResolveBundle.js",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveBundle",
          "parameters": [
            {
              "name": "bundle"
            },
            {
              "name": "skipUrl"
            },
            {
              "name": "debug",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveBundle",
          "declaration": {
            "name": "resolveBundle",
            "module": "dist/src/valuesets/source/ResolveBundle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/ResolveCodeSystem.js",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveCodeSystem",
          "parameters": [
            {
              "name": "vs"
            },
            {
              "name": "debug",
              "default": "false"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveCodeSystem",
          "declaration": {
            "name": "resolveCodeSystem",
            "module": "dist/src/valuesets/source/ResolveCodeSystem.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/source/ResolveValueSet.js",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveValueSet",
          "parameters": [
            {
              "name": "vs"
            },
            {
              "name": "skipUrl"
            },
            {
              "name": "debug",
              "default": "false"
            }
          ]
        },
        {
          "kind": "function",
          "name": "resolveIncludesOrExclude",
          "parameters": [
            {
              "name": "id"
            },
            {
              "name": "segment"
            },
            {
              "name": "variant",
              "default": "'include'"
            },
            {
              "name": "debug"
            },
            {
              "name": "skipUrl"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveValueSet",
          "declaration": {
            "name": "resolveValueSet",
            "module": "dist/src/valuesets/source/ResolveValueSet.js"
          }
        },
        {
          "kind": "js",
          "name": "resolveIncludesOrExclude",
          "declaration": {
            "name": "resolveIncludesOrExclude",
            "module": "dist/src/valuesets/source/ResolveValueSet.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/store/FSStore.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FSStore",
          "members": [
            {
              "kind": "method",
              "name": "write",
              "parameters": [
                {
                  "name": "choices"
                }
              ]
            },
            {
              "kind": "method",
              "name": "writeMeta",
              "parameters": [
                {
                  "name": "sets"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FSStore",
          "declaration": {
            "name": "FSStore",
            "module": "dist/src/valuesets/store/FSStore.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/demo-code/customisation/custom-components/custom-lit-element.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CustomLitElement",
          "default": "class CustomLitElement extends FhirContextElement { render() { return html `${this.label}: ${this.value}`; } createRenderRoot() { return this; } }",
          "description": "Custom Lit element example"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CustomLitElement",
          "declaration": {
            "name": "CustomLitElement",
            "module": "dist/demo-code/customisation/custom-components/custom-lit-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/valuesets/processor/ValueSetProcessor.js",
      "declarations": [
        {
          "kind": "function",
          "name": "removeValues",
          "parameters": [
            {
              "name": "included",
              "description": "The array to filter."
            },
            {
              "name": "excluded",
              "description": "The array of values to remove from the source array."
            }
          ],
          "description": "Removes values from the source array that are included in the valuesToRemove array.",
          "return": {
            "type": {
              "text": ""
            }
          }
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetProcessor",
          "members": [
            {
              "kind": "method",
              "name": "process",
              "parameters": [
                {
                  "name": "id"
                },
                {
                  "name": "debug"
                }
              ]
            },
            {
              "kind": "method",
              "name": "processAll",
              "parameters": [
                {
                  "name": "debug",
                  "default": "false"
                }
              ]
            },
            {
              "kind": "method",
              "name": "all"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "removeValues",
          "declaration": {
            "name": "removeValues",
            "module": "dist/src/valuesets/processor/ValueSetProcessor.js"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetProcessor",
          "declaration": {
            "name": "ValueSetProcessor",
            "module": "dist/src/valuesets/processor/ValueSetProcessor.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/debug/debug.js",
      "declarations": [
        {
          "kind": "function",
          "name": "debug",
          "parameters": [
            {
              "name": "debug"
            },
            {
              "name": "data"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "Debug"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debug",
          "declaration": {
            "name": "debug",
            "module": "dist/src/utilities/debug/debug.js"
          }
        },
        {
          "kind": "js",
          "name": "Debug",
          "declaration": {
            "name": "Debug",
            "module": "dist/src/utilities/debug/debug.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/debug/debug.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` div { padding: 0; margin: 0; } ul { display: inline-block; background-color: var(--sl-color-blue-200); color: #0c2d6b; border-radius: 0.5rem; border: solid 0.1rem var(--sl-color-blue-400); margin: 0.5rem; padding: 0.5rem 1rem; } li { font-family: monospace; font-size: 0.8rem; margin-top: 0.5rem; list-style-type: none; color: var(--sl-color-yellow-900); } pre { max-width: 40rem; word-wrap: anywhere; white-space: pre-wrap; margin: 0rem; padding: 0.3rem; color: var(--sl-color-blue-800); border-radius: 0.5rem; background-color: var(--sl-color-blue-300); } .key { font-weight: bold; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/utilities/debug/debug.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/utilities/debug/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "generation/valuesets/choice/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: path, component: 'fhir-shell', subcomponents: { 'fhir-address': 'fhir-address' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-address .data=${args.data} summary></fhir-address > `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true, input: false } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/address/address.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/address/address.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/address/address.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'work', text: '1050 W Wishard Blvd\\nRG,\\n5th floor\\nIndianapolis, IN 46240', line: ['1050 W Wishard Blvd', 'RG 5th floor'], city: 'Indianapolis', _state: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'IN' } ] }, postalCode: '46240', state: 'IN', country: 'United States', _country: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'US' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/address/address.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Address",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AddressData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Address",
          "declaration": {
            "name": "Address",
            "module": "src/components/complex/address/address.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Attachment', subcomponents: { attachment: 'fhir-attachment' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-attachment .data=\"${args.data}\" summary></fhir-attachment> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: image } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: document } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: document, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/attachment/attachment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/attachment/attachment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "src/components/complex/attachment/attachment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/attachment/attachment.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "document",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/pdf', language: 'en', data: '', title: 'Definition of Procedure' }"
        },
        {
          "kind": "variable",
          "name": "image",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/dicom', url: 'http://10.1.2.3:1000/wado?requestType=WADO&amp;wado_details...', hash: '3u+UR6n8AgABAAAAHxxdXKmiOmUoqKnZlf8lTOhlPYy93EAkbPfs5+49YLFd/B1+omSKbW7DoqNM40/EeVnwJ8kYoXv9zy9D5C5m5A==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "document",
          "declaration": {
            "name": "document",
            "module": "src/components/complex/attachment/attachment.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "image",
          "declaration": {
            "name": "image",
            "module": "src/components/complex/attachment/attachment.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Attachment",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "generate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attachment",
          "declaration": {
            "name": "Attachment",
            "module": "src/components/complex/attachment/attachment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Annotation', subcomponents: { 'fhir-annotation': 'fhir-annotation' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-annotation .data=\"${args.data}\" summary></fhir-annotation > `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data } }"
        },
        {
          "kind": "variable",
          "name": "ValidationErrors",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { authorReference: { reference: 'Patient/example' }, authorString: 'Jack Smith', time: '2022-02-08T10:18:14.034+10:00', text: 'I don\\'t think that this is true, or what I said, and it should be corrected', }, mode: 'display', showerror: true }, }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/annotation/annotation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/annotation/annotation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValidationErrors",
          "declaration": {
            "name": "ValidationErrors",
            "module": "src/components/complex/annotation/annotation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/annotation/annotation.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ authorReference: { reference: 'Patient/example' }, time: '2022-02-08T10:18:14.034+10:00', text: 'I don\\'t think that this is true, or what I said, and it should be corrected' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/annotation/annotation.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Annotation",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AnnotationData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AnnotationData"
                  }
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  }
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Annotation",
          "declaration": {
            "name": "Annotation",
            "module": "src/components/complex/annotation/annotation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/codeable-concept.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/codeable-concept.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeableConcept",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "CodeableConceptData"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodeableConceptData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodeableConceptData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableConcept",
          "declaration": {
            "name": "CodeableConcept",
            "module": "src/components/complex/codeable-concept/codeable-concept.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/codeableConcept.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Codeable Concept', component: 'fhir-shell', subcomponents: { codeableConcept: 'fhir-codeable-concept' }, ...renderTemplateInShell( (args: ShellArgs) => { return html` <fhir-codeable-concept key=\"codeable concept\" label=\"codeable concept\" .data=${args.data} summary ?headless=${args.headless} ></fhir-codeable-concept>` }) }"
        },
        {
          "kind": "variable",
          "name": "SimpleHeadacheCode",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' }, mode: 'structure', verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "WithError",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/ex-icd-10-procedures', code: '123000' } ] }, mode: 'display', showerror: true, open: true }, render: (args: ShellArgs) => { const [validations, concept, _choices] = prepare(args.data as CodeableConceptData, 'cs-icd-10-procedures') return html` <fhir-shell .mode=${ifDefined(args.mode)} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open ?? true} ?summaryonly=${args.summaryonly} ?input=${args.input} > <fhir-codeable-concept label=\"codeable concept with binding on 'cs-icd-10-procedures'\" key=\"procedure\" .data=${concept} summary ?headless=${args.headless} .errors=${validations.sliceForFQK({ path: [{ node: '_root' }] })} ></fhir-codeable-concept> </fhir-shell> ` } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/codeable-concept/codeableConcept.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SimpleHeadacheCode",
          "declaration": {
            "name": "SimpleHeadacheCode",
            "module": "src/components/complex/codeable-concept/codeableConcept.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/codeable-concept/codeableConcept.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithError",
          "declaration": {
            "name": "WithError",
            "module": "src/components/complex/codeable-concept/codeableConcept.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeable-reference.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeable-reference.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeableReference",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableReference",
          "declaration": {
            "name": "CodeableReference",
            "module": "src/components/complex/codeable-reference/codeable-reference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeableReference.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title, component: 'fhir-shell', ...renderTemplateInShell((args) => html` <fhir-codeable-reference .data=${args.data} summary headless></fhir-codeable-reference>`) }"
        },
        {
          "kind": "variable",
          "name": "Headache",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, showerror: true } }"
        },
        {
          "kind": "variable",
          "name": "HeadacheVerbose",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, showerror: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data, mode: 'structure', verbose: true, showerror: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/codeable-reference/codeableReference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Headache",
          "declaration": {
            "name": "Headache",
            "module": "src/components/complex/codeable-reference/codeableReference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "HeadacheVerbose",
          "declaration": {
            "name": "HeadacheVerbose",
            "module": "src/components/complex/codeable-reference/codeableReference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/codeable-reference/codeableReference.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeableReference.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ concept: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' } }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ reference: { reference: '/Observation/id1234', type: 'Observation', display: 'Patient reported Headache' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/codeable-reference/codeableReference.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/codeable-reference/codeableReference.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-contact-point .data=${args.data} .profile=${args.useProfile ? args.profile : undefined} summary ?headless=${args.headless} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open} ></fhir-contact-point>` ) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Profile",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { meta: { profile: ['http://fhir.ch/ig/ch-core/StructureDefinition/ch-core-contactpoint-ech-46-phone'] }, ...data, extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-TEL-address', valueUri: 'tel:+15556755745' } ], '_use': { extension: [ { url: 'http://fhir.ch/ig/ch-core/StructureDefinition/ch-ext-ech-46-phonecategory', valueCodeableConcept: { coding: [{ code: 'email' }] } } ] } }, profile: profile({ type: new DatatypeDef('ContactPoint', 'CHCoreContactPointECH46Phone'), base, props: [ slice.constraint( ['system'], [ (data: ContactPointData, fixedValue: string) => ({ success: data.system === fixedValue, message: `Must be fixed value:${fixedValue}` }) ], ['phone'] ), extend.primitive<ContactPointData>( 'use', 'redundant-url', [ { key: 'phoneCategory', url: 'https://fhir.ch/ig/ch-core/5.0.0/StructureDefinition-ch-ext-ech-46-phonecategory.html', valueType: 'CodeableConcept', bindings: [ { value: '1', display: 'PrivatePhone' }, { value: '2', display: 'PrivateMobile' }, { value: '3', display: 'PrivateFax' }, { value: '4', display: 'PrivateInternetVoice' }, { value: '5', display: 'BusinessCentral' }, { value: '6', display: 'BusinessDirect' }, { value: '7', display: 'BusinessMobile' }, { value: '8', display: 'BusinessFax' }, { value: '9', display: 'BusinessInternetVoice' }, { value: '10', display: 'Pager' } ] } ]) .extendRender(DisplayMode.display, (_config, data) => ([ html` <fhir-extension key=\"_use\" label=\"_use\" .data=${(data as any)._use.extension[0]} ></fhir-extension>` ])) .extendRender(DisplayMode.structure, (_config, data) => ([ html` <fhir-extension key=\"_use\" label=\"_use\" .data=${(data as any)._use.extension[0]} ></fhir-extension>` ])) ] }), mode: 'structure', showerror: true, verbose: true, open: true, useProfile: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/contact-point/contact-point.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/contact-point/contact-point.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/contact-point/contact-point.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Profile",
          "declaration": {
            "name": "Profile",
            "module": "src/components/complex/contact-point/contact-point.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ system: 'phone', value: '(555) 675 5745', use: 'home', period: { start: '2022-07-01', end: '2024-07-01' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/contact-point/contact-point.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ContactPoint",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ContactPointData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ContactPointData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContactPoint",
          "declaration": {
            "name": "ContactPoint",
            "module": "src/components/complex/contact-point/contact-point.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/coding.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/coding.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<CustomArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Coding', component: 'fhir-shell', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-coding .data=${args.data} summary ?headless=${args.headless}></fhir-coding>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayableValue",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { system: 'http://hl7.org/fhir/sid/icd-10', code: 'G44.1', display: 'Vascular headache, not elsewhere classified' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "NoDisplayableValue",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { system: 'http://hl7.org/fhir/sid/icd-10', code: 'G44.1' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ShowStructureWithErrors",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { id: '123-456', extension: [], version: '1.0', system: 'hl7.org/fhir/sid/icd-10', code: 'not a valid code', display: 'Vascular headache, not elsewhere classified' }, mode: 'structure', verbose: false, showerror: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/coding/coding.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayableValue",
          "declaration": {
            "name": "DisplayableValue",
            "module": "src/components/complex/coding/coding.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NoDisplayableValue",
          "declaration": {
            "name": "NoDisplayableValue",
            "module": "src/components/complex/coding/coding.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ShowStructureWithErrors",
          "declaration": {
            "name": "ShowStructureWithErrors",
            "module": "src/components/complex/coding/coding.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/coding.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Coding",
          "members": [
            {
              "kind": "field",
              "name": "computeDisplay",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "computeContext",
              "privacy": "private",
              "static": true,
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coding",
          "declaration": {
            "name": "Coding",
            "module": "src/components/complex/coding/coding.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-human-name .data=${args.data} summary ?headless=${args.headless}></fhir-human-name>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data3, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/human-name/human-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/human-name/human-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "src/components/complex/human-name/human-name.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/human-name/human-name.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'von Hochheim-Weilenfels', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'von' }, { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-name', valueString: 'Hochheim-Weilenfels' } ] }, given: ['Regina', 'Johanna', 'Maria'], prefix: 'Dr. phil.', _prefix: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier', valueCode: 'AC' } ] }, suffix: 'NCFSA' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'van Hentenryck', given: ['Karen'] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ 'text': 'Mao Ze Dong' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HumanName",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<HumanNameData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<HumanNameData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HumanName",
          "declaration": {
            "name": "HumanName",
            "module": "src/components/complex/human-name/human-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Identifier', component: 'fhir-shell', subcomponents: ['fhir-identifier'], ...renderTemplateInShell((args: ShellArgs) => html` <fhir-identifier .data=${args.data} summary ?headless=${args.headless}></fhir-identifier>`) }"
        },
        {
          "kind": "variable",
          "name": "PatientIdentifier",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "HospitalPatientIdentifier",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data1, mode: 'structure', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Example3",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/identifier/identifier.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PatientIdentifier",
          "declaration": {
            "name": "PatientIdentifier",
            "module": "src/components/complex/identifier/identifier.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "HospitalPatientIdentifier",
          "declaration": {
            "name": "HospitalPatientIdentifier",
            "module": "src/components/complex/identifier/identifier.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Example3",
          "declaration": {
            "name": "Example3",
            "module": "src/components/complex/identifier/identifier.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'http://www.acmehosp.com/patients', value: '44552', period: { start: '2003-05-03' } }"
        },
        {
          "kind": "variable",
          "name": "data1",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'urn:oid:2.16.840.1.113883.16.4.3.2.5', value: '123' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "IdentifierData"
          },
          "default": "{ use: 'official', type: { coding: [{ code: 'BSN' }] }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789', period: { start: '2003-05-03', end: '2024-12-31' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data1",
          "declaration": {
            "name": "data1",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Identifier",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<IdentifierData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<IdentifierData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "IdentifierData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "Identifier",
            "module": "src/components/complex/identifier/identifier.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifiers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "identifiers",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "IdentifierData[]|undefined"
              }
            },
            {
              "name": "config",
              "type": {
                "text": "DisplayConfig"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "identifiers",
          "declaration": {
            "name": "identifiers",
            "module": "src/components/complex/identifier/identifiers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifiers"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Money', subcomponents: { period: 'fhir-money' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-money .data=\"${args.data}\" summary ?headless=${args.headless}></fhir-money> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/money/money.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/money/money.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/money/money.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ value: '25.00', currency: 'USD' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/money/money.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Money",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MoneyData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MoneyData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Money",
            "module": "src/components/complex/money/money.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Period', subcomponents: { period: 'fhir-period' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-period .data=\"${args.data}\" summary ?headless=${args.headless}></fhir-period> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: coverage, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Start",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: start, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "End",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: end, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: coverage, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/period/period.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/period/period.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Start",
          "declaration": {
            "name": "Start",
            "module": "src/components/complex/period/period.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "End",
          "declaration": {
            "name": "End",
            "module": "src/components/complex/period/period.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/period/period.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "coverage",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23', end: '2011-05-27' }"
        },
        {
          "kind": "variable",
          "name": "start",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23' }"
        },
        {
          "kind": "variable",
          "name": "end",
          "type": {
            "text": "object"
          },
          "default": "{ end: '2011-05-27' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "coverage",
          "declaration": {
            "name": "coverage",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "start",
          "declaration": {
            "name": "start",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "end",
          "declaration": {
            "name": "end",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Period",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PeriodData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PeriodData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Period",
          "declaration": {
            "name": "Period",
            "module": "src/components/complex/period/period.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.type-guards"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Quantity', component: 'fhir-quantity', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-quantity .data=${args.data} summary ?headless=${args.headless}></fhir-quantity>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayableTime",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '25', unit: 'sec', system: 'http://unitsofmeasure.org', code: 's' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "AmountOfPrescribedMedicine",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '40000', comparator: '&gt;', unit: 'ug/L', system: 'http://unitsofmeasure.org', code: 'ug' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "AmountOfPrescribedMedicine2",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '3', unit: 'capsules', system: 'http://snomed.info/sct', code: '385049006' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Money",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '100', unit: 'US$', system: 'urn:iso:std:iso:4217', code: 'USD' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '1' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ShowStructWithErrors",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: 'abc', unit: 'sec', system: 'http://unitsofmeasure.org', code: 's' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Distance",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '100', unit: 'kilometers', system: 'http://unitsofmeasure.org', code: 'km' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Age",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '18', unit: 'months', system: 'http://unitsofmeasure.org', code: 'mo' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Duration",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '0', unit: 'milliseconds', system: 'http://unitsofmeasure.org', code: 'ms' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Count",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { value: '1', code: '1' }, mode: 'structure', showerror: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayableTime",
          "declaration": {
            "name": "DisplayableTime",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AmountOfPrescribedMedicine",
          "declaration": {
            "name": "AmountOfPrescribedMedicine",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AmountOfPrescribedMedicine2",
          "declaration": {
            "name": "AmountOfPrescribedMedicine2",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Money",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ShowStructWithErrors",
          "declaration": {
            "name": "ShowStructWithErrors",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Distance",
          "declaration": {
            "name": "Distance",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Age",
          "declaration": {
            "name": "Age",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Duration",
          "declaration": {
            "name": "Duration",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Count",
          "declaration": {
            "name": "Count",
            "module": "src/components/complex/quantity/quantity.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { display: flex; flex-direction: column; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/complex/quantity/quantity.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Quantity",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "simple",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "variation",
              "type": {
                "text": "QuantityVariations"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<QuantityData | SimpleQuantityData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData"
                  }
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": "Decorated<QuantityData> | Decorated<SimpleQuantityData>"
                }
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  }
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Quantity",
          "declaration": {
            "name": "Quantity",
            "module": "src/components/complex/quantity/quantity.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.type-guards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isQuantity",
          "return": {
            "type": {
              "text": "quantity is QuantityData"
            }
          },
          "parameters": [
            {
              "name": "quantity",
              "type": {
                "text": "QuantityData | SimpleQuantityData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSimpleQuantity",
          "return": {
            "type": {
              "text": "quantity is SimpleQuantityData"
            }
          },
          "parameters": [
            {
              "name": "quantity",
              "type": {
                "text": "QuantityData | SimpleQuantityData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBoolean",
          "return": {
            "type": {
              "text": "val is DeceasedBoolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDeceasedDateTime",
          "return": {
            "type": {
              "text": "val is DeceasedBoolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorReference",
          "return": {
            "type": {
              "text": "val is AuthorReferenceData"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "ReferenceData | FhirString"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorFhirString",
          "return": {
            "type": {
              "text": "val is AuthorFhirString"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "ReferenceData | FhirString"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isQuantity",
          "declaration": {
            "name": "isQuantity",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isSimpleQuantity",
          "declaration": {
            "name": "isSimpleQuantity",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "isBoolean",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDeceasedDateTime",
          "declaration": {
            "name": "isDeceasedDateTime",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorReference",
          "declaration": {
            "name": "isAuthorReference",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorFhirString",
          "declaration": {
            "name": "isAuthorFhirString",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/range.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/range.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Range', component: 'fhir-range', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-range .data=${args.data} summary ?headless=${args.headless}></fhir-range>`) }"
        },
        {
          "kind": "variable",
          "name": "Distance",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { \"low\" : { \"value\" : \"1.6\", \"unit\" : \"m\" }, \"high\" : { \"value\" : \"1.9\", \"unit\" : \"m\" } }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "DistanceError",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { \"low\" : { \"value\" : \"1.6\", \"unit\" : \"m\", comparator: '&gt;' }, \"high\" : { \"value\" : \"1.9\", \"unit\" : \"m\" } }, mode: 'display', showerror: false, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/range/range.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Distance",
          "declaration": {
            "name": "Distance",
            "module": "src/components/complex/range/range.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DistanceError",
          "declaration": {
            "name": "DistanceError",
            "module": "src/components/complex/range/range.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Range",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Range",
          "declaration": {
            "name": "Range",
            "module": "src/components/complex/range/range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Ratio', component: 'fhir-ratio', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-ratio .data=${args.data} summary ?headless=${args.headless}></fhir-ratio>`) }"
        },
        {
          "kind": "variable",
          "name": "SimpleRatio",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { numerator: { value: '1' }, denominator: { value: '128' } }, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "UnitCost",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { numerator: { value: '103.50', unit: 'US$', code: 'USD', system: 'urn:iso:std:iso:4217' }, denominator: { value: '1', unit: 'day', code: 'day', system: 'http://unitsofmeasure.org' } }, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/ratio/ratio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SimpleRatio",
          "declaration": {
            "name": "SimpleRatio",
            "module": "src/components/complex/ratio/ratio.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "UnitCost",
          "declaration": {
            "name": "UnitCost",
            "module": "src/components/complex/ratio/ratio.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Ratio",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles]"
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "RatioData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "RatioData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Ratio",
          "declaration": {
            "name": "Ratio",
            "module": "src/components/complex/ratio/ratio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sample-data.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/sample-data.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/sampled-data.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Sampled Data', component: 'fhir-sampled-data', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-sampled-data .data=${args.data} summary ?headless=${args.headless}></fhir-sampled-data>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless:false } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless:true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/sampled-data/sampled-data.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/sampled-data/sampled-data.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/sampled-data/sampled-data.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/sampled-data.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SampledData",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampledData",
          "declaration": {
            "name": "SampledData",
            "module": "src/components/complex/sampled-data/sampled-data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./story.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/signature.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: path, component: elementName, subcomponents, ...renderTemplateInShell((args) => html` <fhir-signature .data=${args.data} summary ?headless=${args.headless}></fhir-signature>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/signature/signature.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/signature/signature.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/signature/signature.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/signature.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Signature",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SignatureData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SignatureData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Signature",
          "declaration": {
            "name": "Signature",
            "module": "src/components/complex/signature/signature.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ type: { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' }, when: '2022-02-08T10:16:32.000+10:00', who: { reference: 'Practitioner/example' }, targetFormat: 'application/fhir+xml', data: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPEVudmVsb3BlIHhtbG5zPSJ1cm46ZW52ZWxvcGUiPgogIDxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgPFNpZ25lZEluZm8+CiAgICAgIDxDYW5vbmljYWxpemF0aW9uTWV0aG9kIAogICAgICAgICAgIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tCjIwMDEwMzE1I1dpdGhDb21tZW50cyIvPgogICAgICA8U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS8KeG1sZHNpZyNkc2Etc2hhMSIvPgogICAgICA8UmVmZXJlbmNlIFVSST0iIj4KICAgICAgICA8VHJhbnNmb3Jtcz4KICAgICAgICAgIDxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5Lwp4bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICA8L1RyYW5zZm9ybXM+CiAgICAgICAgPERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkvCnhtbGRzaWcjc2hhMSIvPgogICAgICAgIDxEaWdlc3RWYWx1ZT51b29xYldZYTVWQ3FjSkNidXltQktxbTE3dlk9PC9EaWdlc3RWYWx1ZT4KICAgICAgPC9SZWZlcmVuY2U+CiAgICA8L1NpZ25lZEluZm8+CjxTaWduYXR1cmVWYWx1ZT4KS2VkSnVUb2I1Z3R2WXg5cU0zazNnbTdrYkxCd1ZiRVFSbDI2UzJ0bVhqcU5ORDdNUkd0b2V3PT0KICAgIDwvU2lnbmF0dXJlVmFsdWU+CiAgICA8S2V5SW5mbz4KICAgICAgPEtleVZhbHVlPgogICAgICAgIDxEU0FLZXlWYWx1ZT4KICAgICAgICAgIDxQPgovS2FDem80U3lyb203OHozRVE1U2JiQjRzRjdleTgwZXRLSUk4NjRXRjY0QjgxdVJwSDV0OWpRVHhlCkV1MEltYnpSTXF6VkRaa1ZHOXhEN25OMWt1Rnc9PQogICAgICAgICAgPC9QPgogICAgICAgICAgPFE+bGk3ZHpEYWN1bzY3Smc3bXRxRW0yVFJ1T01VPTwvUT4KICAgICAgICAgIDxHPlo0UnhzbnFjOUU3cEdrbkZGSDJ4cWFyeVJQQmFRMDFraHBNZExSUW5HNTQxQXd0eC8KWFBhRjVCcHN5NHBOV01PSENCaU5VME5vZ3BzUVc1UXZubE1wQT09CiAgICAgICAgICA8L0c+CiAgICAgICAgICA8WT5xVjM4SXFyV0pHMFYvCm1aUXZSVmkxT0h3OVpqODRuREM0ak84UDBheGkxZ2I2ZCs0NzV5aE1qU2MvCkJySVZDNThXM3lkYmtLK1JpNE9LYmFSWmxZZVJBPT0KICAgICAgICAgPC9ZPgogICAgICAgIDwvRFNBS2V5VmFsdWU+CiAgICAgIDwvS2V5VmFsdWU+CiAgICA8L0tleUluZm8+CiAgPC9TaWduYXR1cmU+CjwvRW52ZWxvcGU+IA==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/signature/story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing-repeat.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing-repeat.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TimingRepeat",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimingRepeat",
          "declaration": {
            "name": "TimingRepeat",
            "module": "src/components/complex/timing/timing-repeat.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Timing', component: 'fhir-timing', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-timing .data=${args.data} summary ?headless=${args.headless}></fhir-timing>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless:false } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless:true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/complex/timing/timing.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/complex/timing/timing.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/complex/timing/timing.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Timing",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Timing",
          "declaration": {
            "name": "Timing",
            "module": "src/components/complex/timing/timing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle-everything.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BundleEverything",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Bundle",
            "module": "/src/components/foundation/bundle/bundle"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BundleEverything",
          "declaration": {
            "name": "BundleEverything",
            "module": "src/components/foundation/bundle/bundle-everything.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "MasterDetail",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: masterDetail, mode: 'display', showerror: false, verbose: false, open: false }, render: (args: Partial<ArgTypes<ShellArgs>>): TemplateResult => html` <fhir-bundle-everything .data=${args.data} ></fhir-bundle-everything>` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/foundation/bundle/bundle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/foundation/bundle/bundle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/foundation/bundle/bundle.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MasterDetail",
          "declaration": {
            "name": "MasterDetail",
            "module": "src/components/foundation/bundle/bundle.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-references', type: 'collection', entry: [ { fullUrl: 'http://example.org/fhir/Patient/23', resource: { resourceType: 'Patient', id: '23', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown ( id:\\u00a01234567)</p><hr/></div>' }, identifier: [ { system: 'http://example.org/ids', value: '1234567' } ] } }, { fullUrl: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d', resource: { resourceType: 'Patient', id: 'temp', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown</p><hr/></div>' } } }, { fullUrl: 'http://example.org/fhir/Observation/123', resource: { resourceType: 'Observation', id: '123', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"123\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;123&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/124', resource: { resourceType: 'Observation', id: '124', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"124\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;124&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir/Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir/Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/12', resource: { resourceType: 'Observation', id: '12', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"12\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;12&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d' } } }, { fullUrl: 'http://example.org/fhir/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir-2/Patient/1</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir-2/Patient/1' } } }, { fullUrl: 'http://example.org/fhir-2/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '1' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 1</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 1' } ] } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '2' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 2</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 2' } ] } }, { fullUrl: 'http://example.org/fhir/Observation/47', resource: { resourceType: 'Observation', id: '47', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"47\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;47&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/45/_history/2</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/45/_history/2' } } }, { fullUrl: 'http://example.org/fhir/Observation/48', resource: { resourceType: 'Observation', id: '48', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"48\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;48&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <span/></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { identifier: { system: 'http://example.org/ids', value: '1234567' } } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-simplesummary', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '2c2fb771-6c4b-4df8-89b2-47a1178e7c', meta: { lastUpdated: '2018-11-12T05:42:49.445Z' }, type: 'searchset', total: 4, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=36aac5c3-a9f6-4c3a-bf94-24d32ed604&&patient=example&_sort=_id' } ], entry: [ { fullUrl: 'http://test.fhir.org/r5/Condition/example', resource: { resourceType: 'Condition', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.552Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Severe burn of left ear (Date: 24-May 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' }, { system: 'http://snomed.info/sct', code: '439401001', display: 'Diagnosis' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '24484000', display: 'Severe' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '39065001', display: 'Burn of ear' } ], text: 'Burnt Ear' }, bodySite: [ { coding: [ { system: 'http://snomed.info/sct', code: '49521004', display: 'Left external ear structure' } ], text: 'Left Ear' } ], subject: { reference: 'Patient/example' }, onsetDateTime: '2012-05-24' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/example2', resource: { resourceType: 'Condition', id: 'example2', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.626Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Mild Asthma (Date: 12-Nov 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '255604002', display: 'Mild' } ] }, code: { text: 'Asthma' }, subject: { reference: 'Patient/example' }, onsetString: 'approximately November 2012' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/family-history', resource: { resourceType: 'Condition', id: 'family-history', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.274Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Family history of cancer of colon</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '312824007', display: 'Family history of cancer of colon' } ] }, subject: { reference: 'Patient/example' } }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/stroke', resource: { resourceType: 'Condition', id: 'stroke', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.337Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Ischemic stroke, July 18, 2010</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '422504002', display: 'Ischemic stroke (disorder)' } ], text: 'Stroke' }, subject: { reference: 'Patient/example' }, onsetDateTime: '2010-07-18' }, search: { mode: 'match' } } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '86846953-60dd-47ba-b37a-7e7d7e3312', meta: { lastUpdated: '2018-11-12T05:42:49.476Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=0f08b401-5120-4444-9a83-3fd21d33df&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '4bafe9c4-ba53-4d7b-89d0-d92ee0859a', meta: { lastUpdated: '2018-11-12T05:42:49.498Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Observation?_format=application/fhir+xml&search-id=50df0414-1375-48a4-ba1e-66f580360a&&patient=example&code=http%3A//loinc.org%7C55284%2D4&date=ge2015%2D01%2D01&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-medsallergies', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '5bdf95d0-24a6-4024-95f5-d546fb479b', meta: { lastUpdated: '2018-11-12T05:42:16.086Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=804eee4a-0a54-4414-9c07-169952f929&&patient=example&_list=%24current%2Dmedications&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '0c11a91c-3638-4d58-8cf1-40e60f43c6', meta: { lastUpdated: '2018-11-12T05:42:16.209Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/AllergyIntolerance?_format=application/fhir+xml&search-id=b1981f8a-4139-4db6-923d-77d764c990&&patient=example&_list=%24current%2Dallergies&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '19f0fa29-f8fe-4b07-b035-f488893f06', meta: { lastUpdated: '2018-11-12T05:42:16.279Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=4d097c43-54aa-4157-b500-be22208dd0&&patient=example&_list=%24current%2Dproblems&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: 'dff8ab42-33f9-42ec-88c5-83d3f05323', meta: { lastUpdated: '2018-11-12T05:42:16.351Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=31d4af75-cdcf-4f85-9666-4bafadebb5&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "masterDetail",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'b1e4aca6-8695-4f22-84e1-7b7ac22242e5', meta: { lastUpdated: '2025-02-21T17:08:35.396+00:00' }, type: 'searchset', link: [ { relation: 'self', url: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2/$everything' }, { relation: 'next', url: 'https://hapi.fhir.org/baseR5?_getpages=b1e4aca6-8695-4f22-84e1-7b7ac22242e5&_getpagesoffset=20&_count=20&_pretty=true&_bundletype=searchset' } ], entry: [ { fullUrl: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2', resource: { resourceType: 'Patient', id: 'silth-practice-2', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\">Mr. Josh <b>JAIDEE </b></div><table class=\"hapiPropertyTable\"><tbody><tr><td>Identifier</td><td>8-4027-26620-53-3</td></tr><tr><td>Date of birth</td><td><span>03 April 1967</span></td></tr></tbody></table></div>' }, identifier: [ { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'NI' } ] }, system: 'http://thailand.com/citizenid', value: '8-4027-26620-53-3' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'http://fhirhealthhospital.com/mrn', value: '64-52323' } ], active: true, name: [ { family: 'Jaidee', given: [ 'Josh' ], prefix: [ 'Mr.' ] } ], gender: 'male', birthDate: '1967-04-03' }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81973', resource: { resourceType: 'Condition', id: '81973', meta: { versionId: '2', lastUpdated: '2023-09-10T09:45:22.044+00:00', source: '#y1csxzmLCMKFr88n' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis, other and unspecified' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81974', resource: { resourceType: 'DiagnosticReport', id: '81974', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81975' }, result: [ { reference: 'Observation/81977' }, { reference: 'Observation/81978' }, { reference: 'Observation/81979' }, { reference: 'Observation/81980' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81975', resource: { resourceType: 'Encounter', id: '81975', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81981', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81976', resource: { resourceType: 'MedicationRequest', id: '81976', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81975', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81977', resource: { resourceType: 'Observation', id: '81977', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81978', resource: { resourceType: 'Observation', id: '81978', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81979', resource: { resourceType: 'Observation', id: '81979', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81980', resource: { resourceType: 'Observation', id: '81980', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81983', resource: { resourceType: 'Procedure', id: '81983', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81985', resource: { resourceType: 'Condition', id: '81985', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' }, { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81986', resource: { resourceType: 'DiagnosticReport', id: '81986', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81987' }, result: [ { reference: 'Observation/81989' }, { reference: 'Observation/81990' }, { reference: 'Observation/81991' }, { reference: 'Observation/81992' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81987', resource: { resourceType: 'Encounter', id: '81987', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81993', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81988', resource: { resourceType: 'MedicationRequest', id: '81988', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81987', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81989', resource: { resourceType: 'Observation', id: '81989', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81990', resource: { resourceType: 'Observation', id: '81990', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81991', resource: { resourceType: 'Observation', id: '81991', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81992', resource: { resourceType: 'Observation', id: '81992', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81995', resource: { resourceType: 'Procedure', id: '81995', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/82010', resource: { resourceType: 'Condition', id: '82010', meta: { versionId: '3', lastUpdated: '2023-09-10T09:50:11.731+00:00', source: '#24Vx6GrMz5ttlC2B' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "masterDetail",
          "declaration": {
            "name": "masterDetail",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Bundle",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        },
        {
          "kind": "function",
          "name": "isDomainResource",
          "return": {
            "type": {
              "text": "val is DomainResourceData"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Bundle",
          "declaration": {
            "name": "Bundle",
            "module": "src/components/foundation/bundle/bundle.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDomainResource",
          "declaration": {
            "name": "isDomainResource",
            "module": "src/components/foundation/bundle/bundle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle-everything"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/contact-details/contact-detail.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/contact-details/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-detail.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/usage-context/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/usage-context/usage-context.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/primitive-context.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/primitive-context.styles.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/primitive-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveContext",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[ textHostStyles, css` :host { padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); } span { color: var(--sl-color-gray-400); font-style: italic; font-family: var(--sl-font-serif), serif; margin-left: var(--sl-spacing-x-small); } ` ]"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveContext",
          "declaration": {
            "name": "PrimitiveContext",
            "module": "src/components/primitive/primitive-context/primitive-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/primitive-error.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/primitive-error.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-left: var(--sl-spacing-small); padding-top: var(--sl-spacing-x-small); padding-bottom: var(--sl-spacing-x-small); } #message { padding-left: var(--sl-spacing-2x-small); padding-right: var(--sl-spacing-2x-small); background: var(--sl-color-danger-300); color: var(--sl-color-neutral-50); font-style: italic; border-radius: var(--sl-border-radius-small); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-error/primitive-error.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/primitive-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveError",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[textHostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveError",
          "declaration": {
            "name": "PrimitiveError",
            "module": "src/components/primitive/primitive-error/primitive-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/primitive-label.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/primitive-label.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-left: var(--sl-spacing-2x-small); padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); user-select: text; /* Allow text selection within shadow DOM */ } label { color: var(--sl-color-primary-700); user-select: text; } /* TODO: variants should be formalised */ .error { font-style: italic; text-decoration: underline wavy var(--sl-color-danger-600); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-label/primitive-label.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/primitive-label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveLabel",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[textHostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "':'"
            },
            {
              "kind": "field",
              "name": "for",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "assignedElements",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveLabel",
          "declaration": {
            "name": "PrimitiveLabel",
            "module": "src/components/primitive/primitive-label/primitive-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/primitive-value.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/primitive-value.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); } div { color: var(--sl-color-gray-800); padding-left: var(--sl-spacing-3x-small); user-select: text; } .placeholder { color: var(--sl-color-gray-300); font-style: italic; font-family: var(--sl-font-serif), serif; } .error { text-decoration: underline wavy var(--sl-color-danger-600); } .variant-checkbox { } .variant-fixed-width { max-width: 40rem; word-wrap: break-word; } .variant-hide-overflow { width: 30rem; /* set the initial width */ height: 2rem; /* set the initial height */ overflow: hidden; /* hide the overflowed text */ transition: height 1s; /* animate height */ word-wrap: break-word; } .variant-hide-overflow:hover { height: 12rem; /* expand to the full height on hover */ overflow-y: scroll; overflow-x: hidden } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-value/primitive-value.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/primitive-value.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValue",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[textHostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'n/a'"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "description": "Value representation variants.\naccepted values:\n- `fixed-width` - flow large blocks of text to a specific width\n- `hide-overflow` - collapse large blocks of text\n- `checkbox` - show a checkbox instead of text."
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "beforeSlot",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "field",
              "name": "afterSlot",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "field",
              "name": "computeValue",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValue",
          "declaration": {
            "name": "PrimitiveValue",
            "module": "src/components/primitive/primitive-value/primitive-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/primitive-wrapper.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/primitive-wrapper.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` li { display: flex; flex-wrap: wrap; list-style-type: none; padding-left: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-wrapper/primitive-wrapper.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/primitive-wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveWrapper",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[textHostStyles, componentStyles]"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "dist/src/shell/shoelace-styled-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveWrapper",
          "declaration": {
            "name": "PrimitiveWrapper",
            "module": "src/components/primitive/primitive-wrapper/primitive-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBoolean"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCanonical"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDatetime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDecimal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toFhirString"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toId"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toMarkdown"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toPositiveInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toReference"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toType"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUnsignedInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUri"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUrl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toBase64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toBase64",
          "return": {
            "type": {
              "text": "Base64Binary"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            },
            {
              "name": "maxLength",
              "default": "1048576",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBase64",
          "declaration": {
            "name": "toBase64",
            "module": "src/components/primitive/type-converters/toBase64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toBoolean.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toBoolean",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBoolean",
          "declaration": {
            "name": "toBoolean",
            "module": "src/components/primitive/type-converters/toBoolean.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toCanonical.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toCanonical",
          "return": {
            "type": {
              "text": "Id"
            }
          },
          "parameters": [
            {
              "name": "canonical",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCanonical",
          "declaration": {
            "name": "toCanonical",
            "module": "src/components/primitive/type-converters/toCanonical.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toCode.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toCode",
          "return": {
            "type": {
              "text": "T"
            }
          },
          "parameters": [
            {
              "name": "code",
              "type": {
                "text": "string"
              },
              "description": "The string to convert."
            }
          ],
          "description": "Converts and validates a string to a FHIR code."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCode",
          "declaration": {
            "name": "toCode",
            "module": "src/components/primitive/type-converters/toCode.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDate",
          "return": {
            "type": {
              "text": "DateTime"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDate",
          "declaration": {
            "name": "toDate",
            "module": "src/components/primitive/type-converters/toDate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDatetime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDatetime",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "DateTime"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDatetime",
          "declaration": {
            "name": "toDatetime",
            "module": "src/components/primitive/type-converters/toDatetime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDecimal.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "toDecimal",
          "type": {
            "text": "toPrimitive<unknown, Decimal>"
          },
          "default": "function (decimal: unknown) { if (!decimal) throw new TypeError(`decimal must be a valid number: ${decimal}`) if (!regex.test(decimal+'')) throw new TypeError(`decimal must be a valid number: ${decimal}`) if (isNaN(Number.parseFloat(decimal+''))) throw new TypeError(`decimal must be a valid number: ${decimal}`) // Split the number into base and exponent const parts = String(decimal).split(/[eE]/) const basePart = parts[0] const exponentPart = parts[1] ? parseInt(parts[1], 10) : 0 // Remove potential leading negative sign and decimal point const baseDigits = basePart.replace(/^-|\\./g, '') // Calculate the total number of digits considering the exponent const totalDigits = baseDigits.length + (exponentPart !== 0 ? Math.abs(exponentPart) : 0) if (totalDigits <= 18) { return decimal as Decimal // return decimal } throw new TypeError(`decimal must be a valid number: ${decimal}`) }",
          "description": "Converts a string representation of a decimal number to the Decimal type.",
          "parameters": [
            {
              "description": "The string representation of the decimal number to convert.",
              "name": "decimal"
            }
          ],
          "return": {
            "type": {
              "text": ""
            }
          }
        },
        {
          "kind": "function",
          "name": "isDecimal",
          "return": {
            "type": {
              "text": "arg is Decimal"
            }
          },
          "parameters": [
            {
              "name": "arg",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDecimal",
          "declaration": {
            "name": "toDecimal",
            "module": "src/components/primitive/type-converters/toDecimal.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDecimal",
          "declaration": {
            "name": "isDecimal",
            "module": "src/components/primitive/type-converters/toDecimal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toError.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "toError",
          "type": {
            "text": "toPrimitive<string, string>"
          },
          "default": "function (value: string): string { throw new Error(value ?? `Unable to render due to internal constraint`) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toError",
          "declaration": {
            "name": "toError",
            "module": "src/components/primitive/type-converters/toError.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toFhirString.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toFhirString",
          "return": {
            "type": {
              "text": "FhirString"
            }
          },
          "parameters": [
            {
              "name": "unknown",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toFhirString",
          "declaration": {
            "name": "toFhirString",
            "module": "src/components/primitive/type-converters/toFhirString.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toId.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toId",
          "return": {
            "type": {
              "text": "Id"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toId",
          "declaration": {
            "name": "toId",
            "module": "src/components/primitive/type-converters/toId.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInstant.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInstant",
          "return": {
            "type": {
              "text": "Instant"
            }
          },
          "parameters": [
            {
              "name": "instant",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInstant",
          "declaration": {
            "name": "toInstant",
            "module": "src/components/primitive/type-converters/toInstant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInteger.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger",
          "return": {
            "type": {
              "text": "Integer"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger",
          "declaration": {
            "name": "toInteger",
            "module": "src/components/primitive/type-converters/toInteger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInteger64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger64",
          "return": {
            "type": {
              "text": "Integer64"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger64",
          "declaration": {
            "name": "toInteger64",
            "module": "src/components/primitive/type-converters/toInteger64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toLink.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toLink",
          "return": {
            "type": {
              "text": "Link"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toLink",
          "declaration": {
            "name": "toLink",
            "module": "src/components/primitive/type-converters/toLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toMarkdown.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toMarkdown",
          "return": {
            "type": {
              "text": "Markdown"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toMarkdown",
          "declaration": {
            "name": "toMarkdown",
            "module": "src/components/primitive/type-converters/toMarkdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toPositiveInt.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toPositiveInt",
          "return": {
            "type": {
              "text": "PositiveInt"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toPositiveInt",
          "declaration": {
            "name": "toPositiveInt",
            "module": "src/components/primitive/type-converters/toPositiveInt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toReference.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toReference",
          "return": {
            "type": {
              "text": "Ref"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Based on reference rule"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toReference",
          "declaration": {
            "name": "toReference",
            "module": "src/components/primitive/type-converters/toReference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toTime",
          "return": {
            "type": {
              "text": "DateTime"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toTime",
          "declaration": {
            "name": "toTime",
            "module": "src/components/primitive/type-converters/toTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toType.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toType",
          "return": {
            "type": {
              "text": "Type"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toType",
          "declaration": {
            "name": "toType",
            "module": "src/components/primitive/type-converters/toType.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUnsignedInt.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUnsignedInt",
          "return": {
            "type": {
              "text": "UnsignedInt"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUnsignedInt",
          "declaration": {
            "name": "toUnsignedInt",
            "module": "src/components/primitive/type-converters/toUnsignedInt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUri.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUri",
          "return": {
            "type": {
              "text": "URI"
            }
          },
          "parameters": [
            {
              "name": "uri",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUri",
          "declaration": {
            "name": "toUri",
            "module": "src/components/primitive/type-converters/toUri.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUrl.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUrl",
          "return": {
            "type": {
              "text": "URL"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              },
              "description": "The string representing the URL."
            }
          ],
          "description": "Converts and validates a string to a URL object."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUrl",
          "declaration": {
            "name": "toUrl",
            "module": "src/components/primitive/type-converters/toUrl.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUuid.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUuid",
          "return": {
            "type": {
              "text": "URL"
            }
          },
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "text": "string"
              }
            },
            {
              "description": "The string representing the URL.",
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts and validates a string to a URL object."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUuid",
          "declaration": {
            "name": "toUuid",
            "module": "src/components/primitive/type-converters/toUuid.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/type-converters.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "valueOrError",
          "return": {
            "type": {
              "text": "ValOrErr<O, V>"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "toPrimitive<O, V>"
              }
            },
            {
              "name": "originalVal",
              "type": {
                "text": "O"
              }
            }
          ],
          "description": "Wrap value with an error message when operation failed. When there is no error the value is also cast to an expected\ntype. When there was an error the original value type is returned."
        },
        {
          "kind": "function",
          "name": "convertToPrimitiveType",
          "return": {
            "type": {
              "text": "PrimitiveType"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "description": "The value to be converted."
            }
          ],
          "description": "Converts the given value to its primitive type."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "valueOrError",
          "declaration": {
            "name": "valueOrError",
            "module": "src/components/primitive/type-converters/type-converters.ts"
          }
        },
        {
          "kind": "js",
          "name": "convertToPrimitiveType",
          "declaration": {
            "name": "convertToPrimitiveType",
            "module": "src/components/primitive/type-converters/type-converters.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asDecodedBase64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asDecodedBase64",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asDecodedBase64",
          "declaration": {
            "name": "asDecodedBase64",
            "module": "src/components/primitive/type-formatters/asDecodedBase64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedDate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDate",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                  date,\n                                  separator = '.',\n                                  order = 'DMY',\n                                  monthFormat = 'short'\n                                }",
              "type": {
                "text": "DateFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDate",
          "declaration": {
            "name": "asFormattedDate",
            "module": "src/components/primitive/type-formatters/asFormattedDate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedDateTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDateTime",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                      datetime,\n                                      timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone,\n                                      dateSeparator = '.',\n                                      timeSeparator = ':',\n                                      order = 'DMY',\n                                      monthFormat = 'short',\n                                      format = '24h',\n                                      shape = 'HMS'\n                                    }",
              "type": {
                "text": "DateTimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "src/components/primitive/type-formatters/asFormattedDateTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedInstant.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedInstant",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                     instant,\n                                     timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone,\n                                     dateSeparator = '.',\n                                     timeSeparator = ':',\n                                     order = 'DMY',\n                                     monthFormat = 'short',\n                                     format = '24h',\n                                     shape = undefined\n                                   }",
              "type": {
                "text": "DateTimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedInstant",
          "declaration": {
            "name": "asFormattedInstant",
            "module": "src/components/primitive/type-formatters/asFormattedInstant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedTime",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                  time,\n                                  hourSeparator = ':',\n                                  minuteSeparator = ':',\n                                  format = '24h',\n                                  shape = undefined\n                                }",
              "type": {
                "text": "TimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedTime",
          "declaration": {
            "name": "asFormattedTime",
            "module": "src/components/primitive/type-formatters/asFormattedTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asLink.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asLink",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "link",
              "type": {
                "text": "Ref | typeof URL"
              }
            },
            {
              "name": "label",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asLink",
          "declaration": {
            "name": "asLink",
            "module": "src/components/primitive/type-formatters/asLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asReadable.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asReadable",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "to",
              "default": "'none'",
              "type": {
                "text": "'none' | 'lower' | 'upper'"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asReadable",
          "declaration": {
            "name": "asReadable",
            "module": "src/components/primitive/type-formatters/asReadable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asUcumUnit.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asUcumUnit",
          "return": {
            "type": {
              "text": "Ucum"
            }
          },
          "parameters": [
            {
              "name": "code",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asUcumUnit",
          "declaration": {
            "name": "asUcumUnit",
            "module": "src/components/primitive/type-formatters/asUcumUnit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asWrapped.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asWrapped",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "inputStr",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "n",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asWrapped",
          "declaration": {
            "name": "asWrapped",
            "module": "src/components/primitive/type-formatters/asWrapped.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/format.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "format",
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "unknown"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "format",
          "declaration": {
            "name": "format",
            "module": "src/components/primitive/type-formatters/format.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asDecodedBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedDate"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "./asFormattedDateTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asReadable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asUcumUnit"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asWrapped"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./format"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-monthly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentMonthlyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentMonthlyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentMonthlyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentMonthlyTemplate",
          "declaration": {
            "name": "AppointmentMonthlyTemplate",
            "module": "src/components/resources/appointment/appointment-monthly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-participant.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentParticipantBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentParticipantData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentParticipantData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentParticipantBackbone",
          "declaration": {
            "name": "AppointmentParticipantBackbone",
            "module": "src/components/resources/appointment/appointment-participant.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-recurrence-template.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentRecurrenceTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentRecurrenceTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "declaration": {
            "name": "AppointmentRecurrenceTemplateBackbone",
            "module": "src/components/resources/appointment/appointment-recurrence-template.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-weekly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentWeeklyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentWeeklyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentWeeklyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentWeeklyTemplate",
          "declaration": {
            "name": "AppointmentWeeklyTemplate",
            "module": "src/components/resources/appointment/appointment-weekly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-yearly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentYearlyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentYearlyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentYearlyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentYearlyTemplate",
          "declaration": {
            "name": "AppointmentYearlyTemplate",
            "module": "src/components/resources/appointment/appointment-yearly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Resources/Appointment/Appointment', component: 'fhir-appointment', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-appointment .data=${args.data}></fhir-appointment> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/appointment/appointment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/appointment/appointment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "src/components/resources/appointment/appointment.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/appointment/appointment.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, status: 'booked', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], serviceType: [ { concept: { coding: [ { code: '52', display: 'General Discussion' } ] } } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'FOLLOWUP', display: 'A follow up visit from a previous appointment' } ] }, reason: [ { reference: { reference: 'Condition/example', display: 'Severe burn of left ear' } } ], description: 'Discussion on the results of your recent MRI', start: '2013-12-10T09:00:00Z', end: '2013-12-10T11:00:00Z', created: '2013-10-10', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], patientInstruction: [ { concept: { text: 'Please avoid excessive travel (specifically flying) before this appointment' } } ], basedOn: [ { reference: 'ServiceRequest/myringotomy' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'accepted' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], actor: { reference: 'Practitioner/example', display: 'Dr Adam Careful' }, required: true, status: 'accepted' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'examplereq', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, identifier: [ { system: 'http://example.org/sampleappointment-identifier', value: '123' } ], status: 'proposed', serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'WALKIN', display: 'A previously unscheduled walk-in visit' } ] }, reason: [ { concept: { coding: [ { system: 'http://snomed.info/sct', code: '413095006' } ], text: 'Clinical Review' } } ], description: 'Discussion on the results of your recent MRI', minutesDuration: 15, requestedPeriod: [ { start: '2016-06-02', end: '2016-06-09' } ], slot: [ { reference: 'Slot/example' } ], created: '2015-12-02', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'needs-action' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], required: true, status: 'needs-action' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/appointment/appointment.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/resources/appointment/appointment.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Appointment",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Appointment",
          "declaration": {
            "name": "Appointment",
            "module": "src/components/resources/appointment/appointment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-monthly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-participant.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-recurrence-template.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-weekly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-yearly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-batch.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-batch.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MedicationBatchBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationBatchData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationBatchData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationBatchBackbone",
          "declaration": {
            "name": "MedicationBatchBackbone",
            "module": "src/components/resources/medication/medication-batch.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-ingredient.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MedicationIngredientBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationIngredientData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationIngredientData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal/resource/Backbone"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationIngredientBackbone",
          "declaration": {
            "name": "MedicationIngredientBackbone",
            "module": "src/components/resources/medication/medication-ingredient.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-ingredient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Resources/Medication/Medication', component: 'fhir-medication', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-medication .data=${args.data}></fhir-medication> `) }"
        },
        {
          "kind": "variable",
          "name": "Med0310Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_310, mode: 'display', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0310Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_310, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0310Narrative",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_310, mode: 'narrative' } }"
        },
        {
          "kind": "variable",
          "name": "Med0319Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_319, mode: 'display', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0319Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: synthiaData, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "FrontPageDemo",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: frontPageData, mode: 'display', summaryonly: false, showerror: false, verbose: false, open: true, headless: true, input: false }, render: (args: ShellArgs) => html`<h3 style=\"color:var(--sl-color-primary-900); padding: 0;margin: 0\">Medication</h3> <fhir-medication .data=${args.data} .mode=${args.mode} ?summaryonly=${args.summaryonly} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open} ?headless=${args.headless} ?input=${args.input} > </fhir-medication> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Display",
          "declaration": {
            "name": "Med0310Display",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Structure",
          "declaration": {
            "name": "Med0310Structure",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Narrative",
          "declaration": {
            "name": "Med0310Narrative",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Med0319Display",
          "declaration": {
            "name": "Med0319Display",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Med0319Structure",
          "declaration": {
            "name": "Med0319Structure",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "FrontPageDemo",
          "declaration": {
            "name": "FrontPageDemo",
            "module": "src/components/resources/medication/medication.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data_310",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0310', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0310\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0310&quot; </p></div><p><b>code</b>: Oral Form Oxycodone (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#430127000)</span></p><p><b>doseForm</b>: Tablet dose form (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385055001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Reference</b></td></tr><tr><td>*</td><td><a name=\"sub03\"> </a><blockquote><p/><p><a name=\"sub03\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Oxycodone (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#55452001)</span></td></tr></table></blockquote></td></tr></table><p><b>strength</b>: 5 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1(unit TAB from http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm)<span style=\"background: LightGoldenRodYellow\"> (Details: http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm code TAB = \\'Tablet\\')</span></p></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'sub03', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '55452001', display: 'Oxycodone (substance)' } ] } } } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '430127000', display: 'Oral Form Oxycodone (product)' } ] }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385055001', display: 'Tablet dose form (qualifier value)' } ] }, ingredient: [ { item: { reference: { reference: '#sub03' } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1, system: 'http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm', code: 'TAB' } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_319",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0319', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Medication\\u003c/b\\u003e\\u003ca name\\u003d\"med0319\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Medication \\u0026quot;med0319\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003edoseForm\\u003c/b\\u003e: Ointment \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#385101003)\\u003c/span\\u003e\\u003c/p\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSalicylic Acid (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#387253001)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 5 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eHydrocortisone (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#396458002)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 1 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eWhite Petrolatum (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#126066007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 94 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003c/div\\u003e' }, doseForm: { coding: [{ system: 'http://snomed.info/sct', code: '385101003', display: 'Ointment' }], text: 'Ointment' }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '396458002', display: 'Hydrocortisone (substance)' } ] } }, strengthRatio: { numerator: { value: 1, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '126066007', display: 'White Petrolatum (substance)' } ] } }, strengthRatio: { numerator: { value: 94, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "frontPageData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0307', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0307\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0307&quot; </p></div><p><b>code</b>: Novolog 100u/ml <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ndc.html\">National drug codes</a>#0169-7501-11)</span></p><p><b>marketingAuthorizationHolder</b>: <a name=\"mmanu\"> </a></p><blockquote><p/><p><a name=\"mmanu\"> </a></p><p><b>name</b>: Medication Manufacturer</p></blockquote><p><b>doseForm</b>: Injection solution (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385219001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Insulin Aspart (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#325072002)</span></td></tr></table><p><b>strength</b>: 100 U<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code U = \\'U\\')</span>/1 mL<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mL = \\'mL\\')</span></p></blockquote><h3>Batches</h3><table class=\"grid\"><tr><td>-</td><td><b>LotNumber</b></td><td><b>ExpirationDate</b></td></tr><tr><td>*</td><td>12345</td><td>2019-10-31</td></tr></table></div>' }, contained: [ { resourceType: 'Organization', id: 'mmanu', name: 'Medication Manufacturer' } ], code: { coding: [ { system: 'http://hl7.org/fhir/sid/ndc', code: '0169-7501-11', display: 'Novolog 100u/ml' } ] }, marketingAuthorizationHolder: { reference: '#mmanu' }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385219001', display: 'Injection solution (qualifier value)' } ] }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '325072002', display: 'Insulin Aspart (substance)' } ] } }, strengthRatio: { numerator: { value: 100, system: 'http://unitsofmeasure.org', code: 'U' }, denominator: { value: 1, system: 'http://unitsofmeasure.org', code: 'mL' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], batch: { lotNumber: '12345', expirationDate: '2019.10.31' } }"
        },
        {
          "kind": "variable",
          "name": "synthiaData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: '757', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication'] }, code: { coding: [ { system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: '1535362', display: 'sodium fluoride 0.0272 MG/MG Oral Gel' } ], text: 'sodium fluoride 0.0272 MG/MG Oral Gel' }, status: 'active' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data_310",
          "declaration": {
            "name": "data_310",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data_319",
          "declaration": {
            "name": "data_319",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "frontPageData",
          "declaration": {
            "name": "frontPageData",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "synthiaData",
          "declaration": {
            "name": "synthiaData",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Medication",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MedicationData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MedicationData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Medication",
          "declaration": {
            "name": "Medication",
            "module": "src/components/resources/medication/medication.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-component.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-reference-range.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-triggered-by.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-component.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationComponent",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationComponent",
          "declaration": {
            "name": "ObservationComponent",
            "module": "src/components/resources/observation/observation-component.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-reference-range.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationReferenceRange",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationReferenceRange",
          "declaration": {
            "name": "ObservationReferenceRange",
            "module": "src/components/resources/observation/observation-reference-range.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-triggered-by.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationTriggeredBy",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationTriggeredBy",
          "declaration": {
            "name": "ObservationTriggeredBy",
            "module": "src/components/resources/observation/observation-triggered-by.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "WithErrors",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { ...data, status: 'not found', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'vital-signss', display: 'Vital Signs' } ] } ], dataAbsentReason: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: 'null', display: 'null' } ], text: 'null' } }, showerror: true, verbose: true, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/observation/observation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/observation/observation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/observation/observation.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithErrors",
          "declaration": {
            "name": "WithErrors",
            "module": "src/components/resources/observation/observation.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Observation', id: 'f001', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"f001\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;f001&quot; </p></div><p><b>identifier</b>: id:\\u00a06323\\u00a0(use:\\u00a0OFFICIAL)</p><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"patient-example-f001-pieter.html\">Patient/f001: P. van de Heuvel</a> &quot;Pieter VAN DE HEUVEL&quot;</p><p><b>effective</b>: 2013-04-02T09:30:10+01:00</p><p><b>issued</b>: 4 Apr 2013, 1:30:10 am</p><p><b>performer</b>: <a href=\"practitioner-example-f005-al.html\">Practitioner/f005: A. Langeveld</a> &quot;Langeveld ANNE&quot;</p><p><b>value</b>: 6.3 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></p><p><b>interpretation</b>: High <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ObservationInterpretation.html\">ObservationInterpretation</a>#H)</span></p><h3>ReferenceRanges</h3><table class=\"grid\"><tr><td>-</td><td><b>Low</b></td><td><b>High</b></td></tr><tr><td>*</td><td>3.1 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td><td>6.2 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td></tr></table></div>' }, identifier: [ { use: 'official', system: 'http://www.bmc.nl/zorgportal/identifiers/observations', value: '6323' } ], status: 'final', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'vital-signs', display: 'Vital Signs' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/f001', display: 'P. van de Heuvel' }, effectiveDateTime: '2013-04-02T09:30:10+01:00', issued: '2013-04-03T15:30:10+01:00', performer: [ { reference: 'Practitioner/f005', display: 'A. Langeveld' } ], valueQuantity: { value: 6.3, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, interpretation: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation', code: 'H', display: 'High' } ] } ], referenceRange: [ { low: { value: 3.1, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, high: { value: 6.2, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/observation/observation.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Observation",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ObservationData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Observation",
          "declaration": {
            "name": "Observation",
            "module": "src/components/resources/observation/observation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Resources/Account/Account', component: 'fhir-account', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-account .data=${args.data}></fhir-account> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/account/account.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/account/account.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "src/components/resources/account/account.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/account/account.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'ewg', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Inpatient Admission for Peter James Chalmers Account</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'Inpatient: Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/9876B1' }, priority: 1 }, { coverage: { reference: 'Coverage/7546D' }, priority: 2 } ], owner: { reference: 'Organization/f001', display: 'Burgers University Medical Center' }, description: 'Hospital charges', guarantor: [ { party: { reference: 'RelatedPerson/benedicte', display: 'Bénédicte du Marché' }, onHold: false, period: { start: '2016-01-01' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">HACC Funded Billing for Peter James Chalmers</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'HACC Funded Billing for Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/7546D' }, priority: 1 } ], owner: { reference: 'Organization/hl7' }, description: 'Hospital charges', relatedAccount: [ { relationship: { coding: [ { system: 'http://hl7.org/fhir/account-relationship', code: 'guarantor' } ] }, account: { reference: 'Account/ewg' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/account/account.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/resources/account/account.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Account",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Account",
          "declaration": {
            "name": "Account",
            "module": "src/components/resources/account/account.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/balance.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/coverage.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/diagnosis.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/guarantor.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/procedure.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/related-account.backbone"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Observation/ObservationDefinition', component: 'fhir-observation-definition', ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/observation-definition/observation-definition.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/observation-definition/observation-definition.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/observation-definition/observation-definition.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'ObservationDefinition', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: ObservationDefinition</b><a name=\"example\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource ObservationDefinition &quot;example&quot; </p></div><p><b>status</b>: active</p><p><b>category</b>: Laboratory <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-observation-category.html\">Observation Category Codes</a>#laboratory)</span></p><p><b>code</b>: Albumin/Protein.total in Serum or Plasma by Electrophoresis <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#13980-8)</span></p><p><b>permittedDataType</b>: Quantity</p><p><b>multipleResultsAllowed</b>: false</p><p><b>method</b>: Total measurement <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#115341008)</span></p><p><b>preferredReportName</b>: Serum albumin/​Protein total</p><p><b>permittedUnit</b>: % (Details: UCUM code % = \\'%\\', stated as \\'%\\')</p><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: reference</p><p><b>range</b>: 50-?</p></blockquote><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: critical</p><p><b>range</b>: ?-40</p></blockquote></div>' }, status: 'active', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'laboratory' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '13980-8', display: 'Albumin/Protein.total in Serum or Plasma by Electrophoresis' } ] }, permittedDataType: ['Quantity'], multipleResultsAllowed: false, method: { coding: [ { system: 'http://snomed.info/sct', code: '115341008', display: 'Total measurement' } ] }, preferredReportName: 'Serum albumin/​Protein total', permittedUnit: [ { system: 'http://unitsofmeasure.org', code: '%', display: '%' } ], qualifiedValue: [ { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'reference', range: { low: { value: 50 } } }, { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'critical', range: { high: { value: 40 } } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/observation-definition/observation-definition.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationDefinition",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal/resource/DomainResource"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationDefinition",
          "declaration": {
            "name": "ObservationDefinition",
            "module": "src/components/resources/observation-definition/observation-definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title: 'Components/Resources/Slot/Slot', component: 'fhir-slot', ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/slot/slot.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/slot/slot.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/slot/slot.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Slot', id: '1', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n\\t\\t\\t25 Dec 2013 9:00am - 9:15am: <b>Busy</b> Physiotherapy\\n\\t\\t</div>' }, identifier: [ { system: 'http://example.org/identifiers/slots', value: '123132' } ], serviceCategory: [ { coding: [ { code: '17', display: 'General Practice' } ] } ], schedule: { reference: 'Schedule/example' }, status: 'busy', start: '2013-12-25T09:00:00Z', end: '2013-12-25T09:15:00Z', overbooked: true, comment: 'Assessments should be performed before requesting appointments in this slot.' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/slot/slot.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Slot",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slot",
          "declaration": {
            "name": "Slot",
            "module": "src/components/resources/slot/slot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-communication.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-contact.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-link.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-communication.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientCommunicationBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientCommunicationData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientCommunicationData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientCommunicationBackbone",
          "declaration": {
            "name": "PatientCommunicationBackbone",
            "module": "src/components/resources/patient/patient-communication.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-contact.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientContactBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientContactData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientContactData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientContactBackbone",
          "declaration": {
            "name": "PatientContactBackbone",
            "module": "src/components/resources/patient/patient-contact.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-link.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientLink",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "generate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientLink",
          "declaration": {
            "name": "PatientLink",
            "module": "src/components/resources/patient/patient-link.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: synthiaPatient, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/patient/patient.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/patient/patient.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/patient/patient.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: 'f201', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp style\\u003d\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"\\u003e\\u003cb\\u003eRoel(OFFICIAL)\\u003c/b\\u003e male, DoB: 1960-03-13 ( BSN: 123456789 (use: OFFICIAL))\\u003c/p\\u003e\\u003chr/\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Record is active\"\\u003eActive:\\u003c/td\\u003e\\u003ctd\\u003etrue\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known status of Patient\"\\u003eDeceased:\\u003c/td\\u003e\\u003ctd\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known Marital status of Patient\"\\u003eMarital Status:\\u003c/td\\u003e\\u003ctd\\u003e\\u003cspan title\\u003d\"Codes: {http://snomed.info/sct 36629006}, {http://terminology.hl7.org/CodeSystem/v3-MaritalStatus M}\"\\u003eLegally married\\u003c/span\\u003e\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known multipleBirth status of Patient\"\\u003eMultiple Birth:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Other Ids (see the one above)\"\\u003eOther Id:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003eBSN: 123456789 (use: OFFICIAL)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Ways to contact the Patient\"\\u003eContact Details:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31612345678\"\\u003e+31612345678\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003eBos en Lommerplein 280 Amsterdam 1055RW NLD (HOME)\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Languages spoken\"\\u003eLanguage:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cspan title\\u003d\"Codes: {urn:ietf:bcp:47 nl-NL}\"\\u003eDutch\\u003c/span\\u003e (preferred)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Nominated Contact: Wife\"\\u003eWife:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eAriadne Bor-Jansma\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Patient Links\"\\u003eLinks:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eManaging Organization: \\u003ca href\\u003d\"organization-example-f201-aumc.html\"\\u003eOrganization/f201: AUMC\\u003c/a\\u003e \\u0026quot;Artis University Medical Center (AUMC)\\u0026quot;\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003c/div\\u003e' }, identifier: [ { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' }, { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' } ], active: true, name: [ { use: 'official', text: 'Roel', family: 'Bor', given: ['Roelof Olaf'], prefix: ['Drs.'], suffix: ['PDEng.'] } ], telecom: [ { system: 'phone', value: '+31612345678', use: 'mobile' }, { system: 'phone', value: '+31201234567', use: 'home' } ], gender: 'male', birthDate: '1960-03-13', deceasedBoolean: false, address: [ { use: 'home', line: ['Bos en Lommerplein 280'], city: 'Amsterdam', postalCode: '1055RW', country: 'NLD' } ], maritalStatus: { coding: [ { system: 'http://snomed.info/sct', code: '36629006', display: 'Legally married' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M' } ] }, multipleBirthBoolean: false, photo: [{ contentType: 'image/jpeg', url: 'Binary/f006' }], contact: [ { relationship: [ { coding: [ { system: 'http://snomed.info/sct', code: '127850001', display: 'Wife' }, { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-RoleCode', code: 'WIFE' } ] } ], name: { use: 'usual', text: 'Ariadne Bor-Jansma' }, telecom: [{ system: 'phone', value: '+31201234567', use: 'home' }] } ], communication: [ { language: { coding: [{ system: 'urn:ietf:bcp:47', code: 'nl-NL', display: 'Dutch' }] }, preferred: true } ], managingOrganization: { reference: 'Organization/f201', display: 'AUMC' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "hapiFhirPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '1414', meta: { versionId: '2', lastUpdated: '2020-09-28T04:12:54.791+00:00', source: '#rhkcZluthvbxDoLf' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">name:徐<br/>ID:10501006884<br/>Gendar:female<br/>HospID:HHX<br/>Birthdate:1970-01-22</div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '10501006884', period: { start: '2020-09-26' }, assigner: { display: 'HHX' } } ], active: true, name: [ { text: '徐', family: '徐' } ], gender: 'female', birthDate: '1970-01-22', managingOrganization: { display: 'HHX' } }"
        },
        {
          "kind": "variable",
          "name": "aidboxPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', meta: { profile: [ 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Patient' ] }, gender: 'male', address: [ { city: 'Brockton', line: [ '730 Schoen Center Apt 8' ], state: 'Massachusetts', country: 'US', extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: -71.024638 }, { url: 'longitude', valueDecimal: 42.082543 } ] } ], postalCode: '02301' } ], telecom: [ { use: 'home', value: '555-696-1511', system: 'phone' } ], id: 'd3af67c9-0c02-45f2-bc91-fea45af3ee83', name: [ { prefix: [ 'Mr.' ], use: 'official', given: [ 'Abram53' ], family: 'Hickle134' } ], identifier: [ { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'https://github.com/synthetichealth/synthea' }, { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'http://hospital.smarthealthit.org', type: { text: 'Medical Record Number', coding: [ { code: 'MR', system: 'http://hl7.org/fhir/v2/0203', display: 'Medical Record Number' } ] } }, { type: { text: 'Social Security Number', coding: [ { code: 'SB', system: 'http://hl7.org/fhir/identifier-type', display: 'Social Security Number' } ] }, value: '999-81-4006', system: 'http://hl7.org/fhir/sid/us-ssn' }, { value: 'S99988684', system: 'urn:oid:2.16.840.1.113883.4.3.25', type: { text: 'Driver\\'s License', coding: [ { display: 'Driver\\'s License', code: 'DL', system: 'http://hl7.org/fhir/v2/0203' } ] } }, { type: { text: 'Passport Number', coding: [ { code: 'PPN', system: 'http://hl7.org/fhir/v2/0203', display: 'Passport Number' } ] }, value: 'X17148555X', system: 'http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber' } ], maritalStatus: { text: 'S', coding: [ { code: 'S', system: 'http://hl7.org/fhir/v3/MaritalStatus', display: 'S' } ] }, text: { div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: v2.0.0-33-g3ab9839e\\n . Person seed: -7948439064728439692 Population seed: 1534165146158</div>', status: 'generated' }, birthDate: '1955-06-27', multipleBirth: { boolean: false }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { code: '2106-3', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'White' } }, { url: 'text', valueString: 'White' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { code: '2186-5', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Sharolyn456 Harris789' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/birthPlace', valueAddress: { city: 'Boston', state: 'Massachusetts', country: 'US' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-actor-FictionalPerson-extension', valueBoolean: true }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-FathersName-extension', valueHumanName: { text: 'Samual455 Hickle134' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-demographics-SocialSecurityNumber-extension', valueString: '999-81-4006' }, { valueReference: { reference: 'Basic/bad528f4-fa8a-4f5b-a478-1b630be88847' }, url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Person-extension' }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 0 }, { valueDecimal: 62, url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years' } ], communication: [ { language: { text: 'English', coding: [ { code: 'en-US', system: 'urn:ietf:bcp:47', display: 'English' } ] } } ] }"
        },
        {
          "kind": "variable",
          "name": "synthiaPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '230', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient'] }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: 2cc0a62\\n . Person seed: 8408368319748256253 Population seed: 1731533659674</div>' }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '1002-5', display: 'American Indian or Alaska Native' } }, { url: 'text', valueString: 'American Indian or Alaska Native' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '2186-5', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Jonell764 Gerlach374' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthPlace', valueAddress: { city: 'Plymouth', state: 'Massachusetts', country: 'US' } }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 21.90583818492967 }, { url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years', valueDecimal: 60.09416181507033 } ], identifier: [ { system: 'https://github.com/synthetichealth/synthea', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ], text: 'Medical Record Number' }, system: 'http://hospital.smarthealthit.org', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'SS', display: 'Social Security Number' } ], text: 'Social Security Number' }, system: 'http://hl7.org/fhir/sid/us-ssn', value: '999-15-8247' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'DL', display: 'Driver\\'s license number' } ], text: 'Driver\\'s license number' }, system: 'urn:oid:2.16.840.1.113883.4.3.25', value: 'S99953724' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'PPN', display: 'Passport Number' } ], text: 'Passport Number' }, system: 'http://hl7.org/fhir/sid/passport-USA', value: 'X70727171X' } ], name: [ { use: 'official', family: 'Okuneva707', given: ['Aaron697', 'Mark765'], prefix: ['Mr.'] } ], telecom: [ { system: 'phone', value: '555-369-3393', use: 'home' } ], gender: 'male', birthDate: '1941-06-11', address: [ { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: 41.79717134698846 }, { url: 'longitude', valueDecimal: -71.01421343474313 } ] } ], line: ['734 Emmerich Extension Suite 9'], city: 'Freetown', state: 'MA', postalCode: '00000', country: 'US' } ], maritalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M', display: 'Married' } ], text: 'Married' }, multipleBirthBoolean: false, communication: [ { language: { coding: [ { system: 'urn:ietf:bcp:47', code: 'en-US', display: 'English (United States)' } ], text: 'English (United States)' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "hapiFhirPatient",
          "declaration": {
            "name": "hapiFhirPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "aidboxPatient",
          "declaration": {
            "name": "aidboxPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "synthiaPatient",
          "declaration": {
            "name": "synthiaPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Patient",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Patient",
          "declaration": {
            "name": "Patient",
            "module": "src/components/resources/patient/patient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.type-guard"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SubstanceIngredientBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SubstanceIngredientBackbone",
          "declaration": {
            "name": "SubstanceIngredientBackbone",
            "module": "src/components/resources/substance/substance-ingredient.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.type-guard.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isSubstanceIngredientConcept",
          "return": {
            "type": {
              "text": "ingredient is SubstanceIngredientData"
            }
          },
          "parameters": [
            {
              "name": "ingredient",
              "type": {
                "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSubstanceIngredientReference",
          "return": {
            "type": {
              "text": "ingredient is SubstanceIngredientReferenceData"
            }
          },
          "parameters": [
            {
              "name": "ingredient",
              "type": {
                "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSubstanceIngredientConcept",
          "declaration": {
            "name": "isSubstanceIngredientConcept",
            "module": "src/components/resources/substance/substance-ingredient.type-guard.ts"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientReference",
          "declaration": {
            "name": "isSubstanceIngredientReference",
            "module": "src/components/resources/substance/substance-ingredient.type-guard.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "Meta<ShellArgs>"
          },
          "default": "{ title, subcomponents: { 'fhir-substance': 'fhir-substance' }, ...renderTemplateInShell((args: ShellArgs) => html` <fhir-substance .data=\"${args.data}\" .mode=${args.mode} .verbose=${args.verbose} .showerror=${args.showerror} .open=${args.open}></fhir-substance > `) }"
        },
        {
          "kind": "variable",
          "name": "Display_f204",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_f204, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure_f204",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data_f204, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Narrative",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data, mode: 'narrative', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display_f204",
          "declaration": {
            "name": "Display_f204",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure_f204",
          "declaration": {
            "name": "Structure_f204",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "Narrative",
            "module": "src/components/resources/substance/substance.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f205', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Substance</b><a name=\"f205\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Substance &quot;f205&quot; </p></div><p><b>instance</b>: false</p><p><b>category</b>: Drug or Medicament <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\">Substance Category Codes</a>#drug)</span></p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin + clavulanate potassium 875mg/125mg tablet (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#392259005)</span></td></tr></table><p><b>description</b>: Augmentin 875</p><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 875 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr1\"> </a></p><blockquote><p/><p><a name=\"ingr1\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#372687004)</span></td></tr></table></blockquote></blockquote><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 125 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr2\"> </a></p><blockquote><p/><p><a name=\"ingr2\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Clavulanate potassium (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#395938000)</span></td></tr></table></blockquote></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'ingr1', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '372687004', display: 'Amoxicillin (substance)' } ] } } }, { resourceType: 'Substance', id: 'ingr2', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '395938000', display: 'Clavulanate potassium (substance)' } ] } } } ], instance: false, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'drug', display: 'Drug or Medicament' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '392259005', display: 'Amoxicillin + clavulanate potassium 875mg/125mg tablet (product)' } ] } }, description: 'Augmentin 875', ingredient: [ { quantity: { numerator: { value: 875, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr1' } }, { quantity: { numerator: { value: 125, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr2' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_f204",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f204', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Substance\\u003c/b\\u003e\\u003ca name\\u003d\"f204\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Substance \\u0026quot;f204\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003eidentifier\\u003c/b\\u003e: id: AB94687\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003einstance\\u003c/b\\u003e: true\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003ecategory\\u003c/b\\u003e: Chemical \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\"\\u003eSubstance Category Codes\\u003c/a\\u003e#chemical)\\u003c/span\\u003e\\u003c/p\\u003e\\u003ch3\\u003eCodes\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSilver nitrate 20% solution (product) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#333346007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003edescription\\u003c/b\\u003e: Solution for silver nitrate stain\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003eexpiry\\u003c/b\\u003e: 2018-01-01\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003equantity\\u003c/b\\u003e: 100 mL\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code mL \\u003d \\u0027mL\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/div\\u003e' }, identifier: [{ system: 'http://acme.org/identifiers/substances/lot', value: 'AB94687' }], instance: true, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'chemical', display: 'Chemical' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '333346007', display: 'Silver nitrate 20% solution (product)' } ] } }, description: 'Solution for silver nitrate stain', expiry: '2018-01-01', quantity: { value: 100, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/substance/substance.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data_f204",
          "declaration": {
            "name": "data_f204",
            "module": "src/components/resources/substance/substance.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Substance",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "_validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "dist/src/internal/resource/DomainResource.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "inheritedFrom": {
                "name": "Resource",
                "module": "dist/src/internal/resource/Resource.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "true",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal/resource/DomainResource"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Substance",
          "declaration": {
            "name": "Substance",
            "module": "src/components/resources/substance/substance.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-complex.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Complex Extension', component: 'fhir-extension', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "complexExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Complex Extension', args: { data: data.complexExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/extension-complex.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "complexExtension",
          "declaration": {
            "name": "complexExtension",
            "module": "src/components/special/extension/extension-complex.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-complex.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "complexExtension",
          "type": {
            "text": "FhirExtensionData<never>"
          },
          "default": "{ url: 'http://example.org/fhir/StructureDefinition/patient-clinicalTrial', extension: [ { url: 'NCT', valueString: 'NCT00000419' }, { url: 'period', valuePeriod: { start: '2004-01-01', end: '2012-12-31' } }, { url: 'reason', valueCodeableConcept: { text: 'healthy-volunteer' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "complexExtension",
          "declaration": {
            "name": "complexExtension",
            "module": "src/components/special/extension/extension-complex.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-reference.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "FhirElementData & { birthDate: FhirDate }"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        },
        {
          "kind": "variable",
          "name": "listPrimitiveExtension",
          "type": {
            "text": "FhirElementData & { code: Code[] }"
          },
          "default": "{ code: ['au', 'nz'], _code: [ null, { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/display', valueString: 'New Zealand a.k.a Kiwiland' } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "src/components/special/extension/extension-reference.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "listPrimitiveExtension",
          "declaration": {
            "name": "listPrimitiveExtension",
            "module": "src/components/special/extension/extension-reference.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "stringExtension",
          "type": {
            "text": "FhirExtensionData<FhirString>"
          },
          "default": "{ url: 'treatment-description', valueString: 'This is a string value' }"
        },
        {
          "kind": "variable",
          "name": "booleanExtension",
          "type": {
            "text": "FhirExtensionData<Boolean>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/appointment-confirmed', valueBoolean: 'true' }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "FhirExtensionData<FhirDate>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/first-visit', valueDate: '2025-05-28' }"
        },
        {
          "kind": "variable",
          "name": "datetimeExtension",
          "type": {
            "text": "FhirExtensionData<DateTime>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/test-start', valueDateTime: '2025-05-28T14:30:00Z' }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "FhirExtensionData<Decimal>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/price', valueDecimal: 123.45 }"
        },
        {
          "kind": "variable",
          "name": "codeableConceptExtension",
          "type": {
            "text": "FhirExtensionData<CodeableConceptData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/event-type', valueCodeableConcept: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/example', code: 'unscheduled-appointment', display: 'unscheduled appointment' } ], text: 'Unscheduled Appointment' } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "FhirExtensionData<URI>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/information-source', valueUri: 'https://example.org/resource' }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "FhirExtensionData<Id>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/passport-id', valueId: 'example-id-123' }"
        },
        {
          "kind": "variable",
          "name": "positiveIntExtension",
          "type": {
            "text": "FhirExtensionData<PositiveInt>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/magic-number', valuePositiveInt: 42 }"
        },
        {
          "kind": "variable",
          "name": "annotationExtension",
          "type": {
            "text": "FhirExtensionData<AnnotationData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/clinical-note', valueAnnotation: { authorString: 'Dr. Jane Smith', time: '2025-05-15T10:30:00Z', text: 'Patient presented with symptoms of seasonal allergies.' } }"
        },
        {
          "kind": "variable",
          "name": "attachmentExtension",
          "type": {
            "text": "FhirExtensionData<AttachmentData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medical-scan', valueAttachment: { contentType: 'application/dicom', language: 'en', data: 'SGVsbG8gV29ybGQ=', // Base64 encoded url: 'https://example.org/fhir/Binary/1234', hash: 'EQVQoZ4Il8ZBtXlvQbPy4vVhQj0=', title: 'Chest X-Ray', creation: '2025-04-17T14:15:00Z' } }"
        },
        {
          "kind": "variable",
          "name": "base64BinaryExtension",
          "type": {
            "text": "FhirExtensionData<Base64Binary>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/signature-image', valueBase64Binary: 'SGVsbG8gV29ybGQgQmFzZTY0IEVuY29kZWQ=' }"
        },
        {
          "kind": "variable",
          "name": "canonicalExtension",
          "type": {
            "text": "FhirExtensionData<Canonical>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/profile-reference', valueCanonical: 'http://hl7.org/fhir/StructureDefinition/Patient|4.0.1' }"
        },
        {
          "kind": "variable",
          "name": "codeExtension",
          "type": {
            "text": "FhirExtensionData<Code>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/status-code', valueCode: 'active' }"
        },
        {
          "kind": "variable",
          "name": "codingExtension",
          "type": {
            "text": "FhirExtensionData<CodingData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/diagnosis-code', valueCoding: { system: 'http://snomed.info/sct', version: '2023-09', code: '73211009', display: 'Diabetes mellitus' } }"
        },
        {
          "kind": "variable",
          "name": "contactPointExtension",
          "type": {
            "text": "FhirExtensionData<ContactPointData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/emergency-contact', valueContactPoint: { system: 'phone', value: '+1-555-123-4567', use: 'mobile', rank: 1, period: { start: '2023-01-01', end: '2026-12-31' } } }"
        },
        {
          "kind": "variable",
          "name": "humanNameExtension",
          "type": {
            "text": "FhirExtensionData<HumanNameData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-name', valueHumanName: { use: 'official', family: 'Smith', given: ['John', 'Robert'], prefix: ['Mr.'], suffix: ['MD'], period: { start: '2010-01-01' } } }"
        },
        {
          "kind": "variable",
          "name": "identifierExtension",
          "type": {
            "text": "FhirExtensionData<IdentifierData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/insurance-number', valueIdentifier: { use: 'official', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ] }, system: 'https://example.org/fhir/identifier/insurance', value: 'INS-12345-6789', period: { start: '2024-01-01', end: '2026-01-01' }, assigner: { display: 'Example Health Insurance' } } }"
        },
        {
          "kind": "variable",
          "name": "instantExtension",
          "type": {
            "text": "FhirExtensionData<Instant>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/recorded-time', valueInstant: '2025-05-28T14:30:00.123Z' }"
        },
        {
          "kind": "variable",
          "name": "integerExtension",
          "type": {
            "text": "FhirExtensionData<Integer>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/count-value', valueInteger: 256 }"
        },
        {
          "kind": "variable",
          "name": "markdownExtension",
          "type": {
            "text": "FhirExtensionData<Markdown>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/formatted-notes', valueMarkdown: '# Patient Notes\\n\\n**Important**: Patient has *medication allergies*.\\n\\n- Penicillin\\n- Sulfa drugs' }"
        },
        {
          "kind": "variable",
          "name": "moneyExtension",
          "type": {
            "text": "FhirExtensionData<MoneyData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/procedure-cost', valueMoney: { value: 299.99, currency: 'USD' } }"
        },
        {
          "kind": "variable",
          "name": "periodExtension",
          "type": {
            "text": "FhirExtensionData<PeriodData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/treatment-duration', valuePeriod: { start: '2025-01-15', end: '2025-02-15' } }"
        },
        {
          "kind": "variable",
          "name": "quantityExtension",
          "type": {
            "text": "FhirExtensionData<QuantityData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/weight', valueQuantity: { value: 75.5, unit: 'kg', system: 'http://unitsofmeasure.org', code: 'kg' } }"
        },
        {
          "kind": "variable",
          "name": "rangeExtension",
          "type": {
            "text": "FhirExtensionData<RangeData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/normal-range', valueRange: { low: { value: 60, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' }, high: { value: 100, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' } } }"
        },
        {
          "kind": "variable",
          "name": "ratioExtension",
          "type": {
            "text": "FhirExtensionData<RatioData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-dilution', valueRatio: { numerator: { value: 1, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 10, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' } } }"
        },
        {
          "kind": "variable",
          "name": "referenceExtension",
          "type": {
            "text": "FhirExtensionData<ReferenceData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/related-practitioner', valueReference: { reference: 'Practitioner/12345', type: 'Practitioner', display: 'Dr. Smith' } }"
        },
        {
          "kind": "variable",
          "name": "sampledDataExtension",
          "type": {
            "text": "FhirExtensionData<SampledDataData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/ecg-data', valueSampledData: { origin: { value: 0, unit: 'mV', system: 'http://unitsofmeasure.org', code: 'mV' }, intervalUnit: 'g/(kg.min)', factor: 1.0, lowerLimit: -10.0, upperLimit: 10.0, dimensions: 1, data: '2 2 1.5 2 2 2 1.5 2 2 2.5 2.5 2.5 3 3 3.5 3.5 3 3 2.5 2 2 1.5 1 1 1.5 2 2' } }"
        },
        {
          "kind": "variable",
          "name": "signatureExtension",
          "type": {
            "text": "FhirExtensionData<SignatureData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/consent-signature', valueSignature: { type: [ { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' } ], when: '2025-05-28T13:45:00Z', who: { reference: 'Patient/123456', display: 'John Doe' }, targetFormat: 'application/pdf', sigFormat: 'image/png', data: 'SGVsbG8gV29ybGQgU2lnbmF0dXJl' // Base64 encoded } }"
        },
        {
          "kind": "variable",
          "name": "timeExtension",
          "type": {
            "text": "FhirExtensionData<Time>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-contact-time', valueTime: '14:30:00' }"
        },
        {
          "kind": "variable",
          "name": "timingExtension",
          "type": {
            "text": "FhirExtensionData<TimingData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-schedule', valueTiming: { event: ['2025-05-28T08:00:00Z', '2025-05-28T20:00:00Z'], repeat: { frequency: 2, period: 1, periodUnit: 'd', boundsDuration: { value: 14, unit: 'days', system: 'http://unitsofmeasure.org', code: 'd' } }, code: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', code: 'BID', display: 'twice daily' } ] } } }"
        },
        {
          "kind": "variable",
          "name": "unsignedIntExtension",
          "type": {
            "text": "FhirExtensionData<UnsignedInt>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/version-number', valueUnsignedInt: 3 }"
        },
        {
          "kind": "variable",
          "name": "urlExtension",
          "type": {
            "text": "FhirExtensionData<Url>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/external-resource', valueUrl: 'https://example.org/resources/patient-education/diabetes.pdf' }"
        },
        {
          "kind": "variable",
          "name": "uuidExtension",
          "type": {
            "text": "FhirExtensionData<Uuid>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/system-identifier', valueUuid: 'urn:uuid:c757873d-ec9a-4326-a141-556f43239520' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stringExtension",
          "declaration": {
            "name": "stringExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "booleanExtension",
          "declaration": {
            "name": "booleanExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "datetimeExtension",
          "declaration": {
            "name": "datetimeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codeableConceptExtension",
          "declaration": {
            "name": "codeableConceptExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "positiveIntExtension",
          "declaration": {
            "name": "positiveIntExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "annotationExtension",
          "declaration": {
            "name": "annotationExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "attachmentExtension",
          "declaration": {
            "name": "attachmentExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "base64BinaryExtension",
          "declaration": {
            "name": "base64BinaryExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "canonicalExtension",
          "declaration": {
            "name": "canonicalExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codeExtension",
          "declaration": {
            "name": "codeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codingExtension",
          "declaration": {
            "name": "codingExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "contactPointExtension",
          "declaration": {
            "name": "contactPointExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "humanNameExtension",
          "declaration": {
            "name": "humanNameExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "identifierExtension",
          "declaration": {
            "name": "identifierExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "instantExtension",
          "declaration": {
            "name": "instantExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "integerExtension",
          "declaration": {
            "name": "integerExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "markdownExtension",
          "declaration": {
            "name": "markdownExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "moneyExtension",
          "declaration": {
            "name": "moneyExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "periodExtension",
          "declaration": {
            "name": "periodExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "quantityExtension",
          "declaration": {
            "name": "quantityExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "rangeExtension",
          "declaration": {
            "name": "rangeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ratioExtension",
          "declaration": {
            "name": "ratioExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "referenceExtension",
          "declaration": {
            "name": "referenceExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampledDataExtension",
          "declaration": {
            "name": "sampledDataExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "signatureExtension",
          "declaration": {
            "name": "signatureExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "timeExtension",
          "declaration": {
            "name": "timeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "timingExtension",
          "declaration": {
            "name": "timingExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "unsignedIntExtension",
          "declaration": {
            "name": "unsignedIntExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "urlExtension",
          "declaration": {
            "name": "urlExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "uuidExtension",
          "declaration": {
            "name": "uuidExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple1.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (primitive types)', component: 'fhir-extension', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "StringValueExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'String Value Extension', args: { data: data.stringExtension } }"
        },
        {
          "kind": "variable",
          "name": "BooleanValueExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Boolean Value Extension', args: { data: data.booleanExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Id Extension', args: { data: data.idExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'date Extension', args: { data: data.dateExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateTimeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'DateTime Extension', args: { data: data.datetimeExtension } }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'decimal Extension', args: { data: data.decimalExtension } }"
        },
        {
          "kind": "variable",
          "name": "postiveIntExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'postive int Extension', args: { data: data.positiveIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'uri Extension', args: { data: data.uriExtension } }"
        },
        {
          "kind": "variable",
          "name": "CanonicalExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Canonical Extension', args: { data: data.canonicalExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Code Extension', args: { data: data.codeExtension } }"
        },
        {
          "kind": "variable",
          "name": "MarkdownExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Markdown Extension', args: { data: data.markdownExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Time Extension', args: { data: data.timeExtension } }"
        },
        {
          "kind": "variable",
          "name": "UnsignedIntExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'UnsignedInt Extension', args: { data: data.unsignedIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "UrlExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Url Extension', args: { data: data.urlExtension } }"
        },
        {
          "kind": "variable",
          "name": "UuidExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Uuid Extension', args: { data: data.uuidExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "StringValueExtension",
          "declaration": {
            "name": "StringValueExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "BooleanValueExtension",
          "declaration": {
            "name": "BooleanValueExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateTimeExtension",
          "declaration": {
            "name": "dateTimeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "postiveIntExtension",
          "declaration": {
            "name": "postiveIntExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CanonicalExtension",
          "declaration": {
            "name": "CanonicalExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeExtension",
          "declaration": {
            "name": "CodeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MarkdownExtension",
          "declaration": {
            "name": "MarkdownExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimeExtension",
          "declaration": {
            "name": "TimeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "UnsignedIntExtension",
          "declaration": {
            "name": "UnsignedIntExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "UrlExtension",
          "declaration": {
            "name": "UrlExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "UuidExtension",
          "declaration": {
            "name": "UuidExtension",
            "module": "src/components/special/extension/extension-simple1.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple2.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (complex types)', component: 'fhir-extension', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "AnnotationExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Annotation Extension', args: { data: data.annotationExtension } }"
        },
        {
          "kind": "variable",
          "name": "AttachmentExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Attachment Extension', args: { data: data.attachmentExtension } }"
        },
        {
          "kind": "variable",
          "name": "Base64BinaryExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Base64Binary Extension', args: { data: data.base64BinaryExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodingExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Coding Extension', args: { data: data.codingExtension } }"
        },
        {
          "kind": "variable",
          "name": "ContactPointExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'ContactPoint Extension', args: { data: data.contactPointExtension } }"
        },
        {
          "kind": "variable",
          "name": "HumanNameExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'HumanName Extension', args: { data: data.humanNameExtension } }"
        },
        {
          "kind": "variable",
          "name": "IdentifierExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Identifier Extension', args: { data: data.identifierExtension } }"
        },
        {
          "kind": "variable",
          "name": "InstantExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Instant Extension', args: { data: data.instantExtension } }"
        },
        {
          "kind": "variable",
          "name": "IntegerExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Integer Extension', args: { data: data.integerExtension } }"
        },
        {
          "kind": "variable",
          "name": "MoneyExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Money Extension', args: { data: data.moneyExtension } }"
        },
        {
          "kind": "variable",
          "name": "PeriodExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Period Extension', args: { data: data.periodExtension } }"
        },
        {
          "kind": "variable",
          "name": "QuantityExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Quantity Extension', args: { data: data.quantityExtension } }"
        },
        {
          "kind": "variable",
          "name": "RangeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Range Extension', args: { data: data.rangeExtension } }"
        },
        {
          "kind": "variable",
          "name": "RatioExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Ratio Extension', args: { data: data.ratioExtension } }"
        },
        {
          "kind": "variable",
          "name": "ReferenceExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Reference Extension', args: { data: data.referenceExtension } }"
        },
        {
          "kind": "variable",
          "name": "SampledDataExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'SampledData Extension', args: { data: data.sampledDataExtension } }"
        },
        {
          "kind": "variable",
          "name": "SignatureExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Signature Extension', args: { data: data.signatureExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimingExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Timing Extension', args: { data: data.timingExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AnnotationExtension",
          "declaration": {
            "name": "AnnotationExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "AttachmentExtension",
          "declaration": {
            "name": "AttachmentExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Base64BinaryExtension",
          "declaration": {
            "name": "Base64BinaryExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodingExtension",
          "declaration": {
            "name": "CodingExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ContactPointExtension",
          "declaration": {
            "name": "ContactPointExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "HumanNameExtension",
          "declaration": {
            "name": "HumanNameExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "IdentifierExtension",
          "declaration": {
            "name": "IdentifierExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "InstantExtension",
          "declaration": {
            "name": "InstantExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "IntegerExtension",
          "declaration": {
            "name": "IntegerExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "MoneyExtension",
          "declaration": {
            "name": "MoneyExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "PeriodExtension",
          "declaration": {
            "name": "PeriodExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "QuantityExtension",
          "declaration": {
            "name": "QuantityExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "RangeExtension",
          "declaration": {
            "name": "RangeExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "RatioExtension",
          "declaration": {
            "name": "RatioExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ReferenceExtension",
          "declaration": {
            "name": "ReferenceExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SampledDataExtension",
          "declaration": {
            "name": "SampledDataExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "SignatureExtension",
          "declaration": {
            "name": "SignatureExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimingExtension",
          "declaration": {
            "name": "TimingExtension",
            "module": "src/components/special/extension/extension-simple2.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Extension",
          "members": [
            {
              "kind": "field",
              "name": "#valueType",
              "privacy": "private",
              "type": {
                "text": "OpenTypeNameEnum[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#extensionType",
              "privacy": "private",
              "type": {
                "text": "'unknown' | 'simple' | 'complex'"
              },
              "default": "'unknown'"
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "FhirExtensionData<OpenType>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "notImplementedYet",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              }
            },
            {
              "kind": "method",
              "name": "addTemplate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "templates",
                  "type": {
                    "text": "TemplateResult[]"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "FhirExtensionData<OpenType>"
                  }
                },
                {
                  "name": "valueType",
                  "type": {
                    "text": "OpenTypeNameEnum"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-extension",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Extension",
          "declaration": {
            "name": "Extension",
            "module": "src/components/special/extension/extension.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Meta', component: 'fhir-meta', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-meta .data=${args.data} summary ?headless=${args.headless}></fhir-meta>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data2, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Data",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Data3",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data3, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Data4",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: data4, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Data",
          "declaration": {
            "name": "Data",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Data3",
          "declaration": {
            "name": "Data3",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Data4",
          "declaration": {
            "name": "Data4",
            "module": "src/components/special/meta/meta.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2014-08-18T01:43:30Z', security: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'TBOO', display: 'taboo' } ], tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2019-08-07T10:49:22Z' }"
        },
        {
          "kind": "variable",
          "name": "data4",
          "type": {
            "text": "object"
          },
          "default": "{ lastUpdated: '2014-08-18T01:43:30Z', tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data4",
          "declaration": {
            "name": "data4",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Meta",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MetaData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MetaData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Meta",
          "declaration": {
            "name": "Meta",
            "module": "src/components/special/meta/meta.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Narrative', component: 'fhir-narrative', argTypes: { mode: { options: ['display', 'structure', 'narrative'], control: { type: 'inline-radio' } }, verbose: { options: [true, false], control: { type: 'boolean' } }, open: { options: [true, false], control: { type: 'boolean' } } } }"
        },
        {
          "kind": "variable",
          "name": "DisplayMode",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: narativeData, mode: 'display', showerror: false, verbose: false } }"
        },
        {
          "kind": "variable",
          "name": "NarrativeMode",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: narativeData, mode: 'narrative', showerror: false, verbose: false, open: false } }"
        },
        {
          "kind": "variable",
          "name": "StructureMode",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: narativeData, mode: 'structure', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/narrative/narrative.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "DisplayMode",
            "module": "src/components/special/narrative/narrative.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "NarrativeMode",
          "declaration": {
            "name": "NarrativeMode",
            "module": "src/components/special/narrative/narrative.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "StructureMode",
          "declaration": {
            "name": "StructureMode",
            "module": "src/components/special/narrative/narrative.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Narrative",
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "Narrative",
            "module": "src/components/special/narrative/narrative.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Reference', component: 'fhir-reference', ...renderTemplateInShell((args: ShellArgs) => html` <fhir-reference .data=${args.data} summary ?headless=${args.headless}></fhir-reference>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayAndTypeAndReference",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: patientData, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Reference",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { reference: 'http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ReferenceAndType",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { reference: 'http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b', type: 'StructureDefinition' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { display: 'Dr. John Q. Public' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "DisplayAndType",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { type: 'Practitioner', display: 'Dr. John Q. Public' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Identifier",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { identifier: { system: 'http://hl7.org/fhir/sid/us-ssn', value: '000111111' } }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Unknown",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { type: 'Practitioner' }, mode: 'display', showerror: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: patientData, mode: 'structure', showerror: false, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "WithMissingContained",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { reference: '#1234', type: 'Patient' }, mode: 'display', showerror: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "WithExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ args: { data: { extension: [ { url: 'http://example.org/fhir/StructureDefinition/participation-agreement', valueUri: 'http://example.org/phr/documents/patient/general/v1' } ], ...patientData }, mode: 'display', showerror: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayAndTypeAndReference",
          "declaration": {
            "name": "DisplayAndTypeAndReference",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Reference",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "ReferenceAndType",
          "declaration": {
            "name": "ReferenceAndType",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayAndType",
          "declaration": {
            "name": "DisplayAndType",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "Identifier",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Unknown",
          "declaration": {
            "name": "Unknown",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithMissingContained",
          "declaration": {
            "name": "WithMissingContained",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "WithExtension",
          "declaration": {
            "name": "WithExtension",
            "module": "src/components/special/reference/reference.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Reference",
          "members": [
            {
              "kind": "field",
              "name": "containedData",
              "type": {
                "text": "ResourceData[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "mappedResource",
              "type": {
                "text": "ResourceData | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "referenceType",
              "type": {
                "text": "ReferenceType"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validation",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ReferenceData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Reference",
            "module": "src/components/special/reference/reference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/configurable/fhir-configurable-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ConfigurableElement",
          "members": [
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property."
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private"
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ConfigurableElement",
          "declaration": {
            "name": "ConfigurableElement",
            "module": "src/internal/base/configurable/fhir-configurable-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/data/fhir-data-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Abstract class representing a FHIR data element. It extends LitElement.",
          "name": "FhirDataElement",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure"
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "public",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value."
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors."
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable."
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()"
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "ValidationsImpl<T>"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "decoratedData",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added."
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  },
                  "description": "The changed properties object."
                }
              ],
              "description": "Updates the component's state based on the changed properties."
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/src/internal/base/configurable/fhir-configurable-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataElement",
          "declaration": {
            "name": "FhirDataElement",
            "module": "src/internal/base/data/fhir-data-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/data/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-data-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "EmptyResult",
          "default": "[html``]"
        },
        {
          "kind": "function",
          "name": "NullGeneratorGroup"
        },
        {
          "kind": "function",
          "name": "NullGenerators",
          "return": {
            "type": {
              "text": "Generators<T>"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptyResult",
          "declaration": {
            "name": "EmptyResult",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "NullGeneratorGroup",
          "declaration": {
            "name": "NullGeneratorGroup",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "NullGenerators",
          "declaration": {
            "name": "NullGenerators",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { display: flex; flex-direction: column; flex: 1; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; /* padding: 0.2rem; */ } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/internal/base/presentable/fhir-presentable-element.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirPresentableElement",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "extendedData",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display"
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "extendedData",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "_changedProperties",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirDataElement",
            "module": "/src/internal/base/data/fhir-data-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirPresentableElement",
          "declaration": {
            "name": "FhirPresentableElement",
            "module": "src/internal/base/presentable/fhir-presentable-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/choiceOf.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/choiceValidate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "choiceValidate",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "DR"
              },
              "description": "The data object being validated, which conforms to DomainResourceData."
            },
            {
              "name": "validations",
              "type": {
                "text": "Validations"
              },
              "description": "The validations object used to record any validation errors."
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name associated with the choice being validated."
            },
            {
              "name": "keys",
              "type": {
                "text": "string[]"
              },
              "description": "An array of keys representing the choices to check."
            }
          ],
          "description": "Validates that only one of the given keys in the data object is populated."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choiceValidate",
          "declaration": {
            "name": "choiceValidate",
            "module": "src/internal/base/util/choiceValidate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./choiceValidate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./oneOf"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/oneOf.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "choice",
          "return": {
            "type": {
              "text": "Choice<C, D>"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "D | undefined"
              }
            },
            {
              "name": "html",
              "type": {
                "text": "(data: D,\n                                                             name: string,\n                                                             error: string | undefined,\n                                                             context: C) => TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "oneOf",
          "return": {
            "type": {
              "text": "TemplateResult | TemplateResult[]"
            }
          },
          "parameters": [
            {
              "name": "contextElement",
              "type": {
                "text": "BaseElement"
              },
              "description": "The base element providing context state."
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "description": "An array of choices containing data to evaluate and template to conditionally render for\nthat data."
            }
          ],
          "description": "Renders values when only on-of the provided choices should be rendered"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choice",
          "declaration": {
            "name": "choice",
            "module": "src/internal/base/util/oneOf.ts"
          }
        },
        {
          "kind": "js",
          "name": "oneOf",
          "declaration": {
            "name": "oneOf",
            "module": "src/internal/base/util/oneOf.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badge-group-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { --badge-color: var(--sl-color-gray-500); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); margin: 0; } sl-badge::part(base) { color: var(--badge-color); background-color: var(--badge-background); border-color: var(--badge-border); font-weight: var(--sl-font-weight-normal); font-style: italic; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/shell/layout/badge-group/badge-group-styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badge-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BadgeGroup",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "resource",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "constraint",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "badges",
              "type": {
                "text": "{ label: string, type: BadgeType }[]"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeGroup",
          "declaration": {
            "name": "BadgeGroup",
            "module": "src/shell/layout/badge-group/badge-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badgeTemplates.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "badgeTemplates",
          "return": {
            "type": {
              "text": "TemplateResult[]"
            }
          },
          "parameters": [
            {
              "name": "badges",
              "type": {
                "text": "{ type: BadgeType, label: string }[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "badgeTemplates",
          "declaration": {
            "name": "badgeTemplates",
            "module": "src/shell/layout/badge-group/badgeTemplates.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badgeTemplates"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/combo/systemChoice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SystemChoice",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[ css` :host { display: flex; align-items: flex-end; } sl-input { flex-grow: 1; } sl-input::part(form-control-label) { font-size: 16px; } sl-input::part(input) { font-size: 15px; } sl-icon-button { margin-right: 0.2rem; } sl-icon-button::part(base) { padding: 0; } ` ]"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "overridable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "valuesets",
              "type": {
                "text": "{ value: string, label: string }[]"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            }
          ],
          "events": [
            {
              "name": "fhir-system-choice",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SystemChoice",
          "declaration": {
            "name": "SystemChoice",
            "module": "src/shell/layout/combo/systemChoice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/strap.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "generators",
          "type": {
            "text": "{\n  [key: string]: { (data: unknown, label: string, key: Generators, index: number): TemplateResult }\n}"
          },
          "default": "{ 'fhir-identifier': (data: unknown, label: string, key: string) => html` <fhir-identifier key=${key} label=${label} .data=${data} summary></fhir-identifier>`, 'fhir-codeable-concept': (data: unknown, label: string, key: string) => html` <fhir-codeable-concept key=${key} label=${label} .data=${data} summary></fhir-codeable-concept>`, 'fhir-codeable-reference': (data: unknown, label: string, key: string) => html` <fhir-codeable-reference key=${key} label=${label} .data=${data} summary></fhir-codeable-reference>`, 'fhir-reference': (data: unknown, label: string, key: string) => html` <fhir-reference key=${key} label=${label} .data=${data} summary></fhir-reference>` }"
        },
        {
          "kind": "function",
          "name": "strap",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "{\n                           key,\n                           pluralBase,\n                           collection,\n                           generator,\n                           summary = true,\n                           config\n                         }",
              "type": {
                "text": "WrapperConfig<T>"
              }
            },
            {
              "description": "key defined in spec",
              "name": "key"
            },
            {
              "description": "optional. key will be used if not defined",
              "name": "pluralBase"
            },
            {
              "description": "data",
              "name": "collection"
            },
            {
              "description": "name of element (ex:fhir-identifier) or generator function",
              "name": "generator"
            },
            {
              "description": "defaults to true if not provided",
              "name": "summary"
            },
            {
              "description": "display config",
              "name": "config"
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "generators",
          "declaration": {
            "name": "generators",
            "module": "src/shell/layout/wrapper/strap.ts"
          }
        },
        {
          "kind": "js",
          "name": "strap",
          "declaration": {
            "name": "strap",
            "module": "src/shell/layout/wrapper/strap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/strapLines.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "strapLines",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "collection",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "generator",
              "type": {
                "text": "{ (data: string, label: string, key: string): TemplateResult }"
              }
            },
            {
              "name": "summary",
              "default": "true",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strapLines",
          "declaration": {
            "name": "strapLines",
            "module": "src/shell/layout/wrapper/strapLines.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrap.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "wrap",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "{\n                          key,\n                          pluralBase,\n                          collection,\n                          generator,\n                          summary = true,\n                          config\n                        }",
              "type": {
                "text": "WrapConfig<T>"
              }
            },
            {
              "description": "The key to use for generating labels.",
              "name": "key"
            },
            {
              "description": "The base string to pluralize for the label of the wrapper.",
              "name": "pluralBase"
            },
            {
              "description": "The collection of items to wrap.",
              "name": "collection"
            },
            {
              "description": "The function to generate the content of each item in the wrapper.",
              "name": "generator"
            },
            {
              "description": "Whether to display a summary or detailed view of the items in the wrapper.",
              "name": "summary"
            },
            {
              "name": "config"
            }
          ],
          "description": "Wraps a collection of items with a `<fhir-wrapper>` component."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrap",
          "declaration": {
            "name": "wrap",
            "module": "src/shell/layout/wrapper/wrap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapLines.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "wrapLines",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key to be used for wrapping lines. It will be converted to lower case."
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The base string to be used for pluralization."
            },
            {
              "name": "collection",
              "type": {
                "text": "T[]"
              },
              "description": "The array of strings to be processed."
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "A boolean value indicating whether the verbose mode is enabled or not."
            },
            {
              "name": "generator",
              "type": {
                "text": "{ (data: T, label: string, key: string): TemplateResult }"
              },
              "description": "A function to generate a TemplateResult based on the provided data, label, and key."
            },
            {
              "name": "summary",
              "default": "true",
              "type": {
                "text": "boolean"
              },
              "description": "An optional boolean value indicating whether to display the summary or not."
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Wraps lines based on the given parameters."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrapLines",
          "declaration": {
            "name": "wrapLines",
            "module": "src/shell/layout/wrapper/wrapLines.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapper-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { width: 100%; /*display: flex; flex: 1; */ --badge-color: var(--sl-color-gray-400); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); } label { font-style: italic; font-weight: 500; color: var(--sl-color-primary-700); margin-right: 0.5rem; } #arrow { margin-left: var(--sl-spacing-small); color: var(--sl-color-gray-400); font-style: italic; font-size: var(--sl-font-size-large); font-weight: var(--sl-font-weight-medium); font-family: var(--sl-font-serif), serif; } .items, .details_items { /*width: clamp(calc(27rem - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)), 80%, calc(90% - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)));*/ width:fit-content; margin: var(--sl-spacing-3x-small) 0 0 var(--sl-spacing-large); border-left-width: 0.06rem; } .items { padding: 0; border-left-style: unset; } .details_items { padding: 0 0 0 var(--sl-spacing-2x-small); border-left-style: unset; border-left-color: var(--sl-color-neutral-100); } ::part(wrapped) { padding-left: 0.3rem; } sl-details::part(base) { border: none; border-radius: 0; background: none; margin-top: 0.3rem; padding: 0 0 0 0; } sl-details::part(header) { padding: var(--sl-spacing-small); padding-top: 0.2rem; padding-bottom: 0; padding-left: 0.2rem; border-top: solid 1px var(--sl-color-neutral-200); border-left: solid 1px var(--sl-color-neutral-200); } sl-details::part(summary-icon) { padding: 0 0 0 0; margin: 0 0 0 var(--sl-spacing-large); } sl-details::part(content) { display: flex; flex: 1; padding-top: 0; padding-right: 0; padding-left: 0.2rem; padding-bottom: 0; border-left: solid 1px var(--sl-color-neutral-200); } sl-details.custom-icons::part(summary-icon) { /* Disable the expand/collapse animation */ rotate: none; } sl-icon { color: var(--sl-color-neutral-300); } .variant-error-label { color: var(--sl-color-neutral-50); font-weight: normal; background-color: var(--sl-color-red-300); padding: 0.2rem; border-radius: 0.2rem; } .variant-error { margin-top: 1rem; padding: 0.5rem; background-color: var(--sl-color-red-100); border-radius: 0.5rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/shell/layout/wrapper/wrapper-styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapper.spec.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Wrapper",
          "members": [
            {
              "kind": "field",
              "name": "styles",
              "type": {
                "text": "array"
              },
              "static": true,
              "default": "[hostStyles, componentStyles]"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'none' | 'details' | 'error'"
              },
              "privacy": "public",
              "default": "'none'"
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'items'"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "badgeResource",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "badgeSummary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "badgeConstraint",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "badgeRequired",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "badgeProfile",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "content",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "render",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult | TemplateResult[]"
                }
              }
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SlDetails",
          "declaration": {
            "name": "SlDetails",
            "package": "@shoelace-style/shoelace"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "src/shell/layout/wrapper/wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "stories/system/datatype_components/primitive/all.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "default": "{ title: 'Components/Datatypes/Primitive Type/All', component: 'fhir-primitive' } satisfies Meta"
        },
        {
          "kind": "variable",
          "name": "base64",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'VGhpcyBpcyBCYXNlNjQgZW5jb2RlZCB2YWx1ZS4uLiBub3cgZGVjb2RlZA==', errorValue: 'something else', type: PrimitiveType.base64 }) }"
        },
        {
          "kind": "variable",
          "name": "boolean",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'true', errorValue: 'yes', type: PrimitiveType.boolean, variant: 'checkbox' }) }"
        },
        {
          "kind": "variable",
          "name": "canonical",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'http://hl7.org/fhir/ValueSet/my-valueset|0.8', errorValue: 'not a uri', type: PrimitiveType.canonical }) }"
        },
        {
          "kind": "variable",
          "name": "code",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => { const choices = [ { 'value': 'registered', 'display': 'Registered' }, { 'value': 'preliminary', 'display': 'Preliminary' }, { 'value': 'final', 'display': 'Final' }, { 'value': 'amended', 'display': 'Amended' }, { 'value': 'cancelled', 'display': 'Cancelled' }, { 'value': 'entered-in-error', 'display': 'Entered in Error' }, { 'value': 'unknown', 'display': 'Unknown' } ] return renderPrimitive({ value: 'registered', errorValue: 'register', type: PrimitiveType.code, choices: choices }) } }"
        },
        {
          "kind": "variable",
          "name": "date",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '2006-11-23', errorValue: '11/23/2006', type: PrimitiveType.date }) }"
        },
        {
          "kind": "variable",
          "name": "dateTime",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '1971-12-31T23:59:59.999', errorValue: '23-NOV-2025 1:30', type: PrimitiveType.datetime }) }"
        },
        {
          "kind": "variable",
          "name": "decimal",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '1.0000000', errorValue: 'one hundred', type: PrimitiveType.decimal }) }"
        },
        {
          "kind": "variable",
          "name": "fhir_string",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'Unicode text less than 1\\'048\\'576 char long 😎', errorValue: { val: 'text' }, type: PrimitiveType.fhir_string }) }"
        },
        {
          "kind": "variable",
          "name": "id",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'abc-123', errorValue: 'abc-' + '123'.repeat(21), type: PrimitiveType.id }) }"
        },
        {
          "kind": "variable",
          "name": "instant",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '2015-12-31T23:28:17.239-05:00', errorValue: '1971-12-31T23:59:59.999', type: PrimitiveType.instant }) }"
        },
        {
          "kind": "variable",
          "name": "integer",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 1234, errorValue: 10.002, type: PrimitiveType.integer }) }"
        },
        {
          "kind": "variable",
          "name": "link",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'https://example.com', errorValue: 'foo/bar/baz', type: PrimitiveType.link }) }"
        },
        {
          "kind": "variable",
          "name": "markdown",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '# title \\n ## Section \\n\\n This is a sentence', errorValue: ' ', type: PrimitiveType.markdown }) }"
        },
        {
          "kind": "variable",
          "name": "none",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'foo bar', errorValue: 1234, type: PrimitiveType.none }) }"
        },
        {
          "kind": "variable",
          "name": "positiveInt",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 1234, errorValue: -1234.5, type: PrimitiveType.positiveInt }) }"
        },
        {
          "kind": "variable",
          "name": "stringReference",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'Patient', errorValue: 'Professional', type: PrimitiveType.string_reference, choices: [ { value: 'Patient', display: 'Patient' }, { value: 'Practitioner', display: 'Practitioner' }, { value: 'Medication', display: 'Medication' }, { value: 'Substances', display: 'Substances' } ] }) }"
        },
        {
          "kind": "variable",
          "name": "time",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: '23:59:59', errorValue: '24:00:00', type: PrimitiveType.time }) }"
        },
        {
          "kind": "variable",
          "name": "unsignedInt",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 123456, errorValue: '+123456', type: PrimitiveType.unsigned_int }) }"
        },
        {
          "kind": "variable",
          "name": "uri",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'urn:uuid:53fefa32-fcbb-4ff8-8a92-55ee120877b7', errorValue: 'htpp://foo/bar baz-123', type: PrimitiveType.uri }) }"
        },
        {
          "kind": "variable",
          "name": "url",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'http://server/resource/53fefa32-fcbb-4ff8-8a92-55ee120877b7', errorValue: 'foo/bar/baz-123', type: PrimitiveType.url }) }"
        },
        {
          "kind": "variable",
          "name": "uriType",
          "type": {
            "text": "Story"
          },
          "default": "{ render: () => renderPrimitive({ value: 'AdministrableProductDefinition', errorValue: 'Aspirin', type: PrimitiveType.uri_type, choices: [ { value: 'Patient', display: 'Patient' }, { value: 'Practitioner', display: 'Practitioner' }, { value: 'Medication', display: 'Medication' }, { value: 'Substances', display: 'Substances' } ] }) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "base64",
          "declaration": {
            "name": "base64",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "boolean",
          "declaration": {
            "name": "boolean",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "canonical",
          "declaration": {
            "name": "canonical",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "code",
          "declaration": {
            "name": "code",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "date",
          "declaration": {
            "name": "date",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateTime",
          "declaration": {
            "name": "dateTime",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimal",
          "declaration": {
            "name": "decimal",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "fhir_string",
          "declaration": {
            "name": "fhir_string",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "id",
          "declaration": {
            "name": "id",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "instant",
          "declaration": {
            "name": "instant",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "integer",
          "declaration": {
            "name": "integer",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "link",
          "declaration": {
            "name": "link",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "markdown",
          "declaration": {
            "name": "markdown",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "none",
          "declaration": {
            "name": "none",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "positiveInt",
          "declaration": {
            "name": "positiveInt",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "stringReference",
          "declaration": {
            "name": "stringReference",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "time",
          "declaration": {
            "name": "time",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "unsignedInt",
          "declaration": {
            "name": "unsignedInt",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "uri",
          "declaration": {
            "name": "uri",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "url",
          "declaration": {
            "name": "url",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "uriType",
          "declaration": {
            "name": "uriType",
            "module": "stories/system/datatype_components/primitive/all.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/stories/system/datatype_components/primitive/all.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Primitive Type/All', component: 'fhir-primitive' }"
        },
        {
          "kind": "variable",
          "name": "base64",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'VGhpcyBpcyBCYXNlNjQgZW5jb2RlZCB2YWx1ZS4uLiBub3cgZGVjb2RlZA==', errorValue: 'something else', type: PrimitiveType.base64 }) }"
        },
        {
          "kind": "variable",
          "name": "boolean",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'true', errorValue: 'yes', type: PrimitiveType.boolean, variant: 'checkbox' }) }"
        },
        {
          "kind": "variable",
          "name": "canonical",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'http://hl7.org/fhir/ValueSet/my-valueset|0.8', errorValue: 'not a uri', type: PrimitiveType.canonical }) }"
        },
        {
          "kind": "variable",
          "name": "code",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => { const choices = [ { 'value': 'registered', 'display': 'Registered' }, { 'value': 'preliminary', 'display': 'Preliminary' }, { 'value': 'final', 'display': 'Final' }, { 'value': 'amended', 'display': 'Amended' }, { 'value': 'cancelled', 'display': 'Cancelled' }, { 'value': 'entered-in-error', 'display': 'Entered in Error' }, { 'value': 'unknown', 'display': 'Unknown' } ]; return renderPrimitive({ value: 'registered', errorValue: 'register', type: PrimitiveType.code, choices: choices }); } }"
        },
        {
          "kind": "variable",
          "name": "date",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '2006-11-23', errorValue: '11/23/2006', type: PrimitiveType.date }) }"
        },
        {
          "kind": "variable",
          "name": "dateTime",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '1971-12-31T23:59:59.999', errorValue: '23-NOV-2025 1:30', type: PrimitiveType.datetime }) }"
        },
        {
          "kind": "variable",
          "name": "decimal",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '1.0000000', errorValue: 'one hundred', type: PrimitiveType.decimal }) }"
        },
        {
          "kind": "variable",
          "name": "fhir_string",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'Unicode text less than 1\\'048\\'576 char long 😎', errorValue: { val: 'text' }, type: PrimitiveType.fhir_string }) }"
        },
        {
          "kind": "variable",
          "name": "id",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'abc-123', errorValue: 'abc-' + '123'.repeat(21), type: PrimitiveType.id }) }"
        },
        {
          "kind": "variable",
          "name": "instant",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '2015-12-31T23:28:17.239-05:00', errorValue: '1971-12-31T23:59:59.999', type: PrimitiveType.instant }) }"
        },
        {
          "kind": "variable",
          "name": "integer",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 1234, errorValue: 10.002, type: PrimitiveType.integer }) }"
        },
        {
          "kind": "variable",
          "name": "link",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'https://example.com', errorValue: 'foo/bar/baz', type: PrimitiveType.link }) }"
        },
        {
          "kind": "variable",
          "name": "markdown",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '# title \\n ## Section \\n\\n This is a sentence', errorValue: ' ', type: PrimitiveType.markdown }) }"
        },
        {
          "kind": "variable",
          "name": "none",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'foo bar', errorValue: 1234, type: PrimitiveType.none }) }"
        },
        {
          "kind": "variable",
          "name": "positiveInt",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 1234, errorValue: -1234.5, type: PrimitiveType.positiveInt }) }"
        },
        {
          "kind": "variable",
          "name": "stringReference",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'Patient', errorValue: 'Professional', type: PrimitiveType.string_reference, choices: [ { value: 'Patient', display: 'Patient' }, { value: 'Practitioner', display: 'Practitioner' }, { value: 'Medication', display: 'Medication' }, { value: 'Substances', display: 'Substances' } ] }) }"
        },
        {
          "kind": "variable",
          "name": "time",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: '23:59:59', errorValue: '24:00:00', type: PrimitiveType.time }) }"
        },
        {
          "kind": "variable",
          "name": "unsignedInt",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 123456, errorValue: '+123456', type: PrimitiveType.unsigned_int }) }"
        },
        {
          "kind": "variable",
          "name": "uri",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'urn:uuid:53fefa32-fcbb-4ff8-8a92-55ee120877b7', errorValue: 'htpp://foo/bar baz-123', type: PrimitiveType.uri }) }"
        },
        {
          "kind": "variable",
          "name": "url",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'http://server/resource/53fefa32-fcbb-4ff8-8a92-55ee120877b7', errorValue: 'foo/bar/baz-123', type: PrimitiveType.url }) }"
        },
        {
          "kind": "variable",
          "name": "uriType",
          "type": {
            "text": "object"
          },
          "default": "{ render: () => renderPrimitive({ value: 'AdministrableProductDefinition', errorValue: 'Aspirin', type: PrimitiveType.uri_type, choices: [ { value: 'Patient', display: 'Patient' }, { value: 'Practitioner', display: 'Practitioner' }, { value: 'Medication', display: 'Medication' }, { value: 'Substances', display: 'Substances' } ] }) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "base64",
          "declaration": {
            "name": "base64",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "boolean",
          "declaration": {
            "name": "boolean",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "canonical",
          "declaration": {
            "name": "canonical",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "code",
          "declaration": {
            "name": "code",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "date",
          "declaration": {
            "name": "date",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "dateTime",
          "declaration": {
            "name": "dateTime",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "decimal",
          "declaration": {
            "name": "decimal",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "fhir_string",
          "declaration": {
            "name": "fhir_string",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "id",
          "declaration": {
            "name": "id",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "instant",
          "declaration": {
            "name": "instant",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "integer",
          "declaration": {
            "name": "integer",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "link",
          "declaration": {
            "name": "link",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "markdown",
          "declaration": {
            "name": "markdown",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "none",
          "declaration": {
            "name": "none",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "positiveInt",
          "declaration": {
            "name": "positiveInt",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "stringReference",
          "declaration": {
            "name": "stringReference",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "time",
          "declaration": {
            "name": "time",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "unsignedInt",
          "declaration": {
            "name": "unsignedInt",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "uri",
          "declaration": {
            "name": "uri",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "url",
          "declaration": {
            "name": "url",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "uriType",
          "declaration": {
            "name": "uriType",
            "module": "dist/stories/system/datatype_components/primitive/all.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/annotation/annotation.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/annotation/annotation.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Annotation",
          "default": "class Annotation extends BaseElement { constructor() { super('Annotation'); } validate(data, validations) { if (data.authorString && data.authorReference) { validations.add({ fqk: { path: [{ node: this.type + '::author[x]' }] }, message: 'can only have one of authorString or authorReference' }); } } renderDisplay(_config, data, _validations) { return this.renderAll(data); } renderStructure(_config, data, _validations) { return this.renderAll(data); } renderAll(data) { const author = oneOf(this, '', '', [ { data: data.authorReference, html: (d) => html ` <fhir-reference key=\"authorReference\" label=\"author\" .data=${d} summary ></fhir-reference>` }, { data: data.authorString, html: (d) => html ` <fhir-primitive key=\"authorString\" label=\"author\" .value=${d} summary ></fhir-primitive>` } ]); return [ html ` ${author} <fhir-primitive key=\"time\" .value=${data.time} .type=${PrimitiveType.datetime} summary></fhir-primitive> <fhir-primitive key=\"text\" .value=${data.text} .type=${PrimitiveType.markdown} summary variant=\"fixed-width\"></fhir-primitive> ` ]; } edited(data, key, oldValue, newValue) { super.edited(data, key, oldValue, newValue); console.log(oldValue, newValue, data); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Annotation",
          "declaration": {
            "name": "Annotation",
            "module": "dist/src/components/complex/annotation/annotation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/annotation/annotation.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Annotation', subcomponents: { 'fhir-annotation': 'fhir-annotation' }, ...renderTemplateInShell((args) => html ` <fhir-annotation .data=\"${args.data}\" summary></fhir-annotation > `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data } }"
        },
        {
          "kind": "variable",
          "name": "ValidationErrors",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { authorReference: { reference: 'Patient/example' }, authorString: 'Jack Smith', time: '2022-02-08T10:18:14.034+10:00', text: 'I don\\'t think that this is true, or what I said, and it should be corrected', }, mode: 'display', showerror: true }, }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/annotation/annotation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/annotation/annotation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ValidationErrors",
          "declaration": {
            "name": "ValidationErrors",
            "module": "dist/src/components/complex/annotation/annotation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/annotation/annotation.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/annotation/annotation.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ authorReference: { reference: 'Patient/example' }, time: '2022-02-08T10:18:14.034+10:00', text: 'I don\\'t think that this is true, or what I said, and it should be corrected' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/annotation/annotation.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/annotation/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-concept/codeable-concept.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-concept/codeable-concept.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CodeableConcept",
          "default": "class CodeableConcept extends BaseElement { constructor() { super('CodeableConcept'); } validate(_data, _validations, _fetched) { super.validate(_data, _validations, _fetched); if (_validations.all().length > 0) { _validations.add({ fqk: { path: [{ node: '_root' }] }, message: 'validation error' }); } } renderDisplay(config, data, validations) { return [ wrap({ key: 'code', collection: data.coding ?? [], generator: (d, l, k, i) => html ` <fhir-coding key=${k} .label=${l} .data=${d} .errors=${validations.sliceForFQK({ path: [{ node: 'coding', index: i }] })} summary headless ></fhir-coding>`, config }), (isDefined(data.coding) && !this.verbose) ? html `` : html ` <fhir-primitive key=\"text\" .value=${data.text} summary></fhir-primitive>` ]; } renderStructure(config, data, validations) { return [ wrap({ key: 'coding', collection: data.coding ?? [], generator: (code, l, k, i) => html ` <fhir-coding key=${k} label=${l} .errors=${validations.sliceForFQK({ path: [{ node: 'coding', index: i }] })} .data=${code} summary ></fhir-coding>`, config }), (isDefined(data.coding) && !this.verbose) ? html `` : html ` <fhir-primitive key=\"text\" .value=${data.text} summary></fhir-primitive>` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableConcept",
          "declaration": {
            "name": "CodeableConcept",
            "module": "dist/src/components/complex/codeable-concept/codeable-concept.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-concept/codeableConcept.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Codeable Concept', component: 'fhir-shell', subcomponents: { codeableConcept: 'fhir-codeable-concept' }, ...renderTemplateInShell((args) => { return html ` <fhir-codeable-concept key=\"codeable concept\" label=\"codeable concept\" .data=${args.data} summary ?headless=${args.headless} ></fhir-codeable-concept>`; }) }"
        },
        {
          "kind": "variable",
          "name": "SimpleHeadacheCode",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' }, mode: 'structure', verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "WithError",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { coding: [ { system: 'http://hl7.org/fhir/sid/ex-icd-10-procedures', code: '123000' } ] }, mode: 'display', showerror: true, open: true }, render: (args) => { const [validations, concept, _choices] = prepare(args.data, 'cs-icd-10-procedures'); return html ` <fhir-shell .mode=${ifDefined(args.mode)} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open ?? true} ?summaryonly=${args.summaryonly} ?input=${args.input} > <fhir-codeable-concept label=\"codeable concept with binding on 'cs-icd-10-procedures'\" key=\"procedure\" .data=${concept} summary ?headless=${args.headless} .errors=${validations.sliceForFQK({ path: [{ node: '_root' }] })} ></fhir-codeable-concept> </fhir-shell> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/codeable-concept/codeableConcept.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "SimpleHeadacheCode",
          "declaration": {
            "name": "SimpleHeadacheCode",
            "module": "dist/src/components/complex/codeable-concept/codeableConcept.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/codeable-concept/codeableConcept.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WithError",
          "declaration": {
            "name": "WithError",
            "module": "dist/src/components/complex/codeable-concept/codeableConcept.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-concept/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/attachment/attachment.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/attachment/attachment.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Attachment",
          "default": "class Attachment extends BaseElement { constructor() { super('Attachment'); } renderDisplay(config, data) { return this.generate(data); } renderStructure(config, data) { return this.generate(data); } generate(data) { return [ html ` <fhir-primitive key=\"contentType\" label=\"content type\" .value=${data.contentType} type=${code} summary ></fhir-primitive> <fhir-primitive key=\"language\" label=\"langauge\" .value=${data.language} .type=${code} summary ></fhir-primitive> <fhir-primitive key=\"data\" label=\"data\" .value=${data.data} .type=${base64} variant=\"hide-overflow\" ></fhir-primitive> <fhir-primitive key=\"url\" label=\"url\" .value=${data.url} .type=${url} summary></fhir-primitive> <fhir-primitive key=\"size\" label=\"size\" .value=${data.size} .type=${integer64} summary ></fhir-primitive> <fhir-primitive key=\"hash\" label=\"hash\" .value=${data.hash} .type=${base64} summary ></fhir-primitive> <fhir-primitive key=\"title\" label=\"title\" .value=${data.title} .type=${none} summary translate ></fhir-primitive> <fhir-primitive key=\"creation\" label=\"creation\" .value=${data.creation} .type=${datetime} summary ></fhir-primitive> <fhir-primitive key=\"height\" label=\"height\" .value=${data.height} .type=${positiveInt} trialuse ></fhir-primitive> <fhir-primitive key=\"width\" label=\"width\" .value=${data.width} .type=${positiveInt} trialuse ></fhir-primitive> <fhir-primitive key=\"frames\" label=\"frames\" .value=${data.frames} .type=${positiveInt} trialuse ></fhir-primitive> <fhir-primitive key=\"duration\" label=\"duration\" .value=${data.duration} .type=${decimal} trialuse ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attachment",
          "declaration": {
            "name": "Attachment",
            "module": "dist/src/components/complex/attachment/attachment.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/attachment/attachment.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Attachment', subcomponents: { attachment: 'fhir-attachment' }, ...renderTemplateInShell((args) => html ` <fhir-attachment .data=\"${args.data}\" summary></fhir-attachment> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: image } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: document } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: document, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/attachment/attachment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/attachment/attachment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "dist/src/components/complex/attachment/attachment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/attachment/attachment.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/attachment/attachment.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "document",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/pdf', language: 'en', data: '', title: 'Definition of Procedure' }"
        },
        {
          "kind": "variable",
          "name": "image",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/dicom', url: 'http://10.1.2.3:1000/wado?requestType=WADO&amp;wado_details...', hash: '3u+UR6n8AgABAAAAHxxdXKmiOmUoqKnZlf8lTOhlPYy93EAkbPfs5+49YLFd/B1+omSKbW7DoqNM40/EeVnwJ8kYoXv9zy9D5C5m5A==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "document",
          "declaration": {
            "name": "document",
            "module": "dist/src/components/complex/attachment/attachment.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "image",
          "declaration": {
            "name": "image",
            "module": "dist/src/components/complex/attachment/attachment.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/attachment/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-reference/codeable-reference.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-reference/codeable-reference.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "CodeableReference",
          "default": "class CodeableReference extends BaseElement { constructor() { super('CodeableReference'); } validate(data, validations) { if (data.concept && data.reference) { validations.add({ fqk: { path: [{ node: this.type + '::' + this.key }] }, message: 'can only have one of concept or reference' }); } } renderDisplay(_, data, validations) { return oneOf(this, '', validations.msgFor(this.type + '::' + this.key), [ { data: data.concept, html: (d, n) => html ` <fhir-codeable-concept key=\"concept\" label=${n} .data=${d} summary ></fhir-codeable-concept> ` }, { data: data.reference, html: (d, n) => html ` <fhir-reference key=\"reference\" label=${n} .data=${d} summary ></fhir-reference> ` } ]); } renderStructure(_, data) { return [ html ` <fhir-codeable-concept key=\"concept\" .data=${data.concept} summary></fhir-codeable-concept> <fhir-reference key=\"reference\" .data=${data.reference} summary></fhir-reference> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableReference",
          "declaration": {
            "name": "CodeableReference",
            "module": "dist/src/components/complex/codeable-reference/codeable-reference.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-reference/codeableReference.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title, component: 'fhir-shell', ...renderTemplateInShell((args) => html ` <fhir-codeable-reference .data=${args.data} summary headless></fhir-codeable-reference>`) }"
        },
        {
          "kind": "variable",
          "name": "Headache",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, showerror: true } }"
        },
        {
          "kind": "variable",
          "name": "HeadacheVerbose",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, showerror: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data, mode: 'structure', verbose: true, showerror: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Headache",
          "declaration": {
            "name": "Headache",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "HeadacheVerbose",
          "declaration": {
            "name": "HeadacheVerbose",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-reference/codeableReference.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ concept: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' } }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ reference: { reference: '/Observation/id1234', type: 'Observation', display: 'Patient reported Headache' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/complex/codeable-reference/codeableReference.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/codeable-reference/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/coding/coding.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/coding/coding.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Coding"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coding",
          "declaration": {
            "name": "Coding",
            "module": "dist/src/components/complex/coding/coding.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/coding/coding.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Coding', component: 'fhir-shell', ...renderTemplateInShell((args) => html ` <fhir-coding .data=${args.data} summary ?headless=${args.headless}></fhir-coding>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayableValue",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { system: 'http://hl7.org/fhir/sid/icd-10', code: 'G44.1', display: 'Vascular headache, not elsewhere classified' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "NoDisplayableValue",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { system: 'http://hl7.org/fhir/sid/icd-10', code: 'G44.1' }, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ShowStructureWithErrors",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { id: '123-456', extension: [], version: '1.0', system: 'hl7.org/fhir/sid/icd-10', code: 'not a valid code', display: 'Vascular headache, not elsewhere classified' }, mode: 'structure', verbose: false, showerror: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/coding/coding.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayableValue",
          "declaration": {
            "name": "DisplayableValue",
            "module": "dist/src/components/complex/coding/coding.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "NoDisplayableValue",
          "declaration": {
            "name": "NoDisplayableValue",
            "module": "dist/src/components/complex/coding/coding.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ShowStructureWithErrors",
          "declaration": {
            "name": "ShowStructureWithErrors",
            "module": "dist/src/components/complex/coding/coding.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/coding/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/human-name/human-name.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/human-name/human-name.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "HumanName",
          "default": "class HumanName extends BaseElement { constructor() { super('HumanName'); } renderDisplay(config, data) { if (data.given || data.family) { return [ html ` <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} summary></fhir-primitive> ${config.verbose ? wrap({ key: '', pluralBase: 'given name', collection: data.given, generator: (g, i) => html ` <fhir-primitive label=${i} .value=${g} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive>`, config }) : html ` <fhir-primitive label=\"given name\" .value=${data.given.join(' ')} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive>`} <fhir-primitive label=\"family name\" .value=${data.family} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> ` ]; } if (data.text) { return [ html ` <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive label=\"full name\" .value=${data.text} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> ` ]; } return EmptyResult; } renderStructure(config, data) { return [ html ` <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive label=\"text\" .value=${data.text} .type=${PrimitiveType.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"family\" .value=${data.family} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> ${strap({ key: 'given', pluralBase: 'given', collection: data.given, generator: (g, i) => html ` <fhir-primitive label=${i} .value=${g} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive>`, summary: this.summary, config: config })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HumanName",
          "declaration": {
            "name": "HumanName",
            "module": "dist/src/components/complex/human-name/human-name.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/human-name/human-name.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...renderTemplateInShell((args) => html ` <fhir-human-name .data=${args.data} summary ?headless=${args.headless}></fhir-human-name>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data3, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/human-name/human-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/human-name/human-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "dist/src/components/complex/human-name/human-name.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/human-name/human-name.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/human-name/human-name.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'von Hochheim-Weilenfels', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'von' }, { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-name', valueString: 'Hochheim-Weilenfels' } ] }, given: ['Regina', 'Johanna', 'Maria'], prefix: 'Dr. phil.', _prefix: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier', valueCode: 'AC' } ] }, suffix: 'NCFSA' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'van Hentenryck', given: ['Karen'] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ 'text': 'Mao Ze Dong' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/human-name/human-name.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/complex/human-name/human-name.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "dist/src/components/complex/human-name/human-name.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/human-name/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/address.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/address.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Address",
          "default": "class Address extends BaseElement { constructor() { super('Address'); } renderDisplay(config, data, vldtns) { if (hasOnly(data, 'text')) { return [ html ` <fhir-primitive label=\"text\" .value=${data.text} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > ` ]; } return [ html ` <fhir-primitive key=\"use\" .value=${address_use.choices.filter(c => c.value === data.use)[0]?.display ?? data.use} .errormessage=${vldtns.msgFor('use')} summary ></fhir-primitive > <fhir-primitive key=\"type\" .value=${address_type.choices.filter(c => c.value === data.type)[0]?.display ?? data.type} .errormessage=${vldtns.msgFor('type')} summary ></fhir-primitive > ${hasSome(data.line, this.verbose) ? wrapLines('', 'line', data.line, config.verbose, (d, l, k) => html ` <fhir-primitive key=${k} label=${l} .value=${d} .type=${PrimitiveType.fhir_string} summary> <span slot=\"after\">,</span > </fhir-primitive > `) : nothing} <fhir-primitive label=\"city\" .value=${data.city} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"district\" .value=${data.district} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"state\" .value=${data.state} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"postalCode\" .value=${data.postalCode} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"country\" .value=${data.country} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-period label=\"period\" .data=${data.period} summary></fhir-period > ` ]; } renderStructure(config, data, vldtns) { return [ html ` <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} errormessage=${vldtns.msgFor('use')} summary ></fhir-primitive > <fhir-primitive label=\"type\" .value=${data.type} .type=${PrimitiveType.code} errormessage=${vldtns.msgFor('type')} summary ></fhir-primitive > <fhir-primitive label=\"text\" .value=${data.text} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive > ${hasSome(data.line, this.verbose) ? strapLines('', 'line', data.line, config.verbose, (l, i) => html ` <fhir-primitive label=\"${i}\" .value=${l} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive > `) : nothing} <fhir-primitive label=\"city\" .value=${data.city} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"district\" .value=${data.district} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"state\" .value=${data.state} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"postalCode\" .value=${data.postalCode} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-primitive label=\"country\" .value=${data.country} .type=${PrimitiveType.fhir_string} summary></fhir-primitive > <fhir-period label=\"period\" .data=${data.period} summary></fhir-period > ` ]; } renderEditableDisplay(config, data, vldtns) { return [ html ` <fhir-primitive key=\"use\" .value=${data.use} .type=${PrimitiveType.code} errormessage=${vldtns.msgFor('use')} .choices=${address_use.choices} summary ></fhir-primitive> <fhir-primitive key=\"type\" .value=${data.type} .type=${PrimitiveType.code} errormessage=${vldtns.msgFor('type')} .choices=${address_type.choices} summary ></fhir-primitive> <fhir-primitive label=\"text\" .value=${data.text} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> ${hasSome(data.line, this.verbose) ? wrapLines('', 'line', data.line, config.verbose, (d, l, k) => html ` <fhir-primitive key=${k} label=${l} .value=${d} .type=${PrimitiveType.fhir_string} summary> <span slot=\"after\">,</span> </fhir-primitive> `) : nothing} <fhir-primitive label=\"city\" .value=${data.city} .type=${PrimitiveType.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"district\" .value=${data.district} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"state\" .value=${data.state} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"postalCode\" .value=${data.postalCode} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> <fhir-primitive label=\"country\" .value=${data.country} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive> <fhir-period label=\"period\" .data=${data.period} summary></fhir-period> ` ]; } // eslint-disable-next-line @typescript-eslint/no-unused-vars validate(data, validations, _fetched) { if (data.use) { if (!address_use.choices.some(c => c.value == data.use)) { validations.add({ fqk: { path: [{ node: 'use' }] }, message: 'address use is not one of accepted: ' + useSystem('http://hl7.org/fhir/address-type').choices.map(c => c.value).join(', ') }); } } if (data.type) { if (!address_type.choices.some(c => c.value == data.type)) { validations.add({ fqk: { path: [{ node: 'type' }] }, message: 'address type is not one of accepted: ' + useSystem('http://hl7.org/fhir/address-type').choices.map(c => c.value).join(', ') }); } } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Address",
          "declaration": {
            "name": "Address",
            "module": "dist/src/components/complex/address/address.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/address.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/address.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: 'fhir-shell', subcomponents: { 'fhir-address': 'fhir-address' }, ...renderTemplateInShell((args) => html ` <fhir-address .data=${args.data} summary></fhir-address > `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true, input: false } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/address/address.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/address/address.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/address/address.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/address.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'work', text: '1050 W Wishard Blvd\\nRG,\\n5th floor\\nIndianapolis, IN 46240', line: ['1050 W Wishard Blvd', 'RG 5th floor'], city: 'Indianapolis', _state: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'IN' } ] }, postalCode: '46240', state: 'IN', country: 'United States', _country: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'US' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/address/address.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/address/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/period/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/period/period.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/period/period.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Period",
          "default": "class Period extends BaseElement { constructor() { super('Period'); } // TODO: there is no good way to hide output without the conditional handling in renderDisplay renderDisplay(_config, data) { return (data.start || data.end) ? [ html ` <fhir-primitive-wrapper> <fhir-label>period:</fhir-label> <fhir-primitive type=${PrimitiveType.datetime} .value=${data.start} summary></fhir-primitive> <fhir-label>&nbsp;${data.start ? nothing : '...'}&#x21E2;${data.end ? nothing : '...'}</fhir-label> <fhir-primitive type=${PrimitiveType.datetime} .value=${data.end} summary></fhir-primitive> </fhir-primitive-wrapper> ` ] : EmptyResult; } renderStructure(_config, data) { return [ html ` <fhir-primitive label=\"start\" type=${PrimitiveType.datetime} .value=${data.start} summary ></fhir-primitive> <fhir-primitive label=\"end\" type=${PrimitiveType.datetime} .value=${data.end} summary ></fhir-primitive>` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Period",
          "declaration": {
            "name": "Period",
            "module": "dist/src/components/complex/period/period.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/period/period.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Period', subcomponents: { period: 'fhir-period' }, ...renderTemplateInShell((args) => html ` <fhir-period .data=\"${args.data}\" summary ?headless=${args.headless}></fhir-period> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: coverage, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Start",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: start, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "End",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: end, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: coverage, mode: 'structure', showerror: true, verbose: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/period/period.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/period/period.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Start",
          "declaration": {
            "name": "Start",
            "module": "dist/src/components/complex/period/period.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "End",
          "declaration": {
            "name": "End",
            "module": "dist/src/components/complex/period/period.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/period/period.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/period/period.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "coverage",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23', end: '2011-05-27' }"
        },
        {
          "kind": "variable",
          "name": "start",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23' }"
        },
        {
          "kind": "variable",
          "name": "end",
          "type": {
            "text": "object"
          },
          "default": "{ end: '2011-05-27' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "coverage",
          "declaration": {
            "name": "coverage",
            "module": "dist/src/components/complex/period/period.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "start",
          "declaration": {
            "name": "start",
            "module": "dist/src/components/complex/period/period.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "end",
          "declaration": {
            "name": "end",
            "module": "dist/src/components/complex/period/period.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifier.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifier.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Identifier",
          "default": "class Identifier extends BaseElement { constructor() { super('Identifier'); } renderDisplay(_config, data, validations) { return [ html ` <fhir-primitive key=\"id\" label=\"id\" .value=${data.value} .context=${data.system} summary></fhir-primitive> <fhir-codeable-concept key=\"type\" label=\"type\" .data=${data.type} .errors=${validations.sliceForFQK({ path: [{ node: 'type' }] })} summary ></fhir-codeable-concept> <fhir-period key=\"period\" .data=${data.period} summary></fhir-period> ` ]; } renderStructure(_config, data, validations) { return [ html ` <fhir-primitive label=\"use\" type=${PrimitiveType.code} .value=${data.use} errormessage=${validations.msgFor('use')} summary ></fhir-primitive> <fhir-codeable-concept label=\"type\" .data=${data.type} .errors=${data[errors]} summary ></fhir-codeable-concept> <fhir-primitive label=\"system\" type=${PrimitiveType.uri} .value=${data.system} summary></fhir-primitive> <fhir-primitive label=\"value\" .value=${data.value} summary></fhir-primitive> <fhir-period label=\"period\" .data=${data.period} summary></fhir-period> <fhir-reference label=\"assigner\" .data=${data.assigner} summary></fhir-reference> ` ]; } validate(data, validations, _fetched) { if (data.use) { if (!useSystem('http://hl7.org/fhir/identifier-use').choices.find(c => c.value === data.use)) { validations.add({ fqk: { path: [{ node: 'use' }] }, message: 'identifier use is not one of accepted: ' + useSystem('http://hl7.org/fhir/address-use') .choices.map(c => c.value).join(', ') }); } } if (data.type?.coding) { const values = useSystem('http://hl7.org/fhir/ValueSet/identifier-type').choices; const codings = data.type.coding; codings.filter(coding => !values.find(v => v.value === coding.code)) .forEach((_, index) => { validations.add({ fqk: { path: [{ node: 'type' }, { node: 'coding', index: index }], key: 'code' }, message: 'identifier type is not one of accepted: ' + values.map(c => c.value).join(', ') }); }); } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "Identifier",
            "module": "dist/src/components/complex/identifier/identifier.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifier.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifier.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Identifier', component: 'fhir-shell', subcomponents: ['fhir-identifier'], ...renderTemplateInShell((args) => html ` <fhir-identifier .data=${args.data} summary ?headless=${args.headless}></fhir-identifier>`) }"
        },
        {
          "kind": "variable",
          "name": "PatientIdentifier",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "HospitalPatientIdentifier",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data1, mode: 'structure', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Example3",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/identifier/identifier.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "PatientIdentifier",
          "declaration": {
            "name": "PatientIdentifier",
            "module": "dist/src/components/complex/identifier/identifier.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "HospitalPatientIdentifier",
          "declaration": {
            "name": "HospitalPatientIdentifier",
            "module": "dist/src/components/complex/identifier/identifier.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Example3",
          "declaration": {
            "name": "Example3",
            "module": "dist/src/components/complex/identifier/identifier.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifier.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'http://www.acmehosp.com/patients', value: '44552', period: { start: '2003-05-03' } }"
        },
        {
          "kind": "variable",
          "name": "data1",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'urn:oid:2.16.840.1.113883.16.4.3.2.5', value: '123' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', type: { coding: [{ code: 'BSN' }] }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789', period: { start: '2003-05-03', end: '2024-12-31' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/identifier/identifier.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data1",
          "declaration": {
            "name": "data1",
            "module": "dist/src/components/complex/identifier/identifier.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/complex/identifier/identifier.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/identifiers.js",
      "declarations": [
        {
          "kind": "function",
          "name": "identifiers",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "config"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "identifiers",
          "declaration": {
            "name": "identifiers",
            "module": "dist/src/components/complex/identifier/identifiers.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/identifier/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifiers"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/money/money.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/money/money.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Money",
          "default": "class Money extends BaseElement { constructor() { super('Money'); } renderDisplay(_, data) { return [ html ` <fhir-primitive-wrapper > <fhir-label text=\"amount\"></fhir-label>&nbsp; <fhir-primitive .value=${data.value} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive .value=${data.currency} .type=${PrimitiveType.code}></fhir-primitive> </fhir-primitive-wrapper> ` ]; } renderStructure(_, data) { return [ html ` <fhir-primitive key=\"value\" .value=${data.value} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"currency\" .value=${data.currency} .type=${PrimitiveType.code} summary></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Money",
            "module": "dist/src/components/complex/money/money.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/money/money.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Money', subcomponents: { period: 'fhir-money' }, ...renderTemplateInShell((args) => html ` <fhir-money .data=\"${args.data}\" summary ?headless=${args.headless}></fhir-money> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/money/money.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/money/money.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/money/money.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/money/money.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ value: '25.00', currency: 'USD' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/money/money.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/ratio/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/ratio/ratio.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/ratio/ratio.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Ratio",
          "default": "class Ratio extends BaseElement { constructor() { super('Ratio'); } renderDisplay(_, data) { return [ html ` <div style=\" display: flex; flex-direction: row; align-items: flex-start\"> <fhir-quantity key=\"numerator\" .data=${data.numerator} summary headless></fhir-quantity> <fhir-value text=\"/\"></fhir-value> <fhir-quantity key=\"denominator\" .data=${data.denominator} summary headless ></fhir-quantity> </div> ` ]; } renderStructure(_, data) { return [ html ` <div style=\" display: flex; flex-direction: column; flex: 1\"> <fhir-quantity key=\"numerator\" label=\"numerator\" .data=${data.numerator} summary></fhir-quantity> <fhir-quantity key=\"denominator\" label=\"denominator\" .data=${data.denominator} summary></fhir-quantity> </div> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Ratio",
          "declaration": {
            "name": "Ratio",
            "module": "dist/src/components/complex/ratio/ratio.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/ratio/ratio.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/ratio/ratio.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Ratio', component: 'fhir-ratio', ...renderTemplateInShell((args) => html ` <fhir-ratio .data=${args.data} summary ?headless=${args.headless}></fhir-ratio>`) }"
        },
        {
          "kind": "variable",
          "name": "SimpleRatio",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { numerator: { value: '1' }, denominator: { value: '128' } }, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "UnitCost",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { numerator: { value: '103.50', unit: 'US$', code: 'USD', system: 'urn:iso:std:iso:4217' }, denominator: { value: '1', unit: 'day', code: 'day', system: 'http://unitsofmeasure.org' } }, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/ratio/ratio.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "SimpleRatio",
          "declaration": {
            "name": "SimpleRatio",
            "module": "dist/src/components/complex/ratio/ratio.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "UnitCost",
          "declaration": {
            "name": "UnitCost",
            "module": "dist/src/components/complex/ratio/ratio.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.type-guards"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "QuantityVariations"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "QuantityVariations",
          "declaration": {
            "name": "QuantityVariations",
            "module": "dist/src/components/complex/quantity/quantity.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Quantity",
          "default": "class Quantity extends BaseElement { constructor() { super('Quantity'); this.simple = false; this.variation = QuantityVariations.unknown; } renderDisplay(config, data, validations) { const displayValue = data.value; const type = 'decimal'; const after = config.verbose ? data.unit + '(' + data.code + ')' : data.code; if (isQuantity(data) && !this.simple) { return [ html ` <fhir-primitive .label=${this.label} .value=${displayValue} .type=${type} summary> ${data.comparator ? html `<span slot=\"before\"> ${useSystem('http://hl7.org/fhir/ValueSet/quantity-comparator') .choices .find(c => c.value === data.comparator) ?.display .toLowerCase()} </span>` : nothing} ${after ? html `<span slot=\"after\"> ${after} </span>` : nothing} </fhir-primitive> ` ]; } if (isSimpleQuantity(data) || this.simple) { return [ html ` <fhir-primitive .label=${this.label} .value=${displayValue} .type=${type} summary> ${after ? html `<span slot=\"after\"> ${after} </span>` : nothing} </fhir-primitive> ${validations.msgFor('comparator::sqty-1') ? html ` <fhir-primitive label=\"comparator\" .value=${data.comparator} type=\"code\" summary .errormessage=${validations.msgFor('comparator::sqty-1')} ></fhir-primitive>` : nothing} ` ]; } return [ html ` <fhir-not-supported label=\"quantity\" description=\"must be Quantity or Simple Quantity\" ></fhir-not-supported>` ]; } renderEditableDisplay(_, data, validations) { const system = useSystem(data.system); const comparators = useSystem('http://hl7.org/fhir/quantity-comparator'); const sysChoices = systemChoices(); return [ html ` <fhir-primitive key=\"variation\" .value=${this.variation} .input=${false}></fhir-primitive> <fhir-primitive key=\"value\" .value=${data.value} type=\"decimal\" summary></fhir-primitive> ${when(this.variation === 'simple', () => html ``, () => html ` <fhir-primitive key=\"comparator\" .value=${data.comparator} type=\"code\" summary .choices=${comparators.choices} ></fhir-primitive>`)} <fhir-primitive key=\"system\" .value=${data.system} type=\"uri\" summary .choices=${sysChoices.choices} ></fhir-primitive> <fhir-primitive key=\"code\" .value=${data.code} type=\"code\" summary .choices=${system?.choices} .errormessage=${validations.msgFor('code')} ></fhir-primitive> <fhir-primitive key=\"unit\" .value=${data.unit} summary ></fhir-primitive> ` ]; } renderStructure(_config, data, validations) { if (isQuantity(data) && !this.simple) { return [ html ` <fhir-primitive label=\"variation\" .value=${this.variation}></fhir-primitive> <fhir-primitive label=\"value\" .value=${data.value} type=\"decimal\" summary></fhir-primitive> <fhir-primitive label=\"comparator\" .value=${data.comparator} type=\"code\" summary></fhir-primitive> <fhir-primitive label=\"unit\" .value=${data.unit} summary></fhir-primitive> <fhir-primitive label=\"system\" .value=${data.system} type=\"uri\" summary></fhir-primitive> <fhir-primitive label=\"code\" .value=${data.code} type=\"code\" summary></fhir-primitive> ` ]; } if (isSimpleQuantity(data) || this.simple) { return [ html ` <fhir-primitive label=\"variation\" .value=${this.variation}></fhir-primitive> <fhir-primitive label=\"value\" .value=${data.value} type=\"decimal\" summary></fhir-primitive> ${validations.msgFor('comparator::sqty-1') ? html ` <fhir-primitive label=\"comparator\" .value=${data.comparator} type=\"code\" summary .errormessage=${validations.msgFor('comparator::sqty-1')} ></fhir-primitive>` : nothing} <fhir-primitive label=\"unit\" .value=${data.unit} summary></fhir-primitive> <fhir-primitive label=\"system\" .value=${data.system} type=\"uri\" summary></fhir-primitive> <fhir-primitive label=\"code\" .value=${data.code} type=\"code\" summary></fhir-primitive> ` ]; } return [ html ` <fhir-not-supported label=\"quantity\" description=\"must be Quantity or Simple Quantity\" ></fhir-not-supported>` ]; } validate(data, validations, _fetched) { if (this.simple && !isSimpleQuantity(data)) { validations.add({ fqk: { path: [{ node: 'comparator::sqty-1' }] }, message: `${this.type}:${this.key}: comparator should not be present` }); } if (!hasAllOrNone(data, ['code', 'system'])) { validations.add({ fqk: { path: [{ node: this.type + '::qty-3' }] }, message: `${this.type}: code and system should be set or none of the two` }); } const system = useSystem(data.system); if (system && !system.choices.find((c) => c.value === data.code)) { validations.add({ fqk: { path: [{ node: 'code' }] }, message: `${this.type}: code ${data.code} is not valid for system: ${data.system}` }); } } decorate(data) { // rule: sqty-1 if (data.comparator) { // convert html encoded strings such as &gt; data.comparator = new DOMParser().parseFromString(data.comparator, 'text/html').body.textContent ?? undefined; } else { this.variation = QuantityVariations.simple; } if (this.simple) { this.variation = QuantityVariations.simple; } const isBlankOrUcum = !data.system || data.system.toString() === 'http://unitsofmeasure.org'; // rule: dis-1 const distanceUnits = useSystem('http://hl7.org/fhir/ValueSet/distance-units'); if (data.unit && distanceUnits.choices.find(d => data.code === d.value && data.system === distanceUnits.system)) { this.variation = QuantityVariations.distance; } // rule: cnt-3 if (data.code === '1' && isBlankOrUcum && (!data.value || isWholeNumber(data.value))) { this.variation = QuantityVariations.count; } // TODO: There is no guaranteed way to distinguish between a duration and an age. Is this a bug or a feature? // rule: drt-1 const durations = useSystem('http://hl7.org/fhir/ValueSet/duration-units'); if ((!data.value || data.code) && durations.choices.find(d => data.code === d.value) && isBlankOrUcum) { this.variation = QuantityVariations.duration; } // rule: age-1 const ageUnits = useSystem('http://hl7.org/fhir/ValueSet/age-units'); if (data.value && data.value > 0 && ageUnits.choices.find(a => data.code === a.value && data.system === ageUnits.system)) { this.variation = QuantityVariations.age; } return data; } edited(data, key, oldValue, newValue) { super.edited(data, key, oldValue, newValue); if (key === 'code') { const system = useSystem(data.system); if (system) { const choice = system.choices.find((c) => c.value === newValue); if (choice) data.unit = choice.display || choice.value; } } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Quantity",
          "declaration": {
            "name": "Quantity",
            "module": "dist/src/components/complex/quantity/quantity.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Quantity', component: 'fhir-quantity', ...renderTemplateInShell((args) => html ` <fhir-quantity .data=${args.data} summary ?headless=${args.headless}></fhir-quantity>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayableTime",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '25', unit: 'sec', system: 'http://unitsofmeasure.org', code: 's' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "AmountOfPrescribedMedicine",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '40000', comparator: '&gt;', unit: 'ug/L', system: 'http://unitsofmeasure.org', code: 'ug' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "AmountOfPrescribedMedicine2",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '3', unit: 'capsules', system: 'http://snomed.info/sct', code: '385049006' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Money",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '100', unit: 'US$', system: 'urn:iso:std:iso:4217', code: 'USD' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Simple",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '1' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ShowStructWithErrors",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: 'abc', unit: 'sec', system: 'http://unitsofmeasure.org', code: 's' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Distance",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '100', unit: 'kilometers', system: 'http://unitsofmeasure.org', code: 'km' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Age",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '18', unit: 'months', system: 'http://unitsofmeasure.org', code: 'mo' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Duration",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '0', unit: 'milliseconds', system: 'http://unitsofmeasure.org', code: 'ms' }, mode: 'structure', showerror: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Count",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { value: '1', code: '1' }, mode: 'structure', showerror: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayableTime",
          "declaration": {
            "name": "DisplayableTime",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "AmountOfPrescribedMedicine",
          "declaration": {
            "name": "AmountOfPrescribedMedicine",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "AmountOfPrescribedMedicine2",
          "declaration": {
            "name": "AmountOfPrescribedMedicine2",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Money",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Simple",
          "declaration": {
            "name": "Simple",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ShowStructWithErrors",
          "declaration": {
            "name": "ShowStructWithErrors",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Distance",
          "declaration": {
            "name": "Distance",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Age",
          "declaration": {
            "name": "Age",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Duration",
          "declaration": {
            "name": "Duration",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Count",
          "declaration": {
            "name": "Count",
            "module": "dist/src/components/complex/quantity/quantity.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { display: flex; flex-direction: column; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/complex/quantity/quantity.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/quantity/quantity.type-guards.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isQuantity",
          "parameters": [
            {
              "name": "quantity"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSimpleQuantity",
          "parameters": [
            {
              "name": "quantity"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBoolean",
          "parameters": [
            {
              "name": "val"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDeceasedDateTime",
          "parameters": [
            {
              "name": "val"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorReference",
          "parameters": [
            {
              "name": "val"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorFhirString",
          "parameters": [
            {
              "name": "val"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isQuantity",
          "declaration": {
            "name": "isQuantity",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        },
        {
          "kind": "js",
          "name": "isSimpleQuantity",
          "declaration": {
            "name": "isSimpleQuantity",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "isBoolean",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        },
        {
          "kind": "js",
          "name": "isDeceasedDateTime",
          "declaration": {
            "name": "isDeceasedDateTime",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorReference",
          "declaration": {
            "name": "isAuthorReference",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorFhirString",
          "declaration": {
            "name": "isAuthorFhirString",
            "module": "dist/src/components/complex/quantity/quantity.type-guards.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/sampled-data/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sample-data.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/sampled-data/sample-data.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/sampled-data/sampled-data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "SampledData",
          "default": "class SampledData extends BaseElement { constructor() { super('SampledData'); } renderDisplay(config, data) { return this.renderAny(config, data); } renderStructure(config, data) { return this.renderAny(config, data); } renderAny(config, data) { return [html ` <fhir-quantity key=\"origin\" .data=${data.origin} simple summary required></fhir-quantity> <fhir-primitive key=\"interval\" .value=${data.interval} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"intervalUnit\" .value=${data.intervalUnit} .type=${PrimitiveType.code} summary required></fhir-primitive> <fhir-primitive key=\"factor\" .value=${data.factor} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"lowerLimit\" .value=${data.lowerLimit} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"upperLimit\" .value=${data.upperLimit} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"dimensions\" .value=${data.dimensions} .type=${PrimitiveType.positiveInt} summary required></fhir-primitive> <fhir-primitive key=\"codeMap\" .value=${data.codeMap} .type=${PrimitiveType.canonical}></fhir-primitive> <fhir-primitive key=\"offset\" .value=${data.offset} .type=${PrimitiveType.fhir_string}></fhir-primitive> <fhir-primitive key=\"data\" .value=${data.data} .type=${PrimitiveType.fhir_string}></fhir-primitive> `]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampledData",
          "declaration": {
            "name": "SampledData",
            "module": "dist/src/components/complex/sampled-data/sampled-data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/sampled-data/sampled-data.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Sampled Data', component: 'fhir-sampled-data', ...renderTemplateInShell((args) => html ` <fhir-sampled-data .data=${args.data} summary ?headless=${args.headless}></fhir-sampled-data>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: false } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/sampled-data/sampled-data.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/sampled-data/sampled-data.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/sampled-data/sampled-data.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/range/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/range/range.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/range/range.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Range",
          "default": "class Range extends BaseElement { constructor() { super('Range'); } renderDisplay(config, data) { return this.renderAny(config, data); } renderStructure(config, data) { return this.renderAny(config, data); } renderAny(config, data) { return [ html ` <fhir-quantity key=\"low\" .data=${data.low} simple></fhir-quantity> <fhir-quantity key=\"high\" .data=${data.high} simple></fhir-quantity> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Range",
          "declaration": {
            "name": "Range",
            "module": "dist/src/components/complex/range/range.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/range/range.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Range', component: 'fhir-range', ...renderTemplateInShell((args) => html ` <fhir-range .data=${args.data} summary ?headless=${args.headless}></fhir-range>`) }"
        },
        {
          "kind": "variable",
          "name": "Distance",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { \"low\": { \"value\": \"1.6\", \"unit\": \"m\" }, \"high\": { \"value\": \"1.9\", \"unit\": \"m\" } }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "DistanceError",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { \"low\": { \"value\": \"1.6\", \"unit\": \"m\", comparator: '&gt;' }, \"high\": { \"value\": \"1.9\", \"unit\": \"m\" } }, mode: 'display', showerror: false, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/range/range.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Distance",
          "declaration": {
            "name": "Distance",
            "module": "dist/src/components/complex/range/range.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DistanceError",
          "declaration": {
            "name": "DistanceError",
            "module": "dist/src/components/complex/range/range.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/contact-point/contact-point.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/contact-point/contact-point.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ContactPoint",
          "default": "class ContactPoint extends BaseElement { constructor() { super('ContactPoint'); } renderDisplay(config, data, validations) { let label = data.use ?? 'value'; label = label + (data.system ? ' (' + data.system + ')' : ''); return [ html ` <fhir-primitive .label=\"${label}\" .value=${data.value} .type=${PrimitiveType.fhir_string} .errormessage=${validations.msgFor('system')} summary ></fhir-primitive> <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive label=\"rank\" .value=${data.rank} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-period label=\"period\" .data=${data.period} summary></fhir-period> ` ]; } renderStructure(config, data, validations) { return [ html ` <fhir-primitive label=\"system\" .value=${data.system} .errormessage=${validations.msgFor('system')} .type=${PrimitiveType.code} summary ></fhir-primitive> <fhir-primitive label=\"value\" .value=${data.value} .type=${PrimitiveType.fhir_string} summary></fhir-primitive> <fhir-primitive label=\"use\" .value=${data.use} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive label=\"rank\" .value=${data.rank} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-period .label=\"period\" .data=${data.period} summary></fhir-period> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContactPoint",
          "declaration": {
            "name": "ContactPoint",
            "module": "dist/src/components/complex/contact-point/contact-point.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/contact-point/contact-point.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...renderTemplateInShell((args) => html ` <fhir-contact-point .data=${args.data} .profile=${args.useProfile ? args.profile : undefined} summary ?headless=${args.headless} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open} ></fhir-contact-point>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Profile",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { meta: { profile: ['http://fhir.ch/ig/ch-core/StructureDefinition/ch-core-contactpoint-ech-46-phone'] }, ...data, extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-TEL-address', valueUri: 'tel:+15556755745' } ], '_use': { extension: [ { url: 'http://fhir.ch/ig/ch-core/StructureDefinition/ch-ext-ech-46-phonecategory', valueCodeableConcept: { coding: [{ code: 'email' }] } } ] } }, profile: profile({ type: new DatatypeDef('ContactPoint', 'CHCoreContactPointECH46Phone'), base, props: [ slice.constraint(['system'], [ (data, fixedValue) => ({ success: data.system === fixedValue, message: `Must be fixed value:${fixedValue}` }) ], ['phone']), extend.primitive('use', 'redundant-url', [ { key: 'phoneCategory', url: 'https://fhir.ch/ig/ch-core/5.0.0/StructureDefinition-ch-ext-ech-46-phonecategory.html', valueType: 'CodeableConcept', bindings: [ { value: '1', display: 'PrivatePhone' }, { value: '2', display: 'PrivateMobile' }, { value: '3', display: 'PrivateFax' }, { value: '4', display: 'PrivateInternetVoice' }, { value: '5', display: 'BusinessCentral' }, { value: '6', display: 'BusinessDirect' }, { value: '7', display: 'BusinessMobile' }, { value: '8', display: 'BusinessFax' }, { value: '9', display: 'BusinessInternetVoice' }, { value: '10', display: 'Pager' } ] } ]) .extendRender(DisplayMode.display, (_config, data) => ([ html ` <fhir-extension key=\"_use\" label=\"_use\" .data=${data._use.extension[0]} ></fhir-extension>` ])) .extendRender(DisplayMode.structure, (_config, data) => ([ html ` <fhir-extension key=\"_use\" label=\"_use\" .data=${data._use.extension[0]} ></fhir-extension>` ])) ] }), mode: 'structure', showerror: true, verbose: true, open: true, useProfile: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/contact-point/contact-point.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/contact-point/contact-point.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/contact-point/contact-point.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Profile",
          "declaration": {
            "name": "Profile",
            "module": "dist/src/components/complex/contact-point/contact-point.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/contact-point/contact-point.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ system: 'phone', value: '(555) 675 5745', use: 'home', period: { start: '2022-07-01', end: '2024-07-01' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/contact-point/contact-point.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/contact-point/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/bundle-everything.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "BundleEverything",
          "default": "class BundleEverything extends Bundle { renderDisplay(_config, data) { return [ html ` <fhir-patient .data=${data.entry[0].resource} summaryonly></fhir-patient> <ol> ${data.entry.slice(1).map(entry => html ` <li>${entry.resource.resourceType} - ${entry.resource.id}</li>`)} </ol> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BundleEverything",
          "declaration": {
            "name": "BundleEverything",
            "module": "dist/src/components/foundation/bundle/bundle-everything.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/bundle.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/bundle.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Bundle",
          "default": "class Bundle extends BaseElement { constructor() { super('Bundle'); } renderDisplay(_config, data) { return [ html ` <fhir-identifier label=\"identifier\" .data=${data.identifier}></fhir-identifier > <fhir-primitive label=\"type\" .value=${data.type} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"total\" .value=${data.total} .type=${PrimitiveType.unsigned_int}></fhir-primitive > ${hasSome(data.link, this.verbose) ? renderBackboneCollection('links', 'link', data.link, (item) => html ` <fhir-primitive label=\"relation\" .value=${item.relation} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"url\" .value=${item.url} .type=${PrimitiveType.uri}></fhir-primitive > `, this.verbose) : nothing} ${hasSome(data.entry, this.verbose) ? renderBackboneCollection('entries', 'entry', data.entry, (entry) => { const verbose = this.verbose; const noIndex = null; return html ` ${hasSome(entry.link, verbose) ? renderBackboneCollection('links', noIndex, entry.link, (item) => html ` <fhir-primitive label=\"link\" .value=${item} .type=${PrimitiveType.link}></fhir-primitive > `, this.verbose) : nothing} ${renderResourceComponent(entry.resource, this.getDisplayConfig())} `; }, this.verbose) : nothing} <fhir-signature label=\"signature\" .data=${data.signature}></fhir-signature > ${renderResourceComponent(data.issues, this.getDisplayConfig())} ` ]; } renderStructure(_config, data) { return [ html ` <fhir-identifier label=\"identifier\" .data=${data.identifier}></fhir-identifier > <fhir-primitive label=\"type\" .value=${data.type} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"timestamp\" .value=${data.timestamp} .type=${PrimitiveType.instant}></fhir-primitive > <fhir-primitive label=\"total\" .value=${data.total} .type=${PrimitiveType.unsigned_int}></fhir-primitive > ${hasSome(data.link, this.verbose) ? renderBackboneCollection('links', 'link', data.link, (item) => html ` <fhir-primitive label=\"relation\" .value=${item.relation} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"url\" .value=${item.url} .type=${PrimitiveType.uri}></fhir-primitive > `, this.verbose) : nothing} ${hasSome(data.entry, this.verbose) ? renderBackboneCollection('entries', 'entry', data.entry, (entry) => { const displayConfig = this.getDisplayConfig(); const verbose = displayConfig.verbose; const noIndex = null; return html ` ${hasSome(entry.link, verbose) ? renderBackboneCollection('links', noIndex, entry.link, (item) => html ` <fhir-primitive label=\"link\" .value=${item} .type=${PrimitiveType.link}></fhir-primitive > `, this.verbose) : nothing} <fhir-primitive label=\"fullURL\" .value=${entry.fullUrl} .type=${PrimitiveType.uri}></fhir-primitive > ${renderResourceComponent(entry.resource, displayConfig)} ${isDefined(entry.search) ? renderSingleBackbone('search', noIndex, verbose, html ` <fhir-primitive label=\"mode\" .value=${entry.search?.mode} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"score\" .value=${entry.search?.score} .type=${PrimitiveType.code} ></fhir-primitive > `) : nothing} ${isDefined(entry.request) ? renderSingleBackbone('request', noIndex, verbose, html ` <fhir-primitive label=\"method\" .value=${entry.request?.method} .type=${PrimitiveType.code} ></fhir-primitive > <fhir-primitive label=\"url\" .value=${entry.request?.url} .type=${PrimitiveType.uri}></fhir-primitive > <fhir-primitive label=\"ifNoneMatch\" .value=${entry.request?.ifNoneMatch} .type=${PrimitiveType.fhir_string} ></fhir-primitive > <fhir-primitive label=\"ifModifiedSince\" .value=${entry.request?.ifModifiedSince} .type=${PrimitiveType.instant} ></fhir-primitive > <fhir-primitive label=\"ifMatch\" .value=${entry.request?.ifMatch} .type=${PrimitiveType.fhir_string} ></fhir-primitive > <fhir-primitive label=\"ifNoneExist\" .value=${entry.request?.ifNoneExist} .type=${PrimitiveType.fhir_string} ></fhir-primitive > `) : nothing} ${isDefined(entry.response) ? renderSingleBackbone('response', noIndex, verbose, html ` <fhir-primitive label=\"status\" .value=${entry.response?.status} .type=${PrimitiveType.fhir_string} ></fhir-primitive > <fhir-primitive label=\"location\" .value=${entry.response?.location} .type=${PrimitiveType.uri}></fhir-primitive > <fhir-primitive label=\"etag\" .value=${entry.response?.etag} .type=${PrimitiveType.fhir_string}></fhir-primitive > <fhir-primitive label=\"lastModified\" .value=${entry.response?.lastModified} .type=${PrimitiveType.instant} ></fhir-primitive > ${renderResourceComponent(entry.response?.outcome, displayConfig)} `) : nothing} `; }, this.verbose) : nothing} <fhir-signature label=\"signature\" .data=${data.signature}></fhir-signature > ${renderResourceComponent(data.issues, this.config())} ` ]; } renderNarrative(config, data, _validations) { if (data.entry && data.entry.length > 0) { return [ html ` <fhir-wrapper label=${this.getLabel()} ?headless=${this.headless}> ${wrap({ key: 'entry', collection: data.entry, generator: (d, l) => { if (isDomainResource(d.resource)) { return html ` <fhir-label text=\"${l}: ${d.resource.resourceType}\"></fhir-label> <fhir-narrative .data=${d.resource.text} .mode=${config.mode} ></fhir-narrative> `; } else return html ``; }, config })} </fhir-wrapper> ` ]; } return [html ``]; } }"
        },
        {
          "kind": "function",
          "name": "isDomainResource",
          "parameters": [
            {
              "name": "val"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Bundle",
          "declaration": {
            "name": "Bundle",
            "module": "dist/src/components/foundation/bundle/bundle.js"
          }
        },
        {
          "kind": "js",
          "name": "isDomainResource",
          "declaration": {
            "name": "isDomainResource",
            "module": "dist/src/components/foundation/bundle/bundle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/bundle.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "MasterDetail",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: masterDetail, mode: 'display', showerror: false, verbose: false, open: false }, render: (args) => html ` <fhir-bundle-everything .data=${args.data} ></fhir-bundle-everything>` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/foundation/bundle/bundle.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/foundation/bundle/bundle.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/foundation/bundle/bundle.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "MasterDetail",
          "declaration": {
            "name": "MasterDetail",
            "module": "dist/src/components/foundation/bundle/bundle.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/bundle.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-references', type: 'collection', entry: [ { fullUrl: 'http://example.org/fhir/Patient/23', resource: { resourceType: 'Patient', id: '23', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown ( id:\\u00a01234567)</p><hr/></div>' }, identifier: [ { system: 'http://example.org/ids', value: '1234567' } ] } }, { fullUrl: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d', resource: { resourceType: 'Patient', id: 'temp', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown</p><hr/></div>' } } }, { fullUrl: 'http://example.org/fhir/Observation/123', resource: { resourceType: 'Observation', id: '123', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"123\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;123&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/124', resource: { resourceType: 'Observation', id: '124', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"124\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;124&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir/Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir/Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/12', resource: { resourceType: 'Observation', id: '12', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"12\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;12&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d' } } }, { fullUrl: 'http://example.org/fhir/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir-2/Patient/1</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir-2/Patient/1' } } }, { fullUrl: 'http://example.org/fhir-2/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '1' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 1</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 1' } ] } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '2' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 2</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 2' } ] } }, { fullUrl: 'http://example.org/fhir/Observation/47', resource: { resourceType: 'Observation', id: '47', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"47\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;47&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/45/_history/2</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/45/_history/2' } } }, { fullUrl: 'http://example.org/fhir/Observation/48', resource: { resourceType: 'Observation', id: '48', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"48\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;48&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <span/></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { identifier: { system: 'http://example.org/ids', value: '1234567' } } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-simplesummary', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '2c2fb771-6c4b-4df8-89b2-47a1178e7c', meta: { lastUpdated: '2018-11-12T05:42:49.445Z' }, type: 'searchset', total: 4, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=36aac5c3-a9f6-4c3a-bf94-24d32ed604&&patient=example&_sort=_id' } ], entry: [ { fullUrl: 'http://test.fhir.org/r5/Condition/example', resource: { resourceType: 'Condition', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.552Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Severe burn of left ear (Date: 24-May 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' }, { system: 'http://snomed.info/sct', code: '439401001', display: 'Diagnosis' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '24484000', display: 'Severe' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '39065001', display: 'Burn of ear' } ], text: 'Burnt Ear' }, bodySite: [ { coding: [ { system: 'http://snomed.info/sct', code: '49521004', display: 'Left external ear structure' } ], text: 'Left Ear' } ], subject: { reference: 'Patient/example' }, onsetDateTime: '2012-05-24' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/example2', resource: { resourceType: 'Condition', id: 'example2', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.626Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Mild Asthma (Date: 12-Nov 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '255604002', display: 'Mild' } ] }, code: { text: 'Asthma' }, subject: { reference: 'Patient/example' }, onsetString: 'approximately November 2012' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/family-history', resource: { resourceType: 'Condition', id: 'family-history', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.274Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Family history of cancer of colon</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '312824007', display: 'Family history of cancer of colon' } ] }, subject: { reference: 'Patient/example' } }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/stroke', resource: { resourceType: 'Condition', id: 'stroke', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.337Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Ischemic stroke, July 18, 2010</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '422504002', display: 'Ischemic stroke (disorder)' } ], text: 'Stroke' }, subject: { reference: 'Patient/example' }, onsetDateTime: '2010-07-18' }, search: { mode: 'match' } } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '86846953-60dd-47ba-b37a-7e7d7e3312', meta: { lastUpdated: '2018-11-12T05:42:49.476Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=0f08b401-5120-4444-9a83-3fd21d33df&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '4bafe9c4-ba53-4d7b-89d0-d92ee0859a', meta: { lastUpdated: '2018-11-12T05:42:49.498Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Observation?_format=application/fhir+xml&search-id=50df0414-1375-48a4-ba1e-66f580360a&&patient=example&code=http%3A//loinc.org%7C55284%2D4&date=ge2015%2D01%2D01&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-medsallergies', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '5bdf95d0-24a6-4024-95f5-d546fb479b', meta: { lastUpdated: '2018-11-12T05:42:16.086Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=804eee4a-0a54-4414-9c07-169952f929&&patient=example&_list=%24current%2Dmedications&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '0c11a91c-3638-4d58-8cf1-40e60f43c6', meta: { lastUpdated: '2018-11-12T05:42:16.209Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/AllergyIntolerance?_format=application/fhir+xml&search-id=b1981f8a-4139-4db6-923d-77d764c990&&patient=example&_list=%24current%2Dallergies&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '19f0fa29-f8fe-4b07-b035-f488893f06', meta: { lastUpdated: '2018-11-12T05:42:16.279Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=4d097c43-54aa-4157-b500-be22208dd0&&patient=example&_list=%24current%2Dproblems&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: 'dff8ab42-33f9-42ec-88c5-83d3f05323', meta: { lastUpdated: '2018-11-12T05:42:16.351Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=31d4af75-cdcf-4f85-9666-4bafadebb5&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "masterDetail",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'b1e4aca6-8695-4f22-84e1-7b7ac22242e5', meta: { lastUpdated: '2025-02-21T17:08:35.396+00:00' }, type: 'searchset', link: [ { relation: 'self', url: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2/$everything' }, { relation: 'next', url: 'https://hapi.fhir.org/baseR5?_getpages=b1e4aca6-8695-4f22-84e1-7b7ac22242e5&_getpagesoffset=20&_count=20&_pretty=true&_bundletype=searchset' } ], entry: [ { fullUrl: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2', resource: { resourceType: 'Patient', id: 'silth-practice-2', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\">Mr. Josh <b>JAIDEE </b></div><table class=\"hapiPropertyTable\"><tbody><tr><td>Identifier</td><td>8-4027-26620-53-3</td></tr><tr><td>Date of birth</td><td><span>03 April 1967</span></td></tr></tbody></table></div>' }, identifier: [ { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'NI' } ] }, system: 'http://thailand.com/citizenid', value: '8-4027-26620-53-3' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'http://fhirhealthhospital.com/mrn', value: '64-52323' } ], active: true, name: [ { family: 'Jaidee', given: [ 'Josh' ], prefix: [ 'Mr.' ] } ], gender: 'male', birthDate: '1967-04-03' }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81973', resource: { resourceType: 'Condition', id: '81973', meta: { versionId: '2', lastUpdated: '2023-09-10T09:45:22.044+00:00', source: '#y1csxzmLCMKFr88n' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis, other and unspecified' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81974', resource: { resourceType: 'DiagnosticReport', id: '81974', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81975' }, result: [ { reference: 'Observation/81977' }, { reference: 'Observation/81978' }, { reference: 'Observation/81979' }, { reference: 'Observation/81980' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81975', resource: { resourceType: 'Encounter', id: '81975', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81981', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81976', resource: { resourceType: 'MedicationRequest', id: '81976', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81975', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81977', resource: { resourceType: 'Observation', id: '81977', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81978', resource: { resourceType: 'Observation', id: '81978', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81979', resource: { resourceType: 'Observation', id: '81979', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81980', resource: { resourceType: 'Observation', id: '81980', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81983', resource: { resourceType: 'Procedure', id: '81983', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81985', resource: { resourceType: 'Condition', id: '81985', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' }, { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81986', resource: { resourceType: 'DiagnosticReport', id: '81986', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81987' }, result: [ { reference: 'Observation/81989' }, { reference: 'Observation/81990' }, { reference: 'Observation/81991' }, { reference: 'Observation/81992' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81987', resource: { resourceType: 'Encounter', id: '81987', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81993', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81988', resource: { resourceType: 'MedicationRequest', id: '81988', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81987', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81989', resource: { resourceType: 'Observation', id: '81989', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81990', resource: { resourceType: 'Observation', id: '81990', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81991', resource: { resourceType: 'Observation', id: '81991', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81992', resource: { resourceType: 'Observation', id: '81992', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81995', resource: { resourceType: 'Procedure', id: '81995', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/82010', resource: { resourceType: 'Condition', id: '82010', meta: { versionId: '3', lastUpdated: '2023-09-10T09:50:11.731+00:00', source: '#24Vx6GrMz5ttlC2B' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/foundation/bundle/bundle.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/foundation/bundle/bundle.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "dist/src/components/foundation/bundle/bundle.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "masterDetail",
          "declaration": {
            "name": "masterDetail",
            "module": "dist/src/components/foundation/bundle/bundle.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/foundation/bundle/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle-everything"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/timing/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing-repeat.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/timing/timing-repeat.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "TimingRepeat",
          "default": "class TimingRepeat extends Backbone { constructor() { super('TimingRepeat'); } renderDisplay(config, data, validations) { return this.renderAny(config, data, validations); } renderStructure(config, data, validations) { return this.renderAny(config, data, validations); } renderAny(config, data, validations) { return [ html ` ${oneOf(this, 'bounds[x]', validations.msgFor('bound[x]'), [ choice(data.boundsDuration, (d) => html ` <fhir-quantity key=\"bound[x]\" label=\"boundDuration\" .data=${d} summary></fhir-quantity> `), choice(data.boundsRange, (d) => html ` <fhir-range key=\"bounds[x]\" label=\"boundRange\" .data=${d} summary></fhir-range> `), choice(data.boundsPeriod, (d) => html ` <fhir-period key=\"bounds[x]\" label=\"boundPeriod\" .data=${d} summary></fhir-period> `), ])} <fhir-primitive key=\"count\" .value=${data.count} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"countMax\" .value=${data.countMax} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"duration\" .value=${data.duration} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"durationMax\" .value=${data.durationMax} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"durationUnit\" .value=${data.durationUnit} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive key=\"frequency\" .value=${data.frequency} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"frequencyMax\" .value=${data.frequencyMax} .type=${PrimitiveType.positiveInt} summary></fhir-primitive> <fhir-primitive key=\"period\" .value=${data.period} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"periodMax\" .value=${data.periodMax} .type=${PrimitiveType.decimal} summary></fhir-primitive> <fhir-primitive key=\"periodUnit\" .value=${data.periodUnit} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive key=\"dayOfWeek\" .value=${data.dayOfWeek} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive key=\"timeOfDay\" .value=${data.timeOfDay} .type=${PrimitiveType.time} summary></fhir-primitive> <fhir-primitive key=\"when\" .value=${data.dayOfWeek} .type=${PrimitiveType.code} summary></fhir-primitive> <fhir-primitive key=\"offset\" .value=${data.offset} .type=${PrimitiveType.unsigned_int} summary></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimingRepeat",
          "declaration": {
            "name": "TimingRepeat",
            "module": "dist/src/components/complex/timing/timing-repeat.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/timing/timing.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/timing/timing.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Timing",
          "default": "class Timing extends BaseElement { constructor() { super('Timing'); } renderDisplay(config, data) { return this.renderAny(config, data); } renderStructure(config, data) { return this.renderAny(config, data); } renderAny(config, data) { return [ html ` ${wrap({ key: 'event', collection: data.event ?? [], generator: (d, l, k) => html ` <fhir-primitive key=${k} label=${l} .value=${d} .type=${PrimitiveType.datetime} summary ></fhir-primitive>`, config })} <fhir-timing-repeat key=\"repeat\" .data=${data.repeat}></fhir-timing-repeat> <fhir-codeable-concept key=\"code\" .data=${data.code} summary></fhir-codeable-concept> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Timing",
          "declaration": {
            "name": "Timing",
            "module": "dist/src/components/complex/timing/timing.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/timing/timing.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Complex Type/Timing', component: 'fhir-timing', ...renderTemplateInShell((args) => html ` <fhir-timing .data=${args.data} summary ?headless=${args.headless}></fhir-timing>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: false } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/timing/timing.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/timing/timing.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/timing/timing.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/metadata/contact-details/contact-detail.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/metadata/contact-details/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-detail.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/metadata/usage-context/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/metadata/usage-context/usage-context.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/signature/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./story.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/signature/signature.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Signature",
          "default": "class Signature extends BaseElement { constructor() { super('Signature'); } renderDisplay(config, data) { return [ html ` <fhir-coding label=\"type\" .data=${data.type} summary></fhir-coding > <fhir-primitive label=\"when\" .value=${data.when} .type=${PrimitiveType.instant} summary></fhir-primitive > <fhir-reference label=\"who\" .data=${data.who} summary></fhir-reference > <fhir-reference label=\"onBehalfOf\" .data=${data.onBehalfOf} summary></fhir-reference > <fhir-primitive label=\"targetFormat\" .value=${data.targetFormat} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"sigFormat\" .value=${data.sigFormat} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"data\" .value=${data.data} .type=${PrimitiveType.base64} variant=\"hide-overflow\"></fhir-primitive > ` ]; } renderStructure(config, data) { return [ html ` <fhir-coding label=\"type\" .data=${data.type} summary></fhir-coding > <fhir-primitive label=\"when\" .value=${data.when} .type=${PrimitiveType.instant} summary></fhir-primitive > <fhir-reference label=\"who\" .data=${data.who} summary></fhir-reference > <fhir-reference label=\"onBehalfOf\" .data=${data.onBehalfOf} summary></fhir-reference > <fhir-primitive label=\"targetFormat\" .value=${data.targetFormat} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"sigFormat\" .value=${data.sigFormat} .type=${PrimitiveType.code}></fhir-primitive > <fhir-primitive label=\"data\" .value=${data.data} .type=${PrimitiveType.base64} variant=\"fixed-width\"></fhir-primitive > ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Signature",
          "declaration": {
            "name": "Signature",
            "module": "dist/src/components/complex/signature/signature.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/signature/signature.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, subcomponents, ...renderTemplateInShell((args) => html ` <fhir-signature .data=${args.data} summary ?headless=${args.headless}></fhir-signature>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/complex/signature/signature.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/complex/signature/signature.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/complex/signature/signature.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/complex/signature/story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ type: { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' }, when: '2022-02-08T10:16:32.000+10:00', who: { reference: 'Practitioner/example' }, targetFormat: 'application/fhir+xml', data: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPEVudmVsb3BlIHhtbG5zPSJ1cm46ZW52ZWxvcGUiPgogIDxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgPFNpZ25lZEluZm8+CiAgICAgIDxDYW5vbmljYWxpemF0aW9uTWV0aG9kIAogICAgICAgICAgIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tCjIwMDEwMzE1I1dpdGhDb21tZW50cyIvPgogICAgICA8U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS8KeG1sZHNpZyNkc2Etc2hhMSIvPgogICAgICA8UmVmZXJlbmNlIFVSST0iIj4KICAgICAgICA8VHJhbnNmb3Jtcz4KICAgICAgICAgIDxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5Lwp4bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICA8L1RyYW5zZm9ybXM+CiAgICAgICAgPERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkvCnhtbGRzaWcjc2hhMSIvPgogICAgICAgIDxEaWdlc3RWYWx1ZT51b29xYldZYTVWQ3FjSkNidXltQktxbTE3dlk9PC9EaWdlc3RWYWx1ZT4KICAgICAgPC9SZWZlcmVuY2U+CiAgICA8L1NpZ25lZEluZm8+CjxTaWduYXR1cmVWYWx1ZT4KS2VkSnVUb2I1Z3R2WXg5cU0zazNnbTdrYkxCd1ZiRVFSbDI2UzJ0bVhqcU5ORDdNUkd0b2V3PT0KICAgIDwvU2lnbmF0dXJlVmFsdWU+CiAgICA8S2V5SW5mbz4KICAgICAgPEtleVZhbHVlPgogICAgICAgIDxEU0FLZXlWYWx1ZT4KICAgICAgICAgIDxQPgovS2FDem80U3lyb203OHozRVE1U2JiQjRzRjdleTgwZXRLSUk4NjRXRjY0QjgxdVJwSDV0OWpRVHhlCkV1MEltYnpSTXF6VkRaa1ZHOXhEN25OMWt1Rnc9PQogICAgICAgICAgPC9QPgogICAgICAgICAgPFE+bGk3ZHpEYWN1bzY3Smc3bXRxRW0yVFJ1T01VPTwvUT4KICAgICAgICAgIDxHPlo0UnhzbnFjOUU3cEdrbkZGSDJ4cWFyeVJQQmFRMDFraHBNZExSUW5HNTQxQXd0eC8KWFBhRjVCcHN5NHBOV01PSENCaU5VME5vZ3BzUVc1UXZubE1wQT09CiAgICAgICAgICA8L0c+CiAgICAgICAgICA8WT5xVjM4SXFyV0pHMFYvCm1aUXZSVmkxT0h3OVpqODRuREM0ak84UDBheGkxZ2I2ZCs0NzV5aE1qU2MvCkJySVZDNThXM3lkYmtLK1JpNE9LYmFSWmxZZVJBPT0KICAgICAgICAgPC9ZPgogICAgICAgIDwvRFNBS2V5VmFsdWU+CiAgICAgIDwvS2V5VmFsdWU+CiAgICA8L0tleUluZm8+CiAgPC9TaWduYXR1cmU+CjwvRW52ZWxvcGU+IA==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/complex/signature/story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-context/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-context/primitive-context.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimitiveContext",
          "default": "class PrimitiveContext extends ShoelaceStyledElement { constructor() { super(...arguments); this.text = ''; } render() { return this.text ? html `<span>${'(' + this.text + ')'}</span>` : nothing; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveContext",
          "declaration": {
            "name": "PrimitiveContext",
            "module": "dist/src/components/primitive/primitive-context/primitive-context.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-context/primitive-context.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-context/primitive-context.styles.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-value/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-value/primitive-value.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimitiveValue",
          "default": "class PrimitiveValue extends ShoelaceStyledElement { constructor() { super(...arguments); this.placeholder = 'n/a'; this.text = ''; this.link = ''; this.computeValue = () => { if (this.variant === 'checkbox') { return html ` <slot name=\"before\"></slot> <sl-checkbox ?checked=${Boolean(this.text)} disabled size=\"small\"></sl-checkbox> <slot name=\"after\"></slot>`; } if (this.link) { return html ` <a href=\"${this.link}\" target='_blank'> <slot name=\"before\"></slot> ${this.text} <slot name=\"after\"></slot> </a> `; } if (isBlank(this.text) && this.placeholder) { return html `<span class=\"placeholder\">${this.placeholder}</span>`; } return html ` <slot name=\"before\"></slot > ${this.text} <slot name=\"after\"></slot>`; }; } render() { const classes = { placeholder: this.variant === 'placeholder', error: this.variant === 'error', 'variant-fixed-width': this.variant === 'fixed-width', 'variant-hide-overflow': this.variant === 'hide-overflow', 'variant-checkbox': this.variant === 'checkbox' }; return html ` <div class=\"${classMap(classes)}\"> ${this.computeValue()} </div>`; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValue",
          "declaration": {
            "name": "PrimitiveValue",
            "module": "dist/src/components/primitive/primitive-value/primitive-value.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-value/primitive-value.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-value/primitive-value.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); } div { color: var(--sl-color-gray-800); padding-left: var(--sl-spacing-3x-small); user-select: text; } .placeholder { color: var(--sl-color-gray-300); font-style: italic; font-family: var(--sl-font-serif), serif; } .error { text-decoration: underline wavy var(--sl-color-danger-600); } .variant-checkbox { } .variant-fixed-width { max-width: 40rem; word-wrap: break-word; } .variant-hide-overflow { width: 30rem; /* set the initial width */ height: 2rem; /* set the initial height */ overflow: hidden; /* hide the overflowed text */ transition: height 1s; /* animate height */ word-wrap: break-word; } .variant-hide-overflow:hover { height: 12rem; /* expand to the full height on hover */ overflow-y: scroll; overflow-x: hidden } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/primitive/primitive-value/primitive-value.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-error/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-error/primitive-error.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimitiveError",
          "default": "class PrimitiveError extends ShoelaceStyledElement { render() { if (this.text) { return html ` <div part=\"message\" id=\"message\">${this.text}</div >`; } return html ``; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveError",
          "declaration": {
            "name": "PrimitiveError",
            "module": "dist/src/components/primitive/primitive-error/primitive-error.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-error/primitive-error.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-error/primitive-error.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { padding-left: var(--sl-spacing-small); padding-top: var(--sl-spacing-x-small); padding-bottom: var(--sl-spacing-x-small); } #message { padding-left: var(--sl-spacing-2x-small); padding-right: var(--sl-spacing-2x-small); background: var(--sl-color-danger-300); color: var(--sl-color-neutral-50); font-style: italic; border-radius: var(--sl-border-radius-small); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/primitive/primitive-error/primitive-error.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-label/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-label/primitive-label.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimitiveLabel",
          "default": "class PrimitiveLabel extends ShoelaceStyledElement { constructor() { super(...arguments); this.delimiter = ':'; } render() { return html ` <label class=\"${this.variant}\" for=${this.for}> ${this.isSlotted() ? html `` : this.text}${this.isSlotted() || !this.text ? '' : this.delimiter} <slot ></slot > </label >`; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveLabel",
          "declaration": {
            "name": "PrimitiveLabel",
            "module": "dist/src/components/primitive/primitive-label/primitive-label.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-label/primitive-label.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-label/primitive-label.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { padding-left: var(--sl-spacing-2x-small); padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); user-select: text; /* Allow text selection within shadow DOM */ } label { color: var(--sl-color-primary-700); user-select: text; } /* TODO: variants should be formalised */ .error { font-style: italic; text-decoration: underline wavy var(--sl-color-danger-600); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/primitive/primitive-label/primitive-label.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-wrapper/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-wrapper/primitive-wrapper.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PrimitiveWrapper",
          "default": "class PrimitiveWrapper extends ShoelaceStyledElement { render() { if (this.hasChildNodes()) { return html ` <li part=\"wrapper\"> <slot ></slot > </li > `; } return html ``; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveWrapper",
          "declaration": {
            "name": "PrimitiveWrapper",
            "module": "dist/src/components/primitive/primitive-wrapper/primitive-wrapper.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-wrapper/primitive-wrapper.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/primitive-wrapper/primitive-wrapper.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` li { display: flex; flex-wrap: wrap; list-style-type: none; padding-left: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/components/primitive/primitive-wrapper/primitive-wrapper.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asDecodedBase64.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asDecodedBase64",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asDecodedBase64",
          "declaration": {
            "name": "asDecodedBase64",
            "module": "dist/src/components/primitive/type-formatters/asDecodedBase64.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asFormattedDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDate",
          "parameters": [
            {
              "name": "{ date, separator = '.', order = 'DMY', monthFormat = 'short' }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDate",
          "declaration": {
            "name": "asFormattedDate",
            "module": "dist/src/components/primitive/type-formatters/asFormattedDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asFormattedDateTime.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDateTime",
          "parameters": [
            {
              "name": "{ datetime, timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone, dateSeparator = '.', timeSeparator = ':', order = 'DMY', monthFormat = 'short', format = '24h', shape = 'HMS' }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "dist/src/components/primitive/type-formatters/asFormattedDateTime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asFormattedInstant.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedInstant",
          "parameters": [
            {
              "name": "{ instant, timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone, dateSeparator = '.', timeSeparator = ':', order = 'DMY', monthFormat = 'short', format = '24h', shape = undefined }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedInstant",
          "declaration": {
            "name": "asFormattedInstant",
            "module": "dist/src/components/primitive/type-formatters/asFormattedInstant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asFormattedTime.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedTime",
          "parameters": [
            {
              "name": "{ time, hourSeparator = ':', minuteSeparator = ':', format = '24h', shape = undefined }"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedTime",
          "declaration": {
            "name": "asFormattedTime",
            "module": "dist/src/components/primitive/type-formatters/asFormattedTime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asLink.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asLink",
          "parameters": [
            {
              "name": "link"
            },
            {
              "name": "label"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asLink",
          "declaration": {
            "name": "asLink",
            "module": "dist/src/components/primitive/type-formatters/asLink.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asReadable.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asReadable",
          "parameters": [
            {
              "name": "text"
            },
            {
              "name": "to",
              "default": "'none'"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asReadable",
          "declaration": {
            "name": "asReadable",
            "module": "dist/src/components/primitive/type-formatters/asReadable.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asUcumUnit.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asUcumUnit",
          "parameters": [
            {
              "name": "code"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asUcumUnit",
          "declaration": {
            "name": "asUcumUnit",
            "module": "dist/src/components/primitive/type-formatters/asUcumUnit.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/asWrapped.js",
      "declarations": [
        {
          "kind": "function",
          "name": "asWrapped",
          "parameters": [
            {
              "name": "inputStr"
            },
            {
              "name": "n"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asWrapped",
          "declaration": {
            "name": "asWrapped",
            "module": "dist/src/components/primitive/type-formatters/asWrapped.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/format.js",
      "declarations": [
        {
          "kind": "function",
          "name": "format",
          "parameters": [
            {
              "name": "text"
            },
            {
              "name": "type"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "format",
          "declaration": {
            "name": "format",
            "module": "dist/src/components/primitive/type-formatters/format.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-formatters/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asDecodedBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedDate"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "./asFormattedDateTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asReadable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asUcumUnit"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asWrapped"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./format"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-batch.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication-batch.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "MedicationBatchBackbone",
          "default": "class MedicationBatchBackbone extends Backbone { constructor() { super('Batch'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"lotNumber\" label=\"lot number\" .value=${data.lotNumber} .type=${PrimitiveType.fhir_string} ></fhir-primitive> <fhir-primitive key=\"expirationDate\" label=\"expiration date\" .value=${data.expirationDate} .type=${PrimitiveType.datetime} ></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"lotNumber\" .value=${data.lotNumber} .type=${PrimitiveType.fhir_string}></fhir-primitive> <fhir-primitive key=\"expirationDate\" .value=${data.expirationDate} .type=${PrimitiveType.datetime} ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationBatchBackbone",
          "declaration": {
            "name": "MedicationBatchBackbone",
            "module": "dist/src/components/resources/medication/medication-batch.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication-ingredient.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "MedicationIngredientBackbone",
          "default": "class MedicationIngredientBackbone extends Backbone { constructor() { super('Ingredient'); } renderDisplay(config, data) { return [ html ` <fhir-codeable-reference key=\"item\" .data=${data.item} headless></fhir-codeable-reference> <fhir-primitive key=\"isActive\" .type=${none} .value=${data.isActive}></fhir-primitive> <fhir-ratio key=\"strengthRatio\" label=\"strength\" .data=${data.strengthRatio}></fhir-ratio> <fhir-codeable-concept key=\"strengthCodeableConcept\" label=\"strength\" .data=${data.strengthCodeableConcept} ></fhir-codeable-concept> <fhir-quantity key=\"strengthQuantity\" label=\"strength\" .data=${data.strengthQuantity} ></fhir-quantity> ` ]; } renderStructure(config, data) { return [ html ` <fhir-codeable-reference key=\"item\" .data=${data.item}></fhir-codeable-reference> <fhir-primitive key=\"isActive\" .type=${none} .value=${data.isActive}></fhir-primitive> <fhir-ratio key=\"strengthRatio\" label=\"strength[x]\" .data=${data.strengthRatio}></fhir-ratio> <fhir-codeable-concept key=\"strengthCodeableConcept\" label=\"strength[x]\" .data=${data.strengthCodeableConcept} ></fhir-codeable-concept> <fhir-quantity key=\"strengthQuantity\" label=\"strength[x]\" .data=${data.strengthQuantity}></fhir-quantity> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationIngredientBackbone",
          "declaration": {
            "name": "MedicationIngredientBackbone",
            "module": "dist/src/components/resources/medication/medication-ingredient.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication-ingredient.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Medication",
          "default": "class Medication extends DomainResource { constructor() { super('Medication'); } renderDisplay(config, data) { return [ html ` <fhir-identifier key=\"identifier\" .data=${data.identifier} summary></fhir-identifier> <fhir-codeable-concept key=\"code\" .data=${data.code} summary></fhir-codeable-concept> <fhir-primitive key=\"status\" .type=${PrimitiveType.code} .value=${data.status} summary></fhir-primitive> <fhir-reference key=\"marketingAuthorizationHolder\" label=\"marketing authorization holder\" .data=${data.marketingAuthorizationHolder} summary></fhir-reference> <fhir-codeable-concept key=\"doseForm\" label=\"dose form\" .data=${data.doseForm}></fhir-codeable-concept> <fhir-quantity key=\"totalVolume\" label=\"total volume\" .data=${data.totalVolume} summary></fhir-quantity> ${wrap({ key: 'ingredient', collection: data.ingredient || [], generator: (d, l, k) => html ` <fhir-medication-ingredient key=\"${k}\" .data=${d} label=${l} ></fhir-medication-ingredient> `, summary: false, config })} <fhir-medication-batch key=\"batch\" .data=${data.batch}></fhir-medication-batch> <fhir-reference key=\"definition\" .data=${data.definition}></fhir-reference> ` ]; } renderStructure(config, data) { return [ html ` <fhir-identifier key=\"identifier\" .data=${data.identifier} summary></fhir-identifier> <fhir-codeable-concept key=\"code\" .data=${data.code} summary></fhir-codeable-concept> <fhir-primitive key=\"status\" .type=${PrimitiveType.code} .value=${data.status} summary></fhir-primitive> <fhir-reference key=\"marketingAuthorizationHolder\" .data=${data.marketingAuthorizationHolder} summary ></fhir-reference> <fhir-codeable-concept key=\"doseForm\" .data=${data.doseForm}></fhir-codeable-concept> <fhir-quantity key=\"totalVolume\" .data=${data.totalVolume} summary></fhir-quantity> ${strap({ key: 'ingredient', pluralBase: 'ingredient', collection: data.ingredient, generator: (data, label, key) => html ` <fhir-medication-ingredient key=\"${key}\" .data=${data} label=\"${label}\" ></fhir-medication-ingredient> `, summary: false, config: this.getDisplayConfig() })} <fhir-medication-batch key=\"batch\" .data=${data.batch}></fhir-medication-batch> <fhir-reference key=\"definition\" .data=${data.definition}></fhir-reference> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Medication",
          "declaration": {
            "name": "Medication",
            "module": "dist/src/components/resources/medication/medication.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Medication/Medication', component: 'fhir-medication', ...renderTemplateInShell((args) => html ` <fhir-medication .data=${args.data}></fhir-medication> `) }"
        },
        {
          "kind": "variable",
          "name": "Med0310Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_310, mode: 'display', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0310Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_310, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0310Narrative",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_310, mode: 'narrative' } }"
        },
        {
          "kind": "variable",
          "name": "Med0319Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_319, mode: 'display', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Med0319Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: synthiaData, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "FrontPageDemo",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: frontPageData, mode: 'display', summaryonly: false, showerror: false, verbose: false, open: true, headless: true, input: false }, render: (args) => html `<h3 style=\"color:var(--sl-color-primary-900); padding: 0;margin: 0\">Medication</h3> <fhir-medication .data=${args.data} .mode=${args.mode} ?summaryonly=${args.summaryonly} ?showerror=${args.showerror} ?verbose=${args.verbose} ?open=${args.open} ?headless=${args.headless} ?input=${args.input} > </fhir-medication> ` }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Display",
          "declaration": {
            "name": "Med0310Display",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Structure",
          "declaration": {
            "name": "Med0310Structure",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Med0310Narrative",
          "declaration": {
            "name": "Med0310Narrative",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Med0319Display",
          "declaration": {
            "name": "Med0319Display",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Med0319Structure",
          "declaration": {
            "name": "Med0319Structure",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "FrontPageDemo",
          "declaration": {
            "name": "FrontPageDemo",
            "module": "dist/src/components/resources/medication/medication.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/medication/medication.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data_310",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0310', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0310\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0310&quot; </p></div><p><b>code</b>: Oral Form Oxycodone (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#430127000)</span></p><p><b>doseForm</b>: Tablet dose form (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385055001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Reference</b></td></tr><tr><td>*</td><td><a name=\"sub03\"> </a><blockquote><p/><p><a name=\"sub03\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Oxycodone (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#55452001)</span></td></tr></table></blockquote></td></tr></table><p><b>strength</b>: 5 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1(unit TAB from http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm)<span style=\"background: LightGoldenRodYellow\"> (Details: http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm code TAB = \\'Tablet\\')</span></p></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'sub03', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '55452001', display: 'Oxycodone (substance)' } ] } } } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '430127000', display: 'Oral Form Oxycodone (product)' } ] }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385055001', display: 'Tablet dose form (qualifier value)' } ] }, ingredient: [ { item: { reference: { reference: '#sub03' } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1, system: 'http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm', code: 'TAB' } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_319",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0319', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Medication\\u003c/b\\u003e\\u003ca name\\u003d\"med0319\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Medication \\u0026quot;med0319\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003edoseForm\\u003c/b\\u003e: Ointment \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#385101003)\\u003c/span\\u003e\\u003c/p\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSalicylic Acid (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#387253001)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 5 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eHydrocortisone (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#396458002)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 1 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eWhite Petrolatum (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#126066007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 94 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003c/div\\u003e' }, doseForm: { coding: [{ system: 'http://snomed.info/sct', code: '385101003', display: 'Ointment' }], text: 'Ointment' }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '396458002', display: 'Hydrocortisone (substance)' } ] } }, strengthRatio: { numerator: { value: 1, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '126066007', display: 'White Petrolatum (substance)' } ] } }, strengthRatio: { numerator: { value: 94, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "frontPageData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0307', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0307\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0307&quot; </p></div><p><b>code</b>: Novolog 100u/ml <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ndc.html\">National drug codes</a>#0169-7501-11)</span></p><p><b>marketingAuthorizationHolder</b>: <a name=\"mmanu\"> </a></p><blockquote><p/><p><a name=\"mmanu\"> </a></p><p><b>name</b>: Medication Manufacturer</p></blockquote><p><b>doseForm</b>: Injection solution (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385219001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Insulin Aspart (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#325072002)</span></td></tr></table><p><b>strength</b>: 100 U<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code U = \\'U\\')</span>/1 mL<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mL = \\'mL\\')</span></p></blockquote><h3>Batches</h3><table class=\"grid\"><tr><td>-</td><td><b>LotNumber</b></td><td><b>ExpirationDate</b></td></tr><tr><td>*</td><td>12345</td><td>2019-10-31</td></tr></table></div>' }, contained: [ { resourceType: 'Organization', id: 'mmanu', name: 'Medication Manufacturer' } ], code: { coding: [ { system: 'http://hl7.org/fhir/sid/ndc', code: '0169-7501-11', display: 'Novolog 100u/ml' } ] }, marketingAuthorizationHolder: { reference: '#mmanu' }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385219001', display: 'Injection solution (qualifier value)' } ] }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '325072002', display: 'Insulin Aspart (substance)' } ] } }, strengthRatio: { numerator: { value: 100, system: 'http://unitsofmeasure.org', code: 'U' }, denominator: { value: 1, system: 'http://unitsofmeasure.org', code: 'mL' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], batch: { lotNumber: '12345', expirationDate: '2019.10.31' } }"
        },
        {
          "kind": "variable",
          "name": "synthiaData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: '757', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication'] }, code: { coding: [ { system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: '1535362', display: 'sodium fluoride 0.0272 MG/MG Oral Gel' } ], text: 'sodium fluoride 0.0272 MG/MG Oral Gel' }, status: 'active' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data_310",
          "declaration": {
            "name": "data_310",
            "module": "dist/src/components/resources/medication/medication.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data_319",
          "declaration": {
            "name": "data_319",
            "module": "dist/src/components/resources/medication/medication.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "frontPageData",
          "declaration": {
            "name": "frontPageData",
            "module": "dist/src/components/resources/medication/medication.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "synthiaData",
          "declaration": {
            "name": "synthiaData",
            "module": "dist/src/components/resources/medication/medication.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/account.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/account.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Account",
          "default": "class Account extends DomainResource { constructor() { super('Account'); } renderDisplay(config, data) { return [ html ` ${wrap({ collection: data.identifier, generator: 'fhir-identifier', config })} <fhir-primitive key=\"status\" .value=${data.status} summary></fhir-primitive> <fhir-codeable-concept key=\"billingStatus\" .data=${data.billingStatus} summary></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${data.type} summary></fhir-codeable-concept> <fhir-primitive key=\"name\" .value=${data.name} .type=${PrimitiveType.fhir_string} summary></fhir-primitive> ${wrap({ key: 'subject', collection: data.subject, generator: 'fhir-reference', config })} <fhir-period key=\"servicePeriod\" .data=${data.servicePeriod}></fhir-period> ${wrap({ key: 'coverage', collection: data.coverage, generator: (d, l, k) => html ` <fhir-account-coverage key=${k} label=${l} .data=${d} ></fhir-account-coverage> `, config })} <fhir-reference key=\"owner\" .data=${data.owner}></fhir-reference> <fhir-primitive key=\"description\" .value=${data.description} .type=${PrimitiveType.markdown} summary ></fhir-primitive> ${wrap({ key: 'guarantor', collection: data.guarantor, generator: (d, l, k) => html ` <fhir-account-guarantor key=${k} label=${l} .data=${d}></fhir-account-guarantor> `, config })} ${wrap({ key: 'diagnosis', collection: data.diagnosis, generator: (d, l, k) => html ` <fhir-account-diagnosis key=${k} label=${l} .data=${d}></fhir-account-diagnosis> `, config })} <fhir-account-procedure key=\"procedure\" .data=${data.procedure}></fhir-account-procedure> ${wrap({ key: 'relatedAccount', collection: data.relatedAccount, generator: (d, l, k) => html ` <fhir-account-related-account key=${k} label=${l} .data=${d}></fhir-account-related-account> `, config })} <fhir-codeable-concept key=\"currency\" .data=${data.currency}></fhir-codeable-concept> ${wrap({ key: 'balance', collection: data.balance, generator: (d, l, k) => html ` <fhir-account-balance key=${k} label=${l} .data=${d}></fhir-account-balance> `, config })} ` ]; } renderStructure(config, data) { return [ html ` ${strap({ collection: data.identifier, generator: 'fhir-identifier', config })} <fhir-primitive key=\"status\" .value=${data.status} summary></fhir-primitive> <fhir-codeable-concept key=\"billingStatus\" .data=${data.billingStatus} summary></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${data.type} summary></fhir-codeable-concept> <fhir-primitive key=\"name\" .value=${data.name} .type=${PrimitiveType.fhir_string} summary></fhir-primitive> ${strap({ key: 'subject', collection: data.subject, generator: 'fhir-reference', config })} <fhir-period key=\"servicePeriod\" .data=${data.servicePeriod}></fhir-period> ${strap({ key: 'coverage', collection: data.coverage, generator: (d, l, k) => html ` <fhir-account-coverage key=${k} label=${l} .data=${d} ></fhir-account-coverage> `, config })} <fhir-reference key=\"owner\" .data=${data.owner}></fhir-reference> <fhir-primitive key=\"description\" .value=${data.description} .type=${PrimitiveType.markdown} summary ></fhir-primitive> ${strap({ key: 'guarantor', collection: data.guarantor, generator: (d, l, k) => html ` <fhir-account-guarantor key=${k} label=${l} .data=${d}></fhir-account-guarantor> `, config })} ${strap({ key: 'diagnosis', collection: data.diagnosis, generator: (d, l, k) => html ` <fhir-account-diagnosis key=${k} label=${l} .data=${d}></fhir-account-diagnosis> `, config })} <fhir-account-procedure key=\"procedure\" .data=${data.procedure}></fhir-account-procedure> ${strap({ key: 'relatedAccount', collection: data.relatedAccount, generator: (d, l, k) => html ` <fhir-account-related-account key=${k} label=${l} .data=${d} ></fhir-account-related-account> `, config })} <fhir-codeable-concept key=\"currency\" .data=${data.currency}></fhir-codeable-concept> ${strap({ key: 'balance', collection: data.balance, generator: (d, l, k) => html ` <fhir-account-balance key=${k} label=${l} .data=${d}></fhir-account-balance> `, config })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Account",
          "declaration": {
            "name": "Account",
            "module": "dist/src/components/resources/account/account.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/account.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Account/Account', component: 'fhir-account', ...renderTemplateInShell((args) => html ` <fhir-account .data=${args.data}></fhir-account> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/account/account.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/account/account.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "dist/src/components/resources/account/account.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/account/account.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/account.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'ewg', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Inpatient Admission for Peter James Chalmers Account</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'Inpatient: Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/9876B1' }, priority: 1 }, { coverage: { reference: 'Coverage/7546D' }, priority: 2 } ], owner: { reference: 'Organization/f001', display: 'Burgers University Medical Center' }, description: 'Hospital charges', guarantor: [ { party: { reference: 'RelatedPerson/benedicte', display: 'Bénédicte du Marché' }, onHold: false, period: { start: '2016-01-01' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">HACC Funded Billing for Peter James Chalmers</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'HACC Funded Billing for Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/7546D' }, priority: 1 } ], owner: { reference: 'Organization/hl7' }, description: 'Hospital charges', relatedAccount: [ { relationship: { coding: [ { system: 'http://hl7.org/fhir/account-relationship', code: 'guarantor' } ] }, account: { reference: 'Account/ewg' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/account/account.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/resources/account/account.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/balance.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/coverage.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/diagnosis.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/guarantor.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/procedure.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/related-account.backbone"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation-definition/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation-definition/observation-definition.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation-definition/observation-definition.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ObservationDefinition",
          "default": "class ObservationDefinition extends DomainResource { constructor() { super('ObservationDefinition'); } renderDisplay() { return EmptyResult; } renderStructure() { return EmptyResult; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationDefinition",
          "declaration": {
            "name": "ObservationDefinition",
            "module": "dist/src/components/resources/observation-definition/observation-definition.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation-definition/observation-definition.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Observation/ObservationDefinition', component: 'fhir-observation-definition', ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/observation-definition/observation-definition.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/observation-definition/observation-definition.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/observation-definition/observation-definition.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation-definition/observation-definition.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'ObservationDefinition', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: ObservationDefinition</b><a name=\"example\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource ObservationDefinition &quot;example&quot; </p></div><p><b>status</b>: active</p><p><b>category</b>: Laboratory <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-observation-category.html\">Observation Category Codes</a>#laboratory)</span></p><p><b>code</b>: Albumin/Protein.total in Serum or Plasma by Electrophoresis <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#13980-8)</span></p><p><b>permittedDataType</b>: Quantity</p><p><b>multipleResultsAllowed</b>: false</p><p><b>method</b>: Total measurement <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#115341008)</span></p><p><b>preferredReportName</b>: Serum albumin/​Protein total</p><p><b>permittedUnit</b>: % (Details: UCUM code % = \\'%\\', stated as \\'%\\')</p><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: reference</p><p><b>range</b>: 50-?</p></blockquote><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: critical</p><p><b>range</b>: ?-40</p></blockquote></div>' }, status: 'active', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'laboratory' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '13980-8', display: 'Albumin/Protein.total in Serum or Plasma by Electrophoresis' } ] }, permittedDataType: ['Quantity'], multipleResultsAllowed: false, method: { coding: [ { system: 'http://snomed.info/sct', code: '115341008', display: 'Total measurement' } ] }, preferredReportName: 'Serum albumin/​Protein total', permittedUnit: [ { system: 'http://unitsofmeasure.org', code: '%', display: '%' } ], qualifiedValue: [ { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'reference', range: { low: { value: 50 } } }, { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'critical', range: { high: { value: 40 } } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/observation-definition/observation-definition.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-communication.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-contact.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-link.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient-communication.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PatientCommunicationBackbone",
          "default": "class PatientCommunicationBackbone extends Backbone { constructor() { super('PatientCommunication'); } renderDisplay(_, data) { return [ html ` <fhir-codeable-concept key=\"language\" label=\"language\" .data=${data.language} required ></fhir-codeable-concept> <fhir-primitive key=\"preferred\" label=\"preferred\" .value=${data.preferred} .type=${boolean}></fhir-primitive> ` ]; } renderStructure(_, data) { return [ html ` <fhir-codeable-concept key=\"language\" label=\"language\" .data=${data.language} required ></fhir-codeable-concept> <fhir-primitive key=\"preferred\" label=\"preferred\" .value=${data.preferred} .type=${boolean}></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientCommunicationBackbone",
          "declaration": {
            "name": "PatientCommunicationBackbone",
            "module": "dist/src/components/resources/patient/patient-communication.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient-contact.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PatientContactBackbone",
          "default": "class PatientContactBackbone extends Backbone { constructor() { super('PatientContact'); } renderDisplay(config, data) { return [ html ` ${wrap({ key: 'relationships', pluralBase: 'relationship', collection: data.relationship, generator: (d, l, k) => html ` <fhir-codeable-concept key=${k} label=${l} .data=${d}></fhir-codeable-concept>`, summary: this.summary, config })} <fhir-human-name key=\"name\" label=\"name\" .data=${data.name}></fhir-human-name> ${wrap({ key: 'telecoms', pluralBase: 'telecom', collection: data.telecom, generator: (d, l, k) => html ` <fhir-contact-point key=${k} label=${l} .data=${d}></fhir-contact-point>`, summary: this.summary, config })} <fhir-address key=\"address\" label=\"address\" .data=${data.address}></fhir-address> <fhir-primitive key=\"gender\" label=\"gender\" .value=${data.gender} .type=${code}></fhir-primitive> <fhir-reference key=\"organisation\" label=\"organisation\" .data=${data.organization}></fhir-reference> <fhir-period key=\"period\" label=\"period\" .data=${data.period}></fhir-period> ` ]; } renderStructure(config, data) { return [ html ` ${strap({ key: 'relationship', pluralBase: 'relationship', collection: data.relationship, generator: (d, l, k) => html ` <fhir-codeable-concept key=${k} label=${l} .data=${d}></fhir-codeable-concept>`, summary: this.summary, config: this.getDisplayConfig() })} <fhir-human-name key=\"name\" label=\"name\" .data=${data.name}></fhir-human-name> ${strap({ key: 'telecom', pluralBase: 'telecom', collection: data.telecom, generator: (d, l, k) => html ` <fhir-contact-point key=${k} label=${l} .data=${d}></fhir-contact-point>`, summary: this.summary, config: this.getDisplayConfig() })} <fhir-address key=\"address\" label=\"address\" .data=${data.address}></fhir-address> <fhir-primitive key=\"gender\" label=\"gender\" .value=${data.gender} .type=${code}></fhir-primitive> <fhir-reference key=\"organisation\" label=\"organisation\" .data=${data.organization}></fhir-reference> <fhir-period key=\"period\" label=\"period\" .data=${data.period}></fhir-period> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientContactBackbone",
          "declaration": {
            "name": "PatientContactBackbone",
            "module": "dist/src/components/resources/patient/patient-contact.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient-link.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "PatientLink",
          "default": "class PatientLink extends Backbone { constructor() { super('PatientLink'); } renderDisplay(_, data) { return this.generate(data); } renderStructure(_, data) { return this.generate(data); } generate(data) { return [ html ` <fhir-reference key=\"other\" label=\"other\" .data=${data.other} required summary></fhir-reference> <fhir-primitive key=\"type\" label=\"type\" .value=${data.type} .type=${code} required summary></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientLink",
          "declaration": {
            "name": "PatientLink",
            "module": "dist/src/components/resources/patient/patient-link.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Patient",
          "default": "class Patient extends DomainResource { constructor() { super('Patient'); } renderDisplay(config, data, validations) { return this.renderAny(config, data, validations); } renderStructure(config, data, validations) { return this.renderAny(config, data, validations); } renderAny(config, data, validations) { return [ html ` ${identifiers(data.identifier, config)} <fhir-primitive label=\"active\" .value=${data.active} .type=${boolean} summary></fhir-primitive> ${(wrap({ key: 'name', collection: data.name, generator: (data, label, key) => html ` <fhir-human-name key=${key} label=${label} .data=${data} summary></fhir-human-name>`, config }))} ${(wrap({ key: 'telecom', collection: data.telecom, generator: (data, label, key) => html ` <fhir-contact-point key=${key} label=\"${label}\" .data=${data} summary></fhir-contact-point> `, config }))} <fhir-primitive label=\"gender\" .value=${data.gender} .type=${code} summary></fhir-primitive> <fhir-primitive label=\"birthDate\" .value=${data.birthDate} .type=${date} summary ></fhir-primitive> ${oneOf(this, 'deceased[x]', validations.msgFor('deceased[x]'), [ { data: data.deceasedBoolean, html: (d, n, e) => { return html ` <fhir-primitive key=\"deceasedBoolean\" label=${n} .value=${d} .type=${boolean} .errormessage=${e} summary ></fhir-primitive>`; } }, { data: data.deceasedDateTime, html: (d, n, e) => html ` <fhir-primitive key=\"deceasedDateTime\" label=${n} .value=${d} .type=${datetime} .errormessage=${e} summary ></fhir-primitive>` } ])} ${wrap({ key: 'address', collection: data.address, generator: (data, label, key) => html ` <fhir-address key=${key} label=${label} .data=${data} summary></fhir-address> `, config })} <fhir-codeable-concept key=\"maritalStatus\" .data=${data.maritalStatus}></fhir-codeable-concept> ${oneOf(this, 'multipleBirth[x]', validations.msgFor('multipleBirth[x]'), [ { data: data.multipleBirthBoolean, html: (d, n, e) => html ` <fhir-primitive key='multipleBirthBoolean' label=${n} .value=${d} .type=${boolean} .errormessage=${e} ></fhir-primitive> ` }, { data: data.multipleBirthInteger, html: (d, n, e) => html ` <fhir-primitive key='multipleBirthInteger' label=${n} .value=${d} .type=${integer} .errormessage=${e} ></fhir-primitive> ` } ])} <fhir-attachment key=\"photo\" label=\"photo\" .data=${data.photo}></fhir-attachment> ${wrap({ key: 'contact', collection: data.contact, generator: (data, label, key) => html ` <fhir-patient-contact key=${key} label=${label} .data=${data} ></fhir-patient-contact> `, config })} ${wrap({ key: 'communication', collection: data.communication, generator: (data, label, key) => html ` <fhir-patient-communication key=${key} label=${label} .data=${data} ></fhir-patient-communication> `, config })} ${wrap({ key: 'generalPractitioner', pluralBase: 'generalPractitioner', collection: data.generalPractitioner, generator: 'fhir-reference', config })} <fhir-reference key=\"managingOrganisation\" label=\"managingOrganisation\" .data=${data.managingOrganization} summary ></fhir-reference> ${wrap({ key: 'link', collection: data.link, generator: (data, label, key) => html ` <fhir-patient-link key=${key} label=${label} .data=${data} ></fhir-patient-link> `, config })} ` ]; } validate(data, validations, fetched) { super.validate(data, validations, fetched); choiceValidate(data, validations, 'deceased[x]', ['deceasedBoolean', 'deceasedDateTime']); choiceValidate(data, validations, 'multipleBirth[x]', ['multipleBirthBoolean', 'multipleBirthInteger']); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Patient",
          "declaration": {
            "name": "Patient",
            "module": "dist/src/components/resources/patient/patient.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: synthiaPatient, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/patient/patient.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/patient/patient.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/patient/patient.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/patient/patient.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: 'f201', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp style\\u003d\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"\\u003e\\u003cb\\u003eRoel(OFFICIAL)\\u003c/b\\u003e male, DoB: 1960-03-13 ( BSN: 123456789 (use: OFFICIAL))\\u003c/p\\u003e\\u003chr/\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Record is active\"\\u003eActive:\\u003c/td\\u003e\\u003ctd\\u003etrue\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known status of Patient\"\\u003eDeceased:\\u003c/td\\u003e\\u003ctd\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known Marital status of Patient\"\\u003eMarital Status:\\u003c/td\\u003e\\u003ctd\\u003e\\u003cspan title\\u003d\"Codes: {http://snomed.info/sct 36629006}, {http://terminology.hl7.org/CodeSystem/v3-MaritalStatus M}\"\\u003eLegally married\\u003c/span\\u003e\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known multipleBirth status of Patient\"\\u003eMultiple Birth:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Other Ids (see the one above)\"\\u003eOther Id:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003eBSN: 123456789 (use: OFFICIAL)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Ways to contact the Patient\"\\u003eContact Details:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31612345678\"\\u003e+31612345678\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003eBos en Lommerplein 280 Amsterdam 1055RW NLD (HOME)\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Languages spoken\"\\u003eLanguage:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cspan title\\u003d\"Codes: {urn:ietf:bcp:47 nl-NL}\"\\u003eDutch\\u003c/span\\u003e (preferred)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Nominated Contact: Wife\"\\u003eWife:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eAriadne Bor-Jansma\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Patient Links\"\\u003eLinks:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eManaging Organization: \\u003ca href\\u003d\"organization-example-f201-aumc.html\"\\u003eOrganization/f201: AUMC\\u003c/a\\u003e \\u0026quot;Artis University Medical Center (AUMC)\\u0026quot;\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003c/div\\u003e' }, identifier: [ { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' }, { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' } ], active: true, name: [ { use: 'official', text: 'Roel', family: 'Bor', given: ['Roelof Olaf'], prefix: ['Drs.'], suffix: ['PDEng.'] } ], telecom: [ { system: 'phone', value: '+31612345678', use: 'mobile' }, { system: 'phone', value: '+31201234567', use: 'home' } ], gender: 'male', birthDate: '1960-03-13', deceasedBoolean: false, address: [ { use: 'home', line: ['Bos en Lommerplein 280'], city: 'Amsterdam', postalCode: '1055RW', country: 'NLD' } ], maritalStatus: { coding: [ { system: 'http://snomed.info/sct', code: '36629006', display: 'Legally married' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M' } ] }, multipleBirthBoolean: false, photo: [{ contentType: 'image/jpeg', url: 'Binary/f006' }], contact: [ { relationship: [ { coding: [ { system: 'http://snomed.info/sct', code: '127850001', display: 'Wife' }, { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-RoleCode', code: 'WIFE' } ] } ], name: { use: 'usual', text: 'Ariadne Bor-Jansma' }, telecom: [{ system: 'phone', value: '+31201234567', use: 'home' }] } ], communication: [ { language: { coding: [{ system: 'urn:ietf:bcp:47', code: 'nl-NL', display: 'Dutch' }] }, preferred: true } ], managingOrganization: { reference: 'Organization/f201', display: 'AUMC' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "hapiFhirPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '1414', meta: { versionId: '2', lastUpdated: '2020-09-28T04:12:54.791+00:00', source: '#rhkcZluthvbxDoLf' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">name:徐<br/>ID:10501006884<br/>Gendar:female<br/>HospID:HHX<br/>Birthdate:1970-01-22</div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '10501006884', period: { start: '2020-09-26' }, assigner: { display: 'HHX' } } ], active: true, name: [ { text: '徐', family: '徐' } ], gender: 'female', birthDate: '1970-01-22', managingOrganization: { display: 'HHX' } }"
        },
        {
          "kind": "variable",
          "name": "aidboxPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', meta: { profile: [ 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Patient' ] }, gender: 'male', address: [ { city: 'Brockton', line: [ '730 Schoen Center Apt 8' ], state: 'Massachusetts', country: 'US', extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: -71.024638 }, { url: 'longitude', valueDecimal: 42.082543 } ] } ], postalCode: '02301' } ], telecom: [ { use: 'home', value: '555-696-1511', system: 'phone' } ], id: 'd3af67c9-0c02-45f2-bc91-fea45af3ee83', name: [ { prefix: [ 'Mr.' ], use: 'official', given: [ 'Abram53' ], family: 'Hickle134' } ], identifier: [ { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'https://github.com/synthetichealth/synthea' }, { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'http://hospital.smarthealthit.org', type: { text: 'Medical Record Number', coding: [ { code: 'MR', system: 'http://hl7.org/fhir/v2/0203', display: 'Medical Record Number' } ] } }, { type: { text: 'Social Security Number', coding: [ { code: 'SB', system: 'http://hl7.org/fhir/identifier-type', display: 'Social Security Number' } ] }, value: '999-81-4006', system: 'http://hl7.org/fhir/sid/us-ssn' }, { value: 'S99988684', system: 'urn:oid:2.16.840.1.113883.4.3.25', type: { text: 'Driver\\'s License', coding: [ { display: 'Driver\\'s License', code: 'DL', system: 'http://hl7.org/fhir/v2/0203' } ] } }, { type: { text: 'Passport Number', coding: [ { code: 'PPN', system: 'http://hl7.org/fhir/v2/0203', display: 'Passport Number' } ] }, value: 'X17148555X', system: 'http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber' } ], maritalStatus: { text: 'S', coding: [ { code: 'S', system: 'http://hl7.org/fhir/v3/MaritalStatus', display: 'S' } ] }, text: { div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: v2.0.0-33-g3ab9839e\\n . Person seed: -7948439064728439692 Population seed: 1534165146158</div>', status: 'generated' }, birthDate: '1955-06-27', multipleBirth: { boolean: false }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { code: '2106-3', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'White' } }, { url: 'text', valueString: 'White' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { code: '2186-5', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Sharolyn456 Harris789' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/birthPlace', valueAddress: { city: 'Boston', state: 'Massachusetts', country: 'US' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-actor-FictionalPerson-extension', valueBoolean: true }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-FathersName-extension', valueHumanName: { text: 'Samual455 Hickle134' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-demographics-SocialSecurityNumber-extension', valueString: '999-81-4006' }, { valueReference: { reference: 'Basic/bad528f4-fa8a-4f5b-a478-1b630be88847' }, url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Person-extension' }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 0 }, { valueDecimal: 62, url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years' } ], communication: [ { language: { text: 'English', coding: [ { code: 'en-US', system: 'urn:ietf:bcp:47', display: 'English' } ] } } ] }"
        },
        {
          "kind": "variable",
          "name": "synthiaPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '230', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient'] }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: 2cc0a62\\n . Person seed: 8408368319748256253 Population seed: 1731533659674</div>' }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '1002-5', display: 'American Indian or Alaska Native' } }, { url: 'text', valueString: 'American Indian or Alaska Native' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '2186-5', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Jonell764 Gerlach374' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthPlace', valueAddress: { city: 'Plymouth', state: 'Massachusetts', country: 'US' } }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 21.90583818492967 }, { url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years', valueDecimal: 60.09416181507033 } ], identifier: [ { system: 'https://github.com/synthetichealth/synthea', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ], text: 'Medical Record Number' }, system: 'http://hospital.smarthealthit.org', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'SS', display: 'Social Security Number' } ], text: 'Social Security Number' }, system: 'http://hl7.org/fhir/sid/us-ssn', value: '999-15-8247' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'DL', display: 'Driver\\'s license number' } ], text: 'Driver\\'s license number' }, system: 'urn:oid:2.16.840.1.113883.4.3.25', value: 'S99953724' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'PPN', display: 'Passport Number' } ], text: 'Passport Number' }, system: 'http://hl7.org/fhir/sid/passport-USA', value: 'X70727171X' } ], name: [ { use: 'official', family: 'Okuneva707', given: ['Aaron697', 'Mark765'], prefix: ['Mr.'] } ], telecom: [ { system: 'phone', value: '555-369-3393', use: 'home' } ], gender: 'male', birthDate: '1941-06-11', address: [ { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: 41.79717134698846 }, { url: 'longitude', valueDecimal: -71.01421343474313 } ] } ], line: ['734 Emmerich Extension Suite 9'], city: 'Freetown', state: 'MA', postalCode: '00000', country: 'US' } ], maritalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M', display: 'Married' } ], text: 'Married' }, multipleBirthBoolean: false, communication: [ { language: { coding: [ { system: 'urn:ietf:bcp:47', code: 'en-US', display: 'English (United States)' } ], text: 'English (United States)' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/patient/patient.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "hapiFhirPatient",
          "declaration": {
            "name": "hapiFhirPatient",
            "module": "dist/src/components/resources/patient/patient.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "aidboxPatient",
          "declaration": {
            "name": "aidboxPatient",
            "module": "dist/src/components/resources/patient/patient.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "synthiaPatient",
          "declaration": {
            "name": "synthiaPatient",
            "module": "dist/src/components/resources/patient/patient.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/slot/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/slot/slot.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/slot/slot.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Slot",
          "default": "class Slot extends DomainResource { constructor() { super('Slot'); } renderDisplay(config, data) { return [ html ` ${wrap({ key: 'identifier', collection: data.identifier, generator: 'fhir-identifier', config })} ${wrap({ key: 'serviceCategory', collection: data.serviceCategory, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'serviceType', collection: data.serviceType, generator: 'fhir-codeable-reference', config })} ${wrap({ key: 'speciality', collection: data.specialty, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'appointmentType', collection: data.appointmentType, generator: 'fhir-codeable-concept', config })} <fhir-reference key=\"schedule\" .data=${data.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${data.status} type=${PrimitiveType.code}\" summary required .choices=${statuses.choices} ></fhir-primitive> <fhir-primitive key=\"start\" .value=${data.start} type=${PrimitiveType.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${data.end} type=${PrimitiveType.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${data.overbooked} type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${data.comment} type=${PrimitiveType.fhir_string}></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` ${strap({ key: 'identifier', collection: data.identifier, generator: 'fhir-identifier', config })} ${strap({ key: 'serviceCategory', collection: data.serviceCategory, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'serviceType', collection: data.serviceType, generator: 'fhir-codeable-reference', config })} ${strap({ key: 'speciality', collection: data.specialty, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'appointmentType', collection: data.appointmentType, generator: 'fhir-codeable-concept', config })} <fhir-reference key=\"schedule\" .data=${data.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${data.status} type=${PrimitiveType.code}\" summary required ></fhir-primitive> <fhir-primitive key=\"start\" .value=${data.start} type=${PrimitiveType.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${data.end} type=${PrimitiveType.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${data.overbooked} type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${data.comment} type=${PrimitiveType.fhir_string}></fhir-primitive> ` ]; } renderEditableDisplay(config, data) { return [ html ` ${strap({ key: 'identifier', collection: data.identifier, generator: 'fhir-identifier', config })} ${strap({ key: 'serviceCategory', collection: data.serviceCategory, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'serviceType', collection: data.serviceType, generator: 'fhir-codeable-reference', config })} ${strap({ key: 'speciality', collection: data.specialty, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'appointmentType', collection: data.appointmentType, generator: 'fhir-codeable-concept', config })} <fhir-reference key=\"schedule\" .data=${data.schedule} summary required></fhir-reference> <fhir-primitive key=\"status\" .value=${data.status} type=${PrimitiveType.code}\" summary required ></fhir-primitive> <fhir-primitive key=\"start\" .value=${data.start} type=${PrimitiveType.instant} summary required ></fhir-primitive> <fhir-primitive key=\"end\" .value=${data.end} type=${PrimitiveType.instant} summary required></fhir-primitive> <fhir-primitive key=\"overbooked\" .value=${data.overbooked} type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"comment\" .value=${data.comment} type=${PrimitiveType.fhir_string}></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slot",
          "declaration": {
            "name": "Slot",
            "module": "dist/src/components/resources/slot/slot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/slot/slot.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Slot/Slot', component: 'fhir-slot', ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/slot/slot.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/slot/slot.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/slot/slot.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/slot/slot.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Slot', id: '1', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n\\t\\t\\t25 Dec 2013 9:00am - 9:15am: <b>Busy</b> Physiotherapy\\n\\t\\t</div>' }, identifier: [ { system: 'http://example.org/identifiers/slots', value: '123132' } ], serviceCategory: [ { coding: [ { code: '17', display: 'General Practice' } ] } ], schedule: { reference: 'Schedule/example' }, status: 'busy', start: '2013-12-25T09:00:00Z', end: '2013-12-25T09:15:00Z', overbooked: true, comment: 'Assessments should be performed before requesting appointments in this slot.' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/slot/slot.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment-monthly-template.bacbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AppointmentMonthlyTemplate",
          "default": "class AppointmentMonthlyTemplate extends Backbone { constructor() { super('MonthlyTemplate'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"dayOfMonth\" .value=${data.dayOfWeek} .type=${PrimitiveType.positiveInt}></fhir-primitive> <fhir-coding key=\"nthWeekOfMonth\" .data=${data.nthWeekOfMonth}></fhir-coding> <fhir-coding key=\"dayOfWeek\" .data=${data.dayOfWeek}></fhir-coding> <fhir-primitive key=\"monthInterval\" .value=${data.monthInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"dayOfMonth\" .value=${data.dayOfWeek} .type=${PrimitiveType.positiveInt}></fhir-primitive> <fhir-coding key=\"nthWeekOfMonth\" .data=${data.nthWeekOfMonth}></fhir-coding> <fhir-coding key=\"dayOfWeek\" .data=${data.dayOfWeek}></fhir-coding> <fhir-primitive key=\"monthInterval\" .value=${data.monthInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentMonthlyTemplate",
          "declaration": {
            "name": "AppointmentMonthlyTemplate",
            "module": "dist/src/components/resources/appointment/appointment-monthly-template.bacbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment-participant.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AppointmentParticipantBackbone",
          "default": "class AppointmentParticipantBackbone extends Backbone { constructor() { super('Participant'); } renderDisplay(config, data) { return [ html ` ${wrap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} <fhir-period key=\"period\" .data=${data.period}></fhir-period> <fhir-reference key=\"actor\" .data=${data.actor} summary></fhir-reference> <fhir-primitive key=\"required\" .value=${data.required} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"status\" .value=${data.status} .type=${PrimitiveType.code}></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` ${strap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} <fhir-period key=\"period\" .data=${data.period}></fhir-period> <fhir-reference key=\"actor\" .data=${data.actor} summary></fhir-reference> <fhir-primitive key=\"required\" .value=${data.required} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"status\" .value=${data.status} .type=${PrimitiveType.code}></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentParticipantBackbone",
          "declaration": {
            "name": "AppointmentParticipantBackbone",
            "module": "dist/src/components/resources/appointment/appointment-participant.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment-recurrence-template.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "default": "class AppointmentRecurrenceTemplateBackbone extends Backbone { constructor() { super('RecurrenceTemplate'); } renderDisplay(config, data) { return [ html ` <fhir-codeable-concept key=\"timezone\" .data=${data.timezone}></fhir-codeable-concept> <fhir-codeable-concept key=\"recurrenceType\" .data=${data.recurrenceType}></fhir-codeable-concept> <fhir-primitive key=\"lastOccurrenceDate\" .value=${data.lastOccurrenceDate} .type=${PrimitiveType.date} ></fhir-primitive> <fhir-weekly-template key=\"weeklyTemplate\" .data=${data.weeklyTemplate}></fhir-weekly-template> <fhir-monthly-template key=\"monthlyTemplate\" .data=${data.monthlyTemplate}></fhir-monthly-template> <fhir-yearly-template key=\"yearlyTemplate\" .data=${data.yearlyTemplate}></fhir-yearly-template> <fhir-primitive key=\"excludingDate\" .value=${data.excludingDate} .type=${PrimitiveType.date} ></fhir-primitive> <fhir-primitive key=\"excludingRecurrenceId\" .value=${data.excludingRecurrenceId} .type=${PrimitiveType.date} ></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` <fhir-codeable-concept key=\"timezone\" .data=${data.timezone}></fhir-codeable-concept> <fhir-codeable-concept key=\"recurrenceType\" .data=${data.recurrenceType}></fhir-codeable-concept> <fhir-primitive key=\"lastOccurrenceDate\" .value=${data.lastOccurrenceDate} .type=${PrimitiveType.date} ></fhir-primitive> <fhir-weekly-template key=\"weeklyTemplate\" .data=${data.weeklyTemplate}></fhir-weekly-template> <fhir-monthly-template key=\"monthlyTemplate\" .data=${data.monthlyTemplate}></fhir-monthly-template> <fhir-yearly-template key=\"yearlyTemplate\" .data=${data.yearlyTemplate}></fhir-yearly-template> ${strap({ key: 'excludingData', collection: data.excludingDate, generator: (data, label, key) => html ` <fhir-primitive key=${key} .value=${data} .type=${PrimitiveType.date} ></fhir-primitive> `, summary: false, config })} <fhir-primitive key=\"excludingRecurrenceId\" .value=${data.excludingRecurrenceId} .type=${PrimitiveType.date} ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "declaration": {
            "name": "AppointmentRecurrenceTemplateBackbone",
            "module": "dist/src/components/resources/appointment/appointment-recurrence-template.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment-weekly-template.bacbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AppointmentWeeklyTemplate",
          "default": "class AppointmentWeeklyTemplate extends Backbone { constructor() { super('WeeklyTemplate'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"monday\" .value=${data.monday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"tuesday\" .value=${data.tuesday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"wednesday\" .value=${data.wednesday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"thursday\" .value=${data.thursday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"friday\" .value=${data.friday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"saturday\" .value=${data.saturday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"sunday\" .value=${data.sunday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"weekInterval\" .value=${data.weekInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"monday\" .value=${data.monday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"tuesday\" .value=${data.tuesday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"wednesday\" .value=${data.wednesday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"thursday\" .value=${data.thursday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"friday\" .value=${data.friday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"saturday\" .value=${data.saturday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"sunday\" .value=${data.sunday} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-primitive key=\"weekInterval\" .value=${data.weekInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentWeeklyTemplate",
          "declaration": {
            "name": "AppointmentWeeklyTemplate",
            "module": "dist/src/components/resources/appointment/appointment-weekly-template.bacbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment-yearly-template.bacbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "AppointmentYearlyTemplate",
          "default": "class AppointmentYearlyTemplate extends Backbone { constructor() { super('YearlyTemplate'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"yearInterval\" .value=${data.yearInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"yearInterval\" .value=${data.yearInterval} .type=${PrimitiveType.positiveInt} ></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentYearlyTemplate",
          "declaration": {
            "name": "AppointmentYearlyTemplate",
            "module": "dist/src/components/resources/appointment/appointment-yearly-template.bacbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Appointment",
          "default": "class Appointment extends DomainResource { constructor() { super('Appointment'); } renderDisplay(config, data) { return [ html ` ${wrap({ key: 'identifier', collection: data.identifier, generator: 'fhir-identifier', config })} <fhir-primitive key=\"status\" .value=${data.status} type=${code} required summary></fhir-primitive> <fhir-codeable-concept key=\"cancellationReason\" .data=${data.cancellationReason} summary ></fhir-codeable-concept> ${wrap({ key: 'class', collection: data.class, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'serviceCategory', collection: data.serviceCategory, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'serviceType', collection: data.serviceType, generator: 'fhir-codeable-reference', config })} ${wrap({ key: 'speciality', collection: data.specialty, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'appointmentType', collection: data.appointmentType, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'reason', collection: data.reason, generator: 'fhir-codeable-reference', config })} <fhir-codeable-concept key=\"priority\" .data=${data.priority}></fhir-codeable-concept> <fhir-primitive key=\"description\" .value=${data.description} .type=${fhir_string}></fhir-primitive> ${wrap({ key: 'replaces', collection: data.replaces, generator: 'fhir-reference', summary: false, config })} ${wrap({ key: 'supportingInformation', collection: data.supportingInformation, generator: 'fhir-reference', summary: false, config })} <fhir-reference key=\"originationAppointment\" .data=${data.originationAppointment}></fhir-reference> <fhir-primitive key=\"start\" .value=${data.start} .type=${instant} summary></fhir-primitive> <fhir-primitive key=\"end\" .value=${data.end} .type=${instant} summary></fhir-primitive> <fhir-primitive key=\"minuteDuration\" .value=${data.minutesDuration} .type=${positiveInt}></fhir-primitive> ${wrap({ key: 'slot', collection: data.slot, generator: 'fhir-reference', summary: false, config })} ${wrap({ key: 'account', collection: data.account, generator: 'fhir-reference', summary: false, config })} <fhir-primitive key=\"created\" .value=${data.created} .type=${datetime}></fhir-primitive> <fhir-primitive key=\"cancellationDate\" .value=${data.cancellationReason} .type=${datetime}></fhir-primitive> <fhir-annotation key=\"note\" .data=${data.note}></fhir-annotation> ${wrap({ key: 'patientInstruction', collection: data.patientInstruction, generator: 'fhir-codeable-reference', summary: false, config })} ${wrap({ key: 'basedOn', collection: data.basedOn, generator: 'fhir-reference', summary: false, config })} <fhir-reference key=\"subject\" .data=${data.subject}></fhir-reference> ${wrap({ key: 'participant', collection: data.participant, generator: (data, label, key) => html ` <fhir-appointment-participant key=${key} label=${label} .data=${data} ></fhir-appointment-participant> `, summary: false, config })} <fhir-primitive key=\"recurrenceId\" .value=${data.recurrenceId} .type=${positiveInt}></fhir-primitive> <fhir-primitive key=\"occurrenceChanged\" .value=${data.occurrenceChanged} .type=${boolean}></fhir-primitive> <fhir-appointment-recurrence-template key=\"recurrenceTemplate\" .data=${data.recurrenceTemplate} ></fhir-appointment-recurrence-template> ` ]; } renderStructure(config, data) { return [ html ` ${strap({ key: 'identifier', collection: data.identifier, generator: 'fhir-identifier', config })} <fhir-primitive key=\"status\" .value=${data.status} type=${code} required summary></fhir-primitive> <fhir-codeable-concept key=\"cancellationReason\" .data=${data.cancellationReason} summary ></fhir-codeable-concept> ${strap({ key: 'class', collection: data.class, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'serviceCategory', collection: data.serviceCategory, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'serviceType', collection: data.serviceType, generator: 'fhir-codeable-reference', config })} ${strap({ key: 'speciality', collection: data.specialty, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'appointmentType', collection: data.appointmentType, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'reason', collection: data.reason, generator: 'fhir-codeable-reference', config })} <fhir-codeable-concept key=\"priority\" .data=${data.priority}></fhir-codeable-concept> <fhir-primitive key=\"description\" .value=${data.description} .type=${fhir_string}></fhir-primitive> ${strap({ key: 'replaces', collection: data.replaces, generator: 'fhir-reference', summary: false, config })} ${strap({ key: 'supportingInformation', collection: data.supportingInformation, generator: 'fhir-reference', summary: false, config })} <fhir-reference key=\"originationAppointment\" .data=${data.originationAppointment}></fhir-reference> <fhir-primitive key=\"start\" .value=${data.start} .type=${instant} summary></fhir-primitive> <fhir-primitive key=\"end\" .value=${data.end} .type=${instant} summary></fhir-primitive> <fhir-primitive key=\"minuteDuration\" .value=${data.minutesDuration} .type=${positiveInt}></fhir-primitive> ${strap({ key: 'slot', collection: data.slot, generator: 'fhir-reference', summary: false, config })} ${strap({ key: 'account', collection: data.account, generator: 'fhir-reference', summary: false, config })} <fhir-primitive key=\"created\" .value=${data.created} .type=${datetime}></fhir-primitive> <fhir-primitive key=\"cancellationDate\" .value=${data.cancellationReason} .type=${datetime}></fhir-primitive> <fhir-annotation key=\"note\" .data=${data.note}></fhir-annotation> ${strap({ key: 'patientInstruction', collection: data.patientInstruction, generator: 'fhir-codeable-reference', summary: false, config })} ${strap({ key: 'basedOn', collection: data.basedOn, generator: 'fhir-reference', summary: false, config })} <fhir-reference key=\"subject\" .data=${data.subject}></fhir-reference> ${strap({ key: 'participant', collection: data.participant, generator: (data, label, key) => html ` <fhir-appointment-participant key=${key} label=${label} .data=${data} ></fhir-appointment-participant> `, summary: false, config })} <fhir-primitive key=\"recurrenceId\" .value=${data.recurrenceId} .type=${positiveInt}></fhir-primitive> <fhir-primitive key=\"occurrenceChanged\" .value=${data.occurrenceChanged} .type=${boolean}></fhir-primitive> <fhir-appointment-recurrence-template key=\"recurrenceTemplate\" .data=${data.recurrenceTemplate} ></fhir-appointment-recurrence-template> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Appointment",
          "declaration": {
            "name": "Appointment",
            "module": "dist/src/components/resources/appointment/appointment.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Resources/Appointment/Appointment', component: 'fhir-appointment', ...renderTemplateInShell((args) => html ` <fhir-appointment .data=${args.data}></fhir-appointment> `) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display2",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/appointment/appointment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/appointment/appointment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display2",
          "declaration": {
            "name": "Display2",
            "module": "dist/src/components/resources/appointment/appointment.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/appointment/appointment.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/appointment.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, status: 'booked', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], serviceType: [ { concept: { coding: [ { code: '52', display: 'General Discussion' } ] } } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'FOLLOWUP', display: 'A follow up visit from a previous appointment' } ] }, reason: [ { reference: { reference: 'Condition/example', display: 'Severe burn of left ear' } } ], description: 'Discussion on the results of your recent MRI', start: '2013-12-10T09:00:00Z', end: '2013-12-10T11:00:00Z', created: '2013-10-10', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], patientInstruction: [ { concept: { text: 'Please avoid excessive travel (specifically flying) before this appointment' } } ], basedOn: [ { reference: 'ServiceRequest/myringotomy' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'accepted' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], actor: { reference: 'Practitioner/example', display: 'Dr Adam Careful' }, required: true, status: 'accepted' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'examplereq', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, identifier: [ { system: 'http://example.org/sampleappointment-identifier', value: '123' } ], status: 'proposed', serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'WALKIN', display: 'A previously unscheduled walk-in visit' } ] }, reason: [ { concept: { coding: [ { system: 'http://snomed.info/sct', code: '413095006' } ], text: 'Clinical Review' } } ], description: 'Discussion on the results of your recent MRI', minutesDuration: 15, requestedPeriod: [ { start: '2016-06-02', end: '2016-06-09' } ], slot: [ { reference: 'Slot/example' } ], created: '2015-12-02', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'needs-action' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], required: true, status: 'needs-action' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/appointment/appointment.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/resources/appointment/appointment.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/appointment/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-monthly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-participant.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-recurrence-template.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-weekly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-yearly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.type-guard"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance-ingredient.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "SubstanceIngredientBackbone",
          "default": "class SubstanceIngredientBackbone extends BaseElement { constructor() { super('Ingredient'); } renderDisplay(config, data) { let substance = html ` <fhir-not-supported label=\"ingredient\" description=\"substance[x] choice not found\" ></fhir-not-supported >`; if (isSubstanceIngredientConcept(data)) { substance = html ` <fhir-codeable-concept label=\"substance\" .data=${data.substanceCodeableConcept}></fhir-codeable-concept > `; } if (isSubstanceIngredientReference(data)) { substance = html ` <fhir-reference label=\"substance\" .data=${data.substanceReference}></fhir-reference > `; } return [ html ` <fhir-wrapper .label=${this.label} ?summaryonly=${this.getDisplayConfig().summaryonly}> ${substance} <fhir-ratio label=\"quantity\" .data=${data.quantity}></fhir-ratio > </fhir-wrapper> ` ]; } renderStructure(config, data) { let substance = html ` <fhir-not-supported label=\"ingredient\" description=\"substance[x] choice not found\" ></fhir-not-supported >`; if (isSubstanceIngredientConcept(data)) { substance = html ` <fhir-codeable-concept label=\"substance\" .data=${data.substanceCodeableConcept}></fhir-codeable-concept > `; } if (isSubstanceIngredientReference(data)) { substance = html ` <fhir-reference label=\"substance\" .data=${data.substanceReference}></fhir-reference > `; } return [ html ` ${substance} <fhir-ratio label=\"quantity\" .data=${data.quantity}></fhir-ratio > ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SubstanceIngredientBackbone",
          "declaration": {
            "name": "SubstanceIngredientBackbone",
            "module": "dist/src/components/resources/substance/substance-ingredient.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance-ingredient.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance-ingredient.type-guard.js",
      "declarations": [
        {
          "kind": "function",
          "name": "isSubstanceIngredientConcept",
          "parameters": [
            {
              "name": "ingredient"
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSubstanceIngredientReference",
          "parameters": [
            {
              "name": "ingredient"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSubstanceIngredientConcept",
          "declaration": {
            "name": "isSubstanceIngredientConcept",
            "module": "dist/src/components/resources/substance/substance-ingredient.type-guard.js"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientReference",
          "declaration": {
            "name": "isSubstanceIngredientReference",
            "module": "dist/src/components/resources/substance/substance-ingredient.type-guard.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Substance",
          "default": "class Substance extends DomainResource { constructor() { super('Substance'); } renderDisplay(config, data) { return [ html ` <fhir-primitive label=\"description\" .value=${data.description} .context=\"id:${data.id}\" summary ></fhir-primitive> <fhir-identifier .label=\"identifier\" .data=${data.identifier} summary></fhir-identifier> <fhir-primitive label=\"instance or kind\" value=${data.instance ? 'instance' : 'kind'} summary ></fhir-primitive> <fhir-primitive label=\"status\" value=${data.status} .type=${PrimitiveType.code} summary></fhir-primitive> ${wrap({ key: '', pluralBase: 'category', collection: data.category, generator: (c, idx, context) => html ` <fhir-codeable-concept .context=${context} label=\"substance\" .data=${c} summary ></fhir-codeable-concept> `, config })} <fhir-codeable-reference key=\"code\" label=\"code\" .data=${data.code} summary></fhir-codeable-reference> <fhir-primitive label=\"expiry\" value=${data.expiry} summary></fhir-primitive> <fhir-quantity label=\"quantity\" .data=${data.quantity} summary></fhir-quantity> ${wrap({ key: '', pluralBase: 'ingredient', collection: data.ingredient, generator: (ing, idx, ctx) => html ` <fhir-substance-ingredient .key=${ctx} .label=${'ingredient' + idx} .data=${ing} summary ></fhir-substance-ingredient> `, config })} ` ]; } renderStructure(config, data) { return [ html ` <fhir-identifier .label=\"identifier\" .data=${data.identifier} summary></fhir-identifier> <fhir-primitive label=\"instance\" value=${data.instance} summary></fhir-primitive> <fhir-primitive label=\"status\" value=${data.status} .type=${PrimitiveType.code} summary></fhir-primitive> ${data.category || this.verbose ? html ` <fhir-wrapper variant=\"details\" label=\"categories\" ?headless=${data.category?.length > 1} ?summaryonly=${this.getDisplayConfig().summaryonly} summary > ${data.category ? map(data.category, (c) => { return html ` <fhir-codeable-concept label=\"category\" .data=${c} summary ></fhir-codeable-concept> `; }) : html ` <fhir-empty-list></fhir-empty-list>`} </fhir-wrapper> ` : nothing} <fhir-codeable-reference label=\"code\" .data=${data.code} summary></fhir-codeable-reference> <fhir-primitive label=\"description\" .value=${data.description} summary></fhir-primitive> <fhir-primitive label=\"expiry\" value=${data.expiry} summary></fhir-primitive> <fhir-quantity label=\"quantity\" .data=${data.quantity} summary></fhir-quantity> ${data.ingredient || this.verbose ? html ` <fhir-wrapper label=\"ingredients\" ?open=${this.open} summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${data.ingredient ? map(data.ingredient, (ing) => html ` <fhir-substance-ingredient label=\"ingredient\" .data=${ing} summary ></fhir-substance-ingredient> `) : html ` <fhir-empty-list></fhir-empty-list>`} </fhir-wrapper> ` : nothing} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Substance",
          "declaration": {
            "name": "Substance",
            "module": "dist/src/components/resources/substance/substance.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title, subcomponents: { 'fhir-substance': 'fhir-substance' }, ...renderTemplateInShell((args) => html ` <fhir-substance .data=\"${args.data}\" .mode=${args.mode} .verbose=${args.verbose} .showerror=${args.showerror} .open=${args.open}></fhir-substance > `) }"
        },
        {
          "kind": "variable",
          "name": "Display_f204",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_f204, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure_f204",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data_f204, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Narrative",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'narrative', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display_f204",
          "declaration": {
            "name": "Display_f204",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure_f204",
          "declaration": {
            "name": "Structure_f204",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "Narrative",
            "module": "dist/src/components/resources/substance/substance.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/substance/substance.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f205', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Substance</b><a name=\"f205\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Substance &quot;f205&quot; </p></div><p><b>instance</b>: false</p><p><b>category</b>: Drug or Medicament <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\">Substance Category Codes</a>#drug)</span></p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin + clavulanate potassium 875mg/125mg tablet (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#392259005)</span></td></tr></table><p><b>description</b>: Augmentin 875</p><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 875 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr1\"> </a></p><blockquote><p/><p><a name=\"ingr1\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#372687004)</span></td></tr></table></blockquote></blockquote><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 125 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr2\"> </a></p><blockquote><p/><p><a name=\"ingr2\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Clavulanate potassium (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#395938000)</span></td></tr></table></blockquote></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'ingr1', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '372687004', display: 'Amoxicillin (substance)' } ] } } }, { resourceType: 'Substance', id: 'ingr2', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '395938000', display: 'Clavulanate potassium (substance)' } ] } } } ], instance: false, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'drug', display: 'Drug or Medicament' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '392259005', display: 'Amoxicillin + clavulanate potassium 875mg/125mg tablet (product)' } ] } }, description: 'Augmentin 875', ingredient: [ { quantity: { numerator: { value: 875, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr1' } }, { quantity: { numerator: { value: 125, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr2' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_f204",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f204', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Substance\\u003c/b\\u003e\\u003ca name\\u003d\"f204\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Substance \\u0026quot;f204\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003eidentifier\\u003c/b\\u003e: id: AB94687\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003einstance\\u003c/b\\u003e: true\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003ecategory\\u003c/b\\u003e: Chemical \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\"\\u003eSubstance Category Codes\\u003c/a\\u003e#chemical)\\u003c/span\\u003e\\u003c/p\\u003e\\u003ch3\\u003eCodes\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSilver nitrate 20% solution (product) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#333346007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003edescription\\u003c/b\\u003e: Solution for silver nitrate stain\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003eexpiry\\u003c/b\\u003e: 2018-01-01\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003equantity\\u003c/b\\u003e: 100 mL\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code mL \\u003d \\u0027mL\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/div\\u003e' }, identifier: [{ system: 'http://acme.org/identifiers/substances/lot', value: 'AB94687' }], instance: true, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'chemical', display: 'Chemical' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '333346007', display: 'Silver nitrate 20% solution (product)' } ] } }, description: 'Solution for silver nitrate stain', expiry: '2018-01-01', quantity: { value: 100, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/substance/substance.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data_f204",
          "declaration": {
            "name": "data_f204",
            "module": "dist/src/components/resources/substance/substance.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-component.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-reference-range.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-triggered-by.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation-component.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ObservationComponent",
          "default": "class ObservationComponent extends Backbone { constructor() { super('ObservationComponent'); } renderDisplay(config, data, validations) { return this.renderAny(config, data, validations); } renderStructure(config, data, validations) { return this.renderAny(config, data, validations); } renderAny(config, data, validations) { const { integer, datetime, fhir_string, time, boolean } = PrimitiveType; return [ html ` <fhir-codeable-concept key=\"code\" .data=${data.code} required></fhir-codeable-concept> ${oneOf(this, 'value[x]', validations.msgFor('value[x]'), [ choice(data.valueQuantity, (d) => html ` <fhir-quantity key=\"valueQuantity\" .data=${d} summary ></fhir-quantity>`), choice(data.valueCodeableConcept, (d) => html ` <fhir-codeable-concept key=\"effectiveDateTime\" .data=${d} summary ></fhir-codeable-concept>`), choice(data.valueString, (d) => html ` <fhir-primitive key=\"valueString\" .value=${d} .type=${fhir_string} summary ></fhir-primitive>`), choice(data.valueBoolean, (d) => html ` <fhir-primitive key=\"valueBoolean\" .value=${d} .type=${boolean} summary ></fhir-primitive>`), choice(data.valueInteger, (d) => html ` <fhir-primitive key=\"valueInteger\" .value=${d} .type=${integer} summary ></fhir-primitive>`), choice(data.valueRange, (d) => html ` <fhir-range key=\"valueRange\" .data=${d} summary ></fhir-range>`), choice(data.valueRatio, (d) => html ` <fhir-ratio key=\"valueRatio\" .data=${d} summary ></fhir-ratio>`), choice(data.valueSampledData, (d) => html ` <fhir-not-supported variant=\"no-impl\" label=\"valueSampledData\" .data=${d} summary ></fhir-not-supported>`), choice(data.valueTime, (d) => html ` <fhir-primitive key=\"valueTime\" .value=${d} .type=${time} summary ></fhir-primitive>`), choice(data.valueDateTime, (d) => html ` <fhir-primitive key=\"valueDateTime\" .value=${d} .type=${datetime} summary ></fhir-primitive>`), choice(data.valuePeriod, (d) => html ` <fhir-period key=\"valuePeriod\" .data=${d} summary ></fhir-period>`), choice(data.valueAttachment, (d) => html ` <fhir-attachment key=\"valueAttachment\" .data=${d} summary ></fhir-attachment>`), choice(data.valueReference, (d) => html ` <fhir-reference key=\"valueReference\" .data=${d} summary ></fhir-reference>`) ])} <fhir-codeable-concept key=\"dataAbsentReason\" .data=${data.dataAbsentReason}></fhir-codeable-concept> <fhir-codeable-concept key=\"interpretation\" .data=${data.interpretation}></fhir-codeable-concept> ${wrap({ key: 'interpretation', collection: data.interpretation ?? [], generator: (d, l, k) => html ` <fhir-codeable-concept key=${k} label=${l} .data=${d}></fhir-codeable-concept>`, config })} <fhir-not-supported label=\"referenceRange\" variant=\"no-impl\" description=\"not sure how to implement this\"></fhir-not-supported> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationComponent",
          "declaration": {
            "name": "ObservationComponent",
            "module": "dist/src/components/resources/observation/observation-component.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation-reference-range.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ObservationReferenceRange",
          "default": "class ObservationReferenceRange extends Backbone { constructor() { super('ObservationReferenceRange'); } renderDisplay(config, data) { return this.renderAny(config, data); } renderStructure(config, data) { return this.renderAny(config, data); } renderAny(config, data) { return [ html ` <fhir-quantity key=\"low\" .data=${data.low} simple></fhir-quantity> <fhir-quantity key=\"high\" .data=${data.high} simple></fhir-quantity> <fhir-codeable-concept key=\"normalValue\" .data=${data.normalValue}></fhir-codeable-concept> <fhir-codeable-concept key=\"type\" .data=${data.type}></fhir-codeable-concept> ${wrap({ key: 'appliesTo', collection: data.appliesTo ?? [], generator: (d, l, k) => html ` <fhir-codeable-concept key=${k} label=${l} .data=${d}></fhir-codeable-concept>`, config })} <fhir-range key=\"age\" .data=${data.age}></fhir-range> <fhir-primitive key=\"text\" .data=${data.text} .type=${PrimitiveType.markdown}></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationReferenceRange",
          "declaration": {
            "name": "ObservationReferenceRange",
            "module": "dist/src/components/resources/observation/observation-reference-range.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation-triggered-by.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "ObservationTriggeredBy",
          "default": "class ObservationTriggeredBy extends Backbone { constructor() { super('ObservationTriggeredBy'); } renderDisplay(config, data) { return this.renderAny(config, data); } renderStructure(config, data) { return this.renderAny(config, data); } renderAny(config, data) { return [html ` <fhir-reference key=\"observation\" .data=${data.observation} required summary></fhir-reference> <fhir-primitive key=\"type\" .value=${data.type} .type=${PrimitiveType.code} required summary></fhir-primitive> <fhir-primitive key=\"reason\" .value=${data.reason} .type=${PrimitiveType.fhir_string}></fhir-primitive> `]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationTriggeredBy",
          "declaration": {
            "name": "ObservationTriggeredBy",
            "module": "dist/src/components/resources/observation/observation-triggered-by.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Observation",
          "default": "class Observation extends DomainResource { constructor() { super('Observation'); } renderDisplay(config, data, validations) { return this.renderAny(config, data, validations); } renderStructure(config, data, validations) { return this.renderAny(config, data, validations); } validate(data, validations, _fetched) { validations.inspectCode({ node: 'status', code: data.status, id: 'cs-observation-status' }); validations.inspectCodeableConcept({ node: 'category', concept: data.category, bindingId: 'vs-observation-category' }); validations.inspectCodeableConcept({ node: 'dataAbsentReason', concept: data.dataAbsentReason, bindingId: 'vs-data-absent-reason' }); } renderAny(config, data, validations) { return [ html ` ${identifiers(data.identifier ?? [], config)} ${oneOf(this, 'instantiate[x]', validations.msgFor('instantiate[x]'), [ choice(data.instantiatesCanonical, (d) => html ` <fhir-primitive key=\"instantiateCanonical\" .value=${d} .type=${PrimitiveType.canonical} summary ></fhir-primitive>`), choice(data.instantiatesReference, (d) => html ` <fhir-reference key=\"instantiateReference\" .data=${d} summary ></fhir-reference>`) ])} ${wrap({ key: 'basedOn', collection: data.basedOn ?? [], generator: (d, l) => html ` <fhir-reference label=${l} .data=${d}></fhir-reference>`, config })} ${wrap({ key: 'triggeredBy', collection: data.triggeredBy ?? [], generator: (d, l) => html ` <fhir-observation-triggered-by key=${l} .data=${d}></fhir-observation-triggered-by>`, config })} ${wrap({ key: 'partOf', collection: data.partOf ?? [], generator: (d, l) => html ` <fhir-reference label=${l} .data=${d}></fhir-reference>`, config })} <fhir-primitive key=\"status\" .value=${data.status} .type=${PrimitiveType.code} errormessage=${validations.msgFor('status')} ></fhir-primitive> ${wrap({ key: 'category', collection: data.category ?? [], generator: (d, l, k, i) => html ` <fhir-codeable-concept key=${k} label=${l} .data=${d} .errors=${validations.sliceForFQK({ path: [ { node: 'category', index: i } ] })} ></fhir-codeable-concept>`, config })} <fhir-codeable-concept key=\"code\" .data=${data.code} required></fhir-codeable-concept> <fhir-reference key='subject' .data=${data.subject}></fhir-reference> ${wrap({ key: 'focus', collection: data.focus ?? [], generator: (d, l) => html ` <fhir-reference label=${l} .data=${d}></fhir-reference>`, config })} <fhir-reference key='encounter' .data=${data.encounter}></fhir-reference> ${oneOf(this, 'effective[x]', validations.msgFor('effective[x]'), [ choice(data.effectiveDateTime, (d) => html ` <fhir-primitive key=\"effectiveDateTime\" .value=${d} .type=${PrimitiveType.datetime} summary ></fhir-primitive>`), choice(data.effectivePeriod, (d) => html ` <fhir-period key=\"effectivePeriod\" .data=${d} summary ></fhir-period>`), choice(data.effectiveTiming, (d) => html ` <fhir-timing key=\"effectiveTiming\" .data=${d}></fhir-timing>`), choice(data.effectiveInstant, (d) => html ` <fhir-primitive key=\"effectiveInstant\" .value=${d} .type=${PrimitiveType.instant} summary ></fhir-primitive>`) ])} <fhir-primitive key=\"issued\" .value=${data.issued} .type=${PrimitiveType.instant} summary></fhir-primitive> ${wrap({ key: 'performer', collection: data.performer ?? [], generator: (d, l) => html ` <fhir-reference label=${l} .data=${d}></fhir-reference>`, config })} ${oneOf(this, 'value[x]', validations.msgFor('value[x]'), [ choice(data.valueQuantity, (d) => html ` <fhir-quantity key=\"valueQuantity\" .data=${d} summary ></fhir-quantity>`), choice(data.valueCodeableConcept, (d) => html ` <fhir-codeable-concept key=\"effectiveDateTime\" .data=${d} summary ></fhir-codeable-concept>`), choice(data.valueString, (d) => html ` <fhir-primitive key=\"valueString\" .value=${d} .type=${PrimitiveType.fhir_string} summary ></fhir-primitive>`), choice(data.valueBoolean, (d) => html ` <fhir-primitive key=\"valueBoolean\" .value=${d} .type=${PrimitiveType.boolean} summary ></fhir-primitive>`), choice(data.valueInteger, (d) => html ` <fhir-primitive key=\"valueInteger\" .value=${d} .type=${PrimitiveType.integer} summary ></fhir-primitive>`), choice(data.valueRange, (d) => html ` <fhir-range key=\"valueRange\" .data=${d} summary ></fhir-range>`), choice(data.valueRatio, (d) => html ` <fhir-ratio key=\"valueRatio\" .data=${d} summary ></fhir-ratio>`), choice(data.valueSampledData, (d) => html ` <fhir-sampled-data key=\"valueSampledData\" .data=${d} summary ></fhir-sampled-data>`), choice(data.valueTime, (d) => html ` <fhir-primitive key=\"valueTime\" .value=${d} .type=${PrimitiveType.time} summary ></fhir-primitive>`), choice(data.valueDateTime, (d) => html ` <fhir-primitive key=\"valueDateTime\" .value=${d} .type=${PrimitiveType.datetime} summary ></fhir-primitive>`), choice(data.valuePeriod, (d) => html ` <fhir-period key=\"valuePeriod\" .data=${d} summary ></fhir-period>`), choice(data.valueAttachment, (d) => html ` <fhir-attachment key=\"valueAttachment\" .data=${d} summary ></fhir-attachment>`), choice(data.valueReference, (d) => html ` <fhir-reference key=\"valueReference\" .data=${d} summary ></fhir-reference>`) ])} <fhir-codeable-concept key=\"dataAbsentReason\" .data=${data.dataAbsentReason} .errors=${validations.sliceForFQK({ path: [{ node: 'dataAbsentReason' }] })} ></fhir-codeable-concept> ${wrap({ key: 'interpretation', collection: data.interpretation ?? [], generator: (d, l) => html ` <fhir-codeable-concept key=${l} .data=${d}></fhir-codeable-concept>`, config })} ${wrap({ key: 'note', collection: data.note ?? [], generator: (d, l) => html ` <fhir-annotation key=${l} .data=${d}></fhir-annotation>`, config })} <fhir-codeable-concept key=\"bodySite\" .data=${data.bodySite}></fhir-codeable-concept> <fhir-reference key=\"bodyStructure\" .data=${data.bodyStructure}></fhir-reference> <fhir-codeable-concept key=\"method\" .data=${data.method}></fhir-codeable-concept> <fhir-reference key=\"specimen\" .data=${data.specimen}></fhir-reference> <fhir-reference key=\"device\" .data=${data.device}></fhir-reference> <fhir-observation-reference-range key=\"referenceRange\" .data=${data.referenceRange} ></fhir-observation-reference-range> ${wrap({ key: 'hasMember', collection: data.hasMember ?? [], generator: (d, l) => html ` <fhir-reference key=${l} .data=${d} summary></fhir-reference>`, config })} ${wrap({ key: 'derivedFrom', collection: data.derivedFrom ?? [], generator: (d, l) => html ` <fhir-reference key=${l} .data=${d} summary></fhir-reference>`, config })} ${wrap({ key: 'component', collection: data.component ?? [], generator: (d, l) => html ` <fhir-observation-component key=${l} .data=${d}></fhir-observation-component>`, config })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Observation",
          "declaration": {
            "name": "Observation",
            "module": "dist/src/components/resources/observation/observation.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: path, component: elementName, ...argtypes() }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'display', showerror: false, verbose: false, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data, mode: 'structure', showerror: true, verbose: true, open: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "WithErrors",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { ...data, status: 'not found', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'vital-signss', display: 'Vital Signs' } ] } ], dataAbsentReason: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/data-absent-reason', code: 'null', display: 'null' } ], text: 'null' } }, showerror: true, verbose: true, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/resources/observation/observation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/resources/observation/observation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/resources/observation/observation.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WithErrors",
          "declaration": {
            "name": "WithErrors",
            "module": "dist/src/components/resources/observation/observation.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/observation/observation.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Observation', id: 'f001', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"f001\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;f001&quot; </p></div><p><b>identifier</b>: id:\\u00a06323\\u00a0(use:\\u00a0OFFICIAL)</p><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"patient-example-f001-pieter.html\">Patient/f001: P. van de Heuvel</a> &quot;Pieter VAN DE HEUVEL&quot;</p><p><b>effective</b>: 2013-04-02T09:30:10+01:00</p><p><b>issued</b>: 4 Apr 2013, 1:30:10 am</p><p><b>performer</b>: <a href=\"practitioner-example-f005-al.html\">Practitioner/f005: A. Langeveld</a> &quot;Langeveld ANNE&quot;</p><p><b>value</b>: 6.3 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></p><p><b>interpretation</b>: High <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ObservationInterpretation.html\">ObservationInterpretation</a>#H)</span></p><h3>ReferenceRanges</h3><table class=\"grid\"><tr><td>-</td><td><b>Low</b></td><td><b>High</b></td></tr><tr><td>*</td><td>3.1 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td><td>6.2 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td></tr></table></div>' }, identifier: [ { use: 'official', system: 'http://www.bmc.nl/zorgportal/identifiers/observations', value: '6323' } ], status: 'final', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'vital-signs', display: 'Vital Signs' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/f001', display: 'P. van de Heuvel' }, effectiveDateTime: '2013-04-02T09:30:10+01:00', issued: '2013-04-03T15:30:10+01:00', performer: [ { reference: 'Practitioner/f005', display: 'A. Langeveld' } ], valueQuantity: { value: 6.3, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, interpretation: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation', code: 'H', display: 'High' } ] } ], referenceRange: [ { low: { value: 3.1, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, high: { value: 6.2, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/resources/observation/observation.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBoolean"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCanonical"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDatetime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDecimal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toFhirString"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toId"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toMarkdown"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toPositiveInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toReference"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toType"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUnsignedInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUri"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUrl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toBase64.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toBase64",
          "parameters": [
            {
              "name": "value"
            },
            {
              "name": "maxLength",
              "default": "1048576"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBase64",
          "declaration": {
            "name": "toBase64",
            "module": "dist/src/components/primitive/type-converters/toBase64.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toBoolean.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toBoolean",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBoolean",
          "declaration": {
            "name": "toBoolean",
            "module": "dist/src/components/primitive/type-converters/toBoolean.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toCanonical.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toCanonical",
          "parameters": [
            {
              "name": "canonical"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCanonical",
          "declaration": {
            "name": "toCanonical",
            "module": "dist/src/components/primitive/type-converters/toCanonical.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toCode.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toCode",
          "parameters": [
            {
              "name": "code",
              "description": "The string to convert.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts and validates a string to a FHIR code.",
          "return": {
            "type": {
              "text": "T"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCode",
          "declaration": {
            "name": "toCode",
            "module": "dist/src/components/primitive/type-converters/toCode.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toDate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toDate",
          "parameters": [
            {
              "name": "value",
              "description": "The string value to convert.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "DateTime"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDate",
          "declaration": {
            "name": "toDate",
            "module": "dist/src/components/primitive/type-converters/toDate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toDatetime.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toDatetime",
          "parameters": [
            {
              "name": "value",
              "description": "The string value to convert.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "DateTime"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDatetime",
          "declaration": {
            "name": "toDatetime",
            "module": "dist/src/components/primitive/type-converters/toDatetime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toDecimal.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "toDecimal",
          "default": "function (decimal) { if (!decimal) throw new TypeError(`decimal must be a valid number: ${decimal}`); if (!regex.test(decimal + '')) throw new TypeError(`decimal must be a valid number: ${decimal}`); if (isNaN(Number.parseFloat(decimal + ''))) throw new TypeError(`decimal must be a valid number: ${decimal}`); // Split the number into base and exponent const parts = String(decimal).split(/[eE]/); const basePart = parts[0]; const exponentPart = parts[1] ? parseInt(parts[1], 10) : 0; // Remove potential leading negative sign and decimal point const baseDigits = basePart.replace(/^-|\\./g, ''); // Calculate the total number of digits considering the exponent const totalDigits = baseDigits.length + (exponentPart !== 0 ? Math.abs(exponentPart) : 0); if (totalDigits <= 18) { return decimal; // return decimal } throw new TypeError(`decimal must be a valid number: ${decimal}`); }",
          "description": "Converts a string representation of a decimal number to the Decimal type.",
          "parameters": [
            {
              "description": "The string representation of the decimal number to convert.",
              "name": "decimal"
            }
          ],
          "return": {
            "type": {
              "text": ""
            }
          }
        },
        {
          "kind": "function",
          "name": "isDecimal",
          "parameters": [
            {
              "name": "arg"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDecimal",
          "declaration": {
            "name": "toDecimal",
            "module": "dist/src/components/primitive/type-converters/toDecimal.js"
          }
        },
        {
          "kind": "js",
          "name": "isDecimal",
          "declaration": {
            "name": "isDecimal",
            "module": "dist/src/components/primitive/type-converters/toDecimal.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toError.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "toError",
          "default": "function (value) { throw new Error(value ?? `Unable to render due to internal constraint`); }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toError",
          "declaration": {
            "name": "toError",
            "module": "dist/src/components/primitive/type-converters/toError.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toFhirString.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toFhirString",
          "parameters": [
            {
              "name": "unknown"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toFhirString",
          "declaration": {
            "name": "toFhirString",
            "module": "dist/src/components/primitive/type-converters/toFhirString.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toId.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toId",
          "parameters": [
            {
              "name": "id"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toId",
          "declaration": {
            "name": "toId",
            "module": "dist/src/components/primitive/type-converters/toId.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toInstant.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toInstant",
          "parameters": [
            {
              "name": "instant"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInstant",
          "declaration": {
            "name": "toInstant",
            "module": "dist/src/components/primitive/type-converters/toInstant.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toInteger.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger",
          "declaration": {
            "name": "toInteger",
            "module": "dist/src/components/primitive/type-converters/toInteger.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toInteger64.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger64",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger64",
          "declaration": {
            "name": "toInteger64",
            "module": "dist/src/components/primitive/type-converters/toInteger64.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toLink.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toLink",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toLink",
          "declaration": {
            "name": "toLink",
            "module": "dist/src/components/primitive/type-converters/toLink.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toMarkdown.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toMarkdown",
          "parameters": [
            {
              "name": "value",
              "description": "The string value to convert.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "Markdown"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toMarkdown",
          "declaration": {
            "name": "toMarkdown",
            "module": "dist/src/components/primitive/type-converters/toMarkdown.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toPositiveInt.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toPositiveInt",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toPositiveInt",
          "declaration": {
            "name": "toPositiveInt",
            "module": "dist/src/components/primitive/type-converters/toPositiveInt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toReference.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toReference",
          "parameters": [
            {
              "name": "value"
            }
          ],
          "description": "Based on reference rule"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toReference",
          "declaration": {
            "name": "toReference",
            "module": "dist/src/components/primitive/type-converters/toReference.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toTime.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toTime",
          "parameters": [
            {
              "name": "value",
              "description": "The string value to convert.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "DateTime"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toTime",
          "declaration": {
            "name": "toTime",
            "module": "dist/src/components/primitive/type-converters/toTime.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toType.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toType",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toType",
          "declaration": {
            "name": "toType",
            "module": "dist/src/components/primitive/type-converters/toType.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toUnsignedInt.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toUnsignedInt",
          "parameters": [
            {
              "name": "value"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUnsignedInt",
          "declaration": {
            "name": "toUnsignedInt",
            "module": "dist/src/components/primitive/type-converters/toUnsignedInt.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toUri.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toUri",
          "parameters": [
            {
              "name": "uri"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUri",
          "declaration": {
            "name": "toUri",
            "module": "dist/src/components/primitive/type-converters/toUri.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toUrl.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toUrl",
          "parameters": [
            {
              "name": "url",
              "description": "The string representing the URL.",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts and validates a string to a URL object.",
          "return": {
            "type": {
              "text": "URL"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUrl",
          "declaration": {
            "name": "toUrl",
            "module": "dist/src/components/primitive/type-converters/toUrl.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/toUuid.js",
      "declarations": [
        {
          "kind": "function",
          "name": "toUuid",
          "parameters": [
            {
              "name": "uuid"
            },
            {
              "description": "The string representing the URL.",
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts and validates a string to a URL object.",
          "return": {
            "type": {
              "text": "URL"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUuid",
          "declaration": {
            "name": "toUuid",
            "module": "dist/src/components/primitive/type-converters/toUuid.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/primitive/type-converters/type-converters.js",
      "declarations": [
        {
          "kind": "function",
          "name": "valueOrError",
          "parameters": [
            {
              "name": "fn"
            },
            {
              "name": "originalVal"
            }
          ],
          "description": "Wrap value with an error message when operation failed. When there is no error the value is also cast to an expected\ntype. When there was an error the original value type is returned."
        },
        {
          "kind": "variable",
          "name": "PrimitiveType"
        },
        {
          "kind": "function",
          "name": "convertToPrimitiveType",
          "parameters": [
            {
              "name": "value",
              "description": "The value to be converted.",
              "type": {
                "text": "string | null"
              }
            }
          ],
          "description": "Converts the given value to its primitive type.",
          "return": {
            "type": {
              "text": "PrimitiveType"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "valueOrError",
          "declaration": {
            "name": "valueOrError",
            "module": "dist/src/components/primitive/type-converters/type-converters.js"
          }
        },
        {
          "kind": "js",
          "name": "PrimitiveType",
          "declaration": {
            "name": "PrimitiveType",
            "module": "dist/src/components/primitive/type-converters/type-converters.js"
          }
        },
        {
          "kind": "js",
          "name": "convertToPrimitiveType",
          "declaration": {
            "name": "convertToPrimitiveType",
            "module": "dist/src/components/primitive/type-converters/type-converters.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/meta/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/meta/meta.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/meta/meta.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Meta",
          "default": "class Meta extends BaseElement { constructor() { super('Meta'); } renderDisplay(config, data) { return [ html ` <fhir-primitive label=\"versionId\" type=${PrimitiveType.id} .value=${data.versionId} summary></fhir-primitive> <fhir-primitive label=\"lastUpdated\" type=${PrimitiveType.instant} .value=${data.lastUpdated} summary ></fhir-primitive> <fhir-primitive label=\"source\" type=${PrimitiveType.uri} .value=${data.source} summary></fhir-primitive> ${wrap({ key: 'profile', pluralBase: 'profile', collection: data.profile, generator: (d, l, k) => html ` <fhir-primitive key=${k} label=${l} type=${PrimitiveType.canonical} .value=${d} summary ></fhir-primitive>`, summary: this.summary, config })} ${wrap({ key: 'security', pluralBase: 'security', collection: data.security, generator: (d, l, k) => html ` <fhir-coding key=${k} label=${l} .data=${d} summary></fhir-coding> `, summary: this.summary, config })} ${wrap({ key: 'tag', pluralBase: 'tag', collection: data.tag, generator: (d, l, k) => html ` <fhir-coding key=${k} label=${l} .data=${d} summary ?headless=${data.tag.length === 1} ></fhir-coding> `, summary: this.summary, config })} ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive label=\"versionId\" type=${PrimitiveType.id} .value=${data.versionId} summary></fhir-primitive> <fhir-primitive label=\"lastUpdated\" type=${PrimitiveType.instant} .value=${data.lastUpdated} summary ></fhir-primitive> <fhir-primitive label=\"source\" type=${PrimitiveType.uri} .value=${data.source} summary></fhir-primitive> ${data.profile ? html ` <fhir-wrapper label=\"profiles\" variant=\"details\" summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${map(data.profile, p => html ` <fhir-primitive label=\"profile\" type=${PrimitiveType.canonical} .value=${p} summary ></fhir-primitive> `)} </fhir-wrapper> ` : nothing} ${data.security ? html ` <fhir-wrapper label=\"security\" variant=\"details\" summary ?summaryonly=${this.getDisplayConfig().summaryonly} > ${map(data.security, s => html ` <fhir-coding label=\"security\" .data=${s} summary></fhir-coding> `)} </fhir-wrapper> ` : nothing} ${strap({ key: 'tag', pluralBase: 'tag', collection: data.tag, generator: (d, l, k) => html ` <fhir-coding key=${k} label=${l} .data=${d} summary></fhir-coding> `, summary: this.summary, config: this.getDisplayConfig() })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Meta",
          "declaration": {
            "name": "Meta",
            "module": "dist/src/components/special/meta/meta.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/meta/meta.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Meta', component: 'fhir-meta', ...renderTemplateInShell((args) => html ` <fhir-meta .data=${args.data} summary ?headless=${args.headless}></fhir-meta>`) }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data2, mode: 'structure', showerror: true, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "Data",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Data3",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data3, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Data4",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: data4, mode: 'display', showerror: true, verbose: false, open: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Data",
          "declaration": {
            "name": "Data",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Data3",
          "declaration": {
            "name": "Data3",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Data4",
          "declaration": {
            "name": "Data4",
            "module": "dist/src/components/special/meta/meta.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/meta/meta.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2014-08-18T01:43:30Z', security: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'TBOO', display: 'taboo' } ], tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2019-08-07T10:49:22Z' }"
        },
        {
          "kind": "variable",
          "name": "data4",
          "type": {
            "text": "object"
          },
          "default": "{ lastUpdated: '2014-08-18T01:43:30Z', tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "dist/src/components/special/meta/meta.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "dist/src/components/special/meta/meta.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "dist/src/components/special/meta/meta.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "data4",
          "declaration": {
            "name": "data4",
            "module": "dist/src/components/special/meta/meta.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-complex.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Complex Extension', component: 'fhir-extension', ...renderTemplateInShell((args) => html ` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "complexExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Complex Extension', args: { data: data.complexExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/dist/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/extension-complex.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "complexExtension",
          "declaration": {
            "name": "complexExtension",
            "module": "dist/src/components/special/extension/extension-complex.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-complex.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "complexExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'http://example.org/fhir/StructureDefinition/patient-clinicalTrial', extension: [ { url: 'NCT', valueString: 'NCT00000419' }, { url: 'period', valuePeriod: { start: '2004-01-01', end: '2012-12-31' } }, { url: 'reason', valueCodeableConcept: { text: 'healthy-volunteer' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "complexExtension",
          "declaration": {
            "name": "complexExtension",
            "module": "dist/src/components/special/extension/extension-complex.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-reference-primitive.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Reference/Primitive/Example', component: 'fhir-primitive' }"
        },
        {
          "kind": "variable",
          "name": "displayBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Display', render: () => renderPrimitiveWithExtenstion({ value: data.primitiveExtension.birthDate, extension: data.primitiveExtension.extension, type: PrimitiveType.date }) }"
        },
        {
          "kind": "variable",
          "name": "structureBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Structure', render: () => renderPrimitiveWithExtenstion({ value: data.primitiveExtension.birthDate, extension: data.primitiveExtension.extension, type: PrimitiveType.date, mode: DisplayMode.structure }) }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "/dist/src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/extension-reference-primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "displayBirthDayExtension",
          "declaration": {
            "name": "displayBirthDayExtension",
            "module": "dist/src/components/special/extension/extension-reference-primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "structureBirthDayExtension",
          "declaration": {
            "name": "structureBirthDayExtension",
            "module": "dist/src/components/special/extension/extension-reference-primitive.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-reference.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Reference Examples/Primitive', component: 'fhir-primitive' }"
        },
        {
          "kind": "variable",
          "name": "displayBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Display', render: () => renderPrimitiveWithExtenstion({ value: data.primitiveExtension.birthDate, extension: data.primitiveExtension.extension, type: PrimitiveType.date }) }"
        },
        {
          "kind": "variable",
          "name": "structureBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Structure', render: () => renderPrimitiveWithExtenstion({ value: data.primitiveExtension.birthDate, extension: data.primitiveExtension.extension, type: PrimitiveType.date, mode: DisplayMode.structure }) }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "/dist/src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/extension-reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "displayBirthDayExtension",
          "declaration": {
            "name": "displayBirthDayExtension",
            "module": "dist/src/components/special/extension/extension-reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "structureBirthDayExtension",
          "declaration": {
            "name": "structureBirthDayExtension",
            "module": "dist/src/components/special/extension/extension-reference.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-reference.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "object"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        },
        {
          "kind": "variable",
          "name": "listPrimitiveExtension",
          "type": {
            "text": "object"
          },
          "default": "{ code: ['au', 'nz'], _code: [ null, { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/display', valueString: 'New Zealand a.k.a Kiwiland' } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "dist/src/components/special/extension/extension-reference.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "listPrimitiveExtension",
          "declaration": {
            "name": "listPrimitiveExtension",
            "module": "dist/src/components/special/extension/extension-reference.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-simple.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "stringExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'treatment-description', valueString: 'This is a string value' }"
        },
        {
          "kind": "variable",
          "name": "booleanExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/appointment-confirmed', valueBoolean: 'true' }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/first-visit', valueDate: '2025-05-28' }"
        },
        {
          "kind": "variable",
          "name": "datetimeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/test-start', valueDateTime: '2025-05-28T14:30:00Z' }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/price', valueDecimal: 123.45 }"
        },
        {
          "kind": "variable",
          "name": "codeableConceptExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/event-type', valueCodeableConcept: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/example', code: 'unscheduled-appointment', display: 'unscheduled appointment' } ], text: 'Unscheduled Appointment' } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/information-source', valueUri: 'https://example.org/resource' }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/passport-id', valueId: 'example-id-123' }"
        },
        {
          "kind": "variable",
          "name": "positiveIntExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/magic-number', valuePositiveInt: 42 }"
        },
        {
          "kind": "variable",
          "name": "annotationExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/clinical-note', valueAnnotation: { authorString: 'Dr. Jane Smith', time: '2025-05-15T10:30:00Z', text: 'Patient presented with symptoms of seasonal allergies.' } }"
        },
        {
          "kind": "variable",
          "name": "attachmentExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medical-scan', valueAttachment: { contentType: 'application/dicom', language: 'en', data: 'SGVsbG8gV29ybGQ=', // Base64 encoded url: 'https://example.org/fhir/Binary/1234', hash: 'EQVQoZ4Il8ZBtXlvQbPy4vVhQj0=', title: 'Chest X-Ray', creation: '2025-04-17T14:15:00Z' } }"
        },
        {
          "kind": "variable",
          "name": "base64BinaryExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/signature-image', valueBase64Binary: 'SGVsbG8gV29ybGQgQmFzZTY0IEVuY29kZWQ=' }"
        },
        {
          "kind": "variable",
          "name": "canonicalExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/profile-reference', valueCanonical: 'http://hl7.org/fhir/StructureDefinition/Patient|4.0.1' }"
        },
        {
          "kind": "variable",
          "name": "codeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/status-code', valueCode: 'active' }"
        },
        {
          "kind": "variable",
          "name": "codingExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/diagnosis-code', valueCoding: { system: 'http://snomed.info/sct', version: '2023-09', code: '73211009', display: 'Diabetes mellitus' } }"
        },
        {
          "kind": "variable",
          "name": "contactPointExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/emergency-contact', valueContactPoint: { system: 'phone', value: '+1-555-123-4567', use: 'mobile', rank: 1, period: { start: '2023-01-01', end: '2026-12-31' } } }"
        },
        {
          "kind": "variable",
          "name": "humanNameExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-name', valueHumanName: { use: 'official', family: 'Smith', given: ['John', 'Robert'], prefix: ['Mr.'], suffix: ['MD'], period: { start: '2010-01-01' } } }"
        },
        {
          "kind": "variable",
          "name": "identifierExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/insurance-number', valueIdentifier: { use: 'official', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ] }, system: 'https://example.org/fhir/identifier/insurance', value: 'INS-12345-6789', period: { start: '2024-01-01', end: '2026-01-01' }, assigner: { display: 'Example Health Insurance' } } }"
        },
        {
          "kind": "variable",
          "name": "instantExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/recorded-time', valueInstant: '2025-05-28T14:30:00.123Z' }"
        },
        {
          "kind": "variable",
          "name": "integerExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/count-value', valueInteger: 256 }"
        },
        {
          "kind": "variable",
          "name": "markdownExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/formatted-notes', valueMarkdown: '# Patient Notes\\n\\n**Important**: Patient has *medication allergies*.\\n\\n- Penicillin\\n- Sulfa drugs' }"
        },
        {
          "kind": "variable",
          "name": "moneyExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/procedure-cost', valueMoney: { value: 299.99, currency: 'USD' } }"
        },
        {
          "kind": "variable",
          "name": "periodExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/treatment-duration', valuePeriod: { start: '2025-01-15', end: '2025-02-15' } }"
        },
        {
          "kind": "variable",
          "name": "quantityExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/weight', valueQuantity: { value: 75.5, unit: 'kg', system: 'http://unitsofmeasure.org', code: 'kg' } }"
        },
        {
          "kind": "variable",
          "name": "rangeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/normal-range', valueRange: { low: { value: 60, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' }, high: { value: 100, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' } } }"
        },
        {
          "kind": "variable",
          "name": "ratioExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-dilution', valueRatio: { numerator: { value: 1, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 10, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' } } }"
        },
        {
          "kind": "variable",
          "name": "referenceExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/related-practitioner', valueReference: { reference: 'Practitioner/12345', type: 'Practitioner', display: 'Dr. Smith' } }"
        },
        {
          "kind": "variable",
          "name": "sampledDataExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/ecg-data', valueSampledData: { origin: { value: 0, unit: 'mV', system: 'http://unitsofmeasure.org', code: 'mV' }, intervalUnit: 'g/(kg.min)', factor: 1.0, lowerLimit: -10.0, upperLimit: 10.0, dimensions: 1, data: '2 2 1.5 2 2 2 1.5 2 2 2.5 2.5 2.5 3 3 3.5 3.5 3 3 2.5 2 2 1.5 1 1 1.5 2 2' } }"
        },
        {
          "kind": "variable",
          "name": "signatureExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/consent-signature', valueSignature: { type: [ { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' } ], when: '2025-05-28T13:45:00Z', who: { reference: 'Patient/123456', display: 'John Doe' }, targetFormat: 'application/pdf', sigFormat: 'image/png', data: 'SGVsbG8gV29ybGQgU2lnbmF0dXJl' // Base64 encoded } }"
        },
        {
          "kind": "variable",
          "name": "timeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-contact-time', valueTime: '14:30:00' }"
        },
        {
          "kind": "variable",
          "name": "timingExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-schedule', valueTiming: { event: ['2025-05-28T08:00:00Z', '2025-05-28T20:00:00Z'], repeat: { frequency: 2, period: 1, periodUnit: 'd', boundsDuration: { value: 14, unit: 'days', system: 'http://unitsofmeasure.org', code: 'd' } }, code: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', code: 'BID', display: 'twice daily' } ] } } }"
        },
        {
          "kind": "variable",
          "name": "unsignedIntExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/version-number', valueUnsignedInt: 3 }"
        },
        {
          "kind": "variable",
          "name": "urlExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/external-resource', valueUrl: 'https://example.org/resources/patient-education/diabetes.pdf' }"
        },
        {
          "kind": "variable",
          "name": "uuidExtension",
          "type": {
            "text": "object"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/system-identifier', valueUuid: 'urn:uuid:c757873d-ec9a-4326-a141-556f43239520' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stringExtension",
          "declaration": {
            "name": "stringExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "booleanExtension",
          "declaration": {
            "name": "booleanExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "datetimeExtension",
          "declaration": {
            "name": "datetimeExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "codeableConceptExtension",
          "declaration": {
            "name": "codeableConceptExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "positiveIntExtension",
          "declaration": {
            "name": "positiveIntExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "annotationExtension",
          "declaration": {
            "name": "annotationExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "attachmentExtension",
          "declaration": {
            "name": "attachmentExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "base64BinaryExtension",
          "declaration": {
            "name": "base64BinaryExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "canonicalExtension",
          "declaration": {
            "name": "canonicalExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "codeExtension",
          "declaration": {
            "name": "codeExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "codingExtension",
          "declaration": {
            "name": "codingExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "contactPointExtension",
          "declaration": {
            "name": "contactPointExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "humanNameExtension",
          "declaration": {
            "name": "humanNameExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "identifierExtension",
          "declaration": {
            "name": "identifierExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "instantExtension",
          "declaration": {
            "name": "instantExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "integerExtension",
          "declaration": {
            "name": "integerExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "markdownExtension",
          "declaration": {
            "name": "markdownExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "moneyExtension",
          "declaration": {
            "name": "moneyExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "periodExtension",
          "declaration": {
            "name": "periodExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "quantityExtension",
          "declaration": {
            "name": "quantityExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "rangeExtension",
          "declaration": {
            "name": "rangeExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "ratioExtension",
          "declaration": {
            "name": "ratioExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "referenceExtension",
          "declaration": {
            "name": "referenceExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "sampledDataExtension",
          "declaration": {
            "name": "sampledDataExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "signatureExtension",
          "declaration": {
            "name": "signatureExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "timeExtension",
          "declaration": {
            "name": "timeExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "timingExtension",
          "declaration": {
            "name": "timingExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "unsignedIntExtension",
          "declaration": {
            "name": "unsignedIntExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "urlExtension",
          "declaration": {
            "name": "urlExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        },
        {
          "kind": "js",
          "name": "uuidExtension",
          "declaration": {
            "name": "uuidExtension",
            "module": "dist/src/components/special/extension/extension-simple.story.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-simple1.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (primitive types)', component: 'fhir-extension', ...renderTemplateInShell((args) => html ` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "StringValueExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'String Value Extension', args: { data: data.stringExtension } }"
        },
        {
          "kind": "variable",
          "name": "BooleanValueExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Boolean Value Extension', args: { data: data.booleanExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Id Extension', args: { data: data.idExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'date Extension', args: { data: data.dateExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateTimeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'DateTime Extension', args: { data: data.datetimeExtension } }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'decimal Extension', args: { data: data.decimalExtension } }"
        },
        {
          "kind": "variable",
          "name": "postiveIntExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'postive int Extension', args: { data: data.positiveIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'uri Extension', args: { data: data.uriExtension } }"
        },
        {
          "kind": "variable",
          "name": "CanonicalExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Canonical Extension', args: { data: data.canonicalExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Code Extension', args: { data: data.codeExtension } }"
        },
        {
          "kind": "variable",
          "name": "MarkdownExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Markdown Extension', args: { data: data.markdownExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Time Extension', args: { data: data.timeExtension } }"
        },
        {
          "kind": "variable",
          "name": "UnsignedIntExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'UnsignedInt Extension', args: { data: data.unsignedIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "UrlExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Url Extension', args: { data: data.urlExtension } }"
        },
        {
          "kind": "variable",
          "name": "UuidExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Uuid Extension', args: { data: data.uuidExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/dist/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "StringValueExtension",
          "declaration": {
            "name": "StringValueExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "BooleanValueExtension",
          "declaration": {
            "name": "BooleanValueExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "dateTimeExtension",
          "declaration": {
            "name": "dateTimeExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "postiveIntExtension",
          "declaration": {
            "name": "postiveIntExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CanonicalExtension",
          "declaration": {
            "name": "CanonicalExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeExtension",
          "declaration": {
            "name": "CodeExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "MarkdownExtension",
          "declaration": {
            "name": "MarkdownExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "TimeExtension",
          "declaration": {
            "name": "TimeExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "UnsignedIntExtension",
          "declaration": {
            "name": "UnsignedIntExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "UrlExtension",
          "declaration": {
            "name": "UrlExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "UuidExtension",
          "declaration": {
            "name": "UuidExtension",
            "module": "dist/src/components/special/extension/extension-simple1.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension-simple2.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (complex types)', component: 'fhir-extension', ...renderTemplateInShell((args) => html ` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "AnnotationExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Annotation Extension', args: { data: data.annotationExtension } }"
        },
        {
          "kind": "variable",
          "name": "AttachmentExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Attachment Extension', args: { data: data.attachmentExtension } }"
        },
        {
          "kind": "variable",
          "name": "Base64BinaryExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Base64Binary Extension', args: { data: data.base64BinaryExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodingExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Coding Extension', args: { data: data.codingExtension } }"
        },
        {
          "kind": "variable",
          "name": "ContactPointExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'ContactPoint Extension', args: { data: data.contactPointExtension } }"
        },
        {
          "kind": "variable",
          "name": "HumanNameExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'HumanName Extension', args: { data: data.humanNameExtension } }"
        },
        {
          "kind": "variable",
          "name": "IdentifierExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Identifier Extension', args: { data: data.identifierExtension } }"
        },
        {
          "kind": "variable",
          "name": "InstantExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Instant Extension', args: { data: data.instantExtension } }"
        },
        {
          "kind": "variable",
          "name": "IntegerExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Integer Extension', args: { data: data.integerExtension } }"
        },
        {
          "kind": "variable",
          "name": "MoneyExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Money Extension', args: { data: data.moneyExtension } }"
        },
        {
          "kind": "variable",
          "name": "PeriodExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Period Extension', args: { data: data.periodExtension } }"
        },
        {
          "kind": "variable",
          "name": "QuantityExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Quantity Extension', args: { data: data.quantityExtension } }"
        },
        {
          "kind": "variable",
          "name": "RangeExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Range Extension', args: { data: data.rangeExtension } }"
        },
        {
          "kind": "variable",
          "name": "RatioExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Ratio Extension', args: { data: data.ratioExtension } }"
        },
        {
          "kind": "variable",
          "name": "ReferenceExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Reference Extension', args: { data: data.referenceExtension } }"
        },
        {
          "kind": "variable",
          "name": "SampledDataExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'SampledData Extension', args: { data: data.sampledDataExtension } }"
        },
        {
          "kind": "variable",
          "name": "SignatureExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Signature Extension', args: { data: data.signatureExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimingExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Timing Extension', args: { data: data.timingExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/dist/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "AnnotationExtension",
          "declaration": {
            "name": "AnnotationExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "AttachmentExtension",
          "declaration": {
            "name": "AttachmentExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Base64BinaryExtension",
          "declaration": {
            "name": "Base64BinaryExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "CodingExtension",
          "declaration": {
            "name": "CodingExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ContactPointExtension",
          "declaration": {
            "name": "ContactPointExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "HumanNameExtension",
          "declaration": {
            "name": "HumanNameExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "IdentifierExtension",
          "declaration": {
            "name": "IdentifierExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "InstantExtension",
          "declaration": {
            "name": "InstantExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "IntegerExtension",
          "declaration": {
            "name": "IntegerExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "MoneyExtension",
          "declaration": {
            "name": "MoneyExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "PeriodExtension",
          "declaration": {
            "name": "PeriodExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "QuantityExtension",
          "declaration": {
            "name": "QuantityExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "RangeExtension",
          "declaration": {
            "name": "RangeExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "RatioExtension",
          "declaration": {
            "name": "RatioExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ReferenceExtension",
          "declaration": {
            "name": "ReferenceExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "SampledDataExtension",
          "declaration": {
            "name": "SampledDataExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "SignatureExtension",
          "declaration": {
            "name": "SignatureExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "TimingExtension",
          "declaration": {
            "name": "TimingExtension",
            "module": "dist/src/components/special/extension/extension-simple2.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/extension.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Extension",
          "default": "class Extension extends BaseElement { constructor() { super('Extension'); _Extension_valueType.set(this, []); _Extension_extensionType.set(this, 'unknown'); } renderStructure(_config, data, _validations) { console.log('struct'); let templates = []; templates = [ html `<fhir-primitive key=\"url\" type=${PrimitiveType.none} .value=${data.url}></fhir-primitive>` ]; this.addTemplate(templates, data, __classPrivateFieldGet(this, _Extension_valueType, \"f\")[0]); return [ html `<fhir-wrapper label=${toStructureLabel(data)}>${templates}</fhir-wrapper>` ]; } renderDisplay(config, data, validations) { let templates = []; if (this.mode !== DisplayMode.display) { templates = [ html `<fhir-primitive key=\"url\" type=${PrimitiveType.uri} .value=${data.url}></fhir-primitive>` ]; } if (__classPrivateFieldGet(this, _Extension_extensionType, \"f\") === 'simple' && __classPrivateFieldGet(this, _Extension_valueType, \"f\")) { this.addTemplate(templates, data, __classPrivateFieldGet(this, _Extension_valueType, \"f\")[0]); } if (__classPrivateFieldGet(this, _Extension_extensionType, \"f\") === 'complex') { const subs = []; data.extension.forEach((extension, index) => this.addTemplate(subs, extension, __classPrivateFieldGet(this, _Extension_valueType, \"f\")[index])); templates.push(html `<fhir-wrapper label=${toLabel(data)}>${subs}</fhir-wrapper>`); } return templates; } decorate(data, _validations, _fetched) { reduceValueType(__classPrivateFieldGet(this, _Extension_valueType, \"f\"), data); if (__classPrivateFieldGet(this, _Extension_valueType, \"f\").length === 1) __classPrivateFieldSet(this, _Extension_extensionType, 'simple', \"f\"); if (data.extension && data.extension.length > 0) { __classPrivateFieldSet(this, _Extension_extensionType, 'complex', \"f\"); data.extension.reduce(reduceValueType, __classPrivateFieldGet(this, _Extension_valueType, \"f\")); } } validate(data, validations, _fetched) { if (!!data.url) { validations.add({ fqk: { path: [{ node: 'url' }] }, message: 'url is required' }); } } notImplementedYet() { return html ` <fhir-not-supported label=\"value${__classPrivateFieldGet(this, _Extension_valueType, \"f\")}\" description=\"${__classPrivateFieldGet(this, _Extension_valueType, \"f\")} not supported yet\" variant=\"no-impl\" ></fhir-not-supported>`; } addTemplate(templates, data, valueType) { switch (valueType) { case OpenTypeNameEnum.Age: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Annotation: templates.push(html ` <fhir-annotation key=${data.url} label=${toLabel(data)} .data=${data.valueAnnotation}></fhir-annotation> `); break; case OpenTypeNameEnum.Attachment: templates.push(html ` <fhir-attachment key=${data.url} label=${toLabel(data)} .data=${data.valueAttachment}></fhir-attachment> `); break; case OpenTypeNameEnum.Base64Binary: templates.push(valueTemplate(data, 'valueBase64Binary', PrimitiveType.base64, this.mode)); break; case OpenTypeNameEnum.Boolean: templates.push(valueTemplate(data, 'valueBoolean', PrimitiveType.boolean, this.mode)); break; case OpenTypeNameEnum.Canonical: templates.push(valueTemplate(data, 'valueCanonical', PrimitiveType.canonical, this.mode)); break; case OpenTypeNameEnum.Code: templates.push(valueTemplate(data, 'valueCode', PrimitiveType.code, this.mode)); break; case OpenTypeNameEnum.CodeableConcept: templates.push(html ` <fhir-codeable-concept key=${data.url} label=${toLabel(data)} .data=${data.valueCodeableConcept}></fhir-codeable-concept> `); break; case OpenTypeNameEnum.Coding: templates.push(html ` <fhir-coding key=${data.url} label=${toLabel(data)} .data=${data.valueCoding}></fhir-coding> `); break; case OpenTypeNameEnum.ContactDetail: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.ContactPoint: templates.push(html ` <fhir-contact-point key=${data.url} label=${toLabel(data)} .data=${data.valueContactPoint}></fhir-contact-point> `); break; case OpenTypeNameEnum.Count: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.DataRequirement: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Date: templates.push(valueTemplate(data, 'valueDate', PrimitiveType.date, this.mode)); break; case OpenTypeNameEnum.DateTime: templates.push(valueTemplate(data, 'valueDateTime', PrimitiveType.datetime, this.mode)); break; case OpenTypeNameEnum.Decimal: templates.push(valueTemplate(data, 'valueDecimal', PrimitiveType.decimal, this.mode)); break; case OpenTypeNameEnum.Distance: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Dosage: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Duration: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Expression: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.HumanName: templates.push(html ` <fhir-human-name key=${data.url} label=${toLabel(data)} .data=${data.valueHumanName}></fhir-human-name> `); break; case OpenTypeNameEnum.Id: templates.push(valueTemplate(data, 'valueId', PrimitiveType.id, this.mode)); break; case OpenTypeNameEnum.Identifier: templates.push(html ` <fhir-identifier key=${data.url} label=${toLabel(data)} .data=${data.valueIdentifier}></fhir-identifier> `); break; case OpenTypeNameEnum.Instant: templates.push(valueTemplate(data, 'valueInstant', PrimitiveType.instant, this.mode)); break; case OpenTypeNameEnum.Integer: templates.push(valueTemplate(data, 'valueInteger', PrimitiveType.integer, this.mode)); break; case OpenTypeNameEnum.Markdown: templates.push(valueTemplate(data, 'valueMarkdown', PrimitiveType.markdown, this.mode)); break; case OpenTypeNameEnum.Money: templates.push(html ` <fhir-identifier key=${data.url} label=${toLabel(data)} .data=${data.valueMoney}></fhir-identifier> `); break; case OpenTypeNameEnum.Oid: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.ParameterDefinition: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Period: templates.push(html ` <fhir-period key=${data.url} label=${toLabel(data)} .data=${data.valuePeriod}></fhir-period> `); break; case OpenTypeNameEnum.PositiveInt: templates.push(valueTemplate(data, 'valuePositiveInt', PrimitiveType.positiveInt, this.mode)); break; case OpenTypeNameEnum.Quantity: templates.push(html ` <fhir-quantity key=${data.url} label=${toLabel(data)} .data=${data.valueQuantity}></fhir-quantity> `); break; case OpenTypeNameEnum.Range: templates.push(html ` <fhir-range key=${data.url} label=${toLabel(data)} .data=${data.valueRange}></fhir-range> `); break; case OpenTypeNameEnum.Ratio: templates.push(html ` <fhir-ratio key=${data.url} label=${toLabel(data)} .data=${data.valueRatio}></fhir-ratio> `); break; case OpenTypeNameEnum.Reference: templates.push(html ` <fhir-reference key=${data.url} label=${toLabel(data)} .data=${data.valueReference}></fhir-reference> `); break; case OpenTypeNameEnum.RelatedArtifact: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.SampledData: templates.push(html ` <fhir-sampled-data key=${data.url} label=${toLabel(data)} .data=${data.valueSampledData}></fhir-sampled-data> `); break; case OpenTypeNameEnum.Signature: templates.push(html ` <fhir-signature key=${data.url} label=${toLabel(data)} .data=${data.valueSignature}></fhir-signature> `); break; case OpenTypeNameEnum.String: templates.push(valueTemplate(data, 'valueString', PrimitiveType.fhir_string, this.mode)); break; case OpenTypeNameEnum.Time: templates.push(valueTemplate(data, 'valueTime', PrimitiveType.time, this.mode)); break; case OpenTypeNameEnum.Timing: templates.push(html ` <fhir-timing key=${data.url} label=${toLabel(data)} .data=${data.valueTiming}></fhir-timing> `); break; case OpenTypeNameEnum.TriggerDefinition: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.UnsignedInt: templates.push(valueTemplate(data, 'valueUnsignedInt', PrimitiveType.unsigned_int, this.mode)); break; case OpenTypeNameEnum.Uri: templates.push(valueTemplate(data, 'valueUri', PrimitiveType.uri, this.mode)); break; case OpenTypeNameEnum.Url: templates.push(valueTemplate(data, 'valueUrl', PrimitiveType.url, this.mode)); break; case OpenTypeNameEnum.UsageContext: templates.push(this.notImplementedYet()); break; case OpenTypeNameEnum.Uuid: templates.push(valueTemplate(data, 'valueUuid', PrimitiveType.uuid, this.mode)); break; } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Extension",
          "declaration": {
            "name": "Extension",
            "module": "dist/src/components/special/extension/extension.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/configurable/fhir-configurable-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ConfigurableElement",
          "members": [
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property."
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private"
            },
            {
              "kind": "method",
              "name": "config"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ConfigurableElement",
          "declaration": {
            "name": "ConfigurableElement",
            "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/data/fhir-data-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "Abstract class representing a FHIR data element. It extends LitElement.",
          "name": "FhirDataElement",
          "members": [
            {
              "kind": "method",
              "name": "prepare"
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldPrepare"
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes",
                  "description": "The changed properties object.",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'"
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject"
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()"
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()"
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "extendedData"
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/dist/src/internal/base/configurable/fhir-configurable-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataElement",
          "declaration": {
            "name": "FhirDataElement",
            "module": "dist/src/internal/base/data/fhir-data-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/data/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-data-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/narrative/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/narrative/narrative.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/narrative/narrative.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Narrative",
          "default": "class Narrative extends BaseElement { constructor() { super('Narrative'); } renderNarrative(_config, data) { return [ html ` <div id=\"formatted-narrative\" part=\"narrative-styling\"> <div part=\"narrative\">${unsafeHTML(data.div)}</div> </div> ` ]; } renderDisplay(config, data) { return [ html ` <fhir-wrapper label=\"${config.verbose ? `summary (status:${data.status})` : 'summary'}\" ?summaryonly=${this.getDisplayConfig().summaryonly} > <div id=\"formatted-narrative\" part=\"narrative-styling\"> <div part=\"narrative\">${unsafeHTML(data.div)}</div > </div> </fhir-wrapper> ` ]; } renderStructure(_config, data) { return [ html ` <fhir-primitive label=\"status\" .value=${data.status}></fhir-primitive > <fhir-wrapper label=\"div\" variant=\"details\" ?summaryonly=${this.getDisplayConfig().summaryonly}> <fhir-primitive .value=${data.div}></fhir-primitive > </fhir-wrapper> ` ]; } /** * Override narrative styling */ async connectedCallback() { super.connectedCallback(); // Find the <style> element by its ID const styleElement = document.getElementById('fhir-beacon-narrative'); // Check if the <style> element exists and has valid text content if (styleElement && styleElement.sheet && styleElement.sheet.cssRules) { // Access the stylesheet's rules const styleSheet = styleElement.sheet; // Create a new Constructable StyleSheet const constructableSheet = new CSSStyleSheet(); Array.from(styleSheet.cssRules).forEach(rule => { constructableSheet.insertRule(rule.cssText); // Copy each rule }); // Attach to shadowRoot's adoptedStyleSheets this.shadowRoot.adoptedStyleSheets = [...this.shadowRoot.adoptedStyleSheets, constructableSheet]; } } updated(_changedProperties) { super.updated(_changedProperties); if (_changedProperties.has('data') && this.data !== NoDataObject) { if (this.data?.status) this.status = this.data.status; } } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "Narrative",
            "module": "dist/src/components/special/narrative/narrative.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/narrative/narrative.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/narrative/narrative.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Narrative', component: 'fhir-narrative', argTypes: { mode: { options: ['display', 'structure', 'narrative'], control: { type: 'inline-radio' } }, verbose: { options: [true, false], control: { type: 'boolean' } }, open: { options: [true, false], control: { type: 'boolean' } } } }"
        },
        {
          "kind": "variable",
          "name": "DisplayMode",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: narativeData, mode: 'display', showerror: false, verbose: false } }"
        },
        {
          "kind": "variable",
          "name": "NarrativeMode",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: narativeData, mode: 'narrative', showerror: false, verbose: false, open: false } }"
        },
        {
          "kind": "variable",
          "name": "StructureMode",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: narativeData, mode: 'structure', showerror: false, verbose: false, open: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/narrative/narrative.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayMode",
          "declaration": {
            "name": "DisplayMode",
            "module": "dist/src/components/special/narrative/narrative.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "NarrativeMode",
          "declaration": {
            "name": "NarrativeMode",
            "module": "dist/src/components/special/narrative/narrative.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "StructureMode",
          "declaration": {
            "name": "StructureMode",
            "module": "dist/src/components/special/narrative/narrative.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/presentable/fhir-presentable-element.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "EmptyResult",
          "type": {
            "text": "array"
          },
          "default": "[html ``]"
        },
        {
          "kind": "function",
          "name": "NullGeneratorGroup"
        },
        {
          "kind": "function",
          "name": "NullGenerators"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptyResult",
          "declaration": {
            "name": "EmptyResult",
            "module": "dist/src/internal/base/presentable/fhir-presentable-element.data.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGeneratorGroup",
          "declaration": {
            "name": "NullGeneratorGroup",
            "module": "dist/src/internal/base/presentable/fhir-presentable-element.data.js"
          }
        },
        {
          "kind": "js",
          "name": "NullGenerators",
          "declaration": {
            "name": "NullGenerators",
            "module": "dist/src/internal/base/presentable/fhir-presentable-element.data.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/presentable/fhir-presentable-element.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirPresentableElement",
          "members": [
            {
              "kind": "method",
              "name": "mustRender"
            },
            {
              "kind": "method",
              "name": "override"
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display"
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel"
            },
            {
              "kind": "method",
              "name": "render"
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed"
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ]
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "templateGenerators"
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "FhirDataElement",
            "module": "/dist/src/internal/base/data/fhir-data-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirPresentableElement",
          "declaration": {
            "name": "FhirPresentableElement",
            "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/presentable/fhir-presentable-element.styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { display: flex; flex-direction: column; flex: 1; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; /* padding: 0.2rem; */ } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/internal/base/presentable/fhir-presentable-element.styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/presentable/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/reference/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/reference/reference.data.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/reference/reference.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Reference",
          "default": "class Reference extends BaseElement { constructor() { super('Reference'); this.containedData = []; this.referenceType = ReferenceType.unknown; } renderDisplay(config, data, validation) { const summary = true; return [ html ` ${choose(this.referenceType, [ [ ReferenceType.contained, () => html ` <fhir-wrapper label=\"${this.verbose ? 'contained ref ' + data.reference : ''}\" summary ?summaryonly=${config.summaryonly} > ${renderResourceComponent(this.mappedResource, config, summary)} </fhir-wrapper> ` ], [ ReferenceType.display, () => html ` <fhir-primitive label=${data.type ? asReadable(data.type.toString()) : 'reference'} .value=${data.display} .link=${data.reference} .errormessage=${validation.msgFor('*')} summary ></fhir-primitive >` ], [ ReferenceType.reference, () => html ` <fhir-primitive label=${data.type ? asReadable(data.type.toString()) : 'reference'} .value=${data.display ? data.display : data.reference} .link=${data.reference} .errormessage=${validation.msgFor('*')} summary ></fhir-primitive >` ], [ ReferenceType.identifier, () => html ` <fhir-identifier label=\"identifier\" .data=${data.identifier} summary ></fhir-identifier >` ], [ ReferenceType.extension, () => html ` <fhir-primitive label=${data.type ? asReadable(data.type.toString()) : 'reference'} .value=${data.display || data.display || data.reference || 'undefined'} .link=${data.reference} .errormessage=${validation.msgFor('*')} summary ></fhir-primitive >` ], [ ReferenceType.unknown, () => this.data ? html ` <fhir-primitive label=${data.type ? asReadable(data.type.toString()) : 'reference'} .value=${data.display || data.display || data.reference || 'undefined'} .link=${data.reference} .errormessage=${validation.msgFor('*')} summary ></fhir-primitive > ` : nothing ] ])} ` ]; } /** * @param config * @param data * @param validations * @protected */ renderStructure(_config, data, validations) { return [ html ` <fhir-primitive label=\"reference\" .value=${data.reference} .errormessage=${validations.msgFor('reference')} summary ></fhir-primitive> <fhir-primitive type=${PrimitiveType.uri_type} label=\"type\" .value=${data.type} summary></fhir-primitive > <fhir-identifier label=\"identifier\" .data=${data.identifier} summary ></fhir-identifier > <fhir-primitive label=\"display\" .value=${data.display} summary></fhir-primitive > ` ]; } renderEditableDisplay(_config, data, validations) { //TODO: need better way to pass complex errors. Error message can not be passed to identifier return [ html ` <fhir-primitive key=\"reference\" .value=${data.reference} .errormessage=${validations.msgFor('*')} summary ></fhir-primitive> <fhir-primitive type=${PrimitiveType.uri_type} key=\"type\" .value=${data.type} summary .input=${false} ></fhir-primitive> <fhir-identifier key=\"identifier\" .data=${data.identifier} summary ></fhir-identifier> <fhir-primitive key=\"display\" .value=${data.display} summary .errormessage=${validations.msgFor('*')} ></fhir-primitive> ` ]; } validate(data, validations, fetched) { super.validate(data, validations, fetched); this.referenceType = ReferenceType.unknown; let isContainedRef = false; if (this.data && this.data.reference) { isContainedRef = this.data.reference.startsWith('#'); if (isContainedRef) this.referenceType = ReferenceType.contained; if (this.containedData && this.containedData.length > 0) { const containedDataExists = this.containedData.length > 0; if (isContainedRef && containedDataExists) { this.mappedResource = this.containedData.find(r => '#' + r.id === this.data.reference); if (this.mappedResource) { validations.rmAll(); } } } else { if (this.referenceType === ReferenceType.contained && !this.mappedResource) { validations.add({ fqk: { path: [{ node: '*' }] }, message: 'ref-1: Does not have a contained resource when reference starts with #' }); this.referenceType = ReferenceType.unknown; } } } if (this.referenceType == ReferenceType.unknown) { this.referenceType = when(data, [d => !isBlank(d.extension), ReferenceType.extension], [d => !isBlank(d.reference), ReferenceType.reference], [d => !isBlank(d.identifier), ReferenceType.identifier], [d => !isBlank(d.display), ReferenceType.display], otherwise(() => { validations.add({ fqk: { path: [{ node: '*' }] }, message: 'Ref-2: At least one of reference, identifier and display SHALL be present (unless an extension is provided).' }); return ReferenceType.unknown; })); } if (this.referenceType == ReferenceType.extension) { validations.add({ fqk: { path: [{ node: '*' }] }, message: 'Support for reference extensions is not implemented yet.' }); } this.requestUpdate(); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Reference",
            "module": "dist/src/components/special/reference/reference.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/reference/reference.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/reference/reference.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Reference', component: 'fhir-reference', ...renderTemplateInShell((args) => html ` <fhir-reference .data=${args.data} summary ?headless=${args.headless}></fhir-reference>`) }"
        },
        {
          "kind": "variable",
          "name": "DisplayAndTypeAndReference",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: patientData, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Reference",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { reference: 'http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "ReferenceAndType",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { reference: 'http://fhir.hl7.org/svc/StructureDefinition/c8973a22-2b5b-4e76-9c66-00639c99e61b', type: 'StructureDefinition' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Display",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { display: 'Dr. John Q. Public' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "DisplayAndType",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { type: 'Practitioner', display: 'Dr. John Q. Public' }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Identifier",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { identifier: { system: 'http://hl7.org/fhir/sid/us-ssn', value: '000111111' } }, mode: 'display', showerror: false, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Unknown",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { type: 'Practitioner' }, mode: 'display', showerror: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "Structure",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: patientData, mode: 'structure', showerror: false, verbose: true, open: true } }"
        },
        {
          "kind": "variable",
          "name": "WithMissingContained",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { reference: '#1234', type: 'Patient' }, mode: 'display', showerror: true, headless: true } }"
        },
        {
          "kind": "variable",
          "name": "WithExtension",
          "type": {
            "text": "object"
          },
          "default": "{ args: { data: { extension: [ { url: 'http://example.org/fhir/StructureDefinition/participation-agreement', valueUri: 'http://example.org/phr/documents/patient/general/v1' } ], ...patientData }, mode: 'display', showerror: true, headless: true } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayAndTypeAndReference",
          "declaration": {
            "name": "DisplayAndTypeAndReference",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Reference",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "ReferenceAndType",
          "declaration": {
            "name": "ReferenceAndType",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Display",
          "declaration": {
            "name": "Display",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "DisplayAndType",
          "declaration": {
            "name": "DisplayAndType",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "Identifier",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Unknown",
          "declaration": {
            "name": "Unknown",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "Structure",
          "declaration": {
            "name": "Structure",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WithMissingContained",
          "declaration": {
            "name": "WithMissingContained",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "WithExtension",
          "declaration": {
            "name": "WithExtension",
            "module": "dist/src/components/special/reference/reference.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/combo/systemChoice.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "SystemChoice",
          "default": "class SystemChoice extends LitElement { constructor() { super(); this.value = ''; this.overridable = false; this.label = ''; this.error = ''; this.addEventListener('sl-select', (evt) => { this.value = this.valuesets.filter(v => v.value === evt.detail.item.value)[0].value; this.dispatchEvent(new CustomEvent('fhir-change', { bubbles: true, composed: true, detail: { value: this.value } })); evt.stopImmediatePropagation(); }); // @ts-ignore this.addEventListener('fhir-system-choice', async (evt) => { const dropdown = this.renderRoot.querySelector('#dd'); if (dropdown) await dropdown.show(); evt.stopImmediatePropagation(); }); } //TODO: using the sl-icon instead of a button render() { const mapping = this.valuesets.filter(v => v.value === this.value); return html ` <sl-input name=${this.id} value=${mapping.length == 1 ? mapping[0].label : 'unknown'} size=\"small\" .readonly=${!this.overridable} > <fhir-label slot=\"label\" text=${this.label}></fhir-label> <fhir-error slot=\"help-text\" text=${this.error}></fhir-error> <sl-dropdown id=\"dd\" slot=\"suffix\" distance=\"10\" skidding=\"-20\" placement=\"right-start\" hoist > <sl-icon-button name=\"chevron-down\" label=\"Settings\" slot=\"trigger\" @click=${(evt) => { this.dispatchEvent(new CustomEvent('fhir-system-choice', { bubbles: true, composed: true })); evt.stopImmediatePropagation(); }} ></sl-icon-button> <sl-menu> ${this.valuesets.map(set => html ` <sl-menu-item value=${set.value}>${set.label}</sl-menu-item> `)} </sl-menu> </sl-dropdown> </sl-input> `; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SystemChoice",
          "declaration": {
            "name": "SystemChoice",
            "module": "dist/src/shell/layout/combo/systemChoice.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/util/choiceOf.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/util/choiceValidate.js",
      "declarations": [
        {
          "kind": "function",
          "name": "choiceValidate",
          "parameters": [
            {
              "name": "data",
              "description": "The data object being validated, which conforms to DomainResourceData.",
              "type": {
                "text": "DR"
              }
            },
            {
              "name": "validations",
              "description": "The validations object used to record any validation errors.",
              "type": {
                "text": "Validations"
              }
            },
            {
              "name": "name",
              "description": "The name associated with the choice being validated.",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "keys",
              "description": "An array of keys representing the choices to check.",
              "type": {
                "text": "string[]"
              }
            }
          ],
          "description": "Validates that only one of the given keys in the data object is populated.",
          "return": {
            "type": {
              "text": "void"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choiceValidate",
          "declaration": {
            "name": "choiceValidate",
            "module": "dist/src/internal/base/util/choiceValidate.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/util/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./choiceValidate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./oneOf"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/internal/base/util/oneOf.js",
      "declarations": [
        {
          "kind": "function",
          "name": "choice",
          "parameters": [
            {
              "name": "data"
            },
            {
              "name": "html"
            }
          ]
        },
        {
          "kind": "function",
          "name": "oneOf",
          "parameters": [
            {
              "name": "contextElement",
              "description": "The base element providing context state.",
              "type": {
                "text": "BaseElement"
              }
            },
            {
              "name": "name"
            },
            {
              "name": "error"
            },
            {
              "name": "choices",
              "description": "An array of choices containing data to evaluate and template to conditionally render for\nthat data.",
              "type": {
                "text": "Choice[]"
              }
            }
          ],
          "description": "Renders values when only on-of the provided choices should be rendered",
          "return": {
            "type": {
              "text": "TemplateResult | TemplateResult[]"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choice",
          "declaration": {
            "name": "choice",
            "module": "dist/src/internal/base/util/oneOf.js"
          }
        },
        {
          "kind": "js",
          "name": "oneOf",
          "declaration": {
            "name": "oneOf",
            "module": "dist/src/internal/base/util/oneOf.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/badge-group/badge-group-styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { --badge-color: var(--sl-color-gray-500); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); margin: 0; } sl-badge::part(base) { color: var(--badge-color); background-color: var(--badge-background); border-color: var(--badge-border); font-weight: var(--sl-font-weight-normal); font-style: italic; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/shell/layout/badge-group/badge-group-styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/badge-group/badge-group.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "BadgeGroup",
          "default": "class BadgeGroup extends LitElement { constructor() { super(...arguments); this.resource = ''; this.summary = false; this.constraint = false; this.required = false; this.profile = ''; } willUpdate(changes) { super.willUpdate(changes); if (changes.has('resource') || changes.has('summary') || changes.has('constraint') || changes.has('required') || changes.has('profile')) { this.badges = []; if (this.summary) { this.badges.push({ label: '∑', type: BadgeType.summary }); } if (this.constraint) { this.badges.push({ label: 'C', type: BadgeType.constraint }); } if (this.required) { this.badges.push({ label: 'R', type: BadgeType.required }); } if (!isBlank(this.resource)) { this.badges.push({ label: this.resource, type: BadgeType.resource }); } if (!isBlank(this.profile)) { this.badges.push({ label: this.profile, type: BadgeType.profile }); } } } render() { return badgeTemplates(this.badges); } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeGroup",
          "declaration": {
            "name": "BadgeGroup",
            "module": "dist/src/shell/layout/badge-group/badge-group.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/badge-group/badgeTemplates.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "BadgeType"
        },
        {
          "kind": "function",
          "name": "badgeTemplates",
          "parameters": [
            {
              "name": "badges"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeType",
          "declaration": {
            "name": "BadgeType",
            "module": "dist/src/shell/layout/badge-group/badgeTemplates.js"
          }
        },
        {
          "kind": "js",
          "name": "badgeTemplates",
          "declaration": {
            "name": "badgeTemplates",
            "module": "dist/src/shell/layout/badge-group/badgeTemplates.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/badge-group/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badgeTemplates"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/strap.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "generators",
          "type": {
            "text": "object"
          },
          "default": "{ 'fhir-identifier': (data, label, key) => html ` <fhir-identifier key=${key} label=${label} .data=${data} summary></fhir-identifier>`, 'fhir-codeable-concept': (data, label, key) => html ` <fhir-codeable-concept key=${key} label=${label} .data=${data} summary></fhir-codeable-concept>`, 'fhir-codeable-reference': (data, label, key) => html ` <fhir-codeable-reference key=${key} label=${label} .data=${data} summary></fhir-codeable-reference>`, 'fhir-reference': (data, label, key) => html ` <fhir-reference key=${key} label=${label} .data=${data} summary></fhir-reference>` }"
        },
        {
          "kind": "function",
          "name": "strap",
          "parameters": [
            {
              "name": "{ key, pluralBase, collection, generator, summary = true, config }"
            },
            {
              "description": "key defined in spec",
              "name": "key"
            },
            {
              "description": "optional. key will be used if not defined",
              "name": "pluralBase"
            },
            {
              "description": "data",
              "name": "collection"
            },
            {
              "description": "name of element (ex:fhir-identifier) or generator function",
              "name": "generator"
            },
            {
              "description": "defaults to true if not provided",
              "name": "summary"
            },
            {
              "description": "display config",
              "name": "config"
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "generators",
          "declaration": {
            "name": "generators",
            "module": "dist/src/shell/layout/wrapper/strap.js"
          }
        },
        {
          "kind": "js",
          "name": "strap",
          "declaration": {
            "name": "strap",
            "module": "dist/src/shell/layout/wrapper/strap.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/strapLines.js",
      "declarations": [
        {
          "kind": "function",
          "name": "strapLines",
          "parameters": [
            {
              "name": "key"
            },
            {
              "name": "label"
            },
            {
              "name": "collection"
            },
            {
              "name": "verbose"
            },
            {
              "name": "generator"
            },
            {
              "name": "summary",
              "default": "true"
            },
            {
              "name": "summaryMode",
              "default": "false"
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strapLines",
          "declaration": {
            "name": "strapLines",
            "module": "dist/src/shell/layout/wrapper/strapLines.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/wrap.js",
      "declarations": [
        {
          "kind": "function",
          "name": "wrap",
          "parameters": [
            {
              "name": "{ key, pluralBase, collection, generator, summary = true, config }"
            },
            {
              "description": "The key to use for generating labels.",
              "name": "key"
            },
            {
              "description": "The base string to pluralize for the label of the wrapper.",
              "name": "pluralBase"
            },
            {
              "description": "The collection of items to wrap.",
              "name": "collection"
            },
            {
              "description": "The function to generate the content of each item in the wrapper.",
              "name": "generator"
            },
            {
              "description": "Whether to display a summary or detailed view of the items in the wrapper.",
              "name": "summary"
            },
            {
              "name": "config"
            }
          ],
          "description": "Wraps a collection of items with a `<fhir-wrapper>` component.",
          "return": {
            "type": {
              "text": ""
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrap",
          "declaration": {
            "name": "wrap",
            "module": "dist/src/shell/layout/wrapper/wrap.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/wrapLines.js",
      "declarations": [
        {
          "kind": "function",
          "name": "wrapLines",
          "parameters": [
            {
              "name": "key",
              "description": "The key to be used for wrapping lines. It will be converted to lower case."
            },
            {
              "name": "label",
              "description": "The base string to be used for pluralization."
            },
            {
              "name": "collection",
              "description": "The array of strings to be processed."
            },
            {
              "name": "verbose",
              "description": "A boolean value indicating whether the verbose mode is enabled or not."
            },
            {
              "name": "generator",
              "description": "A function to generate a TemplateResult based on the provided data, label, and key."
            },
            {
              "name": "summary",
              "default": "true",
              "description": "An optional boolean value indicating whether to display the summary or not."
            },
            {
              "name": "summaryMode",
              "default": "false"
            }
          ],
          "description": "Wraps lines based on the given parameters.",
          "return": {
            "type": {
              "text": ""
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrapLines",
          "declaration": {
            "name": "wrapLines",
            "module": "dist/src/shell/layout/wrapper/wrapLines.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/wrapper-styles.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css ` :host { width: 100%; /*display: flex; flex: 1; */ --badge-color: var(--sl-color-gray-400); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); } label { font-style: italic; font-weight: 500; color: var(--sl-color-primary-700); margin-right: 0.5rem; } #arrow { margin-left: var(--sl-spacing-small); color: var(--sl-color-gray-400); font-style: italic; font-size: var(--sl-font-size-large); font-weight: var(--sl-font-weight-medium); font-family: var(--sl-font-serif), serif; } .items, .details_items { /*width: clamp(calc(27rem - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)), 80%, calc(90% - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)));*/ width:fit-content; margin: var(--sl-spacing-3x-small) 0 0 var(--sl-spacing-large); border-left-width: 0.06rem; } .items { padding: 0; border-left-style: unset; } .details_items { padding: 0 0 0 var(--sl-spacing-2x-small); border-left-style: unset; border-left-color: var(--sl-color-neutral-100); } ::part(wrapped) { padding-left: 0.3rem; } sl-details::part(base) { border: none; border-radius: 0; background: none; margin-top: 0.3rem; padding: 0 0 0 0; } sl-details::part(header) { padding: var(--sl-spacing-small); padding-top: 0.2rem; padding-bottom: 0; padding-left: 0.2rem; border-top: solid 1px var(--sl-color-neutral-200); border-left: solid 1px var(--sl-color-neutral-200); } sl-details::part(summary-icon) { padding: 0 0 0 0; margin: 0 0 0 var(--sl-spacing-large); } sl-details::part(content) { display: flex; flex: 1; padding-top: 0; padding-right: 0; padding-left: 0.2rem; padding-bottom: 0; border-left: solid 1px var(--sl-color-neutral-200); } sl-details.custom-icons::part(summary-icon) { /* Disable the expand/collapse animation */ rotate: none; } sl-icon { color: var(--sl-color-neutral-300); } .variant-error-label { color: var(--sl-color-neutral-50); font-weight: normal; background-color: var(--sl-color-red-300); padding: 0.2rem; border-radius: 0.2rem; } .variant-error { margin-top: 1rem; padding: 0.5rem; background-color: var(--sl-color-red-100); border-radius: 0.5rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "dist/src/shell/layout/wrapper/wrapper-styles.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/wrapper.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Wrapper",
          "default": "class Wrapper extends LitElement { constructor() { super(...arguments); this.variant = 'none'; this.key = 'items'; this.label = ''; this.headless = false; this.badgeResource = ''; this.badgeSummary = false; this.badgeConstraint = false; this.badgeRequired = false; this.badgeProfile = ''; this.open = false; this.summary = false; this.summaryonly = false; } render() { if (!this.summaryonly || (this.summary && this.summaryonly)) { let content; const arrow = this.variant === 'details' ? nothing : html `<span id=\"arrow\">&#x21B4;</span>`; const label = (this.label && !this.headless) ? html `<label for=\"${this.key}\" class=${classMap({ 'variant-error-label': (this.variant === 'error') })} >${this.label}${arrow}</label>` : nothing; switch (this.variant) { case 'none': content = html ` ${label} <ol id=${this.key} class=\"items\"> <slot id=\"${this.key}\"></slot> </ol> `; break; case 'details': { const summary = html ` <div slot=\"summary\"> ${label} <fhir-badge-group resource=${isDefined(this.badgeResource)} ?summary=${this.badgeSummary} ?constraint=${this.badgeConstraint} ?required=${this.badgeRequired} profile=${this.badgeProfile} ></fhir-badge-group> </div> <sl-icon name=\"dash-square\" slot=\"collapse-icon\"></sl-icon> <sl-icon name=\"plus-square\" slot=\"expand-icon\"></sl-icon> `; content = html ` <sl-details class=\"custom-icons\" ?open=${this.open}> ${summary} <ol id=${this.key} class=\"details_items\"> <slot></slot> </ol> </sl-details> `; break; } case 'error': content = html ` <div class=\"variant-error\"> ${label} <div id='error' class=\"items\"> <slot id=\"${this.key}\"></slot> </div> </div> `; break; } return html ` <section id=\"wrapped\" part=\"wrapped\"> ${content} </section> `; } return EmptyResult; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SlDetails",
          "declaration": {
            "name": "SlDetails",
            "package": "@shoelace-style/shoelace"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "dist/src/shell/layout/wrapper/wrapper.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/shell/layout/wrapper/wrapper.spec.js",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/balance.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Balance",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Balance",
          "declaration": {
            "name": "Balance",
            "module": "src/components/resources/account/backbone/balance.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/coverage.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Coverage",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coverage",
          "declaration": {
            "name": "Coverage",
            "module": "src/components/resources/account/backbone/coverage.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/diagnosis.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Diagnosis",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountDiagnosisData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountDiagnosisData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Diagnosis",
          "declaration": {
            "name": "Diagnosis",
            "module": "src/components/resources/account/backbone/diagnosis.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/guarantor.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Guarantor",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Guarantor",
          "declaration": {
            "name": "Guarantor",
            "module": "src/components/resources/account/backbone/guarantor.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/procedure.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Procedure",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountProcedureData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountProcedureData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Procedure",
          "declaration": {
            "name": "Procedure",
            "module": "src/components/resources/account/backbone/procedure.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/related-account.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RelatedAccount",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              },
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "willUpdate",
              "parameters": [
                {
                  "name": "changes"
                }
              ],
              "description": "Updates the component's state based on the changed properties.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "parameters": [
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "_fetched"
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "parameters": [
                {
                  "name": "_providedData"
                },
                {
                  "name": "_decoratedData"
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_changes"
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "privacy": "protected",
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "parameters": [
                {
                  "name": "_config"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_haveChanged"
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "BaseElement",
                "module": "dist/src/internal/BaseElement.js"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "parameters": [
                {
                  "name": "_displayConfig"
                },
                {
                  "name": "_data"
                },
                {
                  "name": "_validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "render",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "updated",
              "parameters": [
                {
                  "name": "_changedProperties"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "parameters": [
                {
                  "name": "config"
                },
                {
                  "name": "data"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "parameters": [
                {
                  "name": "_"
                },
                {
                  "name": "data"
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "parameters": [
                {
                  "name": "child"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "dist/src/internal/base/presentable/fhir-presentable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "parameters": [
                {
                  "name": "_changes"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "parameters": [
                {
                  "name": "dataPath"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "parameters": [
                {
                  "name": "data",
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key the element is known as in its parent data structure",
              "default": "'nokey'",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "description": "Element data",
              "default": "NoDataObject",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "description": "An array of objects representing validation errors.",
              "type": {
                "text": "ValidationErrors"
              },
              "default": "new FqkMap()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "dist/src/internal/base/data/fhir-data-element.js"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "dist/src/internal/base/configurable/fhir-configurable-element.js"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RelatedAccount",
          "declaration": {
            "name": "RelatedAccount",
            "module": "src/components/resources/account/backbone/related-account.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/reference-primitive/extension-reference-primitive.stories.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Reference/Primitive/Example', component: 'fhir-primitive', argTypes, args, render: (args: any) => template(args), parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "displayBirthDayExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Display', args: { key:'birthDate', value: data.primitiveExtension.birthDate, // @ts-ignore extension: data.primitiveExtension._birthDate, type: PrimitiveType.date } }"
        },
        {
          "kind": "variable",
          "name": "structureBirthDayExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Structure', args: { key:'birthDate', value: data.primitiveExtension.birthDate, // @ts-ignore extension: data.primitiveExtension._birthDate, type: PrimitiveType.date, mode: DisplayMode.structure } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "/src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "displayBirthDayExtension",
          "declaration": {
            "name": "displayBirthDayExtension",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.stories.ts"
          }
        },
        {
          "kind": "js",
          "name": "structureBirthDayExtension",
          "declaration": {
            "name": "structureBirthDayExtension",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.stories.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "FhirElementData & { birthDate: FhirDate }"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/balance.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Balance",
          "default": "class Balance extends Backbone { constructor() { super('AccountBalance'); } renderDisplay(_, data) { return this.renderAll(_, data); } renderStructure(_, data) { return this.renderAll(_, data); } renderAll(_, data) { return [ html ` <fhir-codeable-concept key=\"aggregate\" .data=${data.aggregate}></fhir-codeable-concept> <fhir-codeable-concept key=\"term\" .data=${data.term}></fhir-codeable-concept> <fhir-primitive key=\"estimate\" .value=${data.estimate} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-money key=\"amount\" .data=${data.amount}></fhir-money> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Balance",
          "declaration": {
            "name": "Balance",
            "module": "dist/src/components/resources/account/backbone/balance.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/coverage.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Coverage",
          "default": "class Coverage extends Backbone { constructor() { super('AccountCoverage'); } renderDisplay(_, data) { return this.renderAll(_, data); } renderStructure(_, data) { return this.renderAll(_, data); } renderAll(_, data) { return [ html ` <fhir-reference key=\"coverage\" .data=${data.coverage}></fhir-reference> <fhir-primitive key=\"priority\" .value=${data.priority} .type=${PrimitiveType.positiveInt}></fhir-primitive> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coverage",
          "declaration": {
            "name": "Coverage",
            "module": "dist/src/components/resources/account/backbone/coverage.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/diagnosis.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Diagnosis",
          "default": "class Diagnosis extends Backbone { constructor() { super('AccountDiagnosis'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"sequence\" .value=${data.sequence} .type=${PrimitiveType.positiveInt}></fhir-primitive> <fhir-codeable-reference key=\"condition\" .data=${data.condition}></fhir-codeable-reference> <fhir-primitive key=\"dateOfOrigin\" .value=${data.dateOfDiagnosis} type=${PrimitiveType.datetime} ></fhir-primitive> ${wrap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} <fhir-primitive key=\"onAdmission\" .value=${data.onAdmission} .type=${PrimitiveType.boolean}></fhir-primitive> ${wrap({ key: 'packageCode', collection: data.packageCode, generator: 'fhir-codeable-concept', config })} ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"sequence\" .value=${data.sequence} .type=${PrimitiveType.positiveInt}></fhir-primitive> <fhir-codeable-reference key=\"condition\" .data=${data.condition}></fhir-codeable-reference> <fhir-primitive key=\"dateOfOrigin\" .value=${data.dateOfDiagnosis} type=${PrimitiveType.datetime} ></fhir-primitive> ${strap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} <fhir-primitive key=\"onAdmission\" .value=${data.onAdmission} .type=${PrimitiveType.boolean}></fhir-primitive> ${strap({ key: 'packageCode', collection: data.packageCode, generator: 'fhir-codeable-concept', config })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Diagnosis",
          "declaration": {
            "name": "Diagnosis",
            "module": "dist/src/components/resources/account/backbone/diagnosis.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/guarantor.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Guarantor",
          "default": "class Guarantor extends Backbone { constructor() { super('AccountGuarantor'); } renderDisplay(_, data) { return this.renderAll(_, data); } renderStructure(_, data) { return this.renderAll(_, data); } renderAll(_, data) { return [ html ` <fhir-reference key=\"party\" .data=${data.party}></fhir-reference> <fhir-primitive key=\"onHold\" .value=${data.onHold} .type=${PrimitiveType.boolean}></fhir-primitive> <fhir-period key=\"period\" .data=${data.period}></fhir-period> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Guarantor",
          "declaration": {
            "name": "Guarantor",
            "module": "dist/src/components/resources/account/backbone/guarantor.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/procedure.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "Procedure",
          "default": "class Procedure extends Backbone { constructor() { super('AccountProcedure'); } renderDisplay(config, data) { return [ html ` <fhir-primitive key=\"sequence\" .value=${data.sequence} .type=${positiveInt}></fhir-primitive> <fhir-codeable-concept key=\"code\" .data=${data.code}></fhir-codeable-concept> <fhir-primitive key=\"dateOfService\" .value=${data.dateOfService} .type=${datetime} ></fhir-primitive> ${wrap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'packageCode', collection: data.packageCode, generator: 'fhir-codeable-concept', config })} ${wrap({ key: 'device', collection: data.device, generator: 'fhir-reference', config })} ` ]; } renderStructure(config, data) { return [ html ` <fhir-primitive key=\"sequence\" .value=${data.sequence} .type=${positiveInt}></fhir-primitive> <fhir-codeable-concept key=\"code\" .data=${data.code}></fhir-codeable-concept> <fhir-primitive key=\"dateOfService\" .value=${data.dateOfService} .type=${datetime} ></fhir-primitive> ${strap({ key: 'type', collection: data.type, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'packageCode', collection: data.packageCode, generator: 'fhir-codeable-concept', config })} ${strap({ key: 'device', collection: data.device, generator: 'fhir-reference', config })} ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Procedure",
          "declaration": {
            "name": "Procedure",
            "module": "dist/src/components/resources/account/backbone/procedure.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/resources/account/backbone/related-account.backbone.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "RelatedAccount",
          "default": "class RelatedAccount extends Backbone { constructor() { super('RelatedAccount'); } renderDisplay(_, data) { return this.renderAll(_, data); } renderStructure(_, data) { return this.renderAll(_, data); } renderAll(_, data) { return [ html ` <fhir-codeable-concept key=\"relationship\" .data=${data.relationship}></fhir-codeable-concept> <fhir-reference key=\"account\" .data=${data.account}></fhir-reference> ` ]; } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RelatedAccount",
          "declaration": {
            "name": "RelatedAccount",
            "module": "dist/src/components/resources/account/backbone/related-account.backbone.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.stories.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Reference/Primitive/Example', component: 'fhir-primitive', argTypes, args, render: (args) => template(args), parameters: { actions: { handles: events } } }"
        },
        {
          "kind": "variable",
          "name": "displayBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Display', args: { key: 'birthDate', value: data.primitiveExtension.birthDate, // @ts-ignore extension: data.primitiveExtension._birthDate, type: PrimitiveType.date } }"
        },
        {
          "kind": "variable",
          "name": "structureBirthDayExtension",
          "type": {
            "text": "object"
          },
          "default": "{ name: 'Structure', args: { key: 'birthDate', value: data.primitiveExtension.birthDate, // @ts-ignore extension: data.primitiveExtension._birthDate, type: PrimitiveType.date, mode: DisplayMode.structure } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "/dist/src/components/primitive"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "displayBirthDayExtension",
          "declaration": {
            "name": "displayBirthDayExtension",
            "module": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.stories.js"
          }
        },
        {
          "kind": "js",
          "name": "structureBirthDayExtension",
          "declaration": {
            "name": "structureBirthDayExtension",
            "module": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.stories.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.js",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "object"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "dist/src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.js"
          }
        }
      ]
    }
  ]
}
