{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/DatatypeDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR datatypes",
          "name": "DatatypeDef",
          "members": [
            {
              "kind": "field",
              "name": "Address",
              "static": true,
              "default": "new DatatypeDef('Address')"
            },
            {
              "kind": "field",
              "name": "Age",
              "static": true,
              "default": "new DatatypeDef('Age')"
            },
            {
              "kind": "field",
              "name": "Annotation",
              "static": true,
              "default": "new DatatypeDef('Annotation')"
            },
            {
              "kind": "field",
              "name": "Attachment",
              "static": true,
              "default": "new DatatypeDef('Attachment')"
            },
            {
              "kind": "field",
              "name": "Availability",
              "static": true,
              "default": "new DatatypeDef('Availability')"
            },
            {
              "kind": "field",
              "name": "CodeableConcept",
              "static": true,
              "default": "new DatatypeDef('CodeableConcept')"
            },
            {
              "kind": "field",
              "name": "CodeableReference",
              "static": true,
              "default": "new DatatypeDef('CodeableReference')"
            },
            {
              "kind": "field",
              "name": "Coding",
              "static": true,
              "default": "new DatatypeDef('Coding')"
            },
            {
              "kind": "field",
              "name": "ContactDetail",
              "static": true,
              "default": "new DatatypeDef('ContactDetail')"
            },
            {
              "kind": "field",
              "name": "ContactPoint",
              "static": true,
              "default": "new DatatypeDef('ContactPoint')"
            },
            {
              "kind": "field",
              "name": "Contributor",
              "static": true,
              "default": "new DatatypeDef('Contributor')"
            },
            {
              "kind": "field",
              "name": "Count",
              "static": true,
              "default": "new DatatypeDef('Count')"
            },
            {
              "kind": "field",
              "name": "DataRequirement",
              "static": true,
              "default": "new DatatypeDef('DataRequirement')"
            },
            {
              "kind": "field",
              "name": "Distance",
              "static": true,
              "default": "new DatatypeDef('Distance')"
            },
            {
              "kind": "field",
              "name": "Dosage",
              "static": true,
              "default": "new DatatypeDef('Dosage')"
            },
            {
              "kind": "field",
              "name": "Duration",
              "static": true,
              "default": "new DatatypeDef('Duration')"
            },
            {
              "kind": "field",
              "name": "ElementDefinition",
              "static": true,
              "default": "new DatatypeDef('ElementDefinition')"
            },
            {
              "kind": "field",
              "name": "Expression",
              "static": true,
              "default": "new DatatypeDef('Expression')"
            },
            {
              "kind": "field",
              "name": "ExtendedContactDetail",
              "static": true,
              "default": "new DatatypeDef('ExtendedContactDetail')"
            },
            {
              "kind": "field",
              "name": "Extension",
              "static": true,
              "default": "new DatatypeDef('Extension')"
            },
            {
              "kind": "field",
              "name": "HumanName",
              "static": true,
              "default": "new DatatypeDef('HumanName')"
            },
            {
              "kind": "field",
              "name": "Identifier",
              "static": true,
              "default": "new DatatypeDef('Identifier')"
            },
            {
              "kind": "field",
              "name": "MarketingStatus",
              "static": true,
              "default": "new DatatypeDef('MarketingStatus')"
            },
            {
              "kind": "field",
              "name": "Meta",
              "static": true,
              "default": "new DatatypeDef('Meta')"
            },
            {
              "kind": "field",
              "name": "MonetaryComponent",
              "static": true,
              "default": "new DatatypeDef('MonetaryComponent')"
            },
            {
              "kind": "field",
              "name": "Money",
              "static": true,
              "default": "new DatatypeDef('Money')"
            },
            {
              "kind": "field",
              "name": "Narrative",
              "static": true,
              "default": "new DatatypeDef('Narrative')"
            },
            {
              "kind": "field",
              "name": "ParameterDefinition",
              "static": true,
              "default": "new DatatypeDef('ParameterDefinition')"
            },
            {
              "kind": "field",
              "name": "Period",
              "static": true,
              "default": "new DatatypeDef('Period')"
            },
            {
              "kind": "field",
              "name": "ProductShelfLife",
              "static": true,
              "default": "new DatatypeDef('ProductShelfLife')"
            },
            {
              "kind": "field",
              "name": "Quantity",
              "static": true,
              "default": "new DatatypeDef('Quantity')"
            },
            {
              "kind": "field",
              "name": "Range",
              "static": true,
              "default": "new DatatypeDef('Range')"
            },
            {
              "kind": "field",
              "name": "Ratio",
              "static": true,
              "default": "new DatatypeDef('Ratio')"
            },
            {
              "kind": "field",
              "name": "RatioRange",
              "static": true,
              "default": "new DatatypeDef('RatioRange')"
            },
            {
              "kind": "field",
              "name": "Reference",
              "static": true,
              "default": "new DatatypeDef('Reference')"
            },
            {
              "kind": "field",
              "name": "RelatedArtifact",
              "static": true,
              "default": "new DatatypeDef('RelatedArtifact')"
            },
            {
              "kind": "field",
              "name": "SampledData",
              "static": true,
              "default": "new DatatypeDef('SampledData')"
            },
            {
              "kind": "field",
              "name": "SimpleQuantity",
              "static": true,
              "default": "new DatatypeDef('SimpledQuantity')"
            },
            {
              "kind": "field",
              "name": "Signature",
              "static": true,
              "default": "new DatatypeDef('Signature')"
            },
            {
              "kind": "field",
              "name": "Timing",
              "static": true,
              "default": "new DatatypeDef('Timing')"
            },
            {
              "kind": "field",
              "name": "TriggerDefinition",
              "static": true,
              "default": "new DatatypeDef('TriggerDefinition')"
            },
            {
              "kind": "field",
              "name": "UsageContext",
              "static": true,
              "default": "new DatatypeDef('UsageContext')"
            },
            {
              "kind": "field",
              "name": "VirtualServiceDetail",
              "static": true,
              "default": "new DatatypeDef('VirtualServiceDetail')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "DatatypeName | `${DatatypeName}${string}`"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "field",
              "name": "dataset",
              "type": {
                "text": "`${DatatypeName | `${DatatypeName}${string}`}Data`"
              },
              "readonly": true,
              "default": "`${value}Data`"
            },
            {
              "kind": "field",
              "name": "profileName",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "DatatypeDef[]"
                }
              },
              "description": "Get all available FHIR datatype names"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR datatype names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR datatype name"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "DatatypeDef|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
          "default": "DatatypeDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DatatypeDef",
          "declaration": {
            "name": "DatatypeDef",
            "module": "src/DatatypeDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
          "declaration": {
            "name": "{\n  Address,\n  Age,\n  Annotation,\n  Attachment,\n  Availability,\n  CodeableConcept,\n  CodeableReference,\n  Coding,\n  ContactDetail,\n  ContactPoint,\n  Contributor,\n  Count,\n  DataRequirement,\n  Distance,\n  Dosage,\n  Duration,\n  ElementDefinition,\n  Expression,\n  ExtendedContactDetail,\n  Extension,\n  HumanName,\n  Identifier,\n  MarketingStatus,\n  Meta,\n  MonetaryComponent,\n  Money,\n  Narrative,\n  ParameterDefinition,\n  Period,\n  ProductShelfLife,\n  Quantity,\n  Range,\n  Ratio,\n  RatioRange,\n  Reference,\n  RelatedArtifact,\n  SampledData,\n  SimpleQuantity,\n  Signature,\n  Timing,\n  TriggerDefinition,\n  UsageContext,\n  VirtualServiceDetail\n}",
            "module": "src/DatatypeDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/DatatypeName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/DatatypeType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/OpenType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR primitive datatypes",
          "name": "PrimitiveDef",
          "members": [
            {
              "kind": "field",
              "name": "base64Binary",
              "static": true,
              "default": "new PrimitiveDef('base64Binary')"
            },
            {
              "kind": "field",
              "name": "boolean",
              "static": true,
              "default": "new PrimitiveDef('boolean')"
            },
            {
              "kind": "field",
              "name": "canonical",
              "static": true,
              "default": "new PrimitiveDef('canonical')"
            },
            {
              "kind": "field",
              "name": "code",
              "static": true,
              "default": "new PrimitiveDef('code')"
            },
            {
              "kind": "field",
              "name": "date",
              "static": true,
              "default": "new PrimitiveDef('date')"
            },
            {
              "kind": "field",
              "name": "dateTime",
              "static": true,
              "default": "new PrimitiveDef('dateTime')"
            },
            {
              "kind": "field",
              "name": "decimal",
              "static": true,
              "default": "new PrimitiveDef('decimal')"
            },
            {
              "kind": "field",
              "name": "id",
              "static": true,
              "default": "new PrimitiveDef('id')"
            },
            {
              "kind": "field",
              "name": "instant",
              "static": true,
              "default": "new PrimitiveDef('instant')"
            },
            {
              "kind": "field",
              "name": "integer",
              "static": true,
              "default": "new PrimitiveDef('integer')"
            },
            {
              "kind": "field",
              "name": "integer64",
              "static": true,
              "default": "new PrimitiveDef('integer64')"
            },
            {
              "kind": "field",
              "name": "markdown",
              "static": true,
              "default": "new PrimitiveDef('markdown')"
            },
            {
              "kind": "field",
              "name": "oid",
              "static": true,
              "default": "new PrimitiveDef('oid')"
            },
            {
              "kind": "field",
              "name": "positiveInt",
              "static": true,
              "default": "new PrimitiveDef('positiveInt')"
            },
            {
              "kind": "field",
              "name": "string",
              "static": true,
              "default": "new PrimitiveDef('string')"
            },
            {
              "kind": "field",
              "name": "time",
              "static": true,
              "default": "new PrimitiveDef('time')"
            },
            {
              "kind": "field",
              "name": "unsignedInt",
              "static": true,
              "default": "new PrimitiveDef('unsignedInt')"
            },
            {
              "kind": "field",
              "name": "uri",
              "static": true,
              "default": "new PrimitiveDef('uri')"
            },
            {
              "kind": "field",
              "name": "url",
              "static": true,
              "default": "new PrimitiveDef('url')"
            },
            {
              "kind": "field",
              "name": "uuid",
              "static": true,
              "default": "new PrimitiveDef('uuid')"
            },
            {
              "kind": "field",
              "name": "xhtml",
              "static": true,
              "default": "new PrimitiveDef('xhtml')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "PrimitiveName"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "description": "Get all available FHIR primitive datatype names",
              "return": {
                "type": {
                  "text": "PrimitiveDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR primitive datatype names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR primitive datatype name"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "PrimitiveDef|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
          "default": "PrimitiveDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveDef",
          "declaration": {
            "name": "PrimitiveDef",
            "module": "src/PrimitiveDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
          "declaration": {
            "name": "{\n  base64Binary,\n  boolean,\n  canonical,\n  code,\n  date,\n  dateTime,\n  decimal,\n  id,\n  instant,\n  integer,\n  integer64,\n  markdown,\n  oid,\n  positiveInt,\n  string,\n  time,\n  unsignedInt,\n  uri,\n  url,\n  uuid,\n  xhtml\n}",
            "module": "src/PrimitiveDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/PrimitiveTypes.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceDef.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Enum class representing FHIR resource types\nTODO: bind data models to these enums so we get something like `new\nResourceDef<AccountData>('Account','AccountData')`",
          "name": "ResourceDef",
          "members": [
            {
              "kind": "field",
              "name": "Account",
              "static": true,
              "default": "new ResourceDef('Account')"
            },
            {
              "kind": "field",
              "name": "ActivityDefinition",
              "static": true,
              "default": "new ResourceDef('ActivityDefinition')"
            },
            {
              "kind": "field",
              "name": "ActorDefinition",
              "static": true,
              "default": "new ResourceDef('ActorDefinition')"
            },
            {
              "kind": "field",
              "name": "AdministrableProductDefinition",
              "static": true,
              "default": "new ResourceDef('AdministrableProductDefinition')"
            },
            {
              "kind": "field",
              "name": "AdverseEvent",
              "static": true,
              "default": "new ResourceDef('AdverseEvent')"
            },
            {
              "kind": "field",
              "name": "AllergyIntolerance",
              "static": true,
              "default": "new ResourceDef('AllergyIntolerance')"
            },
            {
              "kind": "field",
              "name": "Appointment",
              "static": true,
              "default": "new ResourceDef('Appointment')"
            },
            {
              "kind": "field",
              "name": "AppointmentResponse",
              "static": true,
              "default": "new ResourceDef('AppointmentResponse')"
            },
            {
              "kind": "field",
              "name": "ArtifactAssessment",
              "static": true,
              "default": "new ResourceDef('ArtifactAssessment')"
            },
            {
              "kind": "field",
              "name": "AuditEvent",
              "static": true,
              "default": "new ResourceDef('AuditEvent')"
            },
            {
              "kind": "field",
              "name": "Basic",
              "static": true,
              "default": "new ResourceDef('Basic')"
            },
            {
              "kind": "field",
              "name": "Binary",
              "static": true,
              "default": "new ResourceDef('Binary')"
            },
            {
              "kind": "field",
              "name": "BiologicallyDerivedProduct",
              "static": true,
              "default": "new ResourceDef('BiologicallyDerivedProduct')"
            },
            {
              "kind": "field",
              "name": "BiologicallyDerivedProductDispense",
              "static": true,
              "default": "new ResourceDef('BiologicallyDerivedProductDispense')"
            },
            {
              "kind": "field",
              "name": "BodyStructure",
              "static": true,
              "default": "new ResourceDef('BodyStructure')"
            },
            {
              "kind": "field",
              "name": "Bundle",
              "static": true,
              "default": "new ResourceDef('Bundle')"
            },
            {
              "kind": "field",
              "name": "CapabilityStatement",
              "static": true,
              "default": "new ResourceDef('CapabilityStatement')"
            },
            {
              "kind": "field",
              "name": "CarePlan",
              "static": true,
              "default": "new ResourceDef('CarePlan')"
            },
            {
              "kind": "field",
              "name": "CareTeam",
              "static": true,
              "default": "new ResourceDef('CareTeam')"
            },
            {
              "kind": "field",
              "name": "ChargeItem",
              "static": true,
              "default": "new ResourceDef('ChargeItem')"
            },
            {
              "kind": "field",
              "name": "ChargeItemDefinition",
              "static": true,
              "default": "new ResourceDef('ChargeItemDefinition')"
            },
            {
              "kind": "field",
              "name": "Citation",
              "static": true,
              "default": "new ResourceDef('Citation')"
            },
            {
              "kind": "field",
              "name": "Claim",
              "static": true,
              "default": "new ResourceDef('Claim')"
            },
            {
              "kind": "field",
              "name": "ClaimResponse",
              "static": true,
              "default": "new ResourceDef('ClaimResponse')"
            },
            {
              "kind": "field",
              "name": "ClinicalImpression",
              "static": true,
              "default": "new ResourceDef('ClinicalImpression')"
            },
            {
              "kind": "field",
              "name": "ClinicalUseDefinition",
              "static": true,
              "default": "new ResourceDef('ClinicalUseDefinition')"
            },
            {
              "kind": "field",
              "name": "CodeSystem",
              "static": true,
              "default": "new ResourceDef('CodeSystem')"
            },
            {
              "kind": "field",
              "name": "Communication",
              "static": true,
              "default": "new ResourceDef('Communication')"
            },
            {
              "kind": "field",
              "name": "CommunicationRequest",
              "static": true,
              "default": "new ResourceDef('CommunicationRequest')"
            },
            {
              "kind": "field",
              "name": "CompartmentDefinition",
              "static": true,
              "default": "new ResourceDef('CompartmentDefinition')"
            },
            {
              "kind": "field",
              "name": "Composition",
              "static": true,
              "default": "new ResourceDef('Composition')"
            },
            {
              "kind": "field",
              "name": "ConceptMap",
              "static": true,
              "default": "new ResourceDef('ConceptMap')"
            },
            {
              "kind": "field",
              "name": "Condition",
              "static": true,
              "default": "new ResourceDef('Condition')"
            },
            {
              "kind": "field",
              "name": "ConditionDefinition",
              "static": true,
              "default": "new ResourceDef('ConditionDefinition')"
            },
            {
              "kind": "field",
              "name": "Consent",
              "static": true,
              "default": "new ResourceDef('Consent')"
            },
            {
              "kind": "field",
              "name": "Contract",
              "static": true,
              "default": "new ResourceDef('Contract')"
            },
            {
              "kind": "field",
              "name": "Coverage",
              "static": true,
              "default": "new ResourceDef('Coverage')"
            },
            {
              "kind": "field",
              "name": "CoverageEligibilityRequest",
              "static": true,
              "default": "new ResourceDef('CoverageEligibilityRequest')"
            },
            {
              "kind": "field",
              "name": "CoverageEligibilityResponse",
              "static": true,
              "default": "new ResourceDef('CoverageEligibilityResponse')"
            },
            {
              "kind": "field",
              "name": "DetectedIssue",
              "static": true,
              "default": "new ResourceDef('DetectedIssue')"
            },
            {
              "kind": "field",
              "name": "Device",
              "static": true,
              "default": "new ResourceDef('Device')"
            },
            {
              "kind": "field",
              "name": "DeviceAssociation",
              "static": true,
              "default": "new ResourceDef('DeviceAssociation')"
            },
            {
              "kind": "field",
              "name": "DeviceDefinition",
              "static": true,
              "default": "new ResourceDef('DeviceDefinition')"
            },
            {
              "kind": "field",
              "name": "DeviceDispense",
              "static": true,
              "default": "new ResourceDef('DeviceDispense')"
            },
            {
              "kind": "field",
              "name": "DeviceMetric",
              "static": true,
              "default": "new ResourceDef('DeviceMetric')"
            },
            {
              "kind": "field",
              "name": "DeviceRequest",
              "static": true,
              "default": "new ResourceDef('DeviceRequest')"
            },
            {
              "kind": "field",
              "name": "DeviceUsage",
              "static": true,
              "default": "new ResourceDef('DeviceUsage')"
            },
            {
              "kind": "field",
              "name": "DiagnosticReport",
              "static": true,
              "default": "new ResourceDef('DiagnosticReport')"
            },
            {
              "kind": "field",
              "name": "DocumentReference",
              "static": true,
              "default": "new ResourceDef('DocumentReference')"
            },
            {
              "kind": "field",
              "name": "Encounter",
              "static": true,
              "default": "new ResourceDef('Encounter')"
            },
            {
              "kind": "field",
              "name": "EncounterHistory",
              "static": true,
              "default": "new ResourceDef('EncounterHistory')"
            },
            {
              "kind": "field",
              "name": "Endpoint",
              "static": true,
              "default": "new ResourceDef('Endpoint')"
            },
            {
              "kind": "field",
              "name": "EnrollmentRequest",
              "static": true,
              "default": "new ResourceDef('EnrollmentRequest')"
            },
            {
              "kind": "field",
              "name": "EnrollmentResponse",
              "static": true,
              "default": "new ResourceDef('EnrollmentResponse')"
            },
            {
              "kind": "field",
              "name": "EpisodeOfCare",
              "static": true,
              "default": "new ResourceDef('EpisodeOfCare')"
            },
            {
              "kind": "field",
              "name": "EventDefinition",
              "static": true,
              "default": "new ResourceDef('EventDefinition')"
            },
            {
              "kind": "field",
              "name": "Evidence",
              "static": true,
              "default": "new ResourceDef('Evidence')"
            },
            {
              "kind": "field",
              "name": "EvidenceReport",
              "static": true,
              "default": "new ResourceDef('EvidenceReport')"
            },
            {
              "kind": "field",
              "name": "EvidenceVariable",
              "static": true,
              "default": "new ResourceDef('EvidenceVariable')"
            },
            {
              "kind": "field",
              "name": "ExampleScenario",
              "static": true,
              "default": "new ResourceDef('ExampleScenario')"
            },
            {
              "kind": "field",
              "name": "ExplanationOfBenefit",
              "static": true,
              "default": "new ResourceDef('ExplanationOfBenefit')"
            },
            {
              "kind": "field",
              "name": "FamilyMemberHistory",
              "static": true,
              "default": "new ResourceDef('FamilyMemberHistory')"
            },
            {
              "kind": "field",
              "name": "Flag",
              "static": true,
              "default": "new ResourceDef('Flag')"
            },
            {
              "kind": "field",
              "name": "FormularyItem",
              "static": true,
              "default": "new ResourceDef('FormularyItem')"
            },
            {
              "kind": "field",
              "name": "GenomicStudy",
              "static": true,
              "default": "new ResourceDef('GenomicStudy')"
            },
            {
              "kind": "field",
              "name": "Goal",
              "static": true,
              "default": "new ResourceDef('Goal')"
            },
            {
              "kind": "field",
              "name": "GraphDefinition",
              "static": true,
              "default": "new ResourceDef('GraphDefinition')"
            },
            {
              "kind": "field",
              "name": "Group",
              "static": true,
              "default": "new ResourceDef('Group')"
            },
            {
              "kind": "field",
              "name": "GuidanceResponse",
              "static": true,
              "default": "new ResourceDef('GuidanceResponse')"
            },
            {
              "kind": "field",
              "name": "HealthcareService",
              "static": true,
              "default": "new ResourceDef('HealthcareService')"
            },
            {
              "kind": "field",
              "name": "ImagingSelection",
              "static": true,
              "default": "new ResourceDef('ImagingSelection')"
            },
            {
              "kind": "field",
              "name": "ImagingStudy",
              "static": true,
              "default": "new ResourceDef('ImagingStudy')"
            },
            {
              "kind": "field",
              "name": "Immunization",
              "static": true,
              "default": "new ResourceDef('Immunization')"
            },
            {
              "kind": "field",
              "name": "ImmunizationEvaluation",
              "static": true,
              "default": "new ResourceDef('ImmunizationEvaluation')"
            },
            {
              "kind": "field",
              "name": "ImmunizationRecommendation",
              "static": true,
              "default": "new ResourceDef('ImmunizationRecommendation')"
            },
            {
              "kind": "field",
              "name": "ImplementationGuide",
              "static": true,
              "default": "new ResourceDef('ImplementationGuide')"
            },
            {
              "kind": "field",
              "name": "Ingredient",
              "static": true,
              "default": "new ResourceDef('Ingredient')"
            },
            {
              "kind": "field",
              "name": "InsurancePlan",
              "static": true,
              "default": "new ResourceDef('InsurancePlan')"
            },
            {
              "kind": "field",
              "name": "InventoryItem",
              "static": true,
              "default": "new ResourceDef('InventoryItem')"
            },
            {
              "kind": "field",
              "name": "InventoryReport",
              "static": true,
              "default": "new ResourceDef('InventoryReport')"
            },
            {
              "kind": "field",
              "name": "Invoice",
              "static": true,
              "default": "new ResourceDef('Invoice')"
            },
            {
              "kind": "field",
              "name": "Library",
              "static": true,
              "default": "new ResourceDef('Library')"
            },
            {
              "kind": "field",
              "name": "Linkage",
              "static": true,
              "default": "new ResourceDef('Linkage')"
            },
            {
              "kind": "field",
              "name": "List",
              "static": true,
              "default": "new ResourceDef('List')"
            },
            {
              "kind": "field",
              "name": "Location",
              "static": true,
              "default": "new ResourceDef('Location')"
            },
            {
              "kind": "field",
              "name": "ManufacturedItemDefinition",
              "static": true,
              "default": "new ResourceDef('ManufacturedItemDefinition')"
            },
            {
              "kind": "field",
              "name": "Measure",
              "static": true,
              "default": "new ResourceDef('Measure')"
            },
            {
              "kind": "field",
              "name": "MeasureReport",
              "static": true,
              "default": "new ResourceDef('MeasureReport')"
            },
            {
              "kind": "field",
              "name": "Media",
              "static": true,
              "default": "new ResourceDef('Media')"
            },
            {
              "kind": "field",
              "name": "Medication",
              "static": true,
              "default": "new ResourceDef('Medication')"
            },
            {
              "kind": "field",
              "name": "MedicationAdministration",
              "static": true,
              "default": "new ResourceDef('MedicationAdministration')"
            },
            {
              "kind": "field",
              "name": "MedicationDispense",
              "static": true,
              "default": "new ResourceDef('MedicationDispense')"
            },
            {
              "kind": "field",
              "name": "MedicationKnowledge",
              "static": true,
              "default": "new ResourceDef('MedicationKnowledge')"
            },
            {
              "kind": "field",
              "name": "MedicationRequest",
              "static": true,
              "default": "new ResourceDef('MedicationRequest')"
            },
            {
              "kind": "field",
              "name": "MedicationStatement",
              "static": true,
              "default": "new ResourceDef('MedicationStatement')"
            },
            {
              "kind": "field",
              "name": "MedicinalProductDefinition",
              "static": true,
              "default": "new ResourceDef('MedicinalProductDefinition')"
            },
            {
              "kind": "field",
              "name": "MessageDefinition",
              "static": true,
              "default": "new ResourceDef('MessageDefinition')"
            },
            {
              "kind": "field",
              "name": "MessageHeader",
              "static": true,
              "default": "new ResourceDef('MessageHeader')"
            },
            {
              "kind": "field",
              "name": "MolecularSequence",
              "static": true,
              "default": "new ResourceDef('MolecularSequence')"
            },
            {
              "kind": "field",
              "name": "NamingSystem",
              "static": true,
              "default": "new ResourceDef('NamingSystem')"
            },
            {
              "kind": "field",
              "name": "NutritionIntake",
              "static": true,
              "default": "new ResourceDef('NutritionIntake')"
            },
            {
              "kind": "field",
              "name": "NutritionOrder",
              "static": true,
              "default": "new ResourceDef('NutritionOrder')"
            },
            {
              "kind": "field",
              "name": "NutritionProduct",
              "static": true,
              "default": "new ResourceDef('NutritionProduct')"
            },
            {
              "kind": "field",
              "name": "Observation",
              "static": true,
              "default": "new ResourceDef('Observation')"
            },
            {
              "kind": "field",
              "name": "ObservationDefinition",
              "static": true,
              "default": "new ResourceDef('ObservationDefinition')"
            },
            {
              "kind": "field",
              "name": "OperationDefinition",
              "static": true,
              "default": "new ResourceDef('OperationDefinition')"
            },
            {
              "kind": "field",
              "name": "OperationOutcome",
              "static": true,
              "default": "new ResourceDef('OperationOutcome')"
            },
            {
              "kind": "field",
              "name": "Organization",
              "static": true,
              "default": "new ResourceDef('Organization')"
            },
            {
              "kind": "field",
              "name": "OrganizationAffiliation",
              "static": true,
              "default": "new ResourceDef('OrganizationAffiliation')"
            },
            {
              "kind": "field",
              "name": "PackagedProductDefinition",
              "static": true,
              "default": "new ResourceDef('PackagedProductDefinition')"
            },
            {
              "kind": "field",
              "name": "Parameters",
              "static": true,
              "default": "new ResourceDef('Parameters')"
            },
            {
              "kind": "field",
              "name": "Patient",
              "static": true,
              "default": "new ResourceDef('Patient')"
            },
            {
              "kind": "field",
              "name": "PaymentNotice",
              "static": true,
              "default": "new ResourceDef('PaymentNotice')"
            },
            {
              "kind": "field",
              "name": "PaymentReconciliation",
              "static": true,
              "default": "new ResourceDef('PaymentReconciliation')"
            },
            {
              "kind": "field",
              "name": "Permission",
              "static": true,
              "default": "new ResourceDef('Permission')"
            },
            {
              "kind": "field",
              "name": "Person",
              "static": true,
              "default": "new ResourceDef('Person')"
            },
            {
              "kind": "field",
              "name": "PlanDefinition",
              "static": true,
              "default": "new ResourceDef('PlanDefinition')"
            },
            {
              "kind": "field",
              "name": "Practitioner",
              "static": true,
              "default": "new ResourceDef('Practitioner')"
            },
            {
              "kind": "field",
              "name": "PractitionerRole",
              "static": true,
              "default": "new ResourceDef('PractitionerRole')"
            },
            {
              "kind": "field",
              "name": "Procedure",
              "static": true,
              "default": "new ResourceDef('Procedure')"
            },
            {
              "kind": "field",
              "name": "Provenance",
              "static": true,
              "default": "new ResourceDef('Provenance')"
            },
            {
              "kind": "field",
              "name": "Questionnaire",
              "static": true,
              "default": "new ResourceDef('Questionnaire')"
            },
            {
              "kind": "field",
              "name": "QuestionnaireResponse",
              "static": true,
              "default": "new ResourceDef('QuestionnaireResponse')"
            },
            {
              "kind": "field",
              "name": "RegulatedAuthorization",
              "static": true,
              "default": "new ResourceDef('RegulatedAuthorization')"
            },
            {
              "kind": "field",
              "name": "RelatedPerson",
              "static": true,
              "default": "new ResourceDef('RelatedPerson')"
            },
            {
              "kind": "field",
              "name": "RequestOrchestration",
              "static": true,
              "default": "new ResourceDef('RequestOrchestration')"
            },
            {
              "kind": "field",
              "name": "Requirements",
              "static": true,
              "default": "new ResourceDef('Requirements')"
            },
            {
              "kind": "field",
              "name": "ResearchStudy",
              "static": true,
              "default": "new ResourceDef('ResearchStudy')"
            },
            {
              "kind": "field",
              "name": "ResearchSubject",
              "static": true,
              "default": "new ResourceDef('ResearchSubject')"
            },
            {
              "kind": "field",
              "name": "RiskAssessment",
              "static": true,
              "default": "new ResourceDef('RiskAssessment')"
            },
            {
              "kind": "field",
              "name": "Schedule",
              "static": true,
              "default": "new ResourceDef('Schedule')"
            },
            {
              "kind": "field",
              "name": "SearchParameter",
              "static": true,
              "default": "new ResourceDef('SearchParameter')"
            },
            {
              "kind": "field",
              "name": "ServiceRequest",
              "static": true,
              "default": "new ResourceDef('ServiceRequest')"
            },
            {
              "kind": "field",
              "name": "Slot",
              "static": true,
              "default": "new ResourceDef('Slot')"
            },
            {
              "kind": "field",
              "name": "Specimen",
              "static": true,
              "default": "new ResourceDef('Specimen')"
            },
            {
              "kind": "field",
              "name": "SpecimenDefinition",
              "static": true,
              "default": "new ResourceDef('SpecimenDefinition')"
            },
            {
              "kind": "field",
              "name": "StructureDefinition",
              "static": true,
              "default": "new ResourceDef('StructureDefinition')"
            },
            {
              "kind": "field",
              "name": "StructureMap",
              "static": true,
              "default": "new ResourceDef('StructureMap')"
            },
            {
              "kind": "field",
              "name": "Subscription",
              "static": true,
              "default": "new ResourceDef('Subscription')"
            },
            {
              "kind": "field",
              "name": "SubscriptionStatus",
              "static": true,
              "default": "new ResourceDef('SubscriptionStatus')"
            },
            {
              "kind": "field",
              "name": "SubscriptionTopic",
              "static": true,
              "default": "new ResourceDef('SubscriptionTopic')"
            },
            {
              "kind": "field",
              "name": "Substance",
              "static": true,
              "default": "new ResourceDef('Substance')"
            },
            {
              "kind": "field",
              "name": "SubstanceDefinition",
              "static": true,
              "default": "new ResourceDef('SubstanceDefinition')"
            },
            {
              "kind": "field",
              "name": "SubstanceNucleicAcid",
              "static": true,
              "default": "new ResourceDef('SubstanceNucleicAcid')"
            },
            {
              "kind": "field",
              "name": "SubstancePolymer",
              "static": true,
              "default": "new ResourceDef('SubstancePolymer')"
            },
            {
              "kind": "field",
              "name": "SubstanceProtein",
              "static": true,
              "default": "new ResourceDef('SubstanceProtein')"
            },
            {
              "kind": "field",
              "name": "SubstanceReferenceInformation",
              "static": true,
              "default": "new ResourceDef('SubstanceReferenceInformation')"
            },
            {
              "kind": "field",
              "name": "SubstanceSourceMaterial",
              "static": true,
              "default": "new ResourceDef('SubstanceSourceMaterial')"
            },
            {
              "kind": "field",
              "name": "SupplyDelivery",
              "static": true,
              "default": "new ResourceDef('SupplyDelivery')"
            },
            {
              "kind": "field",
              "name": "SupplyRequest",
              "static": true,
              "default": "new ResourceDef('SupplyRequest')"
            },
            {
              "kind": "field",
              "name": "Task",
              "static": true,
              "default": "new ResourceDef('Task')"
            },
            {
              "kind": "field",
              "name": "TerminologyCapabilities",
              "static": true,
              "default": "new ResourceDef('TerminologyCapabilities')"
            },
            {
              "kind": "field",
              "name": "TestPlan",
              "static": true,
              "default": "new ResourceDef('TestPlan')"
            },
            {
              "kind": "field",
              "name": "TestReport",
              "static": true,
              "default": "new ResourceDef('TestReport')"
            },
            {
              "kind": "field",
              "name": "TestScript",
              "static": true,
              "default": "new ResourceDef('TestScript')"
            },
            {
              "kind": "field",
              "name": "Transport",
              "static": true,
              "default": "new ResourceDef('Transport')"
            },
            {
              "kind": "field",
              "name": "ValueSet",
              "static": true,
              "default": "new ResourceDef('ValueSet')"
            },
            {
              "kind": "field",
              "name": "VerificationResult",
              "static": true,
              "default": "new ResourceDef('VerificationResult')"
            },
            {
              "kind": "field",
              "name": "VisionPrescription",
              "static": true,
              "default": "new ResourceDef('VisionPrescription')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "ResourceName | `${ResourceName}${string}`"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "field",
              "name": "profileName",
              "type": {
                "text": "string"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "dataset",
              "type": {
                "text": "`${ResourceName | `${ResourceName}${string}`}Data`"
              },
              "readonly": true,
              "default": "`${value}Data`"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              },
              "description": "Get all available FHIR resource names"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available FHIR resource names as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string to check"
                }
              ],
              "description": "Check if a string is a valid FHIR resource name",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get an enum by its string value",
              "return": {
                "type": {
                  "text": "ResourceDef|undefined"
                }
              }
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "parameters": [
                {
                  "name": "prefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "The prefix to filter by"
                }
              ],
              "description": "Get resource names by category (resources that start with the same prefix)",
              "return": {
                "type": {
                  "text": "ResourceDef[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            },
            {
              "kind": "method",
              "name": "profile",
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
          "default": "ResourceDef"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ResourceDef",
          "declaration": {
            "name": "ResourceDef",
            "module": "src/ResourceDef.ts"
          }
        },
        {
          "kind": "js",
          "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
          "declaration": {
            "name": "{\n  Account,\n  ActivityDefinition,\n  ActorDefinition,\n  AdministrableProductDefinition,\n  AdverseEvent,\n  AllergyIntolerance,\n  Appointment,\n  AppointmentResponse,\n  ArtifactAssessment,\n  AuditEvent,\n  Basic,\n  Binary,\n  BiologicallyDerivedProduct,\n  BiologicallyDerivedProductDispense,\n  BodyStructure,\n  Bundle,\n  CapabilityStatement,\n  CarePlan,\n  CareTeam,\n  ChargeItem,\n  ChargeItemDefinition,\n  Citation,\n  Claim,\n  ClaimResponse,\n  ClinicalImpression,\n  ClinicalUseDefinition,\n  CodeSystem,\n  Communication,\n  CommunicationRequest,\n  CompartmentDefinition,\n  Composition,\n  ConceptMap,\n  Condition,\n  ConditionDefinition,\n  Consent,\n  Contract,\n  Coverage,\n  CoverageEligibilityRequest,\n  CoverageEligibilityResponse,\n  DetectedIssue,\n  Device,\n  DeviceAssociation,\n  DeviceDefinition,\n  DeviceDispense,\n  DeviceMetric,\n  DeviceRequest,\n  DeviceUsage,\n  DiagnosticReport,\n  DocumentReference,\n  Encounter,\n  EncounterHistory,\n  Endpoint,\n  EnrollmentRequest,\n  EnrollmentResponse,\n  EpisodeOfCare,\n  EventDefinition,\n  Evidence,\n  EvidenceReport,\n  EvidenceVariable,\n  ExampleScenario,\n  ExplanationOfBenefit,\n  FamilyMemberHistory,\n  Flag,\n  FormularyItem,\n  GenomicStudy,\n  Goal,\n  GraphDefinition,\n  Group,\n  GuidanceResponse,\n  HealthcareService,\n  ImagingSelection,\n  ImagingStudy,\n  Immunization,\n  ImmunizationEvaluation,\n  ImmunizationRecommendation,\n  ImplementationGuide,\n  Ingredient,\n  InsurancePlan,\n  InventoryItem,\n  InventoryReport,\n  Invoice,\n  Library,\n  Linkage,\n  List,\n  Location,\n  ManufacturedItemDefinition,\n  Measure,\n  MeasureReport,\n  Media,\n  Medication,\n  MedicationAdministration,\n  MedicationDispense,\n  MedicationKnowledge,\n  MedicationRequest,\n  MedicationStatement,\n  MedicinalProductDefinition,\n  MessageDefinition,\n  MessageHeader,\n  MolecularSequence,\n  NamingSystem,\n  NutritionIntake,\n  NutritionOrder,\n  NutritionProduct,\n  Observation,\n  ObservationDefinition,\n  OperationDefinition,\n  OperationOutcome,\n  Organization,\n  OrganizationAffiliation,\n  PackagedProductDefinition,\n  Parameters,\n  Patient,\n  PaymentNotice,\n  PaymentReconciliation,\n  Permission,\n  Person,\n  PlanDefinition,\n  Practitioner,\n  PractitionerRole,\n  Procedure,\n  Provenance,\n  Questionnaire,\n  QuestionnaireResponse,\n  RegulatedAuthorization,\n  RelatedPerson,\n  RequestOrchestration,\n  Requirements,\n  ResearchStudy,\n  ResearchSubject,\n  RiskAssessment,\n  Schedule,\n  SearchParameter,\n  ServiceRequest,\n  Slot,\n  Specimen,\n  SpecimenDefinition,\n  StructureDefinition,\n  StructureMap,\n  Subscription,\n  SubscriptionStatus,\n  SubscriptionTopic,\n  Substance,\n  SubstanceDefinition,\n  SubstanceNucleicAcid,\n  SubstancePolymer,\n  SubstanceProtein,\n  SubstanceReferenceInformation,\n  SubstanceSourceMaterial,\n  SupplyDelivery,\n  SupplyRequest,\n  Task,\n  TerminologyCapabilities,\n  TestPlan,\n  TestReport,\n  TestScript,\n  Transport,\n  ValueSet,\n  VerificationResult,\n  VisionPrescription\n}",
            "module": "src/ResourceDef.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceName.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/ResourceType.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/Codes.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Codes",
          "members": [
            {
              "kind": "field",
              "name": "#map",
              "privacy": "private",
              "type": {
                "text": "Map<CodeIds, Choices>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "#translations",
              "privacy": "private",
              "type": {
                "text": "Map<string, string>"
              },
              "default": "new Map()"
            },
            {
              "kind": "method",
              "name": "getById",
              "return": {
                "type": {
                  "text": "Choices | undefined"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getBySystem",
              "return": {
                "type": {
                  "text": "Choices | undefined"
                }
              },
              "parameters": [
                {
                  "name": "url",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getAllSystemsAsChoices",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Choices"
                }
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "useCodeChoices",
          "return": {
            "type": {
              "text": "Choices | undefined"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "CodeIds"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Codes",
          "declaration": {
            "name": "Codes",
            "module": "src/codes/Codes.ts"
          }
        },
        {
          "kind": "js",
          "name": "useCodeChoices",
          "declaration": {
            "name": "useCodeChoices",
            "module": "src/codes/Codes.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Codes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./use-system"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/codes/use-system.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "useSystem",
          "return": {
            "type": {
              "text": "Choices"
            }
          },
          "parameters": [
            {
              "name": "url",
              "default": "''",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "systemChoices",
          "return": {
            "type": {
              "text": "Choices"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "useSystem",
          "declaration": {
            "name": "useSystem",
            "module": "src/codes/use-system.ts"
          }
        },
        {
          "kind": "js",
          "name": "systemChoices",
          "declaration": {
            "name": "systemChoices",
            "module": "src/codes/use-system.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/BaseElement.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a base element in the FHIR data model. This is the class to extend when creating components.",
          "name": "BaseElement",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "FhirPresentableElement",
            "module": "/src/internal/base/presentable/fhir-presentable-element"
          },
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseElement",
          "declaration": {
            "name": "BaseElement",
            "module": "src/internal/BaseElement.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BaseElement"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./base/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contexts/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./customization/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./errors/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resource/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/CodeSystem-fhir-types.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "CodeSystemFhirTypes",
          "type": {
            "text": "object"
          },
          "default": "{ \"resourceType\": \"CodeSystem\", \"id\": \"fhir-types\", \"url\": \"http://hl7.org/fhir/fhir-types\", \"identifier\": [{\"system\": \"urn:ietf:rfc:3986\", \"value\": \"urn:oid:2.16.840.1.113883.4.642.4.1802\"}], \"version\": \"5.0.0\", \"name\": \"FHIRTypes\", \"title\": \"All FHIR Types\", \"status\": \"active\", \"experimental\": false, \"date\": \"2022-08-26T13:43:27+10:00\", \"publisher\": \"HL7 (FHIR Project)\", \"description\": \"One of the types defined as part of this version of FHIR.\", \"caseSensitive\": true, \"valueSet\": \"http://hl7.org/fhir/ValueSet/fhir-types\", \"content\": \"complete\", \"property\": [ {\"code\": \"abstract-type\", \"uri\": \"http://hl7.org/fhir/concept-properties#abstract-type\", \"type\": \"boolean\"}, {\"code\": \"kind\", \"uri\": \"http://hl7.org/fhir/concept-properties#kind\", \"type\": \"code\"}, {\"code\": \"interface\", \"uri\": \"http://hl7.org/fhir/concept-properties#interface\", \"type\": \"boolean\"} ], \"concept\": [ { \"code\": \"Base\", \"display\": \"Base\", \"definition\": \"Base Type: Base definition for all types defined in FHIR type system.\", \"property\": [{\"code\": \"abstract-type\", \"valueBoolean\": true}], \"concept\": [ { \"code\": \"Element\", \"display\": \"Element\", \"definition\": \"Element Type: Base definition for all elements in a resource.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"BackboneElement\", \"display\": \"BackboneElement\", \"definition\": \"BackboneElement Type: Base definition for all elements that are defined inside a resource - but not those in a data type.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ] }, { \"code\": \"DataType\", \"display\": \"DataType\", \"definition\": \"DataType Type: The base class for all re-useable types defined as part of the FHIR Specification.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Address\", \"display\": \"Address\", \"definition\": \"Address Type: An address expressed using postal conventions (as opposed to GPS or other location definition formats). This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery. There are a variety of postal address formats defined around the world.\\nThe ISO21090-codedString may be used to provide a coded representation of the contents of strings in an Address.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Annotation\", \"display\": \"Annotation\", \"definition\": \"Annotation Type: A text note which also contains information about who made the statement and when.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Attachment\", \"display\": \"Attachment\", \"definition\": \"Attachment Type: For referring to data content defined in other formats.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Availability\", \"display\": \"Availability\", \"definition\": \"Availability Type: Availability data for an {item}.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"BackboneType\", \"display\": \"BackboneType\", \"definition\": \"BackboneType Type: Base definition for the few data types that are allowed to carry modifier extensions.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Dosage\", \"display\": \"Dosage\", \"definition\": \"Dosage Type: Indicates how the medication is/was taken or should be taken by the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ElementDefinition\", \"display\": \"ElementDefinition\", \"definition\": \"ElementDefinition Type: Captures constraints on each element within the resource, profile, or extension.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"MarketingStatus\", \"display\": \"MarketingStatus\", \"definition\": \"MarketingStatus Type: The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ProductShelfLife\", \"display\": \"ProductShelfLife\", \"definition\": \"ProductShelfLife Type: The shelf-life and storage information for a medicinal product item or container can be described using this class.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Timing\", \"display\": \"Timing\", \"definition\": \"Timing Type: Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"CodeableConcept\", \"display\": \"CodeableConcept\", \"definition\": \"CodeableConcept Type: A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"CodeableReference\", \"display\": \"CodeableReference\", \"definition\": \"CodeableReference Type: A reference to a resource (by instance), or instead, a reference to a concept defined in a terminology or ontology (by class).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Coding\", \"display\": \"Coding\", \"definition\": \"Coding Type: A reference to a code defined by a terminology system.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ContactDetail\", \"display\": \"ContactDetail\", \"definition\": \"ContactDetail Type: Specifies contact information for a person or organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ContactPoint\", \"display\": \"ContactPoint\", \"definition\": \"ContactPoint Type: Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Contributor\", \"display\": \"Contributor\", \"definition\": \"Contributor Type: A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"DataRequirement\", \"display\": \"DataRequirement\", \"definition\": \"DataRequirement Type: Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Expression\", \"display\": \"Expression\", \"definition\": \"Expression Type: A expression that is evaluated in a specified context and returns a value. The context of use of the expression must specify the context in which the expression is evaluated, and how the result of the expression is used.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ExtendedContactDetail\", \"display\": \"ExtendedContactDetail\", \"definition\": \"ExtendedContactDetail Type: Specifies contact information for a specific purpose over a period of time, might be handled/monitored by a specific named person or organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Extension\", \"display\": \"Extension\", \"definition\": \"Extension Type: Optional Extension Element - found in all resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"HumanName\", \"display\": \"HumanName\", \"definition\": \"HumanName Type: A name, normally of a human, that can be used for other living entities (e.g. animals but not organizations) that have been assigned names by a human and may need the use of name parts or the need for usage information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Identifier\", \"display\": \"Identifier\", \"definition\": \"Identifier Type: An identifier - identifies some entity uniquely and unambiguously. Typically this is used for business identifiers.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Meta\", \"display\": \"Meta\", \"definition\": \"Meta Type: The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"MonetaryComponent\", \"display\": \"MonetaryComponent\", \"definition\": \"MonetaryComponent Type: Availability data for an {item}.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Money\", \"display\": \"Money\", \"definition\": \"Money Type: An amount of economic utility in some recognized currency.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Narrative\", \"display\": \"Narrative\", \"definition\": \"Narrative Type: A human-readable summary of the resource conveying the essential clinical and business information for the resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"ParameterDefinition\", \"display\": \"ParameterDefinition\", \"definition\": \"ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Period\", \"display\": \"Period\", \"definition\": \"Period Type: A time period defined by a start and end date and optionally time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"PrimitiveType\", \"display\": \"PrimitiveType\", \"definition\": \"PrimitiveType Type: The base type for all re-useable types defined that have a simple property.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"datatype\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"base64Binary\", \"display\": \"base64Binary\", \"definition\": \"base64Binary Type: A stream of bytes\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"boolean\", \"display\": \"boolean\", \"definition\": \"boolean Type: Value of \\\"true\\\" or \\\"false\\\"\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"date\", \"display\": \"date\", \"definition\": \"date Type: A date or partial date (e.g. just year or year + month). There is no UTC offset. The format is a union of the schema types gYear, gYearMonth and date. Dates SHALL be valid dates.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"dateTime\", \"display\": \"dateTime\", \"definition\": \"dateTime Type: A date, date-time or partial date (e.g. just year or year + month). If hours and minutes are specified, a UTC offset SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored. Dates SHALL be valid dates.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"decimal\", \"display\": \"decimal\", \"definition\": \"decimal Type: A rational number with implicit precision\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"instant\", \"display\": \"instant\", \"definition\": \"instant Type: An instant in time - known at least to the second\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"integer\", \"display\": \"integer\", \"definition\": \"integer Type: A whole number\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"positiveInt\", \"display\": \"positiveInt\", \"definition\": \"positiveInt type: An integer with a value that is positive (e.g. \\u003e0)\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"unsignedInt\", \"display\": \"unsignedInt\", \"definition\": \"unsignedInt type: An integer with a value that is not negative (e.g. \\u003e\\u003d 0)\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"integer64\", \"display\": \"integer64\", \"definition\": \"integer64 Type: A very large whole number\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"string\", \"display\": \"string\", \"definition\": \"string Type: A sequence of Unicode characters\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"code\", \"display\": \"code\", \"definition\": \"code type: A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contents\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"id\", \"display\": \"id\", \"definition\": \"id type: Any combination of letters, numerals, \\\"-\\\" and \\\".\\\", with a length limit of 64 characters. (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.) Ids are case-insensitive.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"markdown\", \"display\": \"markdown\", \"definition\": \"markdown type: A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engine\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"time\", \"display\": \"time\", \"definition\": \"time Type: A time during the day, with no date specified\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"uri\", \"display\": \"uri\", \"definition\": \"uri Type: String of characters used to identify a name or a resource\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}], \"concept\": [ { \"code\": \"canonical\", \"display\": \"canonical\", \"definition\": \"canonical type: A URI that is a reference to a canonical URL on a FHIR resource\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"oid\", \"display\": \"oid\", \"definition\": \"oid type: An OID represented as a URI\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"url\", \"display\": \"url\", \"definition\": \"url type: A URI that is a literal reference\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] }, { \"code\": \"uuid\", \"display\": \"uuid\", \"definition\": \"uuid type: A UUID, represented as a URI\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] } ] }, { \"code\": \"Quantity\", \"display\": \"Quantity\", \"definition\": \"Quantity Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}], \"concept\": [ { \"code\": \"Age\", \"display\": \"Age\", \"definition\": \"Age Type: A duration of time during which an organism (or a process) has existed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Count\", \"display\": \"Count\", \"definition\": \"Count Type: A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Distance\", \"display\": \"Distance\", \"definition\": \"Distance Type: A length - a value with a unit that is a physical distance.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Duration\", \"display\": \"Duration\", \"definition\": \"Duration Type: A length of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"Range\", \"display\": \"Range\", \"definition\": \"Range Type: A set of ordered Quantities defined by a low and high limit.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Ratio\", \"display\": \"Ratio\", \"definition\": \"Ratio Type: A relationship of two Quantity values - expressed as a numerator and a denominator.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"RatioRange\", \"display\": \"RatioRange\", \"definition\": \"RatioRange Type: A range of ratios expressed as a low and high numerator and a denominator.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { 'code': 'Ref', 'display': 'Ref', \"definition\": \"Reference Type: A reference from one resource to another.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"RelatedArtifact\", \"display\": \"RelatedArtifact\", \"definition\": \"RelatedArtifact Type: Related artifacts such as additional documentation, justification, or bibliographic references.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"SampledData\", \"display\": \"SampledData\", \"definition\": \"Timing Type: A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"Signature\", \"display\": \"Signature\", \"definition\": \"Signature Type: A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"TriggerDefinition\", \"display\": \"TriggerDefinition\", \"definition\": \"TriggerDefinition Type: A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"UsageContext\", \"display\": \"UsageContext\", \"definition\": \"UsageContext Type: Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] }, { \"code\": \"VirtualServiceDetail\", \"display\": \"VirtualServiceDetail\", \"definition\": \"VirtualServiceDetail Type: Virtual Service Contact Details.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"datatype\"}] } ] }, { \"code\": \"xhtml\", \"display\": \"xhtml\", \"definition\": \"xhtml Type definition\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"primitive\"}] } ] }, { \"code\": \"Resource\", \"display\": \"Resource\", \"definition\": \"This is the base resource type for everything.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Binary\", \"display\": \"Binary\", \"definition\": \"A resource that represents the data of a single raw artifact as digital content accessible in its native format. A Binary resource can contain any content, whether text, image, pdf, zip archive, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Bundle\", \"display\": \"Bundle\", \"definition\": \"A container for a collection of resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DomainResource\", \"display\": \"DomainResource\", \"definition\": \"A resource that includes narrative, extensions, and contained resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true} ], \"concept\": [ { \"code\": \"Account\", \"display\": \"Account\", \"definition\": \"A financial tool for tracking value accrued for a particular purpose. In the healthcare field, used to track charges for a patient, cost centers, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ActivityDefinition\", \"display\": \"ActivityDefinition\", \"definition\": \"This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ActorDefinition\", \"display\": \"ActorDefinition\", \"definition\": \"The ActorDefinition resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AdministrableProductDefinition\", \"display\": \"AdministrableProductDefinition\", \"definition\": \"A medicinal product in the final form which is suitable for administering to a patient (after any mixing of multiple components, dissolution etc. has been performed).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AdverseEvent\", \"display\": \"AdverseEvent\", \"definition\": \"An event (i.e. any change to current patient status) that may be related to unintended effects on a patient or research participant. The unintended effects may require additional monitoring, treatment, hospitalization, or may result in death. The AdverseEvent resource also extends to potential or avoided events that could have had such effects. There are two major domains where the AdverseEvent resource is expected to be used. One is in clinical care reported adverse events and the other is in reporting adverse events in clinical research trial management. Adverse events can be reported by healthcare providers, patients, caregivers or by medical products manufacturers. Given the differences between these two concepts, we recommend consulting the domain specific implementation guides when implementing the AdverseEvent Resource. The implementation guides include specific extensions, value sets and constraints.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AllergyIntolerance\", \"display\": \"AllergyIntolerance\", \"definition\": \"Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Appointment\", \"display\": \"Appointment\", \"definition\": \"A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AppointmentResponse\", \"display\": \"AppointmentResponse\", \"definition\": \"A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ArtifactAssessment\", \"display\": \"ArtifactAssessment\", \"definition\": \"This Resource provides one or more comments, classifiers or ratings about a Resource and supports attribution and rights management metadata for the added content.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"AuditEvent\", \"display\": \"AuditEvent\", \"definition\": \"A record of an event relevant for purposes such as operations, privacy, security, maintenance, and performance analysis.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Basic\", \"display\": \"Basic\", \"definition\": \"Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don\\u0027t map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BiologicallyDerivedProduct\", \"display\": \"BiologicallyDerivedProduct\", \"definition\": \"A biological material originating from a biological entity intended to be transplanted or infused into another (possibly the same) biological entity.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BiologicallyDerivedProductDispense\", \"display\": \"BiologicallyDerivedProductDispense\", \"definition\": \"A record of dispensation of a biologically derived product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"BodyStructure\", \"display\": \"BodyStructure\", \"definition\": \"Record details about an anatomical structure. This resource may be used when a coded concept does not provide the necessary detail needed for the use case.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CanonicalResource\", \"display\": \"CanonicalResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true}, {\"code\": \"interface\", \"valueBoolean\": true} ] }, { \"code\": \"CapabilityStatement\", \"display\": \"CapabilityStatement\", \"definition\": \"A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server or Client for a particular version of FHIR that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CarePlan\", \"display\": \"CarePlan\", \"definition\": \"Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CareTeam\", \"display\": \"CareTeam\", \"definition\": \"The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ChargeItem\", \"display\": \"ChargeItem\", \"definition\": \"The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ChargeItemDefinition\", \"display\": \"ChargeItemDefinition\", \"definition\": \"The ChargeItemDefinition resource provides the properties that apply to the (billing) codes necessary to calculate costs and prices. The properties may differ largely depending on type and realm, therefore this resource gives only a rough structure and requires profiling for each type of billing code system.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Citation\", \"display\": \"Citation\", \"definition\": \"The Citation Resource enables reference to any knowledge artifact for purposes of identification and attribution. The Citation Resource supports existing reference structures and developing publication practices such as versioning, expressing complex contributorship roles, and referencing computable resources.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Claim\", \"display\": \"Claim\", \"definition\": \"A provider issued list of professional services and products which have been provided, or are to be provided, to a patient which is sent to an insurer for reimbursement.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClaimResponse\", \"display\": \"ClaimResponse\", \"definition\": \"This resource provides the adjudication details from the processing of a Claim resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClinicalImpression\", \"display\": \"ClinicalImpression\", \"definition\": \"A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient\\u0027s condition. Assessments are often 1:1 with a clinical consultation / encounter, but this varies greatly depending on the clinical workflow. This resource is called \\\"ClinicalImpression\\\" rather than \\\"ClinicalAssessment\\\" to avoid confusion with the recording of assessment tools such as Apgar score.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ClinicalUseDefinition\", \"display\": \"ClinicalUseDefinition\", \"definition\": \"A single issue - either an indication, contraindication, interaction or an undesirable effect for a medicinal product, medication, device or procedure.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CodeSystem\", \"display\": \"CodeSystem\", \"definition\": \"The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Communication\", \"display\": \"Communication\", \"definition\": \"A clinical or business level record of information being transmitted or shared; e.g. an alert that was sent to a responsible provider, a public health agency communication to a provider/reporter in response to a case report for a reportable condition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CommunicationRequest\", \"display\": \"CommunicationRequest\", \"definition\": \"A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CompartmentDefinition\", \"display\": \"CompartmentDefinition\", \"definition\": \"A compartment definition that defines how resources are accessed on a server.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Composition\", \"display\": \"Composition\", \"definition\": \"A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type\\u003ddocument, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ConceptMap\", \"display\": \"ConceptMap\", \"definition\": \"A statement of relationships from one set of concepts to one or more other concepts - either concepts in code systems, or data element/data element concepts, or classes in class models.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Condition\", \"display\": \"Condition\", \"definition\": \"A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ConditionDefinition\", \"display\": \"ConditionDefinition\", \"definition\": \"A definition of a condition and information relevant to managing it.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Consent\", \"display\": \"Consent\", \"definition\": \"A record of a healthcare consumer’s choices or choices made on their behalf by a third party, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Contract\", \"display\": \"Contract\", \"definition\": \"Legally enforceable, formally recorded unilateral or bilateral directive i.e., a policy or agreement.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Coverage\", \"display\": \"Coverage\", \"definition\": \"Financial instrument which may be used to reimburse or pay for health care products and services. Includes both insurance and self-payment.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CoverageEligibilityRequest\", \"display\": \"CoverageEligibilityRequest\", \"definition\": \"The CoverageEligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an CoverageEligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"CoverageEligibilityResponse\", \"display\": \"CoverageEligibilityResponse\", \"definition\": \"This resource provides eligibility and plan details from the processing of an CoverageEligibilityRequest resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DetectedIssue\", \"display\": \"DetectedIssue\", \"definition\": \"Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, gaps in care, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Device\", \"display\": \"Device\", \"definition\": \"This resource describes the properties (regulated, has real time clock, etc.), adminstrative (manufacturer name, model number, serial number, firmware, etc.), and type (knee replacement, blood pressure cuff, MRI, etc.) of a physical unit (these values do not change much within a given module, for example the serail number, manufacturer name, and model number). An actual unit may consist of several modules in a distinct hierarchy and these are represented by multiple Device resources and bound through the \\u0027parent\\u0027 element.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceAssociation\", \"display\": \"DeviceAssociation\", \"definition\": \"A record of association of a device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceDefinition\", \"display\": \"DeviceDefinition\", \"definition\": \"This is a specialized resource that defines the characteristics and capabilities of a device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceDispense\", \"display\": \"DeviceDispense\", \"definition\": \"Indicates that a device is to be or has been dispensed for a named person/patient. This includes a description of the product (supply) provided and the instructions for using the device.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceMetric\", \"display\": \"DeviceMetric\", \"definition\": \"Describes a measurement, calculation or setting capability of a device. The DeviceMetric resource is derived from the ISO/IEEE 11073-10201 Domain Information Model standard, but is more widely applicable. \", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceRequest\", \"display\": \"DeviceRequest\", \"definition\": \"Represents a request a device to be provided to a specific patient. The device may be an implantable device to be subsequently implanted, or an external assistive device, such as a walker, to be delivered and subsequently be used.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DeviceUsage\", \"display\": \"DeviceUsage\", \"definition\": \"A record of a device being used by a patient where the record is the result of a report from the patient or a clinician.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DiagnosticReport\", \"display\": \"DiagnosticReport\", \"definition\": \"The findings and interpretation of diagnostic tests performed on patients, groups of patients, products, substances, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports. The report also includes non-clinical context such as batch analysis and stability reporting of products and substances.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"DocumentReference\", \"display\": \"DocumentReference\", \"definition\": \"A reference to a document of any kind for any purpose. While the term “document” implies a more narrow focus, for this resource this “document” encompasses *any* serialized object with a mime-type, it includes formal patient-centric documents (CDA), clinical notes, scanned paper, non-patient specific documents like policy text, as well as a photo, video, or audio recording acquired or used in healthcare. The DocumentReference resource provides metadata about the document so that the document can be discovered and managed. The actual content may be inline base64 encoded data or provided by direct reference.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Encounter\", \"display\": \"Encounter\", \"definition\": \"An interaction between healthcare provider(s), and/or patient(s) for the purpose of providing healthcare service(s) or assessing the health status of patient(s).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EncounterHistory\", \"display\": \"EncounterHistory\", \"definition\": \"A record of significant events/milestones key data throughout the history of an Encounter\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Endpoint\", \"display\": \"Endpoint\", \"definition\": \"The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b, a REST endpoint for another FHIR server, or a s/Mime email address. This may include any security context information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EnrollmentRequest\", \"display\": \"EnrollmentRequest\", \"definition\": \"This resource provides the insurance enrollment details to the insurer regarding a specified coverage.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EnrollmentResponse\", \"display\": \"EnrollmentResponse\", \"definition\": \"This resource provides enrollment and plan details from the processing of an EnrollmentRequest resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EpisodeOfCare\", \"display\": \"EpisodeOfCare\", \"definition\": \"An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EventDefinition\", \"display\": \"EventDefinition\", \"definition\": \"The EventDefinition resource provides a reusable description of when a particular event can occur.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Evidence\", \"display\": \"Evidence\", \"definition\": \"The Evidence Resource provides a machine-interpretable expression of an evidence concept including the evidence variables (e.g., population, exposures/interventions, comparators, outcomes, measured variables, confounding variables), the statistics, and the certainty of this evidence.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EvidenceReport\", \"display\": \"EvidenceReport\", \"definition\": \"The EvidenceReport Resource is a specialized container for a collection of resources and codeable concepts, adapted to support compositions of Evidence, EvidenceVariable, and Citation resources and related concepts.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"EvidenceVariable\", \"display\": \"EvidenceVariable\", \"definition\": \"The EvidenceVariable resource describes an element that knowledge (Evidence) is about.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ExampleScenario\", \"display\": \"ExampleScenario\", \"definition\": \"A walkthrough of a workflow showing the interaction between systems and the instances shared, possibly including the evolution of instances over time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ExplanationOfBenefit\", \"display\": \"ExplanationOfBenefit\", \"definition\": \"This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"FamilyMemberHistory\", \"display\": \"FamilyMemberHistory\", \"definition\": \"Significant health conditions for a person related to the patient relevant in the context of care for the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Flag\", \"display\": \"Flag\", \"definition\": \"Prospective warnings of potential issues when providing care to the patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"FormularyItem\", \"display\": \"FormularyItem\", \"definition\": \"This resource describes a product or service that is available through a program and includes the conditions and constraints of availability. All of the information in this resource is specific to the inclusion of the item in the formulary and is not inherent to the item itself.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GenomicStudy\", \"display\": \"GenomicStudy\", \"definition\": \"A set of analyses performed to analyze and generate genomic data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Goal\", \"display\": \"Goal\", \"definition\": \"Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GraphDefinition\", \"display\": \"GraphDefinition\", \"definition\": \"A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Group\", \"display\": \"Group\", \"definition\": \"Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively, and are not formally or legally recognized; i.e. a collection of entities that isn\\u0027t an Organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"GuidanceResponse\", \"display\": \"GuidanceResponse\", \"definition\": \"A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"HealthcareService\", \"display\": \"HealthcareService\", \"definition\": \"The details of a healthcare service available at a location or in a catalog. In the case where there is a hierarchy of services (for example, Lab -\\u003e Pathology -\\u003e Wound Cultures), this can be represented using a set of linked HealthcareServices.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImagingSelection\", \"display\": \"ImagingSelection\", \"definition\": \"A selection of DICOM SOP instances and/or frames within a single Study and Series. This might include additional specifics such as an image region, an Observation UID or a Segmentation Number, allowing linkage to an Observation Resource or transferring this information along with the ImagingStudy Resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImagingStudy\", \"display\": \"ImagingStudy\", \"definition\": \"Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context. A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Immunization\", \"display\": \"Immunization\", \"definition\": \"Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImmunizationEvaluation\", \"display\": \"ImmunizationEvaluation\", \"definition\": \"Describes a comparison of an immunization event against published recommendations to determine if the administration is \\\"valid\\\" in relation to those recommendations.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImmunizationRecommendation\", \"display\": \"ImmunizationRecommendation\", \"definition\": \"A patient\\u0027s point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ImplementationGuide\", \"display\": \"ImplementationGuide\", \"definition\": \"A set of rules of how a particular interoperability or standards problem is solved - typically through the use of FHIR resources. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Ingredient\", \"display\": \"Ingredient\", \"definition\": \"An ingredient of a manufactured item or pharmaceutical product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InsurancePlan\", \"display\": \"InsurancePlan\", \"definition\": \"Details of a Health Insurance product/plan provided by an organization.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InventoryItem\", \"display\": \"InventoryItem\", \"definition\": \"functional description of an inventory item used in inventory and supply-related workflows.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"InventoryReport\", \"display\": \"InventoryReport\", \"definition\": \"A report of inventory or stock items.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Invoice\", \"display\": \"Invoice\", \"definition\": \"Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Library\", \"display\": \"Library\", \"definition\": \"The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Linkage\", \"display\": \"Linkage\", \"definition\": \"Identifies two or more records (resource instances) that refer to the same real-world \\\"occurrence\\\".\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"List\", \"display\": \"List\", \"definition\": \"A List is a curated collection of resources, for things such as problem lists, allergy lists, facility list, organization list, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Location\", \"display\": \"Location\", \"definition\": \"Details and position information for a place where services are provided and resources and participants may be stored, found, contained, or accommodated.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ManufacturedItemDefinition\", \"display\": \"ManufacturedItemDefinition\", \"definition\": \"The definition and characteristics of a medicinal manufactured item, such as a tablet or capsule, as contained in a packaged medicinal product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Measure\", \"display\": \"Measure\", \"definition\": \"The Measure resource provides the definition of a quality measure.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MeasureReport\", \"display\": \"MeasureReport\", \"definition\": \"The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Medication\", \"display\": \"Medication\", \"definition\": \"This resource is primarily used for the identification and definition of a medication, including ingredients, for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationAdministration\", \"display\": \"MedicationAdministration\", \"definition\": \"Describes the event of a patient consuming or otherwise being administered a medication. This may be as simple as swallowing a tablet or it may be a long running infusion. Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner. This event can also be used to record waste using a status of not-done and the appropriate statusReason.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationDispense\", \"display\": \"MedicationDispense\", \"definition\": \"Indicates that a medication product is to be or has been dispensed for a named person/patient. This includes a description of the medication product (supply) provided and the instructions for administering the medication. The medication dispense is the result of a pharmacy system responding to a medication order.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationKnowledge\", \"display\": \"MedicationKnowledge\", \"definition\": \"Information about a medication that is used to support knowledge.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationRequest\", \"display\": \"MedicationRequest\", \"definition\": \"An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called \\\"MedicationRequest\\\" rather than \\\"MedicationPrescription\\\" or \\\"MedicationOrder\\\" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicationStatement\", \"display\": \"MedicationStatement\", \"definition\": \"A record of a medication that is being consumed by a patient. A MedicationStatement may indicate that the patient may be taking the medication now or has taken the medication in the past or will be taking the medication in the future. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay. The medication information may come from sources such as the patient\\u0027s memory, from a prescription bottle, or from a list of medications the patient, clinician or other party maintains. \\n\\nThe primary difference between a medicationstatement and a medicationadministration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication. A medicationstatement is often, if not always, less specific. There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise. As stated earlier, the Medication Statement information may come from the patient\\u0027s memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains. Medication administration is more formal and is not missing detailed information.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MedicinalProductDefinition\", \"display\": \"MedicinalProductDefinition\", \"definition\": \"Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use, drug catalogs, to support prescribing, adverse events management etc.).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MessageDefinition\", \"display\": \"MessageDefinition\", \"definition\": \"Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MessageHeader\", \"display\": \"MessageHeader\", \"definition\": \"The header for a message exchange that is either requesting or responding to an action. The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"MetadataResource\", \"display\": \"MetadataResource\", \"definition\": \"Common Interface declaration for conformance and knowledge artifact resources.\", \"property\": [ {\"code\": \"kind\", \"valueCode\": \"resource\"}, {\"code\": \"abstract-type\", \"valueBoolean\": true}, {\"code\": \"interface\", \"valueBoolean\": true} ] }, { \"code\": \"MolecularSequence\", \"display\": \"MolecularSequence\", \"definition\": \"Representation of a molecular sequence.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NamingSystem\", \"display\": \"NamingSystem\", \"definition\": \"A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc. Represents a \\\"System\\\" used within the Identifier and Coding data types.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionIntake\", \"display\": \"NutritionIntake\", \"definition\": \"A record of food or fluid that is being consumed by a patient. A NutritionIntake may indicate that the patient may be consuming the food or fluid now or has consumed the food or fluid in the past. The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician. A common scenario where this information is captured is during the history taking process during a patient visit or stay or through an app that tracks food or fluids consumed. The consumption information may come from sources such as the patient\\u0027s memory, from a nutrition label, or from a clinician documenting observed intake.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionOrder\", \"display\": \"NutritionOrder\", \"definition\": \"A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"NutritionProduct\", \"display\": \"NutritionProduct\", \"definition\": \"A food or supplement that is consumed by patients.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Observation\", \"display\": \"Observation\", \"definition\": \"Measurements and simple assertions made about a patient, device or other subject.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ObservationDefinition\", \"display\": \"ObservationDefinition\", \"definition\": \"Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OperationDefinition\", \"display\": \"OperationDefinition\", \"definition\": \"A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OperationOutcome\", \"display\": \"OperationOutcome\", \"definition\": \"A collection of error, warning, or information messages that result from a system action.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Organization\", \"display\": \"Organization\", \"definition\": \"A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action. Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, payer/insurer, etc.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"OrganizationAffiliation\", \"display\": \"OrganizationAffiliation\", \"definition\": \"Defines an affiliation/assotiation/relationship between 2 distinct organizations, that is not a part-of relationship/sub-division relationship.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PackagedProductDefinition\", \"display\": \"PackagedProductDefinition\", \"definition\": \"A medically related item or items, in a container or package.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Patient\", \"display\": \"Patient\", \"definition\": \"Demographics and other administrative information about an individual or animal receiving care or other health-related services.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PaymentNotice\", \"display\": \"PaymentNotice\", \"definition\": \"This resource provides the status of the payment for goods and services rendered, and the request and response resource references.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PaymentReconciliation\", \"display\": \"PaymentReconciliation\", \"definition\": \"This resource provides the details including amount of a payment and allocates the payment items being paid.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Permission\", \"display\": \"Permission\", \"definition\": \"Permission resource holds access rules for a given data and context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Person\", \"display\": \"Person\", \"definition\": \"Demographics and administrative information about a person independent of a specific health-related context.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PlanDefinition\", \"display\": \"PlanDefinition\", \"definition\": \"This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical and non-clinical artifacts such as clinical decision support rules, order sets, protocols, and drug quality specifications.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Practitioner\", \"display\": \"Practitioner\", \"definition\": \"A person who is directly or indirectly involved in the provisioning of healthcare or related services.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"PractitionerRole\", \"display\": \"PractitionerRole\", \"definition\": \"A specific set of Roles/Locations/specialties/services that a practitioner may perform, or has performed at an organization during a period of time.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Procedure\", \"display\": \"Procedure\", \"definition\": \"An action that is or was performed on or for a patient, practitioner, device, organization, or location. For example, this can be a physical intervention on a patient like an operation, or less invasive like long term services, counseling, or hypnotherapy. This can be a quality or safety inspection for a location, organization, or device. This can be an accreditation procedure on a practitioner for licensing.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Provenance\", \"display\": \"Provenance\", \"definition\": \"Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Questionnaire\", \"display\": \"Questionnaire\", \"definition\": \"A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"QuestionnaireResponse\", \"display\": \"QuestionnaireResponse\", \"definition\": \"A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RegulatedAuthorization\", \"display\": \"RegulatedAuthorization\", \"definition\": \"Regulatory approval, clearance or licencing related to a regulated product, treatment, facility or activity that is cited in a guidance, regulation, rule or legislative act. An example is Market Authorization relating to a Medicinal Product.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RelatedPerson\", \"display\": \"RelatedPerson\", \"definition\": \"Information about a person that is involved in a patient\\u0027s health or the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RequestOrchestration\", \"display\": \"RequestOrchestration\", \"definition\": \"A set of related requests that can be used to capture intended activities that have inter-dependencies such as \\\"give this medication after that one\\\".\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Requirements\", \"display\": \"Requirements\", \"definition\": \"The Requirements resource is used to describe an actor - a human or an application that plays a role in data exchange, and that may have obligations associated with the role the actor plays.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ResearchStudy\", \"display\": \"ResearchStudy\", \"definition\": \"A scientific study of nature that sometimes includes processes involved in health and disease. For example, clinical trials are research studies that involve people. These studies may be related to new ways to screen, prevent, diagnose, and treat disease. They may also study certain outcomes and certain groups of people by looking at data collected in the past or future.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ResearchSubject\", \"display\": \"ResearchSubject\", \"definition\": \"A ResearchSubject is a participant or object which is the recipient of investigative activities in a research study.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"RiskAssessment\", \"display\": \"RiskAssessment\", \"definition\": \"An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Schedule\", \"display\": \"Schedule\", \"definition\": \"A container for slots of time that may be available for booking appointments.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SearchParameter\", \"display\": \"SearchParameter\", \"definition\": \"A search parameter that defines a named search item that can be used to search/filter on a resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ServiceRequest\", \"display\": \"ServiceRequest\", \"definition\": \"A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Slot\", \"display\": \"Slot\", \"definition\": \"A slot of time on a schedule that may be available for booking appointments.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Specimen\", \"display\": \"Specimen\", \"definition\": \"A sample to be used for analysis.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SpecimenDefinition\", \"display\": \"SpecimenDefinition\", \"definition\": \"A kind of specimen with associated set of requirements.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"StructureDefinition\", \"display\": \"StructureDefinition\", \"definition\": \"A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"StructureMap\", \"display\": \"StructureMap\", \"definition\": \"A Map of relationships between 2 structures that can be used to transform data.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Subscription\", \"display\": \"Subscription\", \"definition\": \"The subscription resource describes a particular client\\u0027s request to be notified about a SubscriptionTopic.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubscriptionStatus\", \"display\": \"SubscriptionStatus\", \"definition\": \"The SubscriptionStatus resource describes the state of a Subscription during notifications. It is not persisted.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubscriptionTopic\", \"display\": \"SubscriptionTopic\", \"definition\": \"Describes a stream of resource state changes identified by trigger criteria and annotated with labels useful to filter projections from this topic.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Substance\", \"display\": \"Substance\", \"definition\": \"A homogeneous material with a definite composition.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceDefinition\", \"display\": \"SubstanceDefinition\", \"definition\": \"The detailed description of a substance, typically at a level beyond what is used for prescribing.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceNucleicAcid\", \"display\": \"SubstanceNucleicAcid\", \"definition\": \"Nucleic acids are defined by three distinct elements: the base, sugar and linkage. Individual substance/moiety IDs will be created for each of these elements. The nucleotide sequence will be always entered in the 5’-3’ direction.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstancePolymer\", \"display\": \"SubstancePolymer\", \"definition\": \"Properties of a substance specific to it being a polymer.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceProtein\", \"display\": \"SubstanceProtein\", \"definition\": \"A SubstanceProtein is defined as a single unit of a linear amino acid sequence, or a combination of subunits that are either covalently linked or have a defined invariant stoichiometric relationship. This includes all synthetic, recombinant and purified SubstanceProteins of defined sequence, whether the use is therapeutic or prophylactic. This set of elements will be used to describe albumins, coagulation factors, cytokines, growth factors, peptide/SubstanceProtein hormones, enzymes, toxins, toxoids, recombinant vaccines, and immunomodulators.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceReferenceInformation\", \"display\": \"SubstanceReferenceInformation\", \"definition\": \"Todo.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SubstanceSourceMaterial\", \"display\": \"SubstanceSourceMaterial\", \"definition\": \"Source material shall capture information on the taxonomic and anatomical origins as well as the fraction of a material that can result in or can be modified to form a substance. This set of data elements shall be used to define polymer substances isolated from biological matrices. Taxonomic and anatomical origins shall be described using a controlled vocabulary as required. This information is captured for naturally derived polymers ( . starch) and structurally diverse substances. For Organisms belonging to the Kingdom Plantae the Substance level defines the fresh material of a single species or infraspecies, the Herbal Drug and the Herbal preparation. For Herbal preparations, the fraction information will be captured at the Substance information level and additional information for herbal extracts will be captured at the Specified Substance Group 1 information level. See for further explanation the Substance Class: Structurally Diverse and the herbal annex.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SupplyDelivery\", \"display\": \"SupplyDelivery\", \"definition\": \"Record of delivery of what is supplied.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"SupplyRequest\", \"display\": \"SupplyRequest\", \"definition\": \"A record of a non-patient specific request for a medication, substance, device, certain types of biologically derived product, and nutrition product used in the healthcare setting.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Task\", \"display\": \"Task\", \"definition\": \"A task to be performed.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TerminologyCapabilities\", \"display\": \"TerminologyCapabilities\", \"definition\": \"A TerminologyCapabilities resource documents a set of capabilities (behaviors) of a FHIR Terminology Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestPlan\", \"display\": \"TestPlan\", \"definition\": \"A plan for executing testing on an artifact or specifications\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestReport\", \"display\": \"TestReport\", \"definition\": \"A summary of information based on the results of executing a TestScript.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"TestScript\", \"display\": \"TestScript\", \"definition\": \"A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"Transport\", \"display\": \"Transport\", \"definition\": \"Record of transport.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"ValueSet\", \"display\": \"ValueSet\", \"definition\": \"A ValueSet resource instance specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"VerificationResult\", \"display\": \"VerificationResult\", \"definition\": \"Describes validation requirements, source(s), status and dates for one or more elements.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] }, { \"code\": \"VisionPrescription\", \"display\": \"VisionPrescription\", \"definition\": \"An authorization for the provision of glasses and/or contact lenses to a patient.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] } ] }, { \"code\": \"Parameters\", \"display\": \"Parameters\", \"definition\": \"This resource is used to pass information into and back from an operation (whether invoked directly from REST or within a messaging environment). It is not persisted or allowed to be referenced by other resources except as described in the definition of the Parameters resource.\", \"property\": [{\"code\": \"kind\", \"valueCode\": \"resource\"}] } ] } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "src/fhirtypes/CodeSystem-fhir-types.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/code-systems.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "FhirTypes",
          "type": {
            "text": "FhirType[]"
          },
          "deprecated": "true"
        },
        {
          "kind": "variable",
          "name": "FhirTypeChoices",
          "type": {
            "text": "Choice[]"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeSystemFhirTypes",
          "declaration": {
            "name": "CodeSystemFhirTypes",
            "module": "src/fhirtypes/code-systems.ts"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypes",
          "declaration": {
            "name": "FhirTypes",
            "module": "src/fhirtypes/code-systems.ts"
          }
        },
        {
          "kind": "js",
          "name": "FhirTypeChoices",
          "declaration": {
            "name": "FhirTypeChoices",
            "module": "src/fhirtypes/code-systems.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/fhirtypes/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./CodeSystem-fhir-types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./code-systems"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./profile.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/profile.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "profile",
          "return": {
            "type": {
              "text": "StructureDefinition<T>"
            }
          },
          "parameters": [
            {
              "name": "{\n                            type,\n                            base = new StructureDefinition<T>(type),\n                            constraints = [],\n                            props = []\n                           }",
              "type": {
                "text": "ProfileArgs<T>"
              }
            }
          ],
          "description": "DSL for creating FHIR profiles"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "src/profiling/profile.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/profile.type.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./mustRender"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./complex/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./foundation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./metadata/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./resources/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./special/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/mustRender.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "mustRender",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown | null | undefined"
              },
              "description": "The value to be rendered. Can be of any type or null/undefined."
            },
            {
              "name": "mode",
              "default": "DisplayMode.display",
              "type": {
                "text": "DisplayMode"
              },
              "description": "The display mode. Optional. Defaults to `DisplayMode.display` if not provided."
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if verbose rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if summary mode is enabled. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "summary",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Specifies if summary rendering is required. Optional. Defaults to `false` if not provided."
            },
            {
              "name": "required",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Determines if a value should be rendered based on the provided context parameters."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "mustRender",
          "declaration": {
            "name": "mustRender",
            "module": "src/components/mustRender.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/hostStyles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "hostStyles",
          "default": "css` :host { box-sizing: border-box; } :host *, :host *::before, :host *::after { box-sizing: inherit; } [hidden] { display: none !important; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hostStyles",
          "declaration": {
            "name": "hostStyles",
            "module": "src/styles/hostStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hostStyles"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./textHostStyles"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/styles/textHostStyles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "textHostStyles",
          "type": {
            "text": "array"
          },
          "default": "[ css` :host { display: inline; } ::slotted(*) { user-select: text; } `, hostStyles ]"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "textHostStyles",
          "declaration": {
            "name": "textHostStyles",
            "module": "src/styles/textHostStyles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/displayMode.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./displayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shell"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./shoelace-styled-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./layout/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/shell.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Shell",
          "members": [
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "attribute": "mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "open",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "verbose",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showerror",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summaryonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "input",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "display",
              "privacy": "protected",
              "default": "new ContextProvider(this, { context: displayConfigContext, initialValue: { source: 'shell', mode: DisplayMode.display, summaryonly: false, showerror: false, verbose: false, open: false, input: false } })"
            }
          ],
          "attributes": [
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "fieldName": "mode"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "verbose"
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showerror"
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summaryonly"
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "input"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-shell",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Shell",
          "declaration": {
            "name": "Shell",
            "module": "src/shell/shell.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-shell",
          "declaration": {
            "name": "Shell",
            "module": "src/shell/shell.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/shoelace-styled-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ShoelaceStyledElement",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ShoelaceStyledElement",
          "declaration": {
            "name": "ShoelaceStyledElement",
            "module": "src/shell/shoelace-styled-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/countNodes.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "countNodes",
          "parameters": [
            {
              "name": "jsonData",
              "type": {
                "text": "any"
              }
            }
          ],
          "description": "Count the number of nodes in a JSON structure"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "countNodes",
          "declaration": {
            "name": "countNodes",
            "module": "src/utilities/countNodes.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasAll.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAll",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAll",
          "declaration": {
            "name": "hasAll",
            "module": "src/utilities/hasAll.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasAllOrNone.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasAllOrNone",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "unknown"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require\nto exist together.\n\nTODO: Move to some error handling package"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasAllOrNone",
          "declaration": {
            "name": "hasAllOrNone",
            "module": "src/utilities/hasAllOrNone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasNone.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasNone",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "unknown"
              },
              "description": "the object to inspect"
            },
            {
              "name": "props",
              "type": {
                "text": "string[]"
              },
              "description": "the properties to check for"
            }
          ],
          "description": "Check if object has all or none of the required properties defined. This is useful when a set of properties require to exist together."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasNone",
          "declaration": {
            "name": "hasNone",
            "module": "src/utilities/hasNone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasOnly.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasOnly",
          "parameters": [
            {
              "name": "obj",
              "type": {
                "text": "any"
              },
              "description": "the object to inspect"
            },
            {
              "name": "prop",
              "type": {
                "text": "string"
              },
              "description": "the property to check for"
            }
          ],
          "description": "Check if object has only one specific property defined. This is useful with some types that have no required\nproperties and require different display logic based on what is defined."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasOnly",
          "declaration": {
            "name": "hasOnly",
            "module": "src/utilities/hasOnly.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/hasSameAncestor.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSameAncestor",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "child",
              "type": {
                "text": "HTMLElement | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSameAncestor",
          "declaration": {
            "name": "hasSameAncestor",
            "module": "src/utilities/hasSameAncestor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./countNodes"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAll"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasAllOrNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasNone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasOnly"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./hasSameAncestor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isBlank"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./isWhole"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDisplayMode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./when"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/isBlank.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isBlank",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isBlank",
          "declaration": {
            "name": "isBlank",
            "module": "src/utilities/isBlank.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/isWhole.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isWholeNumber",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "num",
              "type": {
                "text": "string | number | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isWholeNumber",
          "declaration": {
            "name": "isWholeNumber",
            "module": "src/utilities/isWhole.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/toDisplayMode.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDisplayMode",
          "return": {
            "type": {
              "text": "DisplayMode"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "toDisplayOrStructure",
          "return": {
            "type": {
              "text": "DisplayMode"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDisplayMode",
          "declaration": {
            "name": "toDisplayMode",
            "module": "src/utilities/toDisplayMode.ts"
          }
        },
        {
          "kind": "js",
          "name": "toDisplayOrStructure",
          "declaration": {
            "name": "toDisplayOrStructure",
            "module": "src/utilities/toDisplayMode.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/when.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "when",
          "return": {
            "type": {
              "text": "THEN"
            }
          },
          "parameters": [
            {
              "name": "target",
              "type": {
                "text": "WHEN"
              },
              "description": "The target to evaluate the evaluations against."
            },
            {
              "name": "evaluations",
              "type": {
                "text": "Array<Evaluation<WHEN, THEN>>"
              }
            }
          ],
          "description": "A function that passes a target value to an array of evaluating WHEN evaluations and returns the first corresponding\nTHEN\n\n```js\nconst year = 2022\n\nconst color = when(year,\n    [2022, () => 'green'],\n    [year => year > 2022, 'red'],\n    otherwise('blue')\n)\n\nconsole.log(color) // green\n\n```"
        },
        {
          "kind": "function",
          "name": "otherwise",
          "parameters": [
            {
              "name": "t"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "when",
          "declaration": {
            "name": "when",
            "module": "src/utilities/when.ts"
          }
        },
        {
          "kind": "js",
          "name": "otherwise",
          "declaration": {
            "name": "otherwise",
            "module": "src/utilities/when.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/ValueSet.data.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isLoadableStore",
          "return": {
            "type": {
              "text": "source is LoadableStore"
            }
          },
          "parameters": [
            {
              "name": "source",
              "type": {
                "text": "ValueSetSource | LoadableStore"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResolutionError",
          "return": {
            "type": {
              "text": "origin is ResolutionError"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "ValueSetData | ResolutionError"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isResource",
          "return": {
            "type": {
              "text": "origin is ResourceData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isValueSet",
          "return": {
            "type": {
              "text": "origin is ValueSetData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBundle",
          "return": {
            "type": {
              "text": "origin is BundleData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isCodeSystem",
          "return": {
            "type": {
              "text": "origin is CodeSystemData"
            }
          },
          "parameters": [
            {
              "name": "origin",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isLoadableStore",
          "declaration": {
            "name": "isLoadableStore",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isResolutionError",
          "declaration": {
            "name": "isResolutionError",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isResource",
          "declaration": {
            "name": "isResource",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isValueSet",
          "declaration": {
            "name": "isValueSet",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isBundle",
          "declaration": {
            "name": "isBundle",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "isCodeSystem",
          "declaration": {
            "name": "isCodeSystem",
            "module": "src/valuesets/ValueSet.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/ValueSets.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValueSets",
          "members": [
            {
              "kind": "field",
              "name": "processor",
              "type": {
                "text": "ValueSetProcessor"
              },
              "privacy": "private",
              "default": "new ValueSetProcessor(fsSource)"
            },
            {
              "kind": "field",
              "name": "store",
              "type": {
                "text": "ValueSetStore"
              },
              "privacy": "private",
              "default": "new FSStore(target)"
            },
            {
              "kind": "method",
              "name": "processAll",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "process",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetsFactory",
          "members": [
            {
              "kind": "method",
              "name": "fs",
              "static": true,
              "return": {
                "type": {
                  "text": "ValueSets"
                }
              },
              "parameters": [
                {
                  "name": "source",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "regex",
                  "type": {
                    "text": "RegExp | undefined"
                  }
                },
                {
                  "name": "skipUrl",
                  "default": "() => false",
                  "type": {
                    "text": "(url: string) => boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "singleSource",
              "static": true,
              "return": {
                "type": {
                  "text": "ValueSets"
                }
              },
              "parameters": [
                {
                  "name": "file",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "target",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "skipUrl",
                  "default": "() => false",
                  "type": {
                    "text": "(url: string) => boolean"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValueSets",
          "declaration": {
            "name": "ValueSets",
            "module": "src/valuesets/ValueSets.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetsFactory",
          "declaration": {
            "name": "ValueSetsFactory",
            "module": "src/valuesets/ValueSets.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSet.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ValueSets"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./processor/ValueSetProcessor"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FSSource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/Fetch"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/FetchError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/LogFetchRequest"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveBundle"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveCodeSystem"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./source/ResolveValueSet"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./store/FSStore"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/ArraySortingFunction.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sort",
          "return": {
            "type": {
              "text": "[FullyQualifiedKey, string[]][]"
            }
          },
          "parameters": [
            {
              "name": "arr",
              "type": {
                "text": "[FullyQualifiedKey, string[]][]"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "reindex",
          "return": {
            "type": {
              "text": "[FullyQualifiedKey, string[]][]"
            }
          },
          "parameters": [
            {
              "name": "original",
              "type": {
                "text": "[FullyQualifiedKey, string[]][]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sort",
          "declaration": {
            "name": "sort",
            "module": "src/internal/base/ArraySortingFunction.ts"
          }
        },
        {
          "kind": "js",
          "name": "reindex",
          "declaration": {
            "name": "reindex",
            "module": "src/internal/base/ArraySortingFunction.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/DataHandling.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Decorate.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "NoDataObject",
          "type": {
            "text": "FhirElementData"
          },
          "description": "The NoDataSet variable is a constant value of type FhirElementData.\nIt represents a null value for FHIR objects in the context of the Beacon system.\n\nThe NoDataSet value is created by freezing an object with a single property 'id',\nwhich is set to the string value 'FHIR::BEACON::NULL::OBJECT'.\n\nThe NoDataSet value is immutable and cannot be modified once created.\nIt can be used to indicate the absence or unavailability of valid FHIR data. It is meant to be used as a default\nvalue to differentiate between default emptiness and user-set emptiness."
        },
        {
          "kind": "function",
          "name": "decorate",
          "return": {
            "type": {
              "text": "Decorated<T>"
            }
          },
          "parameters": [
            {
              "name": "_key",
              "optional": true,
              "type": {
                "text": "string"
              }
            },
            {
              "name": "data",
              "optional": true,
              "type": {
                "text": "T"
              }
            },
            {
              "name": "_errorMap",
              "optional": true,
              "type": {
                "text": "FqkMap"
              }
            },
            {
              "name": "_profile",
              "default": "undefined",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NoDataObject",
          "declaration": {
            "name": "NoDataObject",
            "module": "src/internal/base/Decorate.ts"
          }
        },
        {
          "kind": "js",
          "name": "decorate",
          "declaration": {
            "name": "decorate",
            "module": "src/internal/base/Decorate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Decorate.types.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/DeepKeyMap.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "AI Generated code",
          "name": "DeepKeyMap",
          "members": [
            {
              "kind": "field",
              "name": "#entries",
              "privacy": "private",
              "type": {
                "text": "{ key: K, value: V }[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#matcher",
              "privacy": "private",
              "type": {
                "text": "((k1: K, k2: K) => boolean) | undefined"
              },
              "default": "matcher"
            },
            {
              "kind": "method",
              "name": "deepEquals",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "obj1",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "obj2",
                  "type": {
                    "text": "K"
                  }
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks."
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  },
                  "description": "The value to associate with the key."
                }
              ],
              "description": "Sets a value in the DeepKeyMap."
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "return": {
                "type": {
                  "text": "[K, V][]"
                }
              },
              "description": "Returns all key-value pairs as entries."
            },
            {
              "kind": "method",
              "name": "keys",
              "return": {
                "type": {
                  "text": "K[]"
                }
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FqkMap",
          "superclass": {
            "name": "DeepKeyMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          },
          "members": [
            {
              "kind": "field",
              "name": "#entries",
              "privacy": "private",
              "type": {
                "text": "{ key: K, value: V }[]"
              },
              "default": "[]",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "field",
              "name": "#matcher",
              "privacy": "private",
              "type": {
                "text": "((k1: K, k2: K) => boolean) | undefined"
              },
              "default": "matcher",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "deepEquals",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "obj1",
                  "type": {
                    "text": "K"
                  }
                },
                {
                  "name": "obj2",
                  "type": {
                    "text": "K"
                  }
                }
              ],
              "description": "Compares two keys using deep equality. Replace this\nimplementation with a library like `lodash.isEqual` or `fast-deep-equal`\nfor more robust checks.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                },
                {
                  "name": "value",
                  "type": {
                    "text": "any"
                  },
                  "description": "The value to associate with the key."
                }
              ],
              "description": "Sets a value in the DeepKeyMap.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "get",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Gets the value associated with a deeply equal key.",
              "return": {
                "type": {
                  "text": "any"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "delete",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Deletes a key-value pair based on deep equality.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "deleteAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "has",
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "Object"
                  },
                  "description": "The object key."
                }
              ],
              "description": "Checks if a deeply equal key exists.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "entries",
              "return": {
                "type": {
                  "text": "[K, V][]"
                }
              },
              "description": "Returns all key-value pairs as entries.",
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            },
            {
              "kind": "method",
              "name": "keys",
              "return": {
                "type": {
                  "text": "K[]"
                }
              },
              "inheritedFrom": {
                "name": "DeepKeyMap",
                "module": "src/internal/base/DeepKeyMap.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DeepKeyMap",
          "declaration": {
            "name": "DeepKeyMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          }
        },
        {
          "kind": "js",
          "name": "FqkMap",
          "declaration": {
            "name": "FqkMap",
            "module": "src/internal/base/DeepKeyMap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/FhirElement.type.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isExtensionData",
          "return": {
            "type": {
              "text": "value is FhirExtensionData<OpenType>"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitiveExtensionData",
          "return": {
            "type": {
              "text": "value is FhirExtensionData<OpenType>"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isExtensionData",
          "declaration": {
            "name": "isExtensionData",
            "module": "src/internal/base/FhirElement.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitiveExtensionData",
          "declaration": {
            "name": "isPrimitiveExtensionData",
            "module": "src/internal/base/FhirElement.type.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Rendering.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Templating.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Validations.impl.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ValidationsImpl",
          "members": [
            {
              "kind": "field",
              "name": "#data",
              "privacy": "private",
              "type": {
                "text": "Decorated<D>"
              },
              "readonly": true,
              "default": "decorated"
            },
            {
              "kind": "field",
              "name": "#codes",
              "privacy": "private",
              "readonly": true,
              "default": "new Codes()"
            },
            {
              "kind": "method",
              "name": "mapForAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "FqkMap"
                }
              }
            },
            {
              "kind": "method",
              "name": "msgFor",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "FullyQualifiedKey | string"
                  }
                },
                {
                  "name": "delimiter",
                  "default": "';'",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "sliceForFQK",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "FqkMap"
                }
              },
              "parameters": [
                {
                  "name": "sliceKey",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "add",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{ fqk, message }",
                  "type": {
                    "text": "KeyErrorPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "has",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rm",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "FullyQualifiedKey"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "rmAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "inspectCode",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "{ node, code, id }",
                  "type": {
                    "text": "{ node: KeyBase } & CodeIdPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "inspectCodeableConcept",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "{ node, concept, bindingId }",
                  "type": {
                    "text": "{ node: KeyBase } & CodeableConceptIdPair"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "all",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "KeyErrorPair[]"
                }
              }
            },
            {
              "kind": "method",
              "name": "choices",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Choices"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "allFor",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "KeyErrorPair[]"
                }
              },
              "parameters": [
                {
                  "name": "fqks",
                  "type": {
                    "text": "FullyQualifiedKey[]"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "code",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "Choices"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "CodeIds"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "slice",
          "return": {
            "type": {
              "text": "FullyQualifiedKey"
            }
          },
          "parameters": [
            {
              "name": "fqk",
              "type": {
                "text": "FullyQualifiedKey"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "matches",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "sliceKey",
              "type": {
                "text": "FullyQualifiedKey"
              }
            },
            {
              "name": "storeKey",
              "type": {
                "text": "FullyQualifiedKey"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ValidationsImpl",
          "declaration": {
            "name": "ValidationsImpl",
            "module": "src/internal/base/Validations.impl.ts"
          }
        },
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "src/internal/base/Validations.impl.ts"
          }
        },
        {
          "kind": "js",
          "name": "matches",
          "declaration": {
            "name": "matches",
            "module": "src/internal/base/Validations.impl.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/Validations.type.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "errors"
        },
        {
          "kind": "variable",
          "name": "meta"
        },
        {
          "kind": "variable",
          "name": "profile"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "errors",
          "declaration": {
            "name": "errors",
            "module": "src/internal/base/Validations.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "meta",
          "declaration": {
            "name": "meta",
            "module": "src/internal/base/Validations.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "profile",
          "declaration": {
            "name": "profile",
            "module": "src/internal/base/Validations.type.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ArraySortingFunction"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DataHandling"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Decorate.types"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DeepKeyMap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirElement.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Rendering"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Templating"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.impl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Validations.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./configurable/fhir-configurable-element"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./presentable/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./util/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/FhirContextData.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirDataContextImpl",
          "members": [
            {
              "kind": "field",
              "name": "_data",
              "type": {
                "text": "{} & FhirElementData"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "{} & FhirElementData"
              },
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "getAt",
              "return": {
                "type": {
                  "text": "X"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataContextImpl",
          "declaration": {
            "name": "FhirDataContextImpl",
            "module": "src/internal/contexts/FhirContextData.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context-consumer-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "The DataContextConsumerController class is a controller that allows a custom element to consume data from a data\ncontext.",
          "name": "DataContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostUpdated"
            },
            {
              "kind": "field",
              "name": "dataContext",
              "default": "new FhirDataContextImpl()"
            },
            {
              "kind": "field",
              "name": "data",
              "default": "{}"
            }
          ]
        },
        {
          "kind": "class",
          "description": "The DisplayContextConsumerController class is responsible for handling the display configuration context\nfor a given host element. It subscribes to changes in the displayConfigContext and updates the host element\naccordingly.\n\nThis class implements the ReactiveController interface and can be added to a host element using the addController\nmethod.",
          "name": "DisplayContextConsumerController",
          "members": [
            {
              "kind": "method",
              "name": "hostConnected",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DataContextConsumerController",
          "declaration": {
            "name": "DataContextConsumerController",
            "module": "src/internal/contexts/context-consumer-controller.ts"
          }
        },
        {
          "kind": "js",
          "name": "DisplayContextConsumerController",
          "declaration": {
            "name": "DisplayContextConsumerController",
            "module": "src/internal/contexts/context-consumer-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context-provider-controller.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ContextProviderController",
          "members": [
            {
              "kind": "field",
              "name": "host",
              "type": {
                "text": "B"
              },
              "privacy": "private",
              "default": "host"
            },
            {
              "kind": "field",
              "name": "displayCtx",
              "type": {
                "text": "ContextProvider<typeof displayConfigContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: displayConfigContext })"
            },
            {
              "kind": "field",
              "name": "dataCtx",
              "type": {
                "text": "ContextProvider<typeof dataContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: dataContext })"
            },
            {
              "kind": "field",
              "name": "containedCtx",
              "type": {
                "text": "ContextProvider<typeof containedResourcesContext>"
              },
              "privacy": "private",
              "default": "new ContextProvider(reactive, { context: containedResourcesContext })"
            },
            {
              "kind": "method",
              "name": "hostUpdated"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContextProviderController",
          "declaration": {
            "name": "ContextProviderController",
            "module": "src/internal/contexts/context-provider-controller.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/context.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "containedResourcesKey"
        },
        {
          "kind": "variable",
          "name": "displayConfigKey"
        },
        {
          "kind": "variable",
          "name": "dataKey"
        },
        {
          "kind": "variable",
          "name": "containedResourcesContext"
        },
        {
          "kind": "variable",
          "name": "displayConfigContext"
        },
        {
          "kind": "variable",
          "name": "dataContext"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "containedResourcesKey",
          "declaration": {
            "name": "containedResourcesKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigKey",
          "declaration": {
            "name": "displayConfigKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataKey",
          "declaration": {
            "name": "dataKey",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "containedResourcesContext",
          "declaration": {
            "name": "containedResourcesContext",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "displayConfigContext",
          "declaration": {
            "name": "displayConfigContext",
            "module": "src/internal/contexts/context.ts"
          }
        },
        {
          "kind": "js",
          "name": "dataContext",
          "declaration": {
            "name": "dataContext",
            "module": "src/internal/contexts/context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/contexts/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FhirContextData"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-consumer-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context-provider-controller"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/customization/fhir-context-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirContextElement",
          "members": [
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "FhirDataContext"
              },
              "description": "Request data context from parent element"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "null | string"
              },
              "description": "define json path to be requested from parent data. Lookup corresponding FHIR model of parent.",
              "default": "dataPath",
              "attribute": "data-path",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "description": "value retrieved from context for `dataPath` property, based on the `data-path` attribute or as a constructor\nargument."
            }
          ],
          "attributes": [
            {
              "name": "data-path",
              "type": {
                "text": "null | string"
              },
              "description": "define json path to be requested from parent data. Lookup corresponding FHIR model of parent.",
              "default": "dataPath",
              "fieldName": "dataPath"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirContextElement",
          "declaration": {
            "name": "FhirContextElement",
            "module": "src/internal/customization/fhir-context-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/customization/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-context-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/beacon-data-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconDataError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconDataError'"
            },
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "msg"
            },
            {
              "kind": "field",
              "name": "stack",
              "type": {
                "text": "string | undefined | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconDataError",
          "declaration": {
            "name": "BeaconDataError",
            "module": "src/internal/errors/beacon-data-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/beacon-element-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BeaconElementError",
          "members": [
            {
              "kind": "field",
              "name": "name",
              "type": {
                "text": "string"
              },
              "default": "'BeaconStateError'"
            },
            {
              "kind": "field",
              "name": "stack",
              "type": {
                "text": "string | undefined | undefined"
              }
            },
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "default": "msg"
            },
            {
              "kind": "field",
              "name": "element",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "element"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BeaconElementError",
          "declaration": {
            "name": "BeaconElementError",
            "module": "src/internal/errors/beacon-element-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/errors/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-data-error"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./beacon-element-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/Backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Backbone",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/BaseElement"
          },
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Backbone",
          "declaration": {
            "name": "Backbone",
            "module": "src/internal/resource/Backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/DomainResource.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "DomainResource",
          "members": [
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Resource",
            "module": "/src/internal/resource/Resource"
          },
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "DomainResource",
          "declaration": {
            "name": "DomainResource",
            "module": "src/internal/resource/DomainResource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/Resource.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Resource",
          "members": [
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "description": "Override to extend the given data with some useful context",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "description": "This method is used to indicate that the data is ready.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal/BaseElement"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Resource",
          "declaration": {
            "name": "Resource",
            "module": "src/internal/resource/Resource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/backbone.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/domain-resource.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./DomainResource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./Resource"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./domain-resource.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderResourceComponent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/resource/renderResourceComponent.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderResourceComponent",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "ResourceData | undefined"
              }
            },
            {
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              }
            },
            {
              "name": "summary",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderResourceComponent",
          "declaration": {
            "name": "renderResourceComponent",
            "module": "src/internal/resource/renderResourceComponent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/builder.type.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/define.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "define",
          "type": {
            "text": "Define"
          },
          "default": "{ oneOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..1', [], Example, [] as DefConstraintAssertion<T>[])), optionOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [] as DefConstraintAssertion<T>[])), choiceOf: <T extends Decorateable>(choice: string, k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..1', [], Example, [] as DefConstraintAssertion<T>[], choice)), minOneOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [] as DefConstraintAssertion<T>[])), listOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '1..*', [], Example, [] as DefConstraintAssertion<T>[])), optionalListOf: <T extends Decorateable>(k: string, t: Name, s: NarrowableDef[] = []) => definitionBuilder(definitionProperty(k, t.value, s.map(v => v.value), '0..*', [], Example, [] as DefConstraintAssertion<T>[])), backboneOf: <T extends Decorateable>(key: string, def: StructureDefinition<T>) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..1', [], Example, [] as DefConstraintAssertion<T>[], undefined, def.props)), backboneListOf: <T extends Decorateable>(key: string, def: StructureDefinition<T>) => definitionBuilder(definitionProperty(key, def.type.value, [], '1..*', [], Example, [] as DefConstraintAssertion<T>[], undefined, def.props)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "define",
          "declaration": {
            "name": "define",
            "module": "src/profiling/builder/define.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/definitionBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionBuilder",
          "return": {
            "type": {
              "text": "PropertyBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "PropertyDef<T>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionBuilder",
          "declaration": {
            "name": "definitionBuilder",
            "module": "src/profiling/builder/definitionBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/definitionProperty.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "definitionProperty",
          "return": {
            "type": {
              "text": "PropertyDef<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "typeName",
              "type": {
                "text": "TypeName"
              }
            },
            {
              "name": "typeNarrowing",
              "default": "[]",
              "type": {
                "text": "NarrowableNames[]"
              }
            },
            {
              "name": "cardinality",
              "default": "'1..1'",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "bindings",
              "default": "[]",
              "type": {
                "text": "CodeIds | Choice[] | Choices"
              }
            },
            {
              "name": "bindingStrength",
              "default": "Example",
              "type": {
                "text": "BindingStrength"
              }
            },
            {
              "name": "constraints",
              "default": "[]",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              }
            },
            {
              "name": "choice",
              "default": "undefined",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "subdefs",
              "default": "undefined",
              "type": {
                "text": "Map<string, Defs<T>> | undefined"
              }
            },
            {
              "name": "mustSupport",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "name": "isModifier",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            },
            {
              "name": "isSummary",
              "default": "undefined",
              "type": {
                "text": "boolean | undefined"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "definitionProperty",
          "declaration": {
            "name": "definitionProperty",
            "module": "src/profiling/builder/definitionProperty.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/extend.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "extend",
          "type": {
            "text": "Extend"
          },
          "default": "{ withOne: <T extends Decorateable>(key: string, extension: Extension): RenderBuilder<T> => extensionBuilder(key, extension), withComplex: <T extends Decorateable>(key: string, extensions: Extensions): RenderBuilder<T> => complexExtensionBuilder(key, extensions), primitive: <T extends Decorateable>(primtiveKey: string, url: string, extensions: Extension[]): RenderBuilder<T> => primitiveExtensionBuilder( primtiveKey, url, extensions) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extend",
          "declaration": {
            "name": "extend",
            "module": "src/profiling/builder/extend.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/extensionBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "extensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extension"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "complexExtensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extensions"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "primitiveExtensionBuilder",
          "return": {
            "type": {
              "text": "RenderBuilder<T>"
            }
          },
          "parameters": [
            {
              "name": "primitiveKey",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "def",
              "type": {
                "text": "Extension[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "extensionBuilder",
          "declaration": {
            "name": "extensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        },
        {
          "kind": "js",
          "name": "complexExtensionBuilder",
          "declaration": {
            "name": "complexExtensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        },
        {
          "kind": "js",
          "name": "primitiveExtensionBuilder",
          "declaration": {
            "name": "primitiveExtensionBuilder",
            "module": "src/profiling/builder/extensionBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./builder.type"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./define"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definitionProperty"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extend"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extensionBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceBuilder"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sliceProp"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/slice.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "slice",
          "type": {
            "text": "Slice"
          },
          "default": "{ oneFor: <T extends Decorateable>(key: string[], constraints: DefConstraintAssertion<T>[], fixedValues: unknown[] = [], choice: string = '') => sliceBuilder<T>(sliceProp(key, choice, constraints, fixedValues)), constraint: <T extends Decorateable>(key: string[], constraints: DefConstraintAssertion<T>[], fixedValues: unknown[] = [], choice: string = '') => sliceBuilder<T>(sliceProp(key, choice, constraints, fixedValues)) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "slice",
          "declaration": {
            "name": "slice",
            "module": "src/profiling/builder/slice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/sliceBuilder.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceBuilder",
          "return": {
            "type": {
              "text": "Builder<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "PropertySliceDef<T>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceBuilder",
          "declaration": {
            "name": "sliceBuilder",
            "module": "src/profiling/builder/sliceBuilder.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/builder/sliceProp.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "sliceProp",
          "return": {
            "type": {
              "text": "PropertySliceDef<T>"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "choice",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "constraints",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              }
            },
            {
              "name": "fixedValues",
              "type": {
                "text": "unknown[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "sliceProp",
          "declaration": {
            "name": "sliceProp",
            "module": "src/profiling/builder/sliceProp.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/StructureDefinition.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "StructureDefinition class serves as a blueprint for defining a resource structure.\nIt provides functionality to set, retrieve, and manipulate properties and constraints\nfor a given resource definition. The class also supports creating deep clones,\nserializing, and converting structure definitions into a JSON or string representation.",
          "name": "StructureDefinition",
          "members": [
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "ResourceDef | DatatypeDef"
              },
              "default": "name"
            },
            {
              "kind": "field",
              "name": "props",
              "default": "new Map<string, Defs<T>>()"
            },
            {
              "kind": "field",
              "name": "constraints",
              "type": {
                "text": "DefConstraintAssertion<T>[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "extendRender",
              "type": {
                "text": "Map<DisplayMode, TemplateGenerator<T>>"
              },
              "default": "new Map<DisplayMode, TemplateGenerator<T>>()"
            },
            {
              "kind": "field",
              "name": "overrideRender",
              "type": {
                "text": "Map<DisplayMode, TemplateGenerator<T>>"
              },
              "default": "new Map<DisplayMode, TemplateGenerator<T>>()"
            },
            {
              "kind": "method",
              "name": "set",
              "parameters": [
                {
                  "name": "prop",
                  "type": {
                    "text": "Defs<T>"
                  }
                },
                {
                  "name": "key",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "get",
              "return": {
                "type": {
                  "text": "Defs<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getSlice",
              "return": {
                "type": {
                  "text": "PropertySliceDef<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getProperty",
              "return": {
                "type": {
                  "text": "PropertyDef<T> | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getExtension",
              "return": {
                "type": {
                  "text": "ExtensionDef | null"
                }
              },
              "parameters": [
                {
                  "name": "key",
                  "type": {
                    "text": "string | string[]"
                  }
                },
                {
                  "name": "choicePrefix",
                  "optional": true,
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "clone",
              "return": {
                "type": {
                  "text": "StructureDefinition<T>"
                }
              }
            },
            {
              "kind": "method",
              "name": "toString",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "indent",
                  "default": "'    '",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "toJSON",
              "return": {
                "type": {
                  "text": "object"
                }
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "propToString",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "string"
                }
              },
              "parameters": [
                {
                  "name": "iterable",
                  "type": {
                    "text": "Defs<T>[]"
                  }
                },
                {
                  "name": "indent",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "flattenKey",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string | string[]"
              }
            },
            {
              "name": "choicePrefix",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Context"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "StructureDefinition",
          "declaration": {
            "name": "StructureDefinition",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        },
        {
          "kind": "js",
          "name": "flattenKey",
          "declaration": {
            "name": "flattenKey",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        },
        {
          "kind": "js",
          "name": "Context",
          "declaration": {
            "name": "Context",
            "module": "src/profiling/definition/StructureDefinition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/definition.type.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isExtensionDef",
          "return": {
            "type": {
              "text": "def is ExtensionDef"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPrimitiveExtensionDef",
          "return": {
            "type": {
              "text": "def is ExtensionDef"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertyDef",
          "return": {
            "type": {
              "text": "def is PropertyDef<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isPropertySliceDef",
          "return": {
            "type": {
              "text": "def is PropertySliceDef<T>"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithChildren",
          "return": {
            "type": {
              "text": "def is { subdefs: Map<string, PropertyDef<T>> }"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefWithConstraints",
          "return": {
            "type": {
              "text": "def is { constraints: DefConstraintAssertion<T>[] }"
            }
          },
          "parameters": [
            {
              "name": "def",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isExtensionDef",
          "declaration": {
            "name": "isExtensionDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPrimitiveExtensionDef",
          "declaration": {
            "name": "isPrimitiveExtensionDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPropertyDef",
          "declaration": {
            "name": "isPropertyDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isPropertySliceDef",
          "declaration": {
            "name": "isPropertySliceDef",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithChildren",
          "declaration": {
            "name": "isDefWithChildren",
            "module": "src/profiling/definition/definition.type.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefWithConstraints",
          "declaration": {
            "name": "isDefWithConstraints",
            "module": "src/profiling/definition/definition.type.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/definition/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./StructureDefinition"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./definition.type"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/AlternatingLogger.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "alternatingColor"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "alternatingColor",
          "declaration": {
            "name": "alternatingColor",
            "module": "src/profiling/util/AlternatingLogger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/BindingStrength.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BindingStrength",
          "members": [
            {
              "kind": "field",
              "name": "Required",
              "static": true,
              "default": "new BindingStrength('required')"
            },
            {
              "kind": "field",
              "name": "Extensible",
              "static": true,
              "default": "new BindingStrength('extensible')"
            },
            {
              "kind": "field",
              "name": "Preferred",
              "static": true,
              "default": "new BindingStrength('preferred')"
            },
            {
              "kind": "field",
              "name": "Example",
              "static": true,
              "default": "new BindingStrength('example')"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "default": "value"
            },
            {
              "kind": "method",
              "name": "values",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              },
              "description": "Get all available binding strength values"
            },
            {
              "kind": "method",
              "name": "valueStrings",
              "static": true,
              "return": {
                "type": {
                  "text": "string[]"
                }
              },
              "description": "Get all available binding strength values as strings"
            },
            {
              "kind": "method",
              "name": "isValid",
              "static": true,
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "The value to check"
                }
              ],
              "description": "Check if a value is a valid binding strength"
            },
            {
              "kind": "method",
              "name": "fromString",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength|undefined"
                }
              },
              "parameters": [
                {
                  "name": "value",
                  "type": {
                    "text": "string"
                  },
                  "description": "The string value to look up"
                }
              ],
              "description": "Get a binding strength by its string value"
            },
            {
              "kind": "method",
              "name": "getByPrefix",
              "static": true,
              "return": {
                "type": {
                  "text": "BindingStrength[]"
                }
              },
              "parameters": [
                {
                  "name": "prefix",
                  "type": {
                    "text": "string"
                  },
                  "description": "The prefix to filter by"
                }
              ],
              "description": "Get binding strengths that start with the given prefix"
            },
            {
              "kind": "method",
              "name": "toString"
            },
            {
              "kind": "method",
              "name": "valueOf"
            }
          ]
        },
        {
          "kind": "variable",
          "name": "{ Required, Extensible, Example, Preferred }",
          "default": "BindingStrength"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BindingStrength",
          "declaration": {
            "name": "BindingStrength",
            "module": "src/profiling/util/BindingStrength.ts"
          }
        },
        {
          "kind": "js",
          "name": "{ Required, Extensible, Example, Preferred }",
          "declaration": {
            "name": "{ Required, Extensible, Example, Preferred }",
            "module": "src/profiling/util/BindingStrength.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/BoundArray.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BoundArray",
          "members": [
            {
              "kind": "field",
              "name": "min",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "min"
            },
            {
              "kind": "field",
              "name": "max",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "readonly": true,
              "default": "max"
            },
            {
              "kind": "field",
              "name": "array",
              "type": {
                "text": "any[]"
              },
              "privacy": "private",
              "readonly": true,
              "default": "initialValues"
            },
            {
              "kind": "method",
              "name": "add",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be added."
                }
              ],
              "description": "Adds an element to the array. Enforces the maximum"
            },
            {
              "kind": "method",
              "name": "remove",
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be removed."
                }
              ],
              "description": "Removes an element from the array. Enforces the minimum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "insert",
              "parameters": [
                {
                  "name": "index",
                  "type": {
                    "text": "number"
                  },
                  "description": "The index at which to insert the element."
                },
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to be inserted."
                }
              ],
              "description": "Inserts an element at a specified index. Enforces the maximum cardinality constraint."
            },
            {
              "kind": "method",
              "name": "contains",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "element",
                  "type": {
                    "text": "any"
                  },
                  "description": "The element to check."
                }
              ],
              "description": "Checks if an element exists in the array."
            },
            {
              "kind": "method",
              "name": "getArray",
              "return": {
                "type": {
                  "text": "Array"
                }
              },
              "description": "Gets the current array."
            },
            {
              "kind": "method",
              "name": "size",
              "return": {
                "type": {
                  "text": "number"
                }
              },
              "description": "Gets the current size of the array."
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BoundArray",
          "declaration": {
            "name": "BoundArray",
            "module": "src/profiling/util/BoundArray.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./AlternatingLogger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BindingStrength"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./BoundArray"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./valuePresent"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/profiling/util/valuePresent.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "aValuePresent",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Record<string, unknown>"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "aValuePresent",
          "declaration": {
            "name": "aValuePresent",
            "module": "src/profiling/util/valuePresent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./money/money"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-details/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./not-supported"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive.validator"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInputEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveInvalidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitiveValidEvent"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-formatters/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/not-supported.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "NotSupported",
          "members": [
            {
              "kind": "field",
              "name": "description",
              "type": {
                "text": "string"
              },
              "attribute": "description"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "attribute": "error"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "attribute": "variant"
            }
          ],
          "attributes": [
            {
              "name": "description",
              "type": {
                "text": "string"
              },
              "fieldName": "description"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "error",
              "type": {
                "text": "string"
              },
              "fieldName": "error"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "fieldName": "variant"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-not-supported",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "NotSupported",
          "declaration": {
            "name": "NotSupported",
            "module": "src/components/primitive/not-supported.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-not-supported",
          "declaration": {
            "name": "NotSupported",
            "module": "src/components/primitive/not-supported.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for displaying and parsing primitive values.",
          "name": "Primitive",
          "members": [
            {
              "kind": "field",
              "name": "extension",
              "type": {
                "text": "FhirExtensionData<OpenType> | null"
              },
              "privacy": "public",
              "default": "null",
              "attribute": "extension"
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "attribute": "key"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "': '",
              "attribute": "delimiter"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "valuePath",
              "type": {
                "text": "string"
              },
              "attribute": "value-path"
            },
            {
              "kind": "field",
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "attribute": "choices"
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string"
              },
              "attribute": "link"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              },
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "showProvided",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showProvided"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "attribute": "errormessage",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary"
            },
            {
              "kind": "field",
              "name": "translate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "translate"
            },
            {
              "kind": "field",
              "name": "trialuse",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "trialuse"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "contextData",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "presentableValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableError",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableTypeError",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "hasExtension",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "validator",
              "type": {
                "text": "PrimitiveValidator"
              },
              "privacy": "private",
              "default": "new PrimitiveValidator(this as unknown as PrimitiveValueHost)"
            },
            {
              "kind": "method",
              "name": "renderValid",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders when p[rovided value is valid. Displays FHIR data, incorporating labels, values, contexts,\nand additional structured elements based on the provided parameters."
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders an input element based on the type and configuration of the current object.\n\nValidation errors related to the input are displayed, if present."
            },
            {
              "kind": "field",
              "name": "renderError",
              "privacy": "private",
              "description": "Generates a rendered error representation based on the current state and properties of the object.",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "handleChange",
              "privacy": "private",
              "description": "Handles change events and updates the internal state of the component based on the event type\nand target element's properties. The method processes events originating from various input\ntypes and updates the `value`, `presentableValue`, `error`, and `errormessage` fields.\nIt also dispatches a custom event when the `value` changes.",
              "parameters": [
                {
                  "description": "The event object triggered by user interaction or programmatic changes.\n   The method processes this event to determine how to update the component state.",
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "getLabel",
              "privacy": "private",
              "description": "Retrieves the label associated with the current context.\nIf the \"label\" property is defined, it will be used. Otherwise, the \"key\" property\nis used as the label's default value.\n\nThe resulting label is formatted into a readable string in lowercase form.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderErrorWithExtension",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderValidWithExtension",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "extension",
              "type": {
                "text": "FhirExtensionData<OpenType> | null"
              },
              "default": "null",
              "fieldName": "extension"
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "fieldName": "key"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "default": "': '",
              "fieldName": "delimiter"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            },
            {
              "name": "value-path",
              "type": {
                "text": "string"
              },
              "fieldName": "valuePath"
            },
            {
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "fieldName": "choices"
            },
            {
              "name": "link",
              "type": {
                "text": "string"
              },
              "fieldName": "link"
            },
            {
              "name": "context",
              "type": {
                "text": "string"
              },
              "fieldName": "context"
            },
            {
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              },
              "fieldName": "type"
            },
            {
              "name": "showProvided",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showProvided"
            },
            {
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "fieldName": "errormessage"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "fieldName": "variant"
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary"
            },
            {
              "name": "translate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "translate"
            },
            {
              "name": "trialuse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "trialuse"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/src/internal/base/configurable/fhir-configurable-element"
          },
          "tagName": "fhir-primitive",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "Primitive",
            "module": "src/components/primitive/primitive.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "src/components/primitive/primitive.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.validator.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidator",
          "members": [
            {
              "kind": "field",
              "name": "#host",
              "privacy": "private",
              "type": {
                "text": "PrimitiveValueHost"
              },
              "readonly": true,
              "default": "host"
            },
            {
              "kind": "method",
              "name": "validate",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "{\n             valueChanged = false,\n             typeChanged = false,\n             valuePathChanged = false,\n             errormessageChanged = false,\n             requiredChanged = false,\n             choicesChanged = false\n           }",
                  "type": {
                    "text": "changedProperties"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "value",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "unknown"
                }
              }
            },
            {
              "kind": "field",
              "name": "validOrError",
              "privacy": "private",
              "parameters": [
                {
                  "name": "fn"
                },
                {
                  "name": "original"
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidator",
          "declaration": {
            "name": "PrimitiveValidator",
            "module": "src/components/primitive/primitive.validator.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveInputEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInputEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "oldValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "oldValue"
            },
            {
              "kind": "field",
              "name": "newValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "newValue"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveInputEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInputEvent",
          "declaration": {
            "name": "PrimitiveInputEvent",
            "module": "src/components/primitive/primitiveInputEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveInvalidEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveInvalidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "FullyQualifiedKey"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "errormessage"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveInvalidEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveInvalidEvent",
          "declaration": {
            "name": "PrimitiveInvalidEvent",
            "module": "src/components/primitive/primitiveInvalidEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitiveValidEvent.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValidEvent",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "key"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "value"
            },
            {
              "kind": "field",
              "name": "primitiveType",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "default": "type"
            }
          ],
          "superclass": {
            "name": "Event",
            "module": "src/components/primitive/primitiveValidEvent.ts"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValidEvent",
          "declaration": {
            "name": "PrimitiveValidEvent",
            "module": "src/components/primitive/primitiveValidEvent.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitve.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { user-select: text; } li { display: flex; flex-wrap: wrap; gap: 0; list-style-type: none; align-items: baseline; padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); } sl-badge::part(base) { color: var(--sl-color-gray-400); background-color: var(--sl-color-gray-100); border-color: var(--sl-color-gray-300); font-weight: var(--sl-font-weight-normal); font-style: italic; } sl-input::part(form-control-label) { font-size: 16px; } sl-input::part(input) { font-size: 15px; } sl-switch { margin-bottom: 1rem; } .code { font-weight: bold } .display { color: gray } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitve.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/directives.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "hasSome",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "hasMany",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              },
              "description": "The data array to check."
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Optional parameter to enable verbose mode.",
              "optional": true
            }
          ],
          "description": "The hasMany function determines if an array has more than 1 item.",
          "return": {
            "type": {
              "text": "boolean"
            }
          }
        },
        {
          "kind": "function",
          "name": "hasOnlyOne",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "Array<any> | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDefined",
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "any | null | undefined"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "hasSome",
          "declaration": {
            "name": "hasSome",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasMany",
          "declaration": {
            "name": "hasMany",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "hasOnlyOne",
          "declaration": {
            "name": "hasOnlyOne",
            "module": "src/shell/layout/directives.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDefined",
          "declaration": {
            "name": "isDefined",
            "module": "src/shell/layout/directives.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/empty-set.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "EmptySet",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-empty-list",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptySet",
          "declaration": {
            "name": "EmptySet",
            "module": "src/shell/layout/empty-set.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-empty-list",
          "declaration": {
            "name": "EmptySet",
            "module": "src/shell/layout/empty-set.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./directives"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./empty-set"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./pluralize"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./renderBackboneCollection"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./show"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group/index"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./combo/systemChoice"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper/index"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/pluralize.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "pluralize",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "word",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "pluralize",
          "declaration": {
            "name": "pluralize",
            "module": "src/shell/layout/pluralize.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/renderBackboneCollection.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "renderSingleBackbone",
          "parameters": [
            {
              "name": "itemLabel",
              "type": {
                "text": "null | string"
              }
            },
            {
              "name": "idx",
              "type": {
                "text": "number | null"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "template",
              "type": {
                "text": "TemplateResult"
              }
            }
          ],
          "deprecated": "true"
        },
        {
          "kind": "function",
          "name": "renderBackboneCollection",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "groupLabel",
              "type": {
                "text": "string"
              },
              "description": "The label for the collection group."
            },
            {
              "name": "itemLabel",
              "type": {
                "text": "string | null"
              },
              "description": "The label for each item in the collection."
            },
            {
              "name": "collection",
              "type": {
                "text": "T[]"
              },
              "description": "The collection of items to render."
            },
            {
              "name": "templateGenerator",
              "type": {
                "text": "(item: T, index: number) => TemplateResult"
              }
            },
            {
              "name": "verbose",
              "default": "false",
              "type": {
                "text": "boolean"
              },
              "description": "Whether to display verbose output.",
              "optional": true
            },
            {
              "description": ", index: number): TemplateResult} templateGenerator - The function that generates the\ntemplate for each item in the collection.",
              "name": "",
              "type": {
                "text": "function(item: T"
              }
            }
          ],
          "description": "Renders a Backbone collection using provided template and labels.",
          "deprecated": "true"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "renderSingleBackbone",
          "declaration": {
            "name": "renderSingleBackbone",
            "module": "src/shell/layout/renderBackboneCollection.ts"
          }
        },
        {
          "kind": "js",
          "name": "renderBackboneCollection",
          "declaration": {
            "name": "renderBackboneCollection",
            "module": "src/shell/layout/renderBackboneCollection.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/show.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "show",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "idx",
              "type": {
                "text": "number|string"
              },
              "description": "The index to be displayed."
            }
          ],
          "description": "Displays the index if it is a number, otherwise returns an empty string."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "show",
          "declaration": {
            "name": "show",
            "module": "src/shell/layout/show.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/debug.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` div { padding: 0; margin: 0; } ul { width: 100%; display: inline-block; background-color: var(--sl-color-blue-100); color: #0c2d6b; border-radius: 0.5rem; border: solid 0.1rem var(--sl-color-blue-200); margin: 0.5rem; padding: 0.5rem 1rem; } li { font-family: monospace; font-size: 0.8rem; margin-top: 0.5rem; list-style-type: none; color: var(--sl-color-yellow-900); } pre { /*max-width: 40rem;*/ word-wrap: anywhere; white-space: pre-wrap; margin: 0rem; padding: 0.3rem; color: var(--sl-color-blue-800); border-radius: 0.5rem; background-color: var(--sl-color-blue-200); } .key { font-weight: bold; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/utilities/debug/debug.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/debug.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "debug",
          "parameters": [
            {
              "name": "debug",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "object"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "Debug",
          "members": [
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "object"
              },
              "privacy": "public",
              "default": "{}",
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "longest",
              "type": {
                "text": "number"
              },
              "privacy": "private",
              "default": "0"
            }
          ],
          "attributes": [
            {
              "name": "data",
              "type": {
                "text": "object"
              },
              "default": "{}",
              "fieldName": "data"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-debug",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "debug",
          "declaration": {
            "name": "debug",
            "module": "src/utilities/debug/debug.ts"
          }
        },
        {
          "kind": "js",
          "name": "Debug",
          "declaration": {
            "name": "Debug",
            "module": "src/utilities/debug/debug.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-debug",
          "declaration": {
            "name": "Debug",
            "module": "src/utilities/debug/debug.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/utilities/debug/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./debug"
          }
        },
        {
          "kind": "js",
          "name": "stringify",
          "declaration": {
            "name": "stringify",
            "module": "./stringify"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/processor/ValueSetProcessor.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "removeValues",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "included",
              "type": {
                "text": "ResolvedValue[]"
              },
              "description": "The array to filter."
            },
            {
              "name": "excluded",
              "type": {
                "text": "ResolvedValue[]"
              },
              "description": "The array of values to remove from the source array."
            }
          ],
          "description": "Removes values from the source array that are included in the valuesToRemove array."
        },
        {
          "kind": "class",
          "description": "",
          "name": "ValueSetProcessor",
          "members": [
            {
              "kind": "field",
              "name": "#source",
              "privacy": "private",
              "type": {
                "text": "ValueSetSource | LoadableStore"
              },
              "default": "source"
            },
            {
              "kind": "field",
              "name": "#ready",
              "privacy": "private",
              "type": {
                "text": "Promise<boolean>"
              }
            },
            {
              "kind": "method",
              "name": "process",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "id",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "debug",
                  "optional": true,
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "processAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "all",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<Choices[]>"
                }
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "removeValues",
          "declaration": {
            "name": "removeValues",
            "module": "src/valuesets/processor/ValueSetProcessor.ts"
          }
        },
        {
          "kind": "js",
          "name": "ValueSetProcessor",
          "declaration": {
            "name": "ValueSetProcessor",
            "module": "src/valuesets/processor/ValueSetProcessor.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/FSSource.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "empty",
          "return": {
            "type": {
              "text": "ResolvedSet"
            }
          },
          "parameters": [
            {
              "name": "source",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "path",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'CodeSystem' | 'ValueSet' | 'unknown'"
              }
            },
            {
              "name": "err",
              "optional": true,
              "type": {
                "text": "FetchError"
              }
            },
            {
              "name": "isError",
              "default": "true",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FSSource",
          "members": [
            {
              "kind": "field",
              "name": "#criteria",
              "privacy": "private",
              "type": {
                "text": "Criteria"
              },
              "readonly": true
            },
            {
              "kind": "field",
              "name": "#path",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "readonly": true,
              "default": "path"
            },
            {
              "kind": "field",
              "name": "#loaded",
              "privacy": "private",
              "type": {
                "text": "boolean | null"
              },
              "default": "null"
            },
            {
              "kind": "field",
              "name": "#files",
              "privacy": "private",
              "type": {
                "text": "string[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#cache",
              "privacy": "private",
              "type": {
                "text": "Map<string, ResolvedSet>"
              },
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "#basePath",
              "privacy": "private",
              "type": {
                "text": "string"
              },
              "default": "''"
            },
            {
              "kind": "method",
              "name": "allIds",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<string[]>"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadDir",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "loadfile",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "isLoaded",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              }
            },
            {
              "kind": "method",
              "name": "size",
              "return": {
                "type": {
                  "text": "number"
                }
              }
            },
            {
              "kind": "method",
              "name": "exists",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "name",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "resolve",
              "return": {
                "type": {
                  "text": "Promise<ResolvedSet[]>"
                }
              },
              "parameters": [
                {
                  "name": "source",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "cacheAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<boolean>"
                }
              },
              "parameters": [
                {
                  "name": "debug",
                  "default": "false",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            }
          ]
        },
        {
          "kind": "function",
          "name": "matchAll",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "_",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "valueSetCriteria",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "file",
              "type": {
                "text": "string"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "codesystemCriteria",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "file",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "empty",
          "declaration": {
            "name": "empty",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "FSSource",
          "declaration": {
            "name": "FSSource",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "matchAll",
          "declaration": {
            "name": "matchAll",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "valueSetCriteria",
          "declaration": {
            "name": "valueSetCriteria",
            "module": "src/valuesets/source/FSSource.ts"
          }
        },
        {
          "kind": "js",
          "name": "codesystemCriteria",
          "declaration": {
            "name": "codesystemCriteria",
            "module": "src/valuesets/source/FSSource.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/Fetch.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "fetchIt",
          "return": {
            "type": {
              "text": "Promise<ResolveResponse>"
            }
          },
          "parameters": [
            {
              "name": "{\n                                url,\n                                options = defaultOptions,\n                                retries = 3,\n                                retryFactor = 1000,\n                                debug = true\n                              }",
              "type": {
                "text": "ResolveRequest"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "fetchIt",
          "declaration": {
            "name": "fetchIt",
            "module": "src/valuesets/source/Fetch.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/FetchError.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FetchError",
          "superclass": {
            "name": "Error",
            "module": "src/valuesets/source/FetchError.ts"
          }
        },
        {
          "kind": "function",
          "name": "throwError",
          "return": {
            "type": {
              "text": "FetchError"
            }
          },
          "parameters": [
            {
              "name": "response",
              "type": {
                "text": "Response | FetchError"
              }
            },
            {
              "name": "body",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "message",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "cause",
              "optional": true,
              "type": {
                "text": "Error | unknown"
              }
            },
            {
              "name": "retryable",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FetchError",
          "declaration": {
            "name": "FetchError",
            "module": "src/valuesets/source/FetchError.ts"
          }
        },
        {
          "kind": "js",
          "name": "throwError",
          "declaration": {
            "name": "throwError",
            "module": "src/valuesets/source/FetchError.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/LogFetchRequest.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "logFetchRequest",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "status",
              "type": {
                "text": "string | number"
              }
            },
            {
              "name": "statusText",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "'basic' | 'cors' | 'default' | 'error' | 'opaque' | 'opaqueredirect' | string"
              }
            },
            {
              "name": "url",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "cause",
              "optional": true,
              "type": {
                "text": "Error | unknown"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "logFetchRequest",
          "declaration": {
            "name": "logFetchRequest",
            "module": "src/valuesets/source/LogFetchRequest.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveBundle.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveBundle",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "bundle",
              "type": {
                "text": "BundleData"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveBundle",
          "declaration": {
            "name": "resolveBundle",
            "module": "src/valuesets/source/ResolveBundle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveCodeSystem.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveCodeSystem",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "vs",
              "type": {
                "text": "CodeSystemData"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveCodeSystem",
          "declaration": {
            "name": "resolveCodeSystem",
            "module": "src/valuesets/source/ResolveCodeSystem.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/source/ResolveValueSet.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "resolveValueSet",
          "return": {
            "type": {
              "text": "Promise<ResolvedSet[]>"
            }
          },
          "parameters": [
            {
              "name": "vs",
              "type": {
                "text": "ValueSetData"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            },
            {
              "name": "debug",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "resolveIncludesOrExclude",
          "return": {
            "type": {
              "text": "Promise<ResolvedValue[][]>"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "segment",
              "type": {
                "text": "ValueSetIncludeExcludeData[]"
              }
            },
            {
              "name": "variant",
              "default": "'include'",
              "type": {
                "text": "'include' | 'exclude'"
              }
            },
            {
              "name": "debug",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "skipUrl",
              "type": {
                "text": "(url: string) => boolean"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "resolveValueSet",
          "declaration": {
            "name": "resolveValueSet",
            "module": "src/valuesets/source/ResolveValueSet.ts"
          }
        },
        {
          "kind": "js",
          "name": "resolveIncludesOrExclude",
          "declaration": {
            "name": "resolveIncludesOrExclude",
            "module": "src/valuesets/source/ResolveValueSet.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/valuesets/store/FSStore.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FSStore",
          "members": [
            {
              "kind": "field",
              "name": "#created",
              "privacy": "private",
              "type": {
                "text": "Promise<string | undefined>"
              }
            },
            {
              "kind": "field",
              "name": "#choices",
              "privacy": "private",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "write",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "choices",
                  "type": {
                    "text": "Choices"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "writeMeta",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Promise<void>"
                }
              },
              "parameters": [
                {
                  "name": "sets",
                  "type": {
                    "text": "Choices[]"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FSStore",
          "declaration": {
            "name": "FSStore",
            "module": "src/valuesets/store/FSStore.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/configurable/fhir-configurable-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ConfigurableElement",
          "members": [
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror"
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input"
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose"
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly"
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open"
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private"
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode"
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror"
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input"
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose"
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ConfigurableElement",
          "declaration": {
            "name": "ConfigurableElement",
            "module": "src/internal/base/configurable/fhir-configurable-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/data/fhir-data-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Abstract class representing a FHIR data element. It extends LitElement.",
          "name": "FhirDataElement",
          "members": [
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data"
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path"
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value."
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors."
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable."
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type"
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()"
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "ValidationsImpl<T>"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "decoratedData",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added."
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key"
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data"
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath"
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/src/internal/base/configurable/fhir-configurable-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirDataElement",
          "declaration": {
            "name": "FhirDataElement",
            "module": "src/internal/base/data/fhir-data-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/data/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-data-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "EmptyResult",
          "default": "[html``]"
        },
        {
          "kind": "function",
          "name": "NullGeneratorGroup"
        },
        {
          "kind": "function",
          "name": "NullGenerators",
          "return": {
            "type": {
              "text": "Generators<T>"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "EmptyResult",
          "declaration": {
            "name": "EmptyResult",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "NullGeneratorGroup",
          "declaration": {
            "name": "NullGeneratorGroup",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "NullGenerators",
          "declaration": {
            "name": "NullGenerators",
            "module": "src/internal/base/presentable/fhir-presentable-element.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { display: flex; flex-direction: column; flex: 1; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; /* padding: 0.2rem; */ } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/internal/base/presentable/fhir-presentable-element.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/fhir-presentable-element.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FhirPresentableElement",
          "members": [
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless"
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "extendedData",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display"
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "extendedData",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected"
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "ValidationsImpl<T>"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "name": "decoratedData",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless"
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "FhirDataElement",
            "module": "/src/internal/base/data/fhir-data-element"
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FhirPresentableElement",
          "declaration": {
            "name": "FhirPresentableElement",
            "module": "src/internal/base/presentable/fhir-presentable-element.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/presentable/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./fhir-presentable-element"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/choiceValidate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "choiceValidate",
          "return": {
            "type": {
              "text": "void"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "DR"
              },
              "description": "The data object being validated, which conforms to DomainResourceData."
            },
            {
              "name": "validations",
              "type": {
                "text": "Validations"
              },
              "description": "The validations object used to record any validation errors."
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              },
              "description": "The name associated with the choice being validated."
            },
            {
              "name": "keys",
              "type": {
                "text": "string[]"
              },
              "description": "An array of keys representing the choices to check."
            }
          ],
          "description": "Validates that only one of the given keys in the data object is populated."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choiceValidate",
          "declaration": {
            "name": "choiceValidate",
            "module": "src/internal/base/util/choiceValidate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./choiceValidate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./oneOf"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/internal/base/util/oneOf.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "choice",
          "return": {
            "type": {
              "text": "Choice<C, D>"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "D | undefined"
              }
            },
            {
              "name": "html",
              "type": {
                "text": "(data: D,\n                                                             name: string,\n                                                             error: string | undefined,\n                                                             context: C) => TemplateResult"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "oneOf",
          "return": {
            "type": {
              "text": "TemplateResult | TemplateResult[]"
            }
          },
          "parameters": [
            {
              "name": "contextElement",
              "type": {
                "text": "BaseElement"
              },
              "description": "The base element providing context state."
            },
            {
              "name": "name",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "error",
              "type": {
                "text": "string | undefined"
              }
            },
            {
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "description": "An array of choices containing data to evaluate and template to conditionally render for\nthat data."
            }
          ],
          "description": "Renders values when only on-of the provided choices should be rendered"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "choice",
          "declaration": {
            "name": "choice",
            "module": "src/internal/base/util/oneOf.ts"
          }
        },
        {
          "kind": "js",
          "name": "oneOf",
          "declaration": {
            "name": "oneOf",
            "module": "src/internal/base/util/oneOf.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'work', text: '1050 W Wishard Blvd\\nRG,\\n5th floor\\nIndianapolis, IN 46240', line: ['1050 W Wishard Blvd', 'RG 5th floor'], city: 'Indianapolis', _state: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'IN' } ] }, postalCode: '46240', state: 'IN', country: 'United States', _country: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: 'US' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/address/address.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/address.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Address",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AddressData>"
                  }
                },
                {
                  "name": "vldtns",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AddressData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-address",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Address",
          "declaration": {
            "name": "Address",
            "module": "src/components/complex/address/address.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-address",
          "declaration": {
            "name": "Address",
            "module": "src/components/complex/address/address.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/address/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./address"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ authorReference: { reference: 'Patient/example' }, time: '2022-02-08T10:18:14.034+10:00', text: 'I don\\'t think that this is true, or what I said, and it should be corrected' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/annotation/annotation.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/annotation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Annotation",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AnnotationData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AnnotationData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "AnnotationData"
                  }
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  }
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "return": {
                "type": {
                  "text": "void"
                }
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-annotation",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Annotation",
          "declaration": {
            "name": "Annotation",
            "module": "src/components/complex/annotation/annotation.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-annotation",
          "declaration": {
            "name": "Annotation",
            "module": "src/components/complex/annotation/annotation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/annotation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./annotation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "document",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/pdf', language: 'en', data: '', title: 'Definition of Procedure' }"
        },
        {
          "kind": "variable",
          "name": "image",
          "type": {
            "text": "object"
          },
          "default": "{ contentType: 'application/dicom', url: 'http://10.1.2.3:1000/wado?requestType=WADO&amp;wado_details...', hash: '3u+UR6n8AgABAAAAHxxdXKmiOmUoqKnZlf8lTOhlPYy93EAkbPfs5+49YLFd/B1+omSKbW7DoqNM40/EeVnwJ8kYoXv9zy9D5C5m5A==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "document",
          "declaration": {
            "name": "document",
            "module": "src/components/complex/attachment/attachment.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "image",
          "declaration": {
            "name": "image",
            "module": "src/components/complex/attachment/attachment.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/attachment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Attachment",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "generate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AttachmentData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-attachment",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Attachment",
          "declaration": {
            "name": "Attachment",
            "module": "src/components/complex/attachment/attachment.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-attachment",
          "declaration": {
            "name": "Attachment",
            "module": "src/components/complex/attachment/attachment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/attachment/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./attachment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/codeable-concept.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/codeable-concept.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeableConcept",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "CodeableConceptData"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodeableConceptData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodeableConceptData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-codeable-concept",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableConcept",
          "declaration": {
            "name": "CodeableConcept",
            "module": "src/components/complex/codeable-concept/codeable-concept.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-codeable-concept",
          "declaration": {
            "name": "CodeableConcept",
            "module": "src/components/complex/codeable-concept/codeable-concept.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-concept/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-concept"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeable-reference.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeable-reference.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "CodeableReference",
          "members": [
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "CodeableReferenceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-codeable-reference",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "CodeableReference",
          "declaration": {
            "name": "CodeableReference",
            "module": "src/components/complex/codeable-reference/codeable-reference.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-codeable-reference",
          "declaration": {
            "name": "CodeableReference",
            "module": "src/components/complex/codeable-reference/codeable-reference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/codeableReference.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ concept: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'R51' }, { system: 'http://snomed.info/sct', code: '25064002', display: 'Headache', userSelected: 'true' } ], text: 'general headache' } }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ reference: { reference: '/Observation/id1234', type: 'Observation', display: 'Patient reported Headache' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/codeable-reference/codeableReference.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/codeable-reference/codeableReference.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/codeable-reference/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./codeable-reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/coding.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/coding.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Coding",
          "members": [
            {
              "kind": "field",
              "name": "computeDisplay",
              "privacy": "private",
              "static": true
            },
            {
              "kind": "method",
              "name": "computeContext",
              "privacy": "private",
              "static": true,
              "return": {
                "type": {
                  "text": "string | undefined"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<CodingData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-coding",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coding",
          "declaration": {
            "name": "Coding",
            "module": "src/components/complex/coding/coding.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-coding",
          "declaration": {
            "name": "Coding",
            "module": "src/components/complex/coding/coding.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/coding/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./coding"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ system: 'phone', value: '(555) 675 5745', use: 'home', period: { start: '2022-07-01', end: '2024-07-01' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/contact-point/contact-point.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/contact-point.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ContactPoint",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ContactPointData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ContactPointData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-contact-point",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ContactPoint",
          "declaration": {
            "name": "ContactPoint",
            "module": "src/components/complex/contact-point/contact-point.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-contact-point",
          "declaration": {
            "name": "ContactPoint",
            "module": "src/components/complex/contact-point/contact-point.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/contact-point/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-point"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'von Hochheim-Weilenfels', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'von' }, { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-name', valueString: 'Hochheim-Weilenfels' } ] }, given: ['Regina', 'Johanna', 'Maria'], prefix: 'Dr. phil.', _prefix: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-EN-qualifier', valueCode: 'AC' } ] }, suffix: 'NCFSA' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', family: 'van Hentenryck', given: ['Karen'] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ 'text': 'Mao Ze Dong' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/complex/human-name/human-name.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/human-name.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "HumanName",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<HumanNameData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<HumanNameData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-human-name",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "HumanName",
          "declaration": {
            "name": "HumanName",
            "module": "src/components/complex/human-name/human-name.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-human-name",
          "declaration": {
            "name": "HumanName",
            "module": "src/components/complex/human-name/human-name.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/human-name/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./human-name"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'http://www.acmehosp.com/patients', value: '44552', period: { start: '2003-05-03' } }"
        },
        {
          "kind": "variable",
          "name": "data1",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'official', system: 'urn:oid:2.16.840.1.113883.16.4.3.2.5', value: '123' }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "IdentifierData"
          },
          "default": "{ use: 'official', type: { coding: [{ code: 'BSN' }] }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789', period: { start: '2003-05-03', end: '2024-12-31' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data1",
          "declaration": {
            "name": "data1",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/complex/identifier/identifier.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifier.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Identifier",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<IdentifierData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<IdentifierData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "IdentifierData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-identifier",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Identifier",
          "declaration": {
            "name": "Identifier",
            "module": "src/components/complex/identifier/identifier.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-identifier",
          "declaration": {
            "name": "Identifier",
            "module": "src/components/complex/identifier/identifier.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/identifiers.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "identifiers",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "data",
              "type": {
                "text": "IdentifierData[]|undefined"
              }
            },
            {
              "name": "config",
              "type": {
                "text": "DisplayConfig"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "identifiers",
          "declaration": {
            "name": "identifiers",
            "module": "src/components/complex/identifier/identifiers.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/identifier/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifier"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./identifiers"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ value: '25.00', currency: 'USD' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/money/money.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/money/money.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Money",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MoneyData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MoneyData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-money",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Money",
          "declaration": {
            "name": "Money",
            "module": "src/components/complex/money/money.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-money",
          "declaration": {
            "name": "Money",
            "module": "src/components/complex/money/money.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./period"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "coverage",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23', end: '2011-05-27' }"
        },
        {
          "kind": "variable",
          "name": "start",
          "type": {
            "text": "object"
          },
          "default": "{ start: '2011-05-23' }"
        },
        {
          "kind": "variable",
          "name": "end",
          "type": {
            "text": "object"
          },
          "default": "{ end: '2011-05-27' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "coverage",
          "declaration": {
            "name": "coverage",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "start",
          "declaration": {
            "name": "start",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "end",
          "declaration": {
            "name": "end",
            "module": "src/components/complex/period/period.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/period/period.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Period",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PeriodData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PeriodData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-period",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Period",
          "declaration": {
            "name": "Period",
            "module": "src/components/complex/period/period.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-period",
          "declaration": {
            "name": "Period",
            "module": "src/components/complex/period/period.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./quantity.type-guards"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { display: flex; flex-direction: column; } .frontmatter { background-color: rgba(0, 0, 0, 0.05); border-radius: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/complex/quantity/quantity.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Quantity",
          "members": [
            {
              "kind": "field",
              "name": "simple",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "simple"
            },
            {
              "kind": "field",
              "name": "variation",
              "type": {
                "text": "QuantityVariations"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<QuantityData | SimpleQuantityData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "Decorated<QuantityData> | Decorated<SimpleQuantityData>"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "QuantityData | SimpleQuantityData"
                  }
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "oldValue",
                  "type": {
                    "text": "unknown"
                  }
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  }
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "simple",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "simple"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-quantity",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Quantity",
          "declaration": {
            "name": "Quantity",
            "module": "src/components/complex/quantity/quantity.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-quantity",
          "declaration": {
            "name": "Quantity",
            "module": "src/components/complex/quantity/quantity.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/quantity/quantity.type-guards.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isQuantity",
          "return": {
            "type": {
              "text": "quantity is QuantityData"
            }
          },
          "parameters": [
            {
              "name": "quantity",
              "type": {
                "text": "QuantityData | SimpleQuantityData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSimpleQuantity",
          "return": {
            "type": {
              "text": "quantity is SimpleQuantityData"
            }
          },
          "parameters": [
            {
              "name": "quantity",
              "type": {
                "text": "QuantityData | SimpleQuantityData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isBoolean",
          "return": {
            "type": {
              "text": "val is DeceasedBoolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDeceasedDateTime",
          "return": {
            "type": {
              "text": "val is DeceasedBoolean"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorReference",
          "return": {
            "type": {
              "text": "val is AuthorReferenceData"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "ReferenceData | FhirString"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isAuthorFhirString",
          "return": {
            "type": {
              "text": "val is AuthorFhirString"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "ReferenceData | FhirString"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isQuantity",
          "declaration": {
            "name": "isQuantity",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isSimpleQuantity",
          "declaration": {
            "name": "isSimpleQuantity",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isBoolean",
          "declaration": {
            "name": "isBoolean",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDeceasedDateTime",
          "declaration": {
            "name": "isDeceasedDateTime",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorReference",
          "declaration": {
            "name": "isAuthorReference",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        },
        {
          "kind": "js",
          "name": "isAuthorFhirString",
          "declaration": {
            "name": "isAuthorFhirString",
            "module": "src/components/complex/quantity/quantity.type-guards.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./range"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/range.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/range/range.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Range",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<RangeData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-range",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Range",
          "declaration": {
            "name": "Range",
            "module": "src/components/complex/range/range.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-range",
          "declaration": {
            "name": "Range",
            "module": "src/components/complex/range/range.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./ratio"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/ratio/ratio.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Ratio",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "RatioData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "RatioData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-ratio",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Ratio",
          "declaration": {
            "name": "Ratio",
            "module": "src/components/complex/ratio/ratio.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-ratio",
          "declaration": {
            "name": "Ratio",
            "module": "src/components/complex/ratio/ratio.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sample-data.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./sampled-data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/sample-data.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/sampled-data/sampled-data.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SampledData",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SampledDataData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-sampled-data",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SampledData",
          "declaration": {
            "name": "SampledData",
            "module": "src/components/complex/sampled-data/sampled-data.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-sampled-data",
          "declaration": {
            "name": "SampledData",
            "module": "src/components/complex/sampled-data/sampled-data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./signature"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./story.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/signature.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Signature",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SignatureData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SignatureData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-signature",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Signature",
          "declaration": {
            "name": "Signature",
            "module": "src/components/complex/signature/signature.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-signature",
          "declaration": {
            "name": "Signature",
            "module": "src/components/complex/signature/signature.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/signature/story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ type: { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' }, when: '2022-02-08T10:16:32.000+10:00', who: { reference: 'Practitioner/example' }, targetFormat: 'application/fhir+xml', data: 'PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPEVudmVsb3BlIHhtbG5zPSJ1cm46ZW52ZWxvcGUiPgogIDxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPgogICAgPFNpZ25lZEluZm8+CiAgICAgIDxDYW5vbmljYWxpemF0aW9uTWV0aG9kIAogICAgICAgICAgIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMS9SRUMteG1sLWMxNG4tCjIwMDEwMzE1I1dpdGhDb21tZW50cyIvPgogICAgICA8U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS8KeG1sZHNpZyNkc2Etc2hhMSIvPgogICAgICA8UmVmZXJlbmNlIFVSST0iIj4KICAgICAgICA8VHJhbnNmb3Jtcz4KICAgICAgICAgIDxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5Lwp4bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiLz4KICAgICAgICA8L1RyYW5zZm9ybXM+CiAgICAgICAgPERpZ2VzdE1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkvCnhtbGRzaWcjc2hhMSIvPgogICAgICAgIDxEaWdlc3RWYWx1ZT51b29xYldZYTVWQ3FjSkNidXltQktxbTE3dlk9PC9EaWdlc3RWYWx1ZT4KICAgICAgPC9SZWZlcmVuY2U+CiAgICA8L1NpZ25lZEluZm8+CjxTaWduYXR1cmVWYWx1ZT4KS2VkSnVUb2I1Z3R2WXg5cU0zazNnbTdrYkxCd1ZiRVFSbDI2UzJ0bVhqcU5ORDdNUkd0b2V3PT0KICAgIDwvU2lnbmF0dXJlVmFsdWU+CiAgICA8S2V5SW5mbz4KICAgICAgPEtleVZhbHVlPgogICAgICAgIDxEU0FLZXlWYWx1ZT4KICAgICAgICAgIDxQPgovS2FDem80U3lyb203OHozRVE1U2JiQjRzRjdleTgwZXRLSUk4NjRXRjY0QjgxdVJwSDV0OWpRVHhlCkV1MEltYnpSTXF6VkRaa1ZHOXhEN25OMWt1Rnc9PQogICAgICAgICAgPC9QPgogICAgICAgICAgPFE+bGk3ZHpEYWN1bzY3Smc3bXRxRW0yVFJ1T01VPTwvUT4KICAgICAgICAgIDxHPlo0UnhzbnFjOUU3cEdrbkZGSDJ4cWFyeVJQQmFRMDFraHBNZExSUW5HNTQxQXd0eC8KWFBhRjVCcHN5NHBOV01PSENCaU5VME5vZ3BzUVc1UXZubE1wQT09CiAgICAgICAgICA8L0c+CiAgICAgICAgICA8WT5xVjM4SXFyV0pHMFYvCm1aUXZSVmkxT0h3OVpqODRuREM0ak84UDBheGkxZ2I2ZCs0NzV5aE1qU2MvCkJySVZDNThXM3lkYmtLK1JpNE9LYmFSWmxZZVJBPT0KICAgICAgICAgPC9ZPgogICAgICAgIDwvRFNBS2V5VmFsdWU+CiAgICAgIDwvS2V5VmFsdWU+CiAgICA8L0tleUluZm8+CiAgPC9TaWduYXR1cmU+CjwvRW52ZWxvcGU+IA==' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/complex/signature/story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing-repeat.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./timing"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing-repeat.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "TimingRepeat",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingRepeatData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-timing-repeat",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "TimingRepeat",
          "declaration": {
            "name": "TimingRepeat",
            "module": "src/components/complex/timing/timing-repeat.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-timing-repeat",
          "declaration": {
            "name": "TimingRepeat",
            "module": "src/components/complex/timing/timing-repeat.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/complex/timing/timing.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Timing",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<TimingData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-timing",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Timing",
          "declaration": {
            "name": "Timing",
            "module": "src/components/complex/timing/timing.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-timing",
          "declaration": {
            "name": "Timing",
            "module": "src/components/complex/timing/timing.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle-everything.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BundleEverything",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Bundle",
            "module": "/src/components/foundation/bundle/bundle"
          },
          "tagName": "fhir-bundle-everything",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BundleEverything",
          "declaration": {
            "name": "BundleEverything",
            "module": "src/components/foundation/bundle/bundle-everything.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-bundle-everything",
          "declaration": {
            "name": "BundleEverything",
            "module": "src/components/foundation/bundle/bundle-everything.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-references', type: 'collection', entry: [ { fullUrl: 'http://example.org/fhir/Patient/23', resource: { resourceType: 'Patient', id: '23', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown ( id:\\u00a01234567)</p><hr/></div>' }, identifier: [ { system: 'http://example.org/ids', value: '1234567' } ] } }, { fullUrl: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d', resource: { resourceType: 'Patient', id: 'temp', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Anonymous Patient</b> (no stated gender), DoB Unknown</p><hr/></div>' } } }, { fullUrl: 'http://example.org/fhir/Observation/123', resource: { resourceType: 'Observation', id: '123', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"123\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;123&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/124', resource: { resourceType: 'Observation', id: '124', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"124\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;124&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir/Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir/Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Observation/12', resource: { resourceType: 'Observation', id: '12', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"12\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;12&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'urn:uuid:04121321-4af5-424c-a0e1-ed3aab1c349d' } } }, { fullUrl: 'http://example.org/fhir/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">http://example.org/fhir-2/Patient/1</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'http://example.org/fhir-2/Patient/1' } } }, { fullUrl: 'http://example.org/fhir-2/Observation/14', resource: { resourceType: 'Observation', id: '14', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"14\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;14&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/23</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/23' } } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '1' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 1</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 1' } ] } }, { fullUrl: 'http://example.org/fhir/Patient/45', resource: { resourceType: 'Patient', id: '45', meta: { versionId: '2' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p style=\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"><b>Name 2</b> (no stated gender), DoB Unknown</p><hr/></div>' }, name: [ { text: 'Name 2' } ] } }, { fullUrl: 'http://example.org/fhir/Observation/47', resource: { resourceType: 'Observation', id: '47', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"47\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;47&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"broken-link.html\">Patient/45/_history/2</a></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/45/_history/2' } } }, { fullUrl: 'http://example.org/fhir/Observation/48', resource: { resourceType: 'Observation', id: '48', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"48\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;48&quot; </p></div><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <span/></p></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { identifier: { system: 'http://example.org/ids', value: '1234567' } } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-simplesummary', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '2c2fb771-6c4b-4df8-89b2-47a1178e7c', meta: { lastUpdated: '2018-11-12T05:42:49.445Z' }, type: 'searchset', total: 4, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=36aac5c3-a9f6-4c3a-bf94-24d32ed604&&patient=example&_sort=_id' } ], entry: [ { fullUrl: 'http://test.fhir.org/r5/Condition/example', resource: { resourceType: 'Condition', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.552Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Severe burn of left ear (Date: 24-May 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' }, { system: 'http://snomed.info/sct', code: '439401001', display: 'Diagnosis' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '24484000', display: 'Severe' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '39065001', display: 'Burn of ear' } ], text: 'Burnt Ear' }, bodySite: [ { coding: [ { system: 'http://snomed.info/sct', code: '49521004', display: 'Left external ear structure' } ], text: 'Left Ear' } ], subject: { reference: 'Patient/example' }, onsetDateTime: '2012-05-24' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/example2', resource: { resourceType: 'Condition', id: 'example2', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:46.626Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Mild Asthma (Date: 12-Nov 2012)</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], severity: { coding: [ { system: 'http://snomed.info/sct', code: '255604002', display: 'Mild' } ] }, code: { text: 'Asthma' }, subject: { reference: 'Patient/example' }, onsetString: 'approximately November 2012' }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/family-history', resource: { resourceType: 'Condition', id: 'family-history', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.274Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Family history of cancer of colon</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'problem-list-item', display: 'Problem List Item' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '312824007', display: 'Family history of cancer of colon' } ] }, subject: { reference: 'Patient/example' } }, search: { mode: 'match' } }, { fullUrl: 'http://test.fhir.org/r5/Condition/stroke', resource: { resourceType: 'Condition', id: 'stroke', meta: { versionId: '1', lastUpdated: '2018-11-12T03:34:47.337Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Ischemic stroke, July 18, 2010</div>' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'active' } ] }, verificationStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-ver-status', code: 'confirmed' } ] }, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-category', code: 'encounter-diagnosis', display: 'Encounter Diagnosis' } ] } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '422504002', display: 'Ischemic stroke (disorder)' } ], text: 'Stroke' }, subject: { reference: 'Patient/example' }, onsetDateTime: '2010-07-18' }, search: { mode: 'match' } } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '86846953-60dd-47ba-b37a-7e7d7e3312', meta: { lastUpdated: '2018-11-12T05:42:49.476Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=0f08b401-5120-4444-9a83-3fd21d33df&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '4bafe9c4-ba53-4d7b-89d0-d92ee0859a', meta: { lastUpdated: '2018-11-12T05:42:49.498Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Observation?_format=application/fhir+xml&search-id=50df0414-1375-48a4-ba1e-66f580360a&&patient=example&code=http%3A//loinc.org%7C55284%2D4&date=ge2015%2D01%2D01&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'bundle-response-medsallergies', type: 'batch-response', entry: [ { resource: { resourceType: 'Patient', id: 'example', meta: { versionId: '1', lastUpdated: '2018-11-12T03:35:20.715Z' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n <table>\\n <tbody>\\n <tr>\\n <td>Name</td>\\n <td>Peter James \\n <b>Chalmers</b> (&quot;Jim&quot;)\\n </td>\\n </tr>\\n <tr>\\n <td>Address</td>\\n <td>534 Erewhon, Pleasantville, Vic, 3999</td>\\n </tr>\\n <tr>\\n <td>Contacts</td>\\n <td>Home: unknown. Work: (03) 5555 6473</td>\\n </tr>\\n <tr>\\n <td>Id</td>\\n <td>MRN: 12345 (Acme Healthcare)</td>\\n </tr>\\n </tbody>\\n </table>\\n </div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '12345', period: { start: '2001-05-06' }, assigner: { display: 'Acme Healthcare' } } ], active: true, name: [ { use: 'official', family: 'Chalmers', given: [ 'Peter', 'James' ] }, { use: 'usual', given: ['Jim'] }, { use: 'maiden', family: 'Windsor', given: [ 'Peter', 'James' ], period: { end: '2002' } } ], telecom: [ { use: 'home' }, { system: 'phone', value: '(03) 5555 6473', use: 'work', rank: 1 }, { system: 'phone', value: '(03) 3410 5613', use: 'mobile', rank: 2 }, { system: 'phone', value: '(03) 5555 8834', use: 'old', period: { end: '2014' } } ], gender: 'male', birthDate: '1974-12-25', _birthDate: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthTime', valueDateTime: '1974-12-25T14:35:45-05:00' } ] }, deceasedBoolean: false, address: [ { use: 'home', type: 'both', text: '534 Erewhon St PeasantVille, Rainbow, Vic 3999', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } } ], contact: [ { relationship: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' } ] } ], name: { family: 'du Marché', _family: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/humanname-own-prefix', valueString: 'VV' } ] }, given: ['Bénédicte'] }, telecom: [ { system: 'phone', value: '+33 (237) 998327' } ], address: { use: 'home', type: 'both', line: ['534 Erewhon St'], city: 'PleasantVille', district: 'Rainbow', state: 'Vic', postalCode: '3999', period: { start: '1974-12-25' } }, gender: 'female', period: { start: '2012' } } ], managingOrganization: { reference: 'Organization/1' } }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '5bdf95d0-24a6-4024-95f5-d546fb479b', meta: { lastUpdated: '2018-11-12T05:42:16.086Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=804eee4a-0a54-4414-9c07-169952f929&&patient=example&_list=%24current%2Dmedications&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '0c11a91c-3638-4d58-8cf1-40e60f43c6', meta: { lastUpdated: '2018-11-12T05:42:16.209Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/AllergyIntolerance?_format=application/fhir+xml&search-id=b1981f8a-4139-4db6-923d-77d764c990&&patient=example&_list=%24current%2Dallergies&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: '19f0fa29-f8fe-4b07-b035-f488893f06', meta: { lastUpdated: '2018-11-12T05:42:16.279Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/Condition?_format=application/fhir+xml&search-id=4d097c43-54aa-4157-b500-be22208dd0&&patient=example&_list=%24current%2Dproblems&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } }, { resource: { resourceType: 'Bundle', id: 'dff8ab42-33f9-42ec-88c5-83d3f05323', meta: { lastUpdated: '2018-11-12T05:42:16.351Z' }, type: 'searchset', total: 0, link: [ { relation: 'self', url: 'http://test.fhir.org/r5/MedicationStatement?_format=application/fhir+xml&search-id=31d4af75-cdcf-4f85-9666-4bafadebb5&&patient=example&_sort=_id' } ] }, response: { status: '200', etag: 'W/1', lastModified: '2018-11-12T03:35:20.717Z' } } ] }"
        },
        {
          "kind": "variable",
          "name": "masterDetail",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Bundle', id: 'b1e4aca6-8695-4f22-84e1-7b7ac22242e5', meta: { lastUpdated: '2025-02-21T17:08:35.396+00:00' }, type: 'searchset', link: [ { relation: 'self', url: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2/$everything' }, { relation: 'next', url: 'https://hapi.fhir.org/baseR5?_getpages=b1e4aca6-8695-4f22-84e1-7b7ac22242e5&_getpagesoffset=20&_count=20&_pretty=true&_bundletype=searchset' } ], entry: [ { fullUrl: 'https://hapi.fhir.org/baseR5/Patient/silth-practice-2', resource: { resourceType: 'Patient', id: 'silth-practice-2', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\">Mr. Josh <b>JAIDEE </b></div><table class=\"hapiPropertyTable\"><tbody><tr><td>Identifier</td><td>8-4027-26620-53-3</td></tr><tr><td>Date of birth</td><td><span>03 April 1967</span></td></tr></tbody></table></div>' }, identifier: [ { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'NI' } ] }, system: 'http://thailand.com/citizenid', value: '8-4027-26620-53-3' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'http://fhirhealthhospital.com/mrn', value: '64-52323' } ], active: true, name: [ { family: 'Jaidee', given: [ 'Josh' ], prefix: [ 'Mr.' ] } ], gender: 'male', birthDate: '1967-04-03' }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81973', resource: { resourceType: 'Condition', id: '81973', meta: { versionId: '2', lastUpdated: '2023-09-10T09:45:22.044+00:00', source: '#y1csxzmLCMKFr88n' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis, other and unspecified' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81974', resource: { resourceType: 'DiagnosticReport', id: '81974', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81975' }, result: [ { reference: 'Observation/81977' }, { reference: 'Observation/81978' }, { reference: 'Observation/81979' }, { reference: 'Observation/81980' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81975', resource: { resourceType: 'Encounter', id: '81975', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81981', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81976', resource: { resourceType: 'MedicationRequest', id: '81976', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81975', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81982', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81977', resource: { resourceType: 'Observation', id: '81977', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81978', resource: { resourceType: 'Observation', id: '81978', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81979', resource: { resourceType: 'Observation', id: '81979', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81980', resource: { resourceType: 'Observation', id: '81980', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81983', resource: { resourceType: 'Procedure', id: '81983', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:36.982+00:00', source: '#NUpi2aO4BEPJGGQg' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/81985', resource: { resourceType: 'Condition', id: '81985', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' }, { system: 'http://hl7.org/fhir/sid/icd-10', code: 'K35.8', display: 'Acute appendicitis, other and unspecified' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/DiagnosticReport/81986', resource: { resourceType: 'DiagnosticReport', id: '81986', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><div class=\"hapiHeaderText\"> Complete Blood Count </div><table class=\"hapiPropertyTable\"><tbody><tr><td>Status</td><td>FINAL</td></tr></tbody></table><table class=\"hapiTableOfValues\"><thead><tr><td>Name</td><td>Value</td><td>Interpretation</td><td>Reference Range</td><td>Status</td></tr></thead><tbody><tr class=\"hapiTableOfValuesRowOdd\"><td> Haemoglobin </td><td>13.1 g/dL </td><td/><td> 12 g/dL - 16 g/dL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Hematocrit, Blood </td><td>40.1 % </td><td/><td> 36 % - 46 % </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowOdd\"><td> White blood cell (WBC) count, Blood </td><td>12.7 10*3/uL </td><td/><td> 4.5 10*3/uL - 11 10*3/uL </td><td>FINAL</td></tr><tr class=\"hapiTableOfValuesRowEven\"><td> Neutrophils per 100 white blood cells, Blood </td><td>70 % </td><td/><td> 54 % - 62 % </td><td>FINAL</td></tr></tbody></table></div>' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '57021-8', display: 'CBC W Auto Differential panel - Blood' } ], text: 'Complete Blood Count' }, subject: { reference: 'Patient/silth-practice-2' }, encounter: { reference: 'Encounter/81987' }, result: [ { reference: 'Observation/81989' }, { reference: 'Observation/81990' }, { reference: 'Observation/81991' }, { reference: 'Observation/81992' } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Encounter/81987', resource: { resourceType: 'Encounter', id: '81987', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, identifier: [ { system: 'http://fhirhealthhospital.com/vn', value: '123' } ], status: 'completed', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, serviceProvider: { reference: 'Organization/81993', display: 'FHIRHealth Hospital' }, participant: [ { actor: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' } } ], actualPeriod: { start: '2023-04-01T09:00:00+07:00', end: '2023-04-01T12:00:00+07:00' }, location: [ { location: { display: 'OPD 1' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/MedicationRequest/81988', resource: { resourceType: 'MedicationRequest', id: '81988', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', intent: 'order', medication: { concept: { coding: [ { system: 'http://tmt.this.or.th', code: '694553', display: 'ceftriaxone 2 g powder for solution for injection/infusion, 1 vial' } ] } }, subject: { reference: 'Patient/silth-practice-2', display: 'Mr. Josh Jaidee' }, encounter: { reference: 'Encounter/81987', display: 'VN 123' }, authoredOn: '2023-04-01', requester: { reference: 'Practitioner/81994', display: 'Dr. Sumit Jingjai' }, dosageInstruction: [ { sequence: 1, text: '2 gm intravenous daily for 3 days', timing: { repeat: { boundsDuration: { value: 3, unit: 'd' }, frequency: 1, period: 1, periodUnit: 'd' } }, route: { coding: [ { system: 'http://snomed.info/sct', code: '255560000', display: 'Intravenous' } ] }, doseAndRate: [ { doseQuantity: { value: 2, unit: 'g', system: 'http://unitsofmeasure.org', code: 'g' } } ] } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81989', resource: { resourceType: 'Observation', id: '81989', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '718-7', display: 'Hemoglobin [Mass/volume] in Blood' } ], text: 'Haemoglobin' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 13.1, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, referenceRange: [ { low: { value: 12, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' }, high: { value: 16, unit: 'g/dL', system: 'http://unitsofmeasure.org', code: 'g/dL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81990', resource: { resourceType: 'Observation', id: '81990', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '4544-3', display: 'Hematocrit [Volume Fraction] of Blood by Automated count' } ], text: 'Hematocrit, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 40.1, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 36, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 46, unit: '%', system: 'http://unitsofmeasure.org', code: '%' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81991', resource: { resourceType: 'Observation', id: '81991', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '6690-2', display: 'Leukocytes [#/volume] in Blood by Automated count' } ], text: 'White blood cell (WBC) count, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 12.7, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, referenceRange: [ { low: { value: 4.5, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' }, high: { value: 11, unit: '10*3/uL', system: 'http://unitsofmeasure.org', code: '10*3/uL' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Observation/81992', resource: { resourceType: 'Observation', id: '81992', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'final', code: { coding: [ { system: 'http://loinc.org', code: '770-8', display: 'Neutrophils/100 leukocytes in Blood by Automated count' } ], text: 'Neutrophils per 100 white blood cells, Blood' }, subject: { reference: 'Patient/silth-practice-2' }, valueQuantity: { value: 70, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, referenceRange: [ { low: { value: 54, unit: '%', system: 'http://unitsofmeasure.org', code: '%' }, high: { value: 62, unit: '%', system: 'http://unitsofmeasure.org', code: 'g/L' } } ] }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Procedure/81995', resource: { resourceType: 'Procedure', id: '81995', meta: { versionId: '1', lastUpdated: '2023-07-02T19:34:42.256+00:00', source: '#v5vnpLpRn1XxmM9I' }, status: 'completed', code: { coding: [ { system: 'http://snomed.info/sct', code: '6025007', display: 'Laparoscopic appendectomy (procedure)' } ], text: 'Laparoscopic appendectomy' }, subject: { reference: 'Patient/silth-practice-2' }, outcome: { coding: [ { system: 'http://snomed.info/sct', code: '385669000', display: 'Successful (qualifier value)' } ], text: 'Successful' } }, search: { mode: 'match' } }, { fullUrl: 'https://hapi.fhir.org/baseR5/Condition/82010', resource: { resourceType: 'Condition', id: '82010', meta: { versionId: '3', lastUpdated: '2023-09-10T09:50:11.731+00:00', source: '#24Vx6GrMz5ttlC2B' }, clinicalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/condition-clinical', code: 'resolved' } ] }, code: { coding: [ { system: 'http://snomed.info/sct', code: '72048003', display: 'Acute appendicitis without peritonitis' } ], text: 'Acute appendicitis without peritonitis' }, subject: { reference: 'Patient/silth-practice-2' } }, search: { mode: 'match' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "masterDetail",
          "declaration": {
            "name": "masterDetail",
            "module": "src/components/foundation/bundle/bundle.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/bundle.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Bundle",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<BundleData>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-bundle",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isDomainResource",
          "return": {
            "type": {
              "text": "val is DomainResourceData"
            }
          },
          "parameters": [
            {
              "name": "val",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Bundle",
          "declaration": {
            "name": "Bundle",
            "module": "src/components/foundation/bundle/bundle.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-bundle",
          "declaration": {
            "name": "Bundle",
            "module": "src/components/foundation/bundle/bundle.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDomainResource",
          "declaration": {
            "name": "isDomainResource",
            "module": "src/components/foundation/bundle/bundle.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/foundation/bundle/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle-everything"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./bundle"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/contact-details/contact-detail.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/contact-details/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./contact-detail.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/usage-context/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./usage-context.data"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/metadata/usage-context/usage-context.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-context"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/primitive-context.styles.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-context/primitive-context.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveContext",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "text"
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-context",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveContext",
          "declaration": {
            "name": "PrimitiveContext",
            "module": "src/components/primitive/primitive-context/primitive-context.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-context",
          "declaration": {
            "name": "PrimitiveContext",
            "module": "src/components/primitive/primitive-context/primitive-context.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-error"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/primitive-error.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-left: var(--sl-spacing-small); padding-top: var(--sl-spacing-x-small); padding-bottom: var(--sl-spacing-x-small); } #message { padding-left: var(--sl-spacing-2x-small); padding-right: var(--sl-spacing-2x-small); background: var(--sl-color-danger-300); color: var(--sl-color-neutral-50); font-style: italic; border-radius: var(--sl-border-radius-small); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-error/primitive-error.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-error/primitive-error.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveError",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "attribute": "text"
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "fieldName": "text"
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-error",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveError",
          "declaration": {
            "name": "PrimitiveError",
            "module": "src/components/primitive/primitive-error/primitive-error.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-error",
          "declaration": {
            "name": "PrimitiveError",
            "module": "src/components/primitive/primitive-error/primitive-error.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-label"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/primitive-label.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-left: var(--sl-spacing-2x-small); padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); user-select: text; /* Allow text selection within shadow DOM */ } label { color: var(--sl-color-primary-700); user-select: text; } /* TODO: variants should be formalised */ .error { font-style: italic; text-decoration: underline wavy var(--sl-color-danger-600); } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-label/primitive-label.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-label/primitive-label.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveLabel",
          "members": [
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "attribute": "text",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "attribute": "variant",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "':'",
              "attribute": "delimiter",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "for",
              "type": {
                "text": "string"
              },
              "attribute": "for",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "assignedElements",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "fieldName": "text"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "fieldName": "variant"
            },
            {
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "default": "':'",
              "fieldName": "delimiter"
            },
            {
              "name": "for",
              "type": {
                "text": "string"
              },
              "fieldName": "for"
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-label",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveLabel",
          "declaration": {
            "name": "PrimitiveLabel",
            "module": "src/components/primitive/primitive-label/primitive-label.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-label",
          "declaration": {
            "name": "PrimitiveLabel",
            "module": "src/components/primitive/primitive-label/primitive-label.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-value"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/primitive-value.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { padding-top: var(--sl-spacing-2x-small); padding-bottom: var(--sl-spacing-2x-small); } div { color: var(--sl-color-gray-800); padding-left: var(--sl-spacing-3x-small); user-select: text; } .placeholder { color: var(--sl-color-gray-300); font-style: italic; font-family: var(--sl-font-serif), serif; } .error { text-decoration: underline wavy var(--sl-color-danger-600); } .variant-checkbox { } .variant-fixed-width { max-width: 40rem; word-wrap: break-word; } .variant-hide-overflow { width: 30rem; /* set the initial width */ height: 2rem; /* set the initial height */ overflow: hidden; /* hide the overflowed text */ transition: height 1s; /* animate height */ word-wrap: break-word; } .variant-hide-overflow:hover { height: 12rem; /* expand to the full height on hover */ overflow-y: scroll; overflow-x: hidden } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-value/primitive-value.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-value/primitive-value.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveValue",
          "members": [
            {
              "kind": "field",
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'n/a'",
              "attribute": "placeholder"
            },
            {
              "kind": "field",
              "name": "text",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "text"
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "description": "Value representation variants.\naccepted values:\n- `fixed-width` - flow large blocks of text to a specific width\n- `hide-overflow` - collapse large blocks of text\n- `checkbox` - show a checkbox instead of text.",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "link"
            },
            {
              "kind": "field",
              "name": "beforeSlot",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "field",
              "name": "afterSlot",
              "type": {
                "text": "Array<HTMLElement>"
              }
            },
            {
              "kind": "field",
              "name": "computeValue",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "placeholder",
              "type": {
                "text": "string"
              },
              "default": "'n/a'",
              "fieldName": "placeholder"
            },
            {
              "name": "text",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "text"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "description": "Value representation variants.\naccepted values:\n- `fixed-width` - flow large blocks of text to a specific width\n- `hide-overflow` - collapse large blocks of text\n- `checkbox` - show a checkbox instead of text.",
              "fieldName": "variant"
            },
            {
              "name": "link",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "link"
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-value",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveValue",
          "declaration": {
            "name": "PrimitiveValue",
            "module": "src/components/primitive/primitive-value/primitive-value.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-value",
          "declaration": {
            "name": "PrimitiveValue",
            "module": "src/components/primitive/primitive-value/primitive-value.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./primitive-wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/primitive-wrapper.styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` li { display: flex; flex-wrap: wrap; list-style-type: none; padding-left: 0.3rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/components/primitive/primitive-wrapper/primitive-wrapper.styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive-wrapper/primitive-wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PrimitiveWrapper",
          "members": [
            {
              "kind": "method",
              "name": "isSlotted",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ShoelaceStyledElement",
                "module": "src/shell/shoelace-styled-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "ShoelaceStyledElement",
            "module": "/src/shell/shoelace-styled-element"
          },
          "tagName": "fhir-primitive-wrapper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PrimitiveWrapper",
          "declaration": {
            "name": "PrimitiveWrapper",
            "module": "src/components/primitive/primitive-wrapper/primitive-wrapper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive-wrapper",
          "declaration": {
            "name": "PrimitiveWrapper",
            "module": "src/components/primitive/primitive-wrapper/primitive-wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toBoolean"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCanonical"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toCode"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDate"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDatetime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toDecimal"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toError"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toFhirString"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toId"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toInteger64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toMarkdown"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toPositiveInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toReference"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toType"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUnsignedInt"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUri"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./toUrl"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./type-converters"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toBase64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toBase64",
          "return": {
            "type": {
              "text": "Base64Binary"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            },
            {
              "name": "maxLength",
              "default": "1048576",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBase64",
          "declaration": {
            "name": "toBase64",
            "module": "src/components/primitive/type-converters/toBase64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toBoolean.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toBoolean",
          "return": {
            "type": {
              "text": "boolean"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "any"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toBoolean",
          "declaration": {
            "name": "toBoolean",
            "module": "src/components/primitive/type-converters/toBoolean.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toCanonical.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toCanonical",
          "return": {
            "type": {
              "text": "Id"
            }
          },
          "parameters": [
            {
              "name": "canonical",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCanonical",
          "declaration": {
            "name": "toCanonical",
            "module": "src/components/primitive/type-converters/toCanonical.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toCode.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toCode",
          "return": {
            "type": {
              "text": "T"
            }
          },
          "parameters": [
            {
              "name": "code",
              "type": {
                "text": "string"
              },
              "description": "The string to convert."
            }
          ],
          "description": "Converts and validates a string to a FHIR code."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toCode",
          "declaration": {
            "name": "toCode",
            "module": "src/components/primitive/type-converters/toCode.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDate",
          "return": {
            "type": {
              "text": "DateTime"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDate",
          "declaration": {
            "name": "toDate",
            "module": "src/components/primitive/type-converters/toDate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDatetime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toDatetime",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value.",
          "return": {
            "type": {
              "text": "DateTime"
            }
          }
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDatetime",
          "declaration": {
            "name": "toDatetime",
            "module": "src/components/primitive/type-converters/toDatetime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toDecimal.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "toDecimal",
          "type": {
            "text": "toPrimitive<unknown, Decimal>"
          },
          "default": "function (decimal: unknown) { if (!decimal) throw new TypeError(`decimal must be a valid number: ${decimal}`) if (!regex.test(decimal + '')) throw new TypeError(`decimal must be a valid number: ${decimal}`) if (isNaN(Number.parseFloat(decimal + ''))) throw new TypeError(`decimal must be a valid number: ${decimal}`) // Split the number into base and exponent const parts = String(decimal).split(/[eE]/) const basePart = parts[0] const exponentPart = parts[1] ? parseInt(parts[1], 10) : 0 // Remove potential leading negative sign and decimal point const baseDigits = basePart.replace(/^-|\\./g, '') // Calculate the total number of digits considering the exponent const totalDigits = baseDigits.length + (exponentPart !== 0 ? Math.abs(exponentPart) : 0) if (totalDigits <= 18) { return decimal as Decimal // return decimal } throw new TypeError(`decimal must be a valid number: ${decimal}`) }",
          "description": "Converts a string representation of a decimal number to the Decimal type.",
          "parameters": [
            {
              "description": "The string representation of the decimal number to convert.",
              "name": "decimal"
            }
          ],
          "return": {
            "type": {
              "text": ""
            }
          }
        },
        {
          "kind": "function",
          "name": "isDecimal",
          "return": {
            "type": {
              "text": "arg is Decimal"
            }
          },
          "parameters": [
            {
              "name": "arg",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toDecimal",
          "declaration": {
            "name": "toDecimal",
            "module": "src/components/primitive/type-converters/toDecimal.ts"
          }
        },
        {
          "kind": "js",
          "name": "isDecimal",
          "declaration": {
            "name": "isDecimal",
            "module": "src/components/primitive/type-converters/toDecimal.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toError.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "toError",
          "type": {
            "text": "toPrimitive<string, string>"
          },
          "default": "function (value: string): string { throw new Error(value ?? `Unable to render due to internal constraint`) }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toError",
          "declaration": {
            "name": "toError",
            "module": "src/components/primitive/type-converters/toError.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toFhirString.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toFhirString",
          "return": {
            "type": {
              "text": "FhirString"
            }
          },
          "parameters": [
            {
              "name": "unknown",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toFhirString",
          "declaration": {
            "name": "toFhirString",
            "module": "src/components/primitive/type-converters/toFhirString.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toId.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toId",
          "return": {
            "type": {
              "text": "Id"
            }
          },
          "parameters": [
            {
              "name": "id",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toId",
          "declaration": {
            "name": "toId",
            "module": "src/components/primitive/type-converters/toId.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInstant.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInstant",
          "return": {
            "type": {
              "text": "Instant"
            }
          },
          "parameters": [
            {
              "name": "instant",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInstant",
          "declaration": {
            "name": "toInstant",
            "module": "src/components/primitive/type-converters/toInstant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInteger.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger",
          "return": {
            "type": {
              "text": "Integer"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger",
          "declaration": {
            "name": "toInteger",
            "module": "src/components/primitive/type-converters/toInteger.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toInteger64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toInteger64",
          "return": {
            "type": {
              "text": "Integer64"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toInteger64",
          "declaration": {
            "name": "toInteger64",
            "module": "src/components/primitive/type-converters/toInteger64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toLink.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toLink",
          "return": {
            "type": {
              "text": "Link"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toLink",
          "declaration": {
            "name": "toLink",
            "module": "src/components/primitive/type-converters/toLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toMarkdown.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toMarkdown",
          "return": {
            "type": {
              "text": "Markdown"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toMarkdown",
          "declaration": {
            "name": "toMarkdown",
            "module": "src/components/primitive/type-converters/toMarkdown.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toPositiveInt.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toPositiveInt",
          "return": {
            "type": {
              "text": "PositiveInt"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toPositiveInt",
          "declaration": {
            "name": "toPositiveInt",
            "module": "src/components/primitive/type-converters/toPositiveInt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toReference.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toReference",
          "return": {
            "type": {
              "text": "Ref"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Based on reference rule"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toReference",
          "declaration": {
            "name": "toReference",
            "module": "src/components/primitive/type-converters/toReference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toTime",
          "return": {
            "type": {
              "text": "DateTime"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "description": "The string value to convert."
            }
          ],
          "description": "Converts a string to a DateTime value."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toTime",
          "declaration": {
            "name": "toTime",
            "module": "src/components/primitive/type-converters/toTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toType.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toType",
          "return": {
            "type": {
              "text": "Type"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toType",
          "declaration": {
            "name": "toType",
            "module": "src/components/primitive/type-converters/toType.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUnsignedInt.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUnsignedInt",
          "return": {
            "type": {
              "text": "UnsignedInt"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "unknown"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUnsignedInt",
          "declaration": {
            "name": "toUnsignedInt",
            "module": "src/components/primitive/type-converters/toUnsignedInt.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUri.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUri",
          "return": {
            "type": {
              "text": "URI"
            }
          },
          "parameters": [
            {
              "name": "uri",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUri",
          "declaration": {
            "name": "toUri",
            "module": "src/components/primitive/type-converters/toUri.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUrl.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUrl",
          "return": {
            "type": {
              "text": "URL"
            }
          },
          "parameters": [
            {
              "name": "url",
              "type": {
                "text": "string"
              },
              "description": "The string representing the URL."
            }
          ],
          "description": "Converts and validates a string to a URL object."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUrl",
          "declaration": {
            "name": "toUrl",
            "module": "src/components/primitive/type-converters/toUrl.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/toUuid.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "toUuid",
          "return": {
            "type": {
              "text": "URL"
            }
          },
          "parameters": [
            {
              "name": "uuid",
              "type": {
                "text": "string"
              }
            },
            {
              "description": "The string representing the URL.",
              "name": "url",
              "type": {
                "text": "string"
              }
            }
          ],
          "description": "Converts and validates a string to a URL object."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "toUuid",
          "declaration": {
            "name": "toUuid",
            "module": "src/components/primitive/type-converters/toUuid.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-converters/type-converters.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "valueOrError",
          "return": {
            "type": {
              "text": "ValOrErr<O, V>"
            }
          },
          "parameters": [
            {
              "name": "fn",
              "type": {
                "text": "toPrimitive<O, V>"
              }
            },
            {
              "name": "originalVal",
              "type": {
                "text": "O"
              }
            }
          ],
          "description": "Wrap value with an error message when operation failed. When there is no error the value is also cast to an expected\ntype. When there was an error the original value type is returned."
        },
        {
          "kind": "function",
          "name": "convertToPrimitiveType",
          "return": {
            "type": {
              "text": "PrimitiveType"
            }
          },
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string | null"
              },
              "description": "The value to be converted."
            }
          ],
          "description": "Converts the given value to its primitive type."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "valueOrError",
          "declaration": {
            "name": "valueOrError",
            "module": "src/components/primitive/type-converters/type-converters.ts"
          }
        },
        {
          "kind": "js",
          "name": "convertToPrimitiveType",
          "declaration": {
            "name": "convertToPrimitiveType",
            "module": "src/components/primitive/type-converters/type-converters.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'ewg', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Inpatient Admission for Peter James Chalmers Account</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'Inpatient: Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/9876B1' }, priority: 1 }, { coverage: { reference: 'Coverage/7546D' }, priority: 2 } ], owner: { reference: 'Organization/f001', display: 'Burgers University Medical Center' }, description: 'Hospital charges', guarantor: [ { party: { reference: 'RelatedPerson/benedicte', display: 'Bénédicte du Marché' }, onHold: false, period: { start: '2016-01-01' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Account', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">HACC Funded Billing for Peter James Chalmers</div>' }, identifier: [ { system: 'urn:oid:0.1.2.3.4.5.6.7', value: '654321' } ], status: 'active', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'PBILLACCT', display: 'patient billing account' } ], text: 'patient' }, name: 'HACC Funded Billing for Peter James Chalmers', subject: [ { reference: 'Patient/example', display: 'Peter James Chalmers' } ], servicePeriod: { start: '2016-01-01', end: '2016-06-30' }, coverage: [ { coverage: { reference: 'Coverage/7546D' }, priority: 1 } ], owner: { reference: 'Organization/hl7' }, description: 'Hospital charges', relatedAccount: [ { relationship: { coding: [ { system: 'http://hl7.org/fhir/account-relationship', code: 'guarantor' } ] }, account: { reference: 'Account/ewg' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/account/account.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/resources/account/account.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/account.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Account",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-account",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Account",
          "declaration": {
            "name": "Account",
            "module": "src/components/resources/account/account.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account",
          "declaration": {
            "name": "Account",
            "module": "src/components/resources/account/account.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./account"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/balance.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/coverage.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/diagnosis.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/guarantor.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/procedure.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./backbone/related-account.backbone"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asDecodedBase64.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asDecodedBase64",
          "parameters": [
            {
              "name": "value",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asDecodedBase64",
          "declaration": {
            "name": "asDecodedBase64",
            "module": "src/components/primitive/type-formatters/asDecodedBase64.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedDate.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDate",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                  date,\n                                  separator = '.',\n                                  order = 'DMY',\n                                  monthFormat = 'short'\n                                }",
              "type": {
                "text": "DateFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDate",
          "declaration": {
            "name": "asFormattedDate",
            "module": "src/components/primitive/type-formatters/asFormattedDate.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedDateTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedDateTime",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                      datetime,\n                                      timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone,\n                                      dateSeparator = '.',\n                                      timeSeparator = ':',\n                                      order = 'DMY',\n                                      monthFormat = 'short',\n                                      format = '24h',\n                                      shape = 'HMS'\n                                    }",
              "type": {
                "text": "DateTimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "src/components/primitive/type-formatters/asFormattedDateTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedInstant.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedInstant",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                     instant,\n                                     timeZoneName = Intl.DateTimeFormat().resolvedOptions().timeZone,\n                                     dateSeparator = '.',\n                                     timeSeparator = ':',\n                                     order = 'DMY',\n                                     monthFormat = 'short',\n                                     format = '24h',\n                                     shape = undefined\n                                   }",
              "type": {
                "text": "DateTimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedInstant",
          "declaration": {
            "name": "asFormattedInstant",
            "module": "src/components/primitive/type-formatters/asFormattedInstant.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asFormattedTime.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asFormattedTime",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "{\n                                  time,\n                                  hourSeparator = ':',\n                                  minuteSeparator = ':',\n                                  format = '24h',\n                                  shape = undefined\n                                }",
              "type": {
                "text": "TimeFormatProps"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asFormattedTime",
          "declaration": {
            "name": "asFormattedTime",
            "module": "src/components/primitive/type-formatters/asFormattedTime.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asLink.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asLink",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "link",
              "type": {
                "text": "Ref | typeof URL"
              }
            },
            {
              "name": "label",
              "optional": true,
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asLink",
          "declaration": {
            "name": "asLink",
            "module": "src/components/primitive/type-formatters/asLink.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asReadable.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asReadable",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "to",
              "default": "'none'",
              "type": {
                "text": "'none' | 'lower' | 'upper'"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asReadable",
          "declaration": {
            "name": "asReadable",
            "module": "src/components/primitive/type-formatters/asReadable.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asUcumUnit.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asUcumUnit",
          "return": {
            "type": {
              "text": "Ucum"
            }
          },
          "parameters": [
            {
              "name": "code",
              "type": {
                "text": "string"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asUcumUnit",
          "declaration": {
            "name": "asUcumUnit",
            "module": "src/components/primitive/type-formatters/asUcumUnit.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/asWrapped.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "asWrapped",
          "return": {
            "type": {
              "text": "string"
            }
          },
          "parameters": [
            {
              "name": "inputStr",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "n",
              "type": {
                "text": "number"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "asWrapped",
          "declaration": {
            "name": "asWrapped",
            "module": "src/components/primitive/type-formatters/asWrapped.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/format.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "format",
          "parameters": [
            {
              "name": "text",
              "type": {
                "text": "unknown"
              }
            },
            {
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "format",
          "declaration": {
            "name": "format",
            "module": "src/components/primitive/type-formatters/format.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/type-formatters/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asDecodedBase64"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedDate"
          }
        },
        {
          "kind": "js",
          "name": "asFormattedDateTime",
          "declaration": {
            "name": "asFormattedDateTime",
            "module": "./asFormattedDateTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedInstant"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asFormattedTime"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asLink"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asReadable"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asUcumUnit"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./asWrapped"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./format"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-batch.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./medication"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-batch.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MedicationBatchBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationBatchData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationBatchData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-medication-batch",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationBatchBackbone",
          "declaration": {
            "name": "MedicationBatchBackbone",
            "module": "src/components/resources/medication/medication-batch.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-medication-batch",
          "declaration": {
            "name": "MedicationBatchBackbone",
            "module": "src/components/resources/medication/medication-batch.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-ingredient.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "MedicationIngredientBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationIngredientData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MedicationIngredientData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal/resource/Backbone"
          },
          "tagName": "fhir-medication-ingredient",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "MedicationIngredientBackbone",
          "declaration": {
            "name": "MedicationIngredientBackbone",
            "module": "src/components/resources/medication/medication-ingredient.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-medication-ingredient",
          "declaration": {
            "name": "MedicationIngredientBackbone",
            "module": "src/components/resources/medication/medication-ingredient.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication-ingredient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data_310",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0310', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0310\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0310&quot; </p></div><p><b>code</b>: Oral Form Oxycodone (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#430127000)</span></p><p><b>doseForm</b>: Tablet dose form (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385055001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Reference</b></td></tr><tr><td>*</td><td><a name=\"sub03\"> </a><blockquote><p/><p><a name=\"sub03\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Oxycodone (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#55452001)</span></td></tr></table></blockquote></td></tr></table><p><b>strength</b>: 5 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1(unit TAB from http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm)<span style=\"background: LightGoldenRodYellow\"> (Details: http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm code TAB = \\'Tablet\\')</span></p></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'sub03', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '55452001', display: 'Oxycodone (substance)' } ] } } } ], code: { coding: [ { system: 'http://snomed.info/sct', code: '430127000', display: 'Oral Form Oxycodone (product)' } ] }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385055001', display: 'Tablet dose form (qualifier value)' } ] }, ingredient: [ { item: { reference: { reference: '#sub03' } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1, system: 'http://terminology.hl7.org/CodeSystem/v3-orderableDrugForm', code: 'TAB' } } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_319",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0319', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Medication\\u003c/b\\u003e\\u003ca name\\u003d\"med0319\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Medication \\u0026quot;med0319\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003edoseForm\\u003c/b\\u003e: Ointment \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#385101003)\\u003c/span\\u003e\\u003c/p\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSalicylic Acid (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#387253001)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 5 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eHydrocortisone (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#396458002)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 1 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003cblockquote\\u003e\\u003cp\\u003e\\u003cb\\u003eingredient\\u003c/b\\u003e\\u003c/p\\u003e\\u003ch3\\u003eItems\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eWhite Petrolatum (substance) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#126066007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003estrength\\u003c/b\\u003e: 94 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e/100 g\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code g \\u003d \\u0027g\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/blockquote\\u003e\\u003c/div\\u003e' }, doseForm: { coding: [{ system: 'http://snomed.info/sct', code: '385101003', display: 'Ointment' }], text: 'Ointment' }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '396458002', display: 'Hydrocortisone (substance)' } ] } }, strengthRatio: { numerator: { value: 1, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '126066007', display: 'White Petrolatum (substance)' } ] } }, strengthRatio: { numerator: { value: 94, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "frontPageData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: 'med0307', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Medication</b><a name=\"med0307\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Medication &quot;med0307&quot; </p></div><p><b>code</b>: Novolog 100u/ml <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ndc.html\">National drug codes</a>#0169-7501-11)</span></p><p><b>marketingAuthorizationHolder</b>: <a name=\"mmanu\"> </a></p><blockquote><p/><p><a name=\"mmanu\"> </a></p><p><b>name</b>: Medication Manufacturer</p></blockquote><p><b>doseForm</b>: Injection solution (qualifier value) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#385219001)</span></p><blockquote><p><b>ingredient</b></p><h3>Items</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Insulin Aspart (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#325072002)</span></td></tr></table><p><b>strength</b>: 100 U<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code U = \\'U\\')</span>/1 mL<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mL = \\'mL\\')</span></p></blockquote><h3>Batches</h3><table class=\"grid\"><tr><td>-</td><td><b>LotNumber</b></td><td><b>ExpirationDate</b></td></tr><tr><td>*</td><td>12345</td><td>2019-10-31</td></tr></table></div>' }, contained: [ { resourceType: 'Organization', id: 'mmanu', name: 'Medication Manufacturer' } ], code: { coding: [ { system: 'http://hl7.org/fhir/sid/ndc', code: '0169-7501-11', display: 'Novolog 100u/ml' } ] }, marketingAuthorizationHolder: { reference: '#mmanu' }, doseForm: { coding: [ { system: 'http://snomed.info/sct', code: '385219001', display: 'Injection solution (qualifier value)' } ] }, ingredient: [ { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '325072002', display: 'Insulin Aspart (substance)' } ] } }, strengthRatio: { numerator: { value: 100, system: 'http://unitsofmeasure.org', code: 'U' }, denominator: { value: 1, system: 'http://unitsofmeasure.org', code: 'mL' } } }, { item: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '387253001', display: 'Salicylic Acid (substance)' } ] } }, strengthRatio: { numerator: { value: 5, system: 'http://unitsofmeasure.org', code: 'g' }, denominator: { value: 100, system: 'http://unitsofmeasure.org', code: 'g' } } } ], batch: { lotNumber: '12345', expirationDate: '2019.10.31' } }"
        },
        {
          "kind": "variable",
          "name": "synthiaData",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Medication', id: '757', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-medication'] }, code: { coding: [ { system: 'http://www.nlm.nih.gov/research/umls/rxnorm', code: '1535362', display: 'sodium fluoride 0.0272 MG/MG Oral Gel' } ], text: 'sodium fluoride 0.0272 MG/MG Oral Gel' }, status: 'active' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data_310",
          "declaration": {
            "name": "data_310",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data_319",
          "declaration": {
            "name": "data_319",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "frontPageData",
          "declaration": {
            "name": "frontPageData",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "synthiaData",
          "declaration": {
            "name": "synthiaData",
            "module": "src/components/resources/medication/medication.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/medication/medication.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Medication",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MedicationData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<MedicationData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-medication",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Medication",
          "declaration": {
            "name": "Medication",
            "module": "src/components/resources/medication/medication.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-medication",
          "declaration": {
            "name": "Medication",
            "module": "src/components/resources/medication/medication.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-monthly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentMonthlyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentMonthlyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentMonthlyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-monthly-template",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentMonthlyTemplate",
          "declaration": {
            "name": "AppointmentMonthlyTemplate",
            "module": "src/components/resources/appointment/appointment-monthly-template.bacbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-monthly-template",
          "declaration": {
            "name": "AppointmentMonthlyTemplate",
            "module": "src/components/resources/appointment/appointment-monthly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-participant.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentParticipantBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentParticipantData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentParticipantData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-appointment-participant",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentParticipantBackbone",
          "declaration": {
            "name": "AppointmentParticipantBackbone",
            "module": "src/components/resources/appointment/appointment-participant.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-appointment-participant",
          "declaration": {
            "name": "AppointmentParticipantBackbone",
            "module": "src/components/resources/appointment/appointment-participant.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-recurrence-template.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentRecurrenceTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentRecurrenceTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-appointment-recurrence-template",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentRecurrenceTemplateBackbone",
          "declaration": {
            "name": "AppointmentRecurrenceTemplateBackbone",
            "module": "src/components/resources/appointment/appointment-recurrence-template.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-appointment-recurrence-template",
          "declaration": {
            "name": "AppointmentRecurrenceTemplateBackbone",
            "module": "src/components/resources/appointment/appointment-recurrence-template.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-weekly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentWeeklyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentWeeklyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentWeeklyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-weekly-template",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentWeeklyTemplate",
          "declaration": {
            "name": "AppointmentWeeklyTemplate",
            "module": "src/components/resources/appointment/appointment-weekly-template.bacbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-weekly-template",
          "declaration": {
            "name": "AppointmentWeeklyTemplate",
            "module": "src/components/resources/appointment/appointment-weekly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment-yearly-template.bacbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "AppointmentYearlyTemplate",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentYearlyTemplateData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentYearlyTemplateData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-yearly-template",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "AppointmentYearlyTemplate",
          "declaration": {
            "name": "AppointmentYearlyTemplate",
            "module": "src/components/resources/appointment/appointment-yearly-template.bacbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-yearly-template",
          "declaration": {
            "name": "AppointmentYearlyTemplate",
            "module": "src/components/resources/appointment/appointment-yearly-template.bacbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, status: 'booked', 'class': [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'AMB', display: 'ambulatory' } ] } ], serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], serviceType: [ { concept: { coding: [ { code: '52', display: 'General Discussion' } ] } } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'FOLLOWUP', display: 'A follow up visit from a previous appointment' } ] }, reason: [ { reference: { reference: 'Condition/example', display: 'Severe burn of left ear' } } ], description: 'Discussion on the results of your recent MRI', start: '2013-12-10T09:00:00Z', end: '2013-12-10T11:00:00Z', created: '2013-10-10', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], patientInstruction: [ { concept: { text: 'Please avoid excessive travel (specifically flying) before this appointment' } } ], basedOn: [ { reference: 'ServiceRequest/myringotomy' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'accepted' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], actor: { reference: 'Practitioner/example', display: 'Dr Adam Careful' }, required: true, status: 'accepted' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Appointment', id: 'examplereq', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Brian MRI results discussion</div>' }, identifier: [ { system: 'http://example.org/sampleappointment-identifier', value: '123' } ], status: 'proposed', serviceCategory: [ { coding: [ { system: 'http://example.org/service-category', code: 'gp', display: 'General Practice' } ] } ], specialty: [ { coding: [ { system: 'http://snomed.info/sct', code: '394814009', display: 'General practice' } ] } ], appointmentType: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0276', code: 'WALKIN', display: 'A previously unscheduled walk-in visit' } ] }, reason: [ { concept: { coding: [ { system: 'http://snomed.info/sct', code: '413095006' } ], text: 'Clinical Review' } } ], description: 'Discussion on the results of your recent MRI', minutesDuration: 15, requestedPeriod: [ { start: '2016-06-02', end: '2016-06-09' } ], slot: [ { reference: 'Slot/example' } ], created: '2015-12-02', note: [ { text: 'Further expand on the results of the MRI and determine the next actions that may be appropriate.' } ], subject: { reference: 'Patient/example', display: 'Peter James Chalmers' }, participant: [ { actor: { reference: 'Patient/example', display: 'Peter James Chalmers' }, required: true, status: 'needs-action' }, { type: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ParticipationType', code: 'ATND' } ] } ], required: true, status: 'needs-action' }, { actor: { reference: 'Location/1', display: 'South Wing, second floor' }, required: true, status: 'accepted' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/appointment/appointment.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/resources/appointment/appointment.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/appointment.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Appointment",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AppointmentData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-appointment",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Appointment",
          "declaration": {
            "name": "Appointment",
            "module": "src/components/resources/appointment/appointment.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-appointment",
          "declaration": {
            "name": "Appointment",
            "module": "src/components/resources/appointment/appointment.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/appointment/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-monthly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-participant.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-recurrence-template.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-weekly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment-yearly-template.bacbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./appointment"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-component.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-reference-range.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-triggered-by.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-component.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationComponent",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationComponentData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-observation-component",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationComponent",
          "declaration": {
            "name": "ObservationComponent",
            "module": "src/components/resources/observation/observation-component.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-observation-component",
          "declaration": {
            "name": "ObservationComponent",
            "module": "src/components/resources/observation/observation-component.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-reference-range.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationReferenceRange",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationReferenceRangeData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-observation-reference-range",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationReferenceRange",
          "declaration": {
            "name": "ObservationReferenceRange",
            "module": "src/components/resources/observation/observation-reference-range.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-observation-reference-range",
          "declaration": {
            "name": "ObservationReferenceRange",
            "module": "src/components/resources/observation/observation-reference-range.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation-triggered-by.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationTriggeredBy",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationTriggeredByData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-observation-triggered-by",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationTriggeredBy",
          "declaration": {
            "name": "ObservationTriggeredBy",
            "module": "src/components/resources/observation/observation-triggered-by.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-observation-triggered-by",
          "declaration": {
            "name": "ObservationTriggeredBy",
            "module": "src/components/resources/observation/observation-triggered-by.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Observation', id: 'f001', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Observation</b><a name=\"f001\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Observation &quot;f001&quot; </p></div><p><b>identifier</b>: id:\\u00a06323\\u00a0(use:\\u00a0OFFICIAL)</p><p><b>status</b>: final</p><p><b>code</b>: Glucose [Moles/volume] in Blood <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#15074-8)</span></p><p><b>subject</b>: <a href=\"patient-example-f001-pieter.html\">Patient/f001: P. van de Heuvel</a> &quot;Pieter VAN DE HEUVEL&quot;</p><p><b>effective</b>: 2013-04-02T09:30:10+01:00</p><p><b>issued</b>: 4 Apr 2013, 1:30:10 am</p><p><b>performer</b>: <a href=\"practitioner-example-f005-al.html\">Practitioner/f005: A. Langeveld</a> &quot;Langeveld ANNE&quot;</p><p><b>value</b>: 6.3 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></p><p><b>interpretation</b>: High <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-v3-ObservationInterpretation.html\">ObservationInterpretation</a>#H)</span></p><h3>ReferenceRanges</h3><table class=\"grid\"><tr><td>-</td><td><b>Low</b></td><td><b>High</b></td></tr><tr><td>*</td><td>3.1 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td><td>6.2 mmol/l<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mmol/L = \\'mmol/L\\')</span></td></tr></table></div>' }, identifier: [ { use: 'official', system: 'http://www.bmc.nl/zorgportal/identifiers/observations', value: '6323' } ], status: 'final', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'vital-signs', display: 'Vital Signs' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '15074-8', display: 'Glucose [Moles/volume] in Blood' } ] }, subject: { reference: 'Patient/f001', display: 'P. van de Heuvel' }, effectiveDateTime: '2013-04-02T09:30:10+01:00', issued: '2013-04-03T15:30:10+01:00', performer: [ { reference: 'Practitioner/f005', display: 'A. Langeveld' } ], valueQuantity: { value: 6.3, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, interpretation: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ObservationInterpretation', code: 'H', display: 'High' } ] } ], referenceRange: [ { low: { value: 3.1, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' }, high: { value: 6.2, unit: 'mmol/l', system: 'http://unitsofmeasure.org', code: 'mmol/L' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/observation/observation.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation/observation.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Observation",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ObservationData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ObservationData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-observation",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Observation",
          "declaration": {
            "name": "Observation",
            "module": "src/components/resources/observation/observation.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-observation",
          "declaration": {
            "name": "Observation",
            "module": "src/components/resources/observation/observation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./observation-definition"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'ObservationDefinition', id: 'example', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: ObservationDefinition</b><a name=\"example\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource ObservationDefinition &quot;example&quot; </p></div><p><b>status</b>: active</p><p><b>category</b>: Laboratory <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-observation-category.html\">Observation Category Codes</a>#laboratory)</span></p><p><b>code</b>: Albumin/Protein.total in Serum or Plasma by Electrophoresis <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://loinc.org/\">LOINC</a>#13980-8)</span></p><p><b>permittedDataType</b>: Quantity</p><p><b>multipleResultsAllowed</b>: false</p><p><b>method</b>: Total measurement <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#115341008)</span></p><p><b>preferredReportName</b>: Serum albumin/​Protein total</p><p><b>permittedUnit</b>: % (Details: UCUM code % = \\'%\\', stated as \\'%\\')</p><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: reference</p><p><b>range</b>: 50-?</p></blockquote><blockquote><p><b>qualifiedValue</b></p><p><b>context</b>: Normal Range <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-referencerange-meaning.html\">Observation Reference Range Meaning Codes</a>#normal)</span></p><p><b>rangeCategory</b>: critical</p><p><b>range</b>: ?-40</p></blockquote></div>' }, status: 'active', category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/observation-category', code: 'laboratory' } ] } ], code: { coding: [ { system: 'http://loinc.org', code: '13980-8', display: 'Albumin/Protein.total in Serum or Plasma by Electrophoresis' } ] }, permittedDataType: ['Quantity'], multipleResultsAllowed: false, method: { coding: [ { system: 'http://snomed.info/sct', code: '115341008', display: 'Total measurement' } ] }, preferredReportName: 'Serum albumin/​Protein total', permittedUnit: [ { system: 'http://unitsofmeasure.org', code: '%', display: '%' } ], qualifiedValue: [ { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'reference', range: { low: { value: 50 } } }, { context: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/referencerange-meaning', code: 'normal', display: 'Normal Range' } ] }, rangeCategory: 'critical', range: { high: { value: 40 } } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/observation-definition/observation-definition.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/observation-definition/observation-definition.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "ObservationDefinition",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal/resource/DomainResource"
          },
          "tagName": "fhir-observation-definition",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "ObservationDefinition",
          "declaration": {
            "name": "ObservationDefinition",
            "module": "src/components/resources/observation-definition/observation-definition.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-observation-definition",
          "declaration": {
            "name": "ObservationDefinition",
            "module": "src/components/resources/observation-definition/observation-definition.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-communication.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-contact.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient-link.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./patient"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-communication.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientCommunicationBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientCommunicationData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientCommunicationData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-patient-communication",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientCommunicationBackbone",
          "declaration": {
            "name": "PatientCommunicationBackbone",
            "module": "src/components/resources/patient/patient-communication.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-patient-communication",
          "declaration": {
            "name": "PatientCommunicationBackbone",
            "module": "src/components/resources/patient/patient-communication.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-contact.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientContactBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientContactData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientContactData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-patient-contact",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientContactBackbone",
          "declaration": {
            "name": "PatientContactBackbone",
            "module": "src/components/resources/patient/patient-contact.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-patient-contact",
          "declaration": {
            "name": "PatientContactBackbone",
            "module": "src/components/resources/patient/patient-contact.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient-link.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "PatientLink",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "generate",
              "privacy": "private",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<PatientLinkData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-patient-link",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "PatientLink",
          "declaration": {
            "name": "PatientLink",
            "module": "src/components/resources/patient/patient-link.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-patient-link",
          "declaration": {
            "name": "PatientLink",
            "module": "src/components/resources/patient/patient-link.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: 'f201', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp style\\u003d\"border: 1px #661aff solid; background-color: #e6e6ff; padding: 10px;\"\\u003e\\u003cb\\u003eRoel(OFFICIAL)\\u003c/b\\u003e male, DoB: 1960-03-13 ( BSN: 123456789 (use: OFFICIAL))\\u003c/p\\u003e\\u003chr/\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Record is active\"\\u003eActive:\\u003c/td\\u003e\\u003ctd\\u003etrue\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known status of Patient\"\\u003eDeceased:\\u003c/td\\u003e\\u003ctd\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known Marital status of Patient\"\\u003eMarital Status:\\u003c/td\\u003e\\u003ctd\\u003e\\u003cspan title\\u003d\"Codes: {http://snomed.info/sct 36629006}, {http://terminology.hl7.org/CodeSystem/v3-MaritalStatus M}\"\\u003eLegally married\\u003c/span\\u003e\\u003c/td\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Known multipleBirth status of Patient\"\\u003eMultiple Birth:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003efalse\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Other Ids (see the one above)\"\\u003eOther Id:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003eBSN: 123456789 (use: OFFICIAL)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Ways to contact the Patient\"\\u003eContact Details:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31612345678\"\\u003e+31612345678\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003cli\\u003eBos en Lommerplein 280 Amsterdam 1055RW NLD (HOME)\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Languages spoken\"\\u003eLanguage:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cspan title\\u003d\"Codes: {urn:ietf:bcp:47 nl-NL}\"\\u003eDutch\\u003c/span\\u003e (preferred)\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Nominated Contact: Wife\"\\u003eWife:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eAriadne Bor-Jansma\\u003c/li\\u003e\\u003cli\\u003e\\u003ca href\\u003d\"tel:+31201234567\"\\u003e+31201234567\\u003c/a\\u003e\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd style\\u003d\"background-color: #f3f5da\" title\\u003d\"Patient Links\"\\u003eLinks:\\u003c/td\\u003e\\u003ctd colspan\\u003d\"3\"\\u003e\\u003cul\\u003e\\u003cli\\u003eManaging Organization: \\u003ca href\\u003d\"organization-example-f201-aumc.html\"\\u003eOrganization/f201: AUMC\\u003c/a\\u003e \\u0026quot;Artis University Medical Center (AUMC)\\u0026quot;\\u003c/li\\u003e\\u003c/ul\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003c/div\\u003e' }, identifier: [ { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' }, { use: 'official', type: { text: 'BSN' }, system: 'urn:oid:2.16.840.1.113883.2.4.6.3', value: '123456789' } ], active: true, name: [ { use: 'official', text: 'Roel', family: 'Bor', given: ['Roelof Olaf'], prefix: ['Drs.'], suffix: ['PDEng.'] } ], telecom: [ { system: 'phone', value: '+31612345678', use: 'mobile' }, { system: 'phone', value: '+31201234567', use: 'home' } ], gender: 'male', birthDate: '1960-03-13', deceasedBoolean: false, address: [ { use: 'home', line: ['Bos en Lommerplein 280'], city: 'Amsterdam', postalCode: '1055RW', country: 'NLD' } ], maritalStatus: { coding: [ { system: 'http://snomed.info/sct', code: '36629006', display: 'Legally married' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M' } ] }, multipleBirthBoolean: false, photo: [{ contentType: 'image/jpeg', url: 'Binary/f006' }], contact: [ { relationship: [ { coding: [ { system: 'http://snomed.info/sct', code: '127850001', display: 'Wife' }, { system: 'http://terminology.hl7.org/CodeSystem/v2-0131', code: 'N' }, { system: 'http://terminology.hl7.org/CodeSystem/v3-RoleCode', code: 'WIFE' } ] } ], name: { use: 'usual', text: 'Ariadne Bor-Jansma' }, telecom: [{ system: 'phone', value: '+31201234567', use: 'home' }] } ], communication: [ { language: { coding: [{ system: 'urn:ietf:bcp:47', code: 'nl-NL', display: 'Dutch' }] }, preferred: true } ], managingOrganization: { reference: 'Organization/f201', display: 'AUMC' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        },
        {
          "kind": "variable",
          "name": "hapiFhirPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '1414', meta: { versionId: '2', lastUpdated: '2020-09-28T04:12:54.791+00:00', source: '#rhkcZluthvbxDoLf' }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">name:徐<br/>ID:10501006884<br/>Gendar:female<br/>HospID:HHX<br/>Birthdate:1970-01-22</div>' }, identifier: [ { use: 'usual', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR' } ] }, system: 'urn:oid:1.2.36.146.595.217.0.1', value: '10501006884', period: { start: '2020-09-26' }, assigner: { display: 'HHX' } } ], active: true, name: [ { text: '徐', family: '徐' } ], gender: 'female', birthDate: '1970-01-22', managingOrganization: { display: 'HHX' } }"
        },
        {
          "kind": "variable",
          "name": "aidboxPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', meta: { profile: [ 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Patient' ] }, gender: 'male', address: [ { city: 'Brockton', line: [ '730 Schoen Center Apt 8' ], state: 'Massachusetts', country: 'US', extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: -71.024638 }, { url: 'longitude', valueDecimal: 42.082543 } ] } ], postalCode: '02301' } ], telecom: [ { use: 'home', value: '555-696-1511', system: 'phone' } ], id: 'd3af67c9-0c02-45f2-bc91-fea45af3ee83', name: [ { prefix: [ 'Mr.' ], use: 'official', given: [ 'Abram53' ], family: 'Hickle134' } ], identifier: [ { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'https://github.com/synthetichealth/synthea' }, { value: '803f5907-5427-4930-a093-1a95190de7fd', system: 'http://hospital.smarthealthit.org', type: { text: 'Medical Record Number', coding: [ { code: 'MR', system: 'http://hl7.org/fhir/v2/0203', display: 'Medical Record Number' } ] } }, { type: { text: 'Social Security Number', coding: [ { code: 'SB', system: 'http://hl7.org/fhir/identifier-type', display: 'Social Security Number' } ] }, value: '999-81-4006', system: 'http://hl7.org/fhir/sid/us-ssn' }, { value: 'S99988684', system: 'urn:oid:2.16.840.1.113883.4.3.25', type: { text: 'Driver\\'s License', coding: [ { display: 'Driver\\'s License', code: 'DL', system: 'http://hl7.org/fhir/v2/0203' } ] } }, { type: { text: 'Passport Number', coding: [ { code: 'PPN', system: 'http://hl7.org/fhir/v2/0203', display: 'Passport Number' } ] }, value: 'X17148555X', system: 'http://standardhealthrecord.org/fhir/StructureDefinition/passportNumber' } ], maritalStatus: { text: 'S', coding: [ { code: 'S', system: 'http://hl7.org/fhir/v3/MaritalStatus', display: 'S' } ] }, text: { div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: v2.0.0-33-g3ab9839e\\n . Person seed: -7948439064728439692 Population seed: 1534165146158</div>', status: 'generated' }, birthDate: '1955-06-27', multipleBirth: { boolean: false }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { code: '2106-3', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'White' } }, { url: 'text', valueString: 'White' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { code: '2186-5', system: 'urn:oid:2.16.840.1.113883.6.238', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Sharolyn456 Harris789' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/birthPlace', valueAddress: { city: 'Boston', state: 'Massachusetts', country: 'US' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-actor-FictionalPerson-extension', valueBoolean: true }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-FathersName-extension', valueHumanName: { text: 'Samual455 Hickle134' } }, { url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-demographics-SocialSecurityNumber-extension', valueString: '999-81-4006' }, { valueReference: { reference: 'Basic/bad528f4-fa8a-4f5b-a478-1b630be88847' }, url: 'http://standardhealthrecord.org/fhir/StructureDefinition/shr-entity-Person-extension' }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 0 }, { valueDecimal: 62, url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years' } ], communication: [ { language: { text: 'English', coding: [ { code: 'en-US', system: 'urn:ietf:bcp:47', display: 'English' } ] } } ] }"
        },
        {
          "kind": "variable",
          "name": "synthiaPatient",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Patient', id: '230', meta: { versionId: '1', lastUpdated: '2024-11-13T21:54:40.340+00:00', source: '#G6HXMgWDzzplqVzu', profile: ['http://hl7.org/fhir/us/core/StructureDefinition/us-core-patient'] }, text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">Generated by <a href=\"https://github.com/synthetichealth/synthea\">Synthea</a>.Version identifier: 2cc0a62\\n . Person seed: 8408368319748256253 Population seed: 1731533659674</div>' }, extension: [ { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '1002-5', display: 'American Indian or Alaska Native' } }, { url: 'text', valueString: 'American Indian or Alaska Native' } ] }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-ethnicity', extension: [ { url: 'ombCategory', valueCoding: { system: 'urn:oid:2.16.840.1.113883.6.238', code: '2186-5', display: 'Not Hispanic or Latino' } }, { url: 'text', valueString: 'Not Hispanic or Latino' } ] }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-mothersMaidenName', valueString: 'Jonell764 Gerlach374' }, { url: 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex', valueCode: 'M' }, { url: 'http://hl7.org/fhir/StructureDefinition/patient-birthPlace', valueAddress: { city: 'Plymouth', state: 'Massachusetts', country: 'US' } }, { url: 'http://synthetichealth.github.io/synthea/disability-adjusted-life-years', valueDecimal: 21.90583818492967 }, { url: 'http://synthetichealth.github.io/synthea/quality-adjusted-life-years', valueDecimal: 60.09416181507033 } ], identifier: [ { system: 'https://github.com/synthetichealth/synthea', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ], text: 'Medical Record Number' }, system: 'http://hospital.smarthealthit.org', value: '47186a2c-8223-81e3-52dd-04fca1734b88' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'SS', display: 'Social Security Number' } ], text: 'Social Security Number' }, system: 'http://hl7.org/fhir/sid/us-ssn', value: '999-15-8247' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'DL', display: 'Driver\\'s license number' } ], text: 'Driver\\'s license number' }, system: 'urn:oid:2.16.840.1.113883.4.3.25', value: 'S99953724' }, { type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'PPN', display: 'Passport Number' } ], text: 'Passport Number' }, system: 'http://hl7.org/fhir/sid/passport-USA', value: 'X70727171X' } ], name: [ { use: 'official', family: 'Okuneva707', given: ['Aaron697', 'Mark765'], prefix: ['Mr.'] } ], telecom: [ { system: 'phone', value: '555-369-3393', use: 'home' } ], gender: 'male', birthDate: '1941-06-11', address: [ { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/geolocation', extension: [ { url: 'latitude', valueDecimal: 41.79717134698846 }, { url: 'longitude', valueDecimal: -71.01421343474313 } ] } ], line: ['734 Emmerich Extension Suite 9'], city: 'Freetown', state: 'MA', postalCode: '00000', country: 'US' } ], maritalStatus: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-MaritalStatus', code: 'M', display: 'Married' } ], text: 'Married' }, multipleBirthBoolean: false, communication: [ { language: { coding: [ { system: 'urn:ietf:bcp:47', code: 'en-US', display: 'English (United States)' } ], text: 'English (United States)' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "hapiFhirPatient",
          "declaration": {
            "name": "hapiFhirPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "aidboxPatient",
          "declaration": {
            "name": "aidboxPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "synthiaPatient",
          "declaration": {
            "name": "synthiaPatient",
            "module": "src/components/resources/patient/patient.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/patient/patient.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Patient",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAny",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "PatientData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-patient",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Patient",
          "declaration": {
            "name": "Patient",
            "module": "src/components/resources/patient/patient.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-patient",
          "declaration": {
            "name": "Patient",
            "module": "src/components/resources/patient/patient.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./slot"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Slot', id: '1', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\">\\n\\t\\t\\t25 Dec 2013 9:00am - 9:15am: <b>Busy</b> Physiotherapy\\n\\t\\t</div>' }, identifier: [ { system: 'http://example.org/identifiers/slots', value: '123132' } ], serviceCategory: [ { coding: [ { code: '17', display: 'General Practice' } ] } ], schedule: { reference: 'Schedule/example' }, status: 'busy', start: '2013-12-25T09:00:00Z', end: '2013-12-25T09:15:00Z', overbooked: true, comment: 'Assessments should be performed before requesting appointments in this slot.' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/slot/slot.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/slot/slot.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Slot",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<SlotData>"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal"
          },
          "tagName": "fhir-slot",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Slot",
          "declaration": {
            "name": "Slot",
            "module": "src/components/resources/slot/slot.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-slot",
          "declaration": {
            "name": "Slot",
            "module": "src/components/resources/slot/slot.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.backbone"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance-ingredient.type-guard"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./substance"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SubstanceIngredientBackbone",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-substance-ingredient",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SubstanceIngredientBackbone",
          "declaration": {
            "name": "SubstanceIngredientBackbone",
            "module": "src/components/resources/substance/substance-ingredient.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-substance-ingredient",
          "declaration": {
            "name": "SubstanceIngredientBackbone",
            "module": "src/components/resources/substance/substance-ingredient.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance-ingredient.type-guard.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "isSubstanceIngredientConcept",
          "return": {
            "type": {
              "text": "ingredient is SubstanceIngredientData"
            }
          },
          "parameters": [
            {
              "name": "ingredient",
              "type": {
                "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
              }
            }
          ]
        },
        {
          "kind": "function",
          "name": "isSubstanceIngredientReference",
          "return": {
            "type": {
              "text": "ingredient is SubstanceIngredientReferenceData"
            }
          },
          "parameters": [
            {
              "name": "ingredient",
              "type": {
                "text": "SubstanceIngredientData | SubstanceIngredientReferenceData"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "isSubstanceIngredientConcept",
          "declaration": {
            "name": "isSubstanceIngredientConcept",
            "module": "src/components/resources/substance/substance-ingredient.type-guard.ts"
          }
        },
        {
          "kind": "js",
          "name": "isSubstanceIngredientReference",
          "declaration": {
            "name": "isSubstanceIngredientReference",
            "module": "src/components/resources/substance/substance-ingredient.type-guard.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f205', text: { status: 'generated', div: '<div xmlns=\"http://www.w3.org/1999/xhtml\"><p><b>Generated Narrative: Substance</b><a name=\"f205\"> </a></p><div style=\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"><p style=\"margin-bottom: 0px\">Resource Substance &quot;f205&quot; </p></div><p><b>instance</b>: false</p><p><b>category</b>: Drug or Medicament <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\">Substance Category Codes</a>#drug)</span></p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin + clavulanate potassium 875mg/125mg tablet (product) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#392259005)</span></td></tr></table><p><b>description</b>: Augmentin 875</p><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 875 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr1\"> </a></p><blockquote><p/><p><a name=\"ingr1\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Amoxicillin (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#372687004)</span></td></tr></table></blockquote></blockquote><blockquote><p><b>ingredient</b></p><p><b>quantity</b>: 125 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span>/1000 mg<span style=\"background: LightGoldenRodYellow\"> (Details: UCUM code mg = \\'mg\\')</span></p><p><b>substance</b>: <a name=\"ingr2\"> </a></p><blockquote><p/><p><a name=\"ingr2\"> </a></p><p><b>instance</b>: false</p><h3>Codes</h3><table class=\"grid\"><tr><td>-</td><td><b>Concept</b></td></tr><tr><td>*</td><td>Clavulanate potassium (substance) <span style=\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"> (<a href=\"https://browser.ihtsdotools.org/\">SNOMED CT</a>#395938000)</span></td></tr></table></blockquote></blockquote></div>' }, contained: [ { resourceType: 'Substance', id: 'ingr1', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '372687004', display: 'Amoxicillin (substance)' } ] } } }, { resourceType: 'Substance', id: 'ingr2', instance: false, code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '395938000', display: 'Clavulanate potassium (substance)' } ] } } } ], instance: false, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'drug', display: 'Drug or Medicament' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '392259005', display: 'Amoxicillin + clavulanate potassium 875mg/125mg tablet (product)' } ] } }, description: 'Augmentin 875', ingredient: [ { quantity: { numerator: { value: 875, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr1' } }, { quantity: { numerator: { value: 125, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 1000, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' } }, substanceReference: { reference: '#ingr2' } } ] }"
        },
        {
          "kind": "variable",
          "name": "data_f204",
          "type": {
            "text": "object"
          },
          "default": "{ resourceType: 'Substance', id: 'f204', text: { status: 'generated', div: '\\u003cdiv xmlns\\u003d\"http://www.w3.org/1999/xhtml\"\\u003e\\u003cp\\u003e\\u003cb\\u003eGenerated Narrative: Substance\\u003c/b\\u003e\\u003ca name\\u003d\"f204\"\\u003e \\u003c/a\\u003e\\u003c/p\\u003e\\u003cdiv style\\u003d\"display: inline-block; background-color: #d9e0e7; padding: 6px; margin: 4px; border: 1px solid #8da1b4; border-radius: 5px; line-height: 60%\"\\u003e\\u003cp style\\u003d\"margin-bottom: 0px\"\\u003eResource Substance \\u0026quot;f204\\u0026quot; \\u003c/p\\u003e\\u003c/div\\u003e\\u003cp\\u003e\\u003cb\\u003eidentifier\\u003c/b\\u003e: id: AB94687\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003einstance\\u003c/b\\u003e: true\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003ecategory\\u003c/b\\u003e: Chemical \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"http://terminology.hl7.org/5.1.0/CodeSystem-substance-category.html\"\\u003eSubstance Category Codes\\u003c/a\\u003e#chemical)\\u003c/span\\u003e\\u003c/p\\u003e\\u003ch3\\u003eCodes\\u003c/h3\\u003e\\u003ctable class\\u003d\"grid\"\\u003e\\u003ctr\\u003e\\u003ctd\\u003e-\\u003c/td\\u003e\\u003ctd\\u003e\\u003cb\\u003eConcept\\u003c/b\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003ctr\\u003e\\u003ctd\\u003e*\\u003c/td\\u003e\\u003ctd\\u003eSilver nitrate 20% solution (product) \\u003cspan style\\u003d\"background: LightGoldenRodYellow; margin: 4px; border: 1px solid khaki\"\\u003e (\\u003ca href\\u003d\"https://browser.ihtsdotools.org/\"\\u003eSNOMED CT\\u003c/a\\u003e#333346007)\\u003c/span\\u003e\\u003c/td\\u003e\\u003c/tr\\u003e\\u003c/table\\u003e\\u003cp\\u003e\\u003cb\\u003edescription\\u003c/b\\u003e: Solution for silver nitrate stain\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003eexpiry\\u003c/b\\u003e: 2018-01-01\\u003c/p\\u003e\\u003cp\\u003e\\u003cb\\u003equantity\\u003c/b\\u003e: 100 mL\\u003cspan style\\u003d\"background: LightGoldenRodYellow\"\\u003e (Details: UCUM code mL \\u003d \\u0027mL\\u0027)\\u003c/span\\u003e\\u003c/p\\u003e\\u003c/div\\u003e' }, identifier: [{ system: 'http://acme.org/identifiers/substances/lot', value: 'AB94687' }], instance: true, category: [ { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/substance-category', code: 'chemical', display: 'Chemical' } ] } ], code: { concept: { coding: [ { system: 'http://snomed.info/sct', code: '333346007', display: 'Silver nitrate 20% solution (product)' } ] } }, description: 'Solution for silver nitrate stain', expiry: '2018-01-01', quantity: { value: 100, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' }, meta: { tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/resources/substance/substance.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data_f204",
          "declaration": {
            "name": "data_f204",
            "module": "src/components/resources/substance/substance.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/substance/substance.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Substance",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "SubstanceData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDomainResourceStructure",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructureContained",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "DomainResource",
                "module": "src/internal/resource/DomainResource.ts"
              }
            },
            {
              "kind": "field",
              "name": "overrideTemplate",
              "type": {
                "text": "string"
              },
              "attribute": "override-template",
              "reflects": true,
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              },
              "return": {
                "type": {
                  "text": "boolean"
                }
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderResourceStructure",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<T>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNoData",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "true",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "DomainResource",
            "module": "/src/internal/resource/DomainResource"
          },
          "tagName": "fhir-substance",
          "customElement": true,
          "attributes": [
            {
              "name": "override-template",
              "type": {
                "text": "string"
              },
              "fieldName": "overrideTemplate",
              "inheritedFrom": {
                "name": "Resource",
                "module": "src/internal/resource/Resource.ts"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Substance",
          "declaration": {
            "name": "Substance",
            "module": "src/components/resources/substance/substance.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-substance",
          "declaration": {
            "name": "Substance",
            "module": "src/components/resources/substance/substance.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-complex.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "complexExtension",
          "type": {
            "text": "FhirExtensionData<never>"
          },
          "default": "{ url: 'http://example.org/fhir/StructureDefinition/patient-clinicalTrial', extension: [ { url: 'NCT', valueString: 'NCT00000419' }, { url: 'period', valuePeriod: { start: '2004-01-01', end: '2012-12-31' } }, { url: 'reason', valueCodeableConcept: { text: 'healthy-volunteer' } } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "complexExtension",
          "declaration": {
            "name": "complexExtension",
            "module": "src/components/special/extension/extension-complex.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-reference.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "FhirElementData & { birthDate: FhirDate }"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        },
        {
          "kind": "variable",
          "name": "listPrimitiveExtension",
          "type": {
            "text": "FhirElementData & { code: Code[] }"
          },
          "default": "{ code: ['au', 'nz'], _code: [ null, { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/display', valueString: 'New Zealand a.k.a Kiwiland' } ] } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "src/components/special/extension/extension-reference.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "listPrimitiveExtension",
          "declaration": {
            "name": "listPrimitiveExtension",
            "module": "src/components/special/extension/extension-reference.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "stringExtension",
          "type": {
            "text": "FhirExtensionData<FhirString>"
          },
          "default": "{ url: 'treatment-description', valueString: 'This is a string value' }"
        },
        {
          "kind": "variable",
          "name": "booleanExtension",
          "type": {
            "text": "FhirExtensionData<Boolean>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/appointment-confirmed', valueBoolean: 'true' }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "FhirExtensionData<FhirDate>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/first-visit', valueDate: '2025-05-28' }"
        },
        {
          "kind": "variable",
          "name": "datetimeExtension",
          "type": {
            "text": "FhirExtensionData<DateTime>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/test-start', valueDateTime: '2025-05-28T14:30:00Z' }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "FhirExtensionData<Decimal>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/price', valueDecimal: 123.45 }"
        },
        {
          "kind": "variable",
          "name": "codeableConceptExtension",
          "type": {
            "text": "FhirExtensionData<CodeableConceptData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/event-type', valueCodeableConcept: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/example', code: 'unscheduled-appointment', display: 'unscheduled appointment' } ], text: 'Unscheduled Appointment' } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "FhirExtensionData<URI>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/information-source', valueUri: 'https://example.org/resource' }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "FhirExtensionData<Id>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/passport-id', valueId: 'example-id-123' }"
        },
        {
          "kind": "variable",
          "name": "positiveIntExtension",
          "type": {
            "text": "FhirExtensionData<PositiveInt>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/magic-number', valuePositiveInt: 42 }"
        },
        {
          "kind": "variable",
          "name": "annotationExtension",
          "type": {
            "text": "FhirExtensionData<AnnotationData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/clinical-note', valueAnnotation: { authorString: 'Dr. Jane Smith', time: '2025-05-15T10:30:00Z', text: 'Patient presented with symptoms of seasonal allergies.' } }"
        },
        {
          "kind": "variable",
          "name": "attachmentExtension",
          "type": {
            "text": "FhirExtensionData<AttachmentData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medical-scan', valueAttachment: { contentType: 'application/dicom', language: 'en', data: 'SGVsbG8gV29ybGQ=', // Base64 encoded url: 'https://example.org/fhir/Binary/1234', hash: 'EQVQoZ4Il8ZBtXlvQbPy4vVhQj0=', title: 'Chest X-Ray', creation: '2025-04-17T14:15:00Z' } }"
        },
        {
          "kind": "variable",
          "name": "base64BinaryExtension",
          "type": {
            "text": "FhirExtensionData<Base64Binary>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/signature-image', valueBase64Binary: 'SGVsbG8gV29ybGQgQmFzZTY0IEVuY29kZWQ=' }"
        },
        {
          "kind": "variable",
          "name": "canonicalExtension",
          "type": {
            "text": "FhirExtensionData<Canonical>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/profile-reference', valueCanonical: 'http://hl7.org/fhir/StructureDefinition/Patient|4.0.1' }"
        },
        {
          "kind": "variable",
          "name": "codeExtension",
          "type": {
            "text": "FhirExtensionData<Code>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/status-code', valueCode: 'active' }"
        },
        {
          "kind": "variable",
          "name": "codingExtension",
          "type": {
            "text": "FhirExtensionData<CodingData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/diagnosis-code', valueCoding: { system: 'http://snomed.info/sct', version: '2023-09', code: '73211009', display: 'Diabetes mellitus' } }"
        },
        {
          "kind": "variable",
          "name": "contactPointExtension",
          "type": {
            "text": "FhirExtensionData<ContactPointData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/emergency-contact', valueContactPoint: { system: 'phone', value: '+1-555-123-4567', use: 'mobile', rank: 1, period: { start: '2023-01-01', end: '2026-12-31' } } }"
        },
        {
          "kind": "variable",
          "name": "humanNameExtension",
          "type": {
            "text": "FhirExtensionData<HumanNameData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-name', valueHumanName: { use: 'official', family: 'Smith', given: ['John', 'Robert'], prefix: ['Mr.'], suffix: ['MD'], period: { start: '2010-01-01' } } }"
        },
        {
          "kind": "variable",
          "name": "identifierExtension",
          "type": {
            "text": "FhirExtensionData<IdentifierData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/insurance-number', valueIdentifier: { use: 'official', type: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v2-0203', code: 'MR', display: 'Medical Record Number' } ] }, system: 'https://example.org/fhir/identifier/insurance', value: 'INS-12345-6789', period: { start: '2024-01-01', end: '2026-01-01' }, assigner: { display: 'Example Health Insurance' } } }"
        },
        {
          "kind": "variable",
          "name": "instantExtension",
          "type": {
            "text": "FhirExtensionData<Instant>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/recorded-time', valueInstant: '2025-05-28T14:30:00.123Z' }"
        },
        {
          "kind": "variable",
          "name": "integerExtension",
          "type": {
            "text": "FhirExtensionData<Integer>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/count-value', valueInteger: 256 }"
        },
        {
          "kind": "variable",
          "name": "markdownExtension",
          "type": {
            "text": "FhirExtensionData<Markdown>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/formatted-notes', valueMarkdown: '# Patient Notes\\n\\n**Important**: Patient has *medication allergies*.\\n\\n- Penicillin\\n- Sulfa drugs' }"
        },
        {
          "kind": "variable",
          "name": "moneyExtension",
          "type": {
            "text": "FhirExtensionData<MoneyData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/procedure-cost', valueMoney: { value: 299.99, currency: 'USD' } }"
        },
        {
          "kind": "variable",
          "name": "periodExtension",
          "type": {
            "text": "FhirExtensionData<PeriodData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/treatment-duration', valuePeriod: { start: '2025-01-15', end: '2025-02-15' } }"
        },
        {
          "kind": "variable",
          "name": "quantityExtension",
          "type": {
            "text": "FhirExtensionData<QuantityData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/weight', valueQuantity: { value: 75.5, unit: 'kg', system: 'http://unitsofmeasure.org', code: 'kg' } }"
        },
        {
          "kind": "variable",
          "name": "rangeExtension",
          "type": {
            "text": "FhirExtensionData<RangeData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/normal-range', valueRange: { low: { value: 60, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' }, high: { value: 100, unit: 'bpm', system: 'http://unitsofmeasure.org', code: '/min' } } }"
        },
        {
          "kind": "variable",
          "name": "ratioExtension",
          "type": {
            "text": "FhirExtensionData<RatioData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-dilution', valueRatio: { numerator: { value: 1, unit: 'mg', system: 'http://unitsofmeasure.org', code: 'mg' }, denominator: { value: 10, unit: 'mL', system: 'http://unitsofmeasure.org', code: 'mL' } } }"
        },
        {
          "kind": "variable",
          "name": "referenceExtension",
          "type": {
            "text": "FhirExtensionData<ReferenceData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/related-practitioner', valueReference: { reference: 'Practitioner/12345', type: 'Practitioner', display: 'Dr. Smith' } }"
        },
        {
          "kind": "variable",
          "name": "sampledDataExtension",
          "type": {
            "text": "FhirExtensionData<SampledDataData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/ecg-data', valueSampledData: { origin: { value: 0, unit: 'mV', system: 'http://unitsofmeasure.org', code: 'mV' }, intervalUnit: 'g/(kg.min)', factor: 1.0, lowerLimit: -10.0, upperLimit: 10.0, dimensions: 1, data: '2 2 1.5 2 2 2 1.5 2 2 2.5 2.5 2.5 3 3 3.5 3.5 3 3 2.5 2 2 1.5 1 1 1.5 2 2' } }"
        },
        {
          "kind": "variable",
          "name": "signatureExtension",
          "type": {
            "text": "FhirExtensionData<SignatureData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/consent-signature', valueSignature: { type: [ { system: 'urn:iso-astm:E1762-95:2013', code: '1.2.840.10065.1.12.1.1', display: 'Author\\'s Signature' } ], when: '2025-05-28T13:45:00Z', who: { reference: 'Patient/123456', display: 'John Doe' }, targetFormat: 'application/pdf', sigFormat: 'image/png', data: 'SGVsbG8gV29ybGQgU2lnbmF0dXJl' // Base64 encoded } }"
        },
        {
          "kind": "variable",
          "name": "timeExtension",
          "type": {
            "text": "FhirExtensionData<Time>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/preferred-contact-time', valueTime: '14:30:00' }"
        },
        {
          "kind": "variable",
          "name": "timingExtension",
          "type": {
            "text": "FhirExtensionData<TimingData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/medication-schedule', valueTiming: { event: ['2025-05-28T08:00:00Z', '2025-05-28T20:00:00Z'], repeat: { frequency: 2, period: 1, periodUnit: 'd', boundsDuration: { value: 14, unit: 'days', system: 'http://unitsofmeasure.org', code: 'd' } }, code: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-TimingEvent', code: 'BID', display: 'twice daily' } ] } } }"
        },
        {
          "kind": "variable",
          "name": "unsignedIntExtension",
          "type": {
            "text": "FhirExtensionData<UnsignedInt>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/version-number', valueUnsignedInt: 3 }"
        },
        {
          "kind": "variable",
          "name": "urlExtension",
          "type": {
            "text": "FhirExtensionData<Url>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/external-resource', valueUrl: 'https://example.org/resources/patient-education/diabetes.pdf' }"
        },
        {
          "kind": "variable",
          "name": "uuidExtension",
          "type": {
            "text": "FhirExtensionData<Uuid>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/system-identifier', valueUuid: 'urn:uuid:c757873d-ec9a-4326-a141-556f43239520' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "stringExtension",
          "declaration": {
            "name": "stringExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "booleanExtension",
          "declaration": {
            "name": "booleanExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "datetimeExtension",
          "declaration": {
            "name": "datetimeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codeableConceptExtension",
          "declaration": {
            "name": "codeableConceptExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "positiveIntExtension",
          "declaration": {
            "name": "positiveIntExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "annotationExtension",
          "declaration": {
            "name": "annotationExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "attachmentExtension",
          "declaration": {
            "name": "attachmentExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "base64BinaryExtension",
          "declaration": {
            "name": "base64BinaryExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "canonicalExtension",
          "declaration": {
            "name": "canonicalExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codeExtension",
          "declaration": {
            "name": "codeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "codingExtension",
          "declaration": {
            "name": "codingExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "contactPointExtension",
          "declaration": {
            "name": "contactPointExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "humanNameExtension",
          "declaration": {
            "name": "humanNameExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "identifierExtension",
          "declaration": {
            "name": "identifierExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "instantExtension",
          "declaration": {
            "name": "instantExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "integerExtension",
          "declaration": {
            "name": "integerExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "markdownExtension",
          "declaration": {
            "name": "markdownExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "moneyExtension",
          "declaration": {
            "name": "moneyExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "periodExtension",
          "declaration": {
            "name": "periodExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "quantityExtension",
          "declaration": {
            "name": "quantityExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "rangeExtension",
          "declaration": {
            "name": "rangeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "ratioExtension",
          "declaration": {
            "name": "ratioExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "referenceExtension",
          "declaration": {
            "name": "referenceExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "sampledDataExtension",
          "declaration": {
            "name": "sampledDataExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "signatureExtension",
          "declaration": {
            "name": "signatureExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "timeExtension",
          "declaration": {
            "name": "timeExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "timingExtension",
          "declaration": {
            "name": "timingExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "unsignedIntExtension",
          "declaration": {
            "name": "unsignedIntExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "urlExtension",
          "declaration": {
            "name": "urlExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "uuidExtension",
          "declaration": {
            "name": "uuidExtension",
            "module": "src/components/special/extension/extension-simple.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple1.stories.skip.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (primitive types)', component: 'fhir-extension', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "StringValueExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'String Value Extension', args: { data: data.stringExtension } }"
        },
        {
          "kind": "variable",
          "name": "BooleanValueExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Boolean Value Extension', args: { data: data.booleanExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "idExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Id Extension', args: { data: data.idExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'date Extension', args: { data: data.dateExtension } }"
        },
        {
          "kind": "variable",
          "name": "dateTimeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'DateTime Extension', args: { data: data.datetimeExtension } }"
        },
        {
          "kind": "variable",
          "name": "decimalExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'decimal Extension', args: { data: data.decimalExtension } }"
        },
        {
          "kind": "variable",
          "name": "postiveIntExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'postive int Extension', args: { data: data.positiveIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "uriExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'uri Extension', args: { data: data.uriExtension } }"
        },
        {
          "kind": "variable",
          "name": "CanonicalExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Canonical Extension', args: { data: data.canonicalExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Code Extension', args: { data: data.codeExtension } }"
        },
        {
          "kind": "variable",
          "name": "MarkdownExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Markdown Extension', args: { data: data.markdownExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Time Extension', args: { data: data.timeExtension } }"
        },
        {
          "kind": "variable",
          "name": "UnsignedIntExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'UnsignedInt Extension', args: { data: data.unsignedIntExtension } }"
        },
        {
          "kind": "variable",
          "name": "UrlExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Url Extension', args: { data: data.urlExtension } }"
        },
        {
          "kind": "variable",
          "name": "UuidExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Uuid Extension', args: { data: data.uuidExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "StringValueExtension",
          "declaration": {
            "name": "StringValueExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "BooleanValueExtension",
          "declaration": {
            "name": "BooleanValueExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "idExtension",
          "declaration": {
            "name": "idExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateExtension",
          "declaration": {
            "name": "dateExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "dateTimeExtension",
          "declaration": {
            "name": "dateTimeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "decimalExtension",
          "declaration": {
            "name": "decimalExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "postiveIntExtension",
          "declaration": {
            "name": "postiveIntExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "uriExtension",
          "declaration": {
            "name": "uriExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "CanonicalExtension",
          "declaration": {
            "name": "CanonicalExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeExtension",
          "declaration": {
            "name": "CodeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "MarkdownExtension",
          "declaration": {
            "name": "MarkdownExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimeExtension",
          "declaration": {
            "name": "TimeExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "UnsignedIntExtension",
          "declaration": {
            "name": "UnsignedIntExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "UrlExtension",
          "declaration": {
            "name": "UrlExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "UuidExtension",
          "declaration": {
            "name": "UuidExtension",
            "module": "src/components/special/extension/extension-simple1.stories.skip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension-simple2.stories.skip.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "meta",
          "type": {
            "text": "object"
          },
          "default": "{ title: 'Components/Datatypes/Special Type/Extension/Simple Extension (complex types)', component: 'fhir-extension', ...renderTemplateInShell( (args: ShellArgs) => html` <fhir-extension .data=${args.data} summary ?headless=${args.headless}></fhir-extension>`) }"
        },
        {
          "kind": "variable",
          "name": "CodeableConceptExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'CodeableConcept Extension', args: { data: data.codeableConceptExtension } }"
        },
        {
          "kind": "variable",
          "name": "AnnotationExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Annotation Extension', args: { data: data.annotationExtension } }"
        },
        {
          "kind": "variable",
          "name": "AttachmentExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Attachment Extension', args: { data: data.attachmentExtension } }"
        },
        {
          "kind": "variable",
          "name": "Base64BinaryExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Base64Binary Extension', args: { data: data.base64BinaryExtension } }"
        },
        {
          "kind": "variable",
          "name": "CodingExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Coding Extension', args: { data: data.codingExtension } }"
        },
        {
          "kind": "variable",
          "name": "ContactPointExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'ContactPoint Extension', args: { data: data.contactPointExtension } }"
        },
        {
          "kind": "variable",
          "name": "HumanNameExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'HumanName Extension', args: { data: data.humanNameExtension } }"
        },
        {
          "kind": "variable",
          "name": "IdentifierExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Identifier Extension', args: { data: data.identifierExtension } }"
        },
        {
          "kind": "variable",
          "name": "InstantExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Instant Extension', args: { data: data.instantExtension } }"
        },
        {
          "kind": "variable",
          "name": "IntegerExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Integer Extension', args: { data: data.integerExtension } }"
        },
        {
          "kind": "variable",
          "name": "MoneyExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Money Extension', args: { data: data.moneyExtension } }"
        },
        {
          "kind": "variable",
          "name": "PeriodExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Period Extension', args: { data: data.periodExtension } }"
        },
        {
          "kind": "variable",
          "name": "QuantityExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Quantity Extension', args: { data: data.quantityExtension } }"
        },
        {
          "kind": "variable",
          "name": "RangeExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Range Extension', args: { data: data.rangeExtension } }"
        },
        {
          "kind": "variable",
          "name": "RatioExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Ratio Extension', args: { data: data.ratioExtension } }"
        },
        {
          "kind": "variable",
          "name": "ReferenceExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Reference Extension', args: { data: data.referenceExtension } }"
        },
        {
          "kind": "variable",
          "name": "SampledDataExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'SampledData Extension', args: { data: data.sampledDataExtension } }"
        },
        {
          "kind": "variable",
          "name": "SignatureExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Signature Extension', args: { data: data.signatureExtension } }"
        },
        {
          "kind": "variable",
          "name": "TimingExtension",
          "type": {
            "text": "Story"
          },
          "default": "{ name: 'Timing Extension', args: { data: data.timingExtension } }"
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "/src/components/special/extension/extension"
          }
        },
        {
          "kind": "js",
          "name": "default",
          "declaration": {
            "name": "meta",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodeableConceptExtension",
          "declaration": {
            "name": "CodeableConceptExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "AnnotationExtension",
          "declaration": {
            "name": "AnnotationExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "AttachmentExtension",
          "declaration": {
            "name": "AttachmentExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "Base64BinaryExtension",
          "declaration": {
            "name": "Base64BinaryExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "CodingExtension",
          "declaration": {
            "name": "CodingExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "ContactPointExtension",
          "declaration": {
            "name": "ContactPointExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "HumanNameExtension",
          "declaration": {
            "name": "HumanNameExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "IdentifierExtension",
          "declaration": {
            "name": "IdentifierExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "InstantExtension",
          "declaration": {
            "name": "InstantExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "IntegerExtension",
          "declaration": {
            "name": "IntegerExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "MoneyExtension",
          "declaration": {
            "name": "MoneyExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "PeriodExtension",
          "declaration": {
            "name": "PeriodExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "QuantityExtension",
          "declaration": {
            "name": "QuantityExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "RangeExtension",
          "declaration": {
            "name": "RangeExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "RatioExtension",
          "declaration": {
            "name": "RatioExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "ReferenceExtension",
          "declaration": {
            "name": "ReferenceExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "SampledDataExtension",
          "declaration": {
            "name": "SampledDataExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "SignatureExtension",
          "declaration": {
            "name": "SignatureExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        },
        {
          "kind": "js",
          "name": "TimingExtension",
          "declaration": {
            "name": "TimingExtension",
            "module": "src/components/special/extension/extension-simple2.stories.skip.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/extension.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Extension",
          "members": [
            {
              "kind": "field",
              "name": "#valueType",
              "privacy": "private",
              "type": {
                "text": "OpenTypeNameEnum[]"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "#extensionType",
              "privacy": "private",
              "type": {
                "text": "'unknown' | 'simple' | 'complex'"
              },
              "default": "'unknown'"
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<FhirExtensionData<OpenType>>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "FhirExtensionData<OpenType>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "notImplementedYet",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult<1>"
                }
              }
            },
            {
              "kind": "method",
              "name": "addTemplate",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "templates",
                  "type": {
                    "text": "TemplateResult[]"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "FhirExtensionData<OpenType>"
                  }
                },
                {
                  "name": "valueType",
                  "type": {
                    "text": "OpenTypeNameEnum"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-extension",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Extension",
          "declaration": {
            "name": "Extension",
            "module": "src/components/special/extension/extension.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-extension",
          "declaration": {
            "name": "Extension",
            "module": "src/components/special/extension/extension.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./meta"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "object"
          },
          "default": "{ tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data2",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2014-08-18T01:43:30Z', security: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActCode', code: 'TBOO', display: 'taboo' } ], tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        },
        {
          "kind": "variable",
          "name": "data3",
          "type": {
            "text": "object"
          },
          "default": "{ versionId: '1', lastUpdated: '2019-08-07T10:49:22Z' }"
        },
        {
          "kind": "variable",
          "name": "data4",
          "type": {
            "text": "object"
          },
          "default": "{ lastUpdated: '2014-08-18T01:43:30Z', tag: [ { system: 'http://terminology.hl7.org/CodeSystem/v3-ActReason', code: 'HTEST', display: 'test health data' } ] }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data2",
          "declaration": {
            "name": "data2",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data3",
          "declaration": {
            "name": "data3",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "data4",
          "declaration": {
            "name": "data4",
            "module": "src/components/special/meta/meta.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/meta/meta.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Meta",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MetaData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "MetaData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-meta",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Meta",
          "declaration": {
            "name": "Meta",
            "module": "src/components/special/meta/meta.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-meta",
          "declaration": {
            "name": "Meta",
            "module": "src/components/special/meta/meta.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./narrative"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/narrative/narrative.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Narrative",
          "members": [
            {
              "kind": "field",
              "name": "status",
              "type": {
                "text": "string"
              },
              "attribute": "status",
              "reflects": true
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "NarrativeData"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "attributes": [
            {
              "name": "status",
              "type": {
                "text": "string"
              },
              "fieldName": "status"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-narrative",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Narrative",
          "declaration": {
            "name": "Narrative",
            "module": "src/components/special/narrative/narrative.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-narrative",
          "declaration": {
            "name": "Narrative",
            "module": "src/components/special/narrative/narrative.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference.data"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./reference"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.data.ts",
      "declarations": [],
      "exports": []
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/reference/reference.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Reference",
          "members": [
            {
              "kind": "field",
              "name": "containedData",
              "type": {
                "text": "ResourceData[]"
              },
              "privacy": "private",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "mappedResource",
              "type": {
                "text": "ResourceData | undefined"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "referenceType",
              "type": {
                "text": "ReferenceType"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validation",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<ReferenceData>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "ReferenceData"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "fetched",
                  "type": {
                    "text": "boolean"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "BaseElement",
            "module": "/src/internal"
          },
          "tagName": "fhir-reference",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Reference",
          "declaration": {
            "name": "Reference",
            "module": "src/components/special/reference/reference.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-reference",
          "declaration": {
            "name": "Reference",
            "module": "src/components/special/reference/reference.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badge-group-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { --badge-color: var(--sl-color-gray-500); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); padding: 0; margin: 0; } sl-badge { padding-left: var(--sl-spacing-x-small); margin: 0; } sl-badge::part(base) { color: var(--badge-color); background-color: var(--badge-background); border-color: var(--badge-border); font-weight: var(--sl-font-weight-normal); font-style: italic; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/shell/layout/badge-group/badge-group-styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badge-group.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "BadgeGroup",
          "members": [
            {
              "kind": "field",
              "name": "resource",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "resource"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary"
            },
            {
              "kind": "field",
              "name": "constraint",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "constraint"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "profile"
            },
            {
              "kind": "field",
              "name": "badges",
              "type": {
                "text": "{ label: string, type: BadgeType }[]"
              },
              "privacy": "public"
            }
          ],
          "attributes": [
            {
              "name": "resource",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "resource"
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary"
            },
            {
              "name": "constraint",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "constraint"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            },
            {
              "name": "profile",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "profile"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-badge-group",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BadgeGroup",
          "declaration": {
            "name": "BadgeGroup",
            "module": "src/shell/layout/badge-group/badge-group.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-badge-group",
          "declaration": {
            "name": "BadgeGroup",
            "module": "src/shell/layout/badge-group/badge-group.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/badgeTemplates.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "badgeTemplates",
          "return": {
            "type": {
              "text": "TemplateResult[]"
            }
          },
          "parameters": [
            {
              "name": "badges",
              "type": {
                "text": "{ type: BadgeType, label: string }[]"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "badgeTemplates",
          "declaration": {
            "name": "badgeTemplates",
            "module": "src/shell/layout/badge-group/badgeTemplates.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/badge-group/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badge-group"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./badgeTemplates"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/combo/systemChoice.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "SystemChoice",
          "members": [
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "value"
            },
            {
              "kind": "field",
              "name": "overridable",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "overridable"
            },
            {
              "kind": "field",
              "name": "valuesets",
              "type": {
                "text": "{ value: string, label: string }[]"
              },
              "attribute": "valuesets"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "error"
            }
          ],
          "events": [
            {
              "name": "fhir-system-choice",
              "type": {
                "text": "CustomEvent"
              }
            }
          ],
          "attributes": [
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "value"
            },
            {
              "name": "overridable",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "overridable"
            },
            {
              "name": "valuesets",
              "type": {
                "text": "{ value: string, label: string }[]"
              },
              "fieldName": "valuesets"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "error",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "error"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-system-choice",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SystemChoice",
          "declaration": {
            "name": "SystemChoice",
            "module": "src/shell/layout/combo/systemChoice.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-system-choice",
          "declaration": {
            "name": "SystemChoice",
            "module": "src/shell/layout/combo/systemChoice.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/index.ts",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./strapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrap"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapLines"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./wrapper"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/strap.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "generators",
          "type": {
            "text": "{\n  [key: string]: { (data: unknown, label: string, key: Generators, index: number): TemplateResult }\n}"
          },
          "default": "{ 'fhir-identifier': (data: unknown, label: string, key: string) => html` <fhir-identifier key=${key} label=${label} .data=${data} summary></fhir-identifier>`, 'fhir-codeable-concept': (data: unknown, label: string, key: string) => html` <fhir-codeable-concept key=${key} label=${label} .data=${data} summary></fhir-codeable-concept>`, 'fhir-codeable-reference': (data: unknown, label: string, key: string) => html` <fhir-codeable-reference key=${key} label=${label} .data=${data} summary></fhir-codeable-reference>`, 'fhir-reference': (data: unknown, label: string, key: string) => html` <fhir-reference key=${key} label=${label} .data=${data} summary></fhir-reference>` }"
        },
        {
          "kind": "function",
          "name": "strap",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "{\n                           key,\n                           pluralBase,\n                           collection,\n                           generator,\n                           summary = true,\n                           config\n                         }",
              "type": {
                "text": "WrapperConfig<T>"
              }
            },
            {
              "description": "key defined in spec",
              "name": "key"
            },
            {
              "description": "optional. key will be used if not defined",
              "name": "pluralBase"
            },
            {
              "description": "data",
              "name": "collection"
            },
            {
              "description": "name of element (ex:fhir-identifier) or generator function",
              "name": "generator"
            },
            {
              "description": "defaults to true if not provided",
              "name": "summary"
            },
            {
              "description": "display config",
              "name": "config"
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "generators",
          "declaration": {
            "name": "generators",
            "module": "src/shell/layout/wrapper/strap.ts"
          }
        },
        {
          "kind": "js",
          "name": "strap",
          "declaration": {
            "name": "strap",
            "module": "src/shell/layout/wrapper/strap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/strapLines.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "strapLines",
          "return": {
            "type": {
              "text": "TemplateResult"
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              }
            },
            {
              "name": "collection",
              "type": {
                "text": "string[]"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "generator",
              "type": {
                "text": "{ (data: string, label: string, key: string): TemplateResult }"
              }
            },
            {
              "name": "summary",
              "default": "true",
              "type": {
                "text": "boolean"
              }
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Wrap a collection with the structured wrapper only when there is more than one entry"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "strapLines",
          "declaration": {
            "name": "strapLines",
            "module": "src/shell/layout/wrapper/strapLines.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrap.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "wrap",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "{\n                          key,\n                          pluralBase,\n                          collection,\n                          generator,\n                          summary = true,\n                          config\n                        }",
              "type": {
                "text": "WrapConfig<T>"
              }
            },
            {
              "description": "The key to use for generating labels.",
              "name": "key"
            },
            {
              "description": "The base string to pluralize for the label of the wrapper.",
              "name": "pluralBase"
            },
            {
              "description": "The collection of items to wrap.",
              "name": "collection"
            },
            {
              "description": "The function to generate the content of each item in the wrapper.",
              "name": "generator"
            },
            {
              "description": "Whether to display a summary or detailed view of the items in the wrapper.",
              "name": "summary"
            },
            {
              "name": "config"
            }
          ],
          "description": "Wraps a collection of items with a `<fhir-wrapper>` component."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrap",
          "declaration": {
            "name": "wrap",
            "module": "src/shell/layout/wrapper/wrap.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapLines.ts",
      "declarations": [
        {
          "kind": "function",
          "name": "wrapLines",
          "return": {
            "type": {
              "text": ""
            }
          },
          "parameters": [
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "description": "The key to be used for wrapping lines. It will be converted to lower case."
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "description": "The base string to be used for pluralization."
            },
            {
              "name": "collection",
              "type": {
                "text": "T[]"
              },
              "description": "The array of strings to be processed."
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "A boolean value indicating whether the verbose mode is enabled or not."
            },
            {
              "name": "generator",
              "type": {
                "text": "{ (data: T, label: string, key: string): TemplateResult }"
              },
              "description": "A function to generate a TemplateResult based on the provided data, label, and key."
            },
            {
              "name": "summary",
              "default": "true",
              "type": {
                "text": "boolean"
              },
              "description": "An optional boolean value indicating whether to display the summary or not."
            },
            {
              "name": "summaryMode",
              "default": "false",
              "type": {
                "text": "boolean"
              }
            }
          ],
          "description": "Wraps lines based on the given parameters."
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "wrapLines",
          "declaration": {
            "name": "wrapLines",
            "module": "src/shell/layout/wrapper/wrapLines.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapper-styles.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "componentStyles",
          "default": "css` :host { width: 100%; /*display: flex; flex: 1; */ --badge-color: var(--sl-color-gray-400); --badge-background: var(--sl-color-gray-100); --badge-border: var(--sl-color-gray-300); } label { font-style: italic; font-weight: 500; color: var(--sl-color-primary-700); margin-right: 0.5rem; } #arrow { margin-left: var(--sl-spacing-small); color: var(--sl-color-gray-400); font-style: italic; font-size: var(--sl-font-size-large); font-weight: var(--sl-font-weight-medium); font-family: var(--sl-font-serif), serif; } .items, .details_items { /*width: clamp(calc(27rem - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)), 80%, calc(90% - calc((var(--sl-spacing-3x-small) + 0.7rem) * 2)));*/ width:fit-content; margin: var(--sl-spacing-3x-small) 0 0 var(--sl-spacing-large); border-left-width: 0.06rem; } .items { padding: 0; border-left-style: unset; } .details_items { padding: 0 0 0 var(--sl-spacing-2x-small); border-left-style: unset; border-left-color: var(--sl-color-neutral-100); } ::part(wrapped) { padding-left: 0.3rem; } sl-details::part(base) { border: none; border-radius: 0; background: none; margin-top: 0.3rem; padding: 0 0 0 0; } sl-details::part(header) { padding: var(--sl-spacing-small); padding-top: 0.2rem; padding-bottom: 0; padding-left: 0.2rem; border-top: solid 1px var(--sl-color-neutral-200); border-left: solid 1px var(--sl-color-neutral-200); } sl-details::part(summary-icon) { padding: 0 0 0 0; margin: 0 0 0 var(--sl-spacing-large); } sl-details::part(content) { display: flex; flex: 1; padding-top: 0; padding-right: 0; padding-left: 0.2rem; padding-bottom: 0; border-left: solid 1px var(--sl-color-neutral-200); } sl-details.custom-icons::part(summary-icon) { /* Disable the expand/collapse animation */ rotate: none; } sl-icon { color: var(--sl-color-neutral-300); } .variant-error-label { color: var(--sl-color-neutral-50); font-weight: normal; background-color: var(--sl-color-red-300); padding: 0.2rem; border-radius: 0.2rem; } .variant-error { margin-top: 1rem; padding: 0.5rem; background-color: var(--sl-color-red-100); border-radius: 0.5rem; } `"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "componentStyles",
          "declaration": {
            "name": "componentStyles",
            "module": "src/shell/layout/wrapper/wrapper-styles.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/shell/layout/wrapper/wrapper.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Wrapper",
          "members": [
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "'none' | 'details' | 'error'"
              },
              "privacy": "public",
              "default": "'none'",
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'items'",
              "attribute": "key"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless"
            },
            {
              "kind": "field",
              "name": "badgeResource",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "badge-resource"
            },
            {
              "kind": "field",
              "name": "badgeSummary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "badge-summary"
            },
            {
              "kind": "field",
              "name": "badgeConstraint",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "badge-constraint"
            },
            {
              "kind": "field",
              "name": "badgeRequired",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "badge-required"
            },
            {
              "kind": "field",
              "name": "badgeProfile",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "badge-profile"
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "open"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summaryonly",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "content",
              "privacy": "private"
            }
          ],
          "attributes": [
            {
              "name": "variant",
              "type": {
                "text": "'none' | 'details' | 'error'"
              },
              "default": "'none'",
              "fieldName": "variant"
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'items'",
              "fieldName": "key"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label"
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless"
            },
            {
              "name": "badge-resource",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "badgeResource"
            },
            {
              "name": "badge-summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "badgeSummary"
            },
            {
              "name": "badge-constraint",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "badgeConstraint"
            },
            {
              "name": "badge-required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "badgeRequired"
            },
            {
              "name": "badge-profile",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "badgeProfile"
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "open"
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary"
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summaryonly"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "fhir-wrapper",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "SlDetails",
          "declaration": {
            "name": "SlDetails",
            "package": "@shoelace-style/shoelace"
          }
        },
        {
          "kind": "js",
          "name": "Wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "src/shell/layout/wrapper/wrapper.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-wrapper",
          "declaration": {
            "name": "Wrapper",
            "module": "src/shell/layout/wrapper/wrapper.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/balance.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Balance",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountBalanceData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-balance",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Balance",
          "declaration": {
            "name": "Balance",
            "module": "src/components/resources/account/backbone/balance.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-balance",
          "declaration": {
            "name": "Balance",
            "module": "src/components/resources/account/backbone/balance.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/coverage.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Coverage",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountCoverageData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-coverage",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Coverage",
          "declaration": {
            "name": "Coverage",
            "module": "src/components/resources/account/backbone/coverage.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-coverage",
          "declaration": {
            "name": "Coverage",
            "module": "src/components/resources/account/backbone/coverage.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/diagnosis.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Diagnosis",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountDiagnosisData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountDiagnosisData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-diagnosis",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Diagnosis",
          "declaration": {
            "name": "Diagnosis",
            "module": "src/components/resources/account/backbone/diagnosis.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-diagnosis",
          "declaration": {
            "name": "Diagnosis",
            "module": "src/components/resources/account/backbone/diagnosis.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/guarantor.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Guarantor",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountGuarantorData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-guarantor",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Guarantor",
          "declaration": {
            "name": "Guarantor",
            "module": "src/components/resources/account/backbone/guarantor.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-guarantor",
          "declaration": {
            "name": "Guarantor",
            "module": "src/components/resources/account/backbone/guarantor.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/procedure.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "Procedure",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountProcedureData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountProcedureData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-procedure",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Procedure",
          "declaration": {
            "name": "Procedure",
            "module": "src/components/resources/account/backbone/procedure.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-procedure",
          "declaration": {
            "name": "Procedure",
            "module": "src/components/resources/account/backbone/procedure.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/resources/account/backbone/related-account.backbone.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "RelatedAccount",
          "members": [
            {
              "kind": "method",
              "name": "renderDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ],
              "description": "convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderStructure",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ],
              "description": "Convenience method implemented by fhir model elements and resources. Internal and abstract classes should\ncontribute templateGenerators instead.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderAll",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<AccountRelatedAccountData>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "validate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "data to validate",
                  "name": "data"
                },
                {
                  "name": "fetched"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "validate data to find complex errors not covered by primitive types. Errors can be accessed through `this.errors`.\nit is recommended to call\n`super.validate(T)` as well."
            },
            {
              "kind": "method",
              "name": "decorate",
              "privacy": "public",
              "return": {
                "type": {
                  "text": ""
                }
              },
              "parameters": [
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "_fetched",
                  "type": {
                    "text": "boolean"
                  }
                },
                {
                  "description": "The data to be converted.",
                  "name": "data"
                },
                {
                  "name": "validations"
                },
                {
                  "name": "fetched"
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "Override to extend the given data with some useful context"
            },
            {
              "kind": "method",
              "name": "isPrepared",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_providedData",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_decoratedData",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "description": "The provided data.",
                  "name": "providedData",
                  "type": {
                    "text": "T"
                  }
                },
                {
                  "description": "The decorated data.",
                  "name": "decoratedData",
                  "type": {
                    "text": "(T & Decorated) | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              },
              "description": "This method is used to indicate that the data is ready."
            },
            {
              "kind": "method",
              "name": "willRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "description": "The configuration for displaying the component.",
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "description": "The extended data to be rendered, or null if none.",
                  "name": "data",
                  "type": {
                    "text": "Decorated<T> | null"
                  }
                },
                {
                  "description": "The Lit changed properties passed during `.willUpdate(changes)`",
                  "name": "changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Determines if the component will render based on the given parameters.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderNarrative",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "name": "validations"
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasRendered",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "_config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "Decorated<D> | null"
                  }
                },
                {
                  "name": "_haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                },
                {
                  "name": "config"
                },
                {
                  "name": "data"
                },
                {
                  "description": "The Lit changed properties passed during `.updated(changes)` which is\ncalled after `.render()`",
                  "name": "haveChanged",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "description": "Called after the component has rendered.",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''",
              "attribute": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "templateGenerators",
              "type": {
                "text": "Generators<D>"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "mustRender",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "override",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderOverride",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_displayConfig",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "_data",
                  "type": {
                    "text": "D"
                  }
                },
                {
                  "name": "_validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderEditableDisplay",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                },
                {
                  "name": "validations",
                  "type": {
                    "text": "Validations"
                  }
                }
              ],
              "description": "Override this method to provide an alternate template when rendering editable display",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getLabel",
              "privacy": "protected",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderBaseElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderExtensionElement",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "config",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "renderDebug",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "TemplateResult[]"
                }
              },
              "parameters": [
                {
                  "name": "_",
                  "type": {
                    "text": "DisplayConfig"
                  }
                },
                {
                  "name": "data",
                  "type": {
                    "text": "Decorated<D>"
                  }
                }
              ],
              "description": "Render formatted JSON data for debugging purposes",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "verboseRequestedAndNotAllowed",
              "privacy": "private",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "hasIdenticalAncestor",
              "privacy": "private",
              "parameters": [
                {
                  "name": "child",
                  "type": {
                    "text": "HTMLElement | null"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "attribute": "key",
              "reflects": true,
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "data",
              "type": {
                "text": "T"
              },
              "privacy": "public",
              "default": "NoDataObject",
              "description": "Element data",
              "attribute": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataPath",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "attribute": "data-path",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "extendedData",
              "type": {
                "text": "T & {} | null"
              },
              "privacy": "protected",
              "description": "The extendedData variable is used to store additional data of type T and an empty object type {}.\nIt can also hold a null value.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "errors",
              "type": {
                "text": "ValidationErrors"
              },
              "privacy": "public",
              "default": "new FqkMap()",
              "description": "An array of objects representing validation errors.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "profile",
              "type": {
                "text": "StructureDefinition<T> | undefined"
              },
              "privacy": "public",
              "description": "Represents the structure definition of a generic type `T` or is undefined.\n\nThis variable is used to define the structure of a type, allowing for type validation\nor enforcement. It may be undefined if no structure is provided or applicable.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "dataContext",
              "type": {
                "text": "FhirDataContext"
              },
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "privacy": "protected",
              "readonly": true,
              "description": "MyString",
              "default": "type",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "#fetched",
              "privacy": "private",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "invalids",
              "type": {
                "text": "Set<FullyQualifiedKey>"
              },
              "privacy": "private",
              "default": "new Set()",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "prepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldFetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "_changes",
                  "type": {
                    "text": "PropertyValues"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "fetch",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "T"
                }
              },
              "parameters": [
                {
                  "name": "dataPath",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "shouldPrepare",
              "privacy": "public",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "edited",
              "privacy": "protected",
              "parameters": [
                {
                  "name": "data",
                  "type": {
                    "text": "T"
                  },
                  "description": "contained data structure that can be edited"
                },
                {
                  "name": "key",
                  "type": {
                    "text": "string"
                  },
                  "description": "identity of changed data"
                },
                {
                  "name": "_oldValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "old value"
                },
                {
                  "name": "newValue",
                  "type": {
                    "text": "unknown"
                  },
                  "description": "new value"
                }
              ],
              "description": "This method is called on every PrimitiveInputEvent captured from children elements. Modify the data object\nat the corresponding key with the new value in the provided data structure.\n\nDo any other side effects required by overriding this method.\n\nThe base implementation assigns values to the contained data object. If the key does not exist then the\ncorresponding key is added.",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "displayConfig",
              "type": {
                "text": "DisplayConfig"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "protected",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "privacy": "public",
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "attribute": "mode",
              "reflects": true,
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_input",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "attribute": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "_open",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "field",
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "attribute": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "getDisplayConfig",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "deprecated": "don't use this directly. Prefer config provided by method\ntodo: make this method private",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "kind": "method",
              "name": "config",
              "privacy": "protected",
              "return": {
                "type": {
                  "text": "DisplayConfig"
                }
              },
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ],
          "superclass": {
            "name": "Backbone",
            "module": "/src/internal"
          },
          "tagName": "fhir-account-related-account",
          "customElement": true,
          "attributes": [
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "default": "''",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "headless",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "headless",
              "inheritedFrom": {
                "name": "FhirPresentableElement",
                "module": "src/internal/base/presentable/fhir-presentable-element.ts"
              }
            },
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "default": "'nokey'",
              "description": "The key the element is known as in its parent data structure",
              "fieldName": "key",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data",
              "type": {
                "text": "T"
              },
              "default": "NoDataObject",
              "description": "Element data",
              "fieldName": "data",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "data-path",
              "type": {
                "text": "string"
              },
              "fieldName": "dataPath",
              "inheritedFrom": {
                "name": "FhirDataElement",
                "module": "src/internal/base/data/fhir-data-element.ts"
              }
            },
            {
              "name": "mode",
              "type": {
                "text": "DisplayMode"
              },
              "description": "Retrieves the current display mode.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "DisplayMode"
                }
              },
              "fieldName": "mode",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "showerror",
              "type": {
                "text": "boolean"
              },
              "description": "Determines whether error messages should be displayed.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "showerror",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "input",
              "type": {
                "text": "boolean"
              },
              "description": "Display primitive as an input field.\n\nSetting the attribute overrides context-provided property.",
              "fieldName": "input",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "verbose",
              "type": {
                "text": "boolean"
              },
              "description": "This property determines whether verbose mode is enabled.\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "verbose",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "summaryonly",
              "type": {
                "text": "boolean"
              },
              "description": "Only display value if the priitive also has the summary attribute\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "summaryonly",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            },
            {
              "name": "open",
              "type": {
                "text": "boolean"
              },
              "description": "Display the content of the component in an open state\n\nSetting the attribute overrides context-provided property.",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "fieldName": "open",
              "inheritedFrom": {
                "name": "ConfigurableElement",
                "module": "src/internal/base/configurable/fhir-configurable-element.ts"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "RelatedAccount",
          "declaration": {
            "name": "RelatedAccount",
            "module": "src/components/resources/account/backbone/related-account.backbone.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-account-related-account",
          "declaration": {
            "name": "RelatedAccount",
            "module": "src/components/resources/account/backbone/related-account.backbone.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/reference/extension-reference.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "data",
          "type": {
            "text": "FhirExtensionData<CodeableConceptData>"
          },
          "default": "{ url: 'https://example.org/fhir/StructureDefinition/event-type', valueCodeableConcept: { coding: [ { system: 'http://terminology.hl7.org/CodeSystem/example', code: 'unscheduled-appointment', display: 'unscheduled appointment' } ], text: 'Unscheduled Appointment' } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "data",
          "declaration": {
            "name": "data",
            "module": "src/components/special/extension/reference/extension-reference.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/reference-complex/extension-reference-complex.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "patient",
          "type": {
            "text": "object"
          },
          "default": "{ ...hapiFhirPatient, extension: [ { url: 'http://example.org/fhir/StructureDefinition/patient-clinicalTrial', extension: [ { url: 'NCT', valueString: 'NCT00000419' }, { url: 'period', valuePeriod: { start: '2004-01-01', end: '2012-12-31' } }, { url: 'reason', valueCodeableConcept: { text: 'healthy-volunteer' } } ] } ] }"
        },
        {
          "kind": "variable",
          "name": "address",
          "type": {
            "text": "AddressData"
          },
          "default": "{ extension: [ { url: 'https://example.org/fhir/StructureDefinition/owner', valueHumanName: { use: 'official', family: 'Smith', given: ['John', 'Robert'], prefix: ['Mr.'], suffix: ['MD'], period: { start: '2010-01-01' } } } ], use: 'work', text: '1050 W Wishard Blvd\\nRG,\\n5th floor\\nIndianapolis, IN 46240', line: ['1050 W Wishard Blvd', 'RG 5th floor'], city: 'Indianapolis', postalCode: '46240', state: 'IN', country: 'United States' }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "patient",
          "declaration": {
            "name": "patient",
            "module": "src/components/special/extension/reference-complex/extension-reference-complex.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "address",
          "declaration": {
            "name": "address",
            "module": "src/components/special/extension/reference-complex/extension-reference-complex.story.data.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.ts",
      "declarations": [
        {
          "kind": "variable",
          "name": "primitiveExtension",
          "type": {
            "text": "FhirElementData & { birthDate: FhirDate }"
          },
          "default": "{ birthDate: '1970-03-30', _birthDate: { id: '314159', extension: [ { url: 'http://example.org/fhir/StructureDefinition/text', valueString: 'Easter 1970' } ] } }"
        },
        {
          "kind": "variable",
          "name": "addressWithExtension",
          "type": {
            "text": "object"
          },
          "default": "{ use: 'work', text: '1050 W Wishard Blvd\\nRG,\\n5th floor\\nIndianapolis, IN 46240', line: ['1050 W Wishard Blvd', 'RG 5th floor'], city: 'Indianapolis', state: 'Indiana', _state: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: { code: 'IN' } } ] }, postalCode: '46240', country: 'United States', _country: { extension: [ { url: 'http://hl7.org/fhir/StructureDefinition/iso21090-codedString', valueCoding: { code: 'US' } } ] } }"
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "primitiveExtension",
          "declaration": {
            "name": "primitiveExtension",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.ts"
          }
        },
        {
          "kind": "js",
          "name": "addressWithExtension",
          "declaration": {
            "name": "addressWithExtension",
            "module": "src/components/special/extension/reference-primitive/extension-reference-primitive.story.data.ts"
          }
        }
      ]
    }
  ]
}
