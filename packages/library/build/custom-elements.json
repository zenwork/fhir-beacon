{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/components/primitive/primitive.ts",
      "declarations": [
        {
          "kind": "class",
          "description": "Represents a custom element for displaying and parsing primitive values.",
          "name": "Primitive",
          "members": [
            {
              "kind": "field",
              "name": "contextData",
              "type": {
                "text": "FhirDataContext"
              }
            },
            {
              "kind": "field",
              "name": "key",
              "type": {
                "text": "string"
              },
              "attribute": "key"
            },
            {
              "kind": "field",
              "name": "label",
              "type": {
                "text": "string"
              },
              "attribute": "label",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "': '",
              "attribute": "delimiter"
            },
            {
              "kind": "field",
              "name": "value",
              "type": {
                "text": "string"
              },
              "attribute": "value",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "valuePath",
              "type": {
                "text": "string"
              },
              "attribute": "value-path"
            },
            {
              "kind": "field",
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "attribute": "choices"
            },
            {
              "kind": "field",
              "name": "link",
              "type": {
                "text": "string"
              },
              "attribute": "link"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              },
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              },
              "privacy": "public",
              "attribute": "type"
            },
            {
              "kind": "field",
              "name": "showProvided",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "showProvided"
            },
            {
              "kind": "field",
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "attribute": "errormessage",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "variant",
              "type": {
                "text": "string"
              },
              "attribute": "variant"
            },
            {
              "kind": "field",
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "summary"
            },
            {
              "kind": "field",
              "name": "translate",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "translate"
            },
            {
              "kind": "field",
              "name": "trialuse",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "trialuse"
            },
            {
              "kind": "field",
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false",
              "attribute": "required"
            },
            {
              "kind": "field",
              "name": "error",
              "type": {
                "text": "boolean"
              },
              "privacy": "public",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "presentableValue",
              "type": {
                "text": "unknown"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableError",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "presentableTypeError",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "validator",
              "type": {
                "text": "PrimitiveValidator"
              },
              "privacy": "private",
              "default": "new PrimitiveValidator(this)"
            },
            {
              "kind": "method",
              "name": "renderValid",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders when p[rovided value is valid. Displays FHIR data, incorporating labels, values, contexts,\nand additional structured elements based on the provided parameters."
            },
            {
              "kind": "method",
              "name": "renderInput",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              },
              "description": "Renders an input element based on the type and configuration of the current object.\n\nValidation errors related to the input are displayed, if present."
            },
            {
              "kind": "field",
              "name": "renderError",
              "privacy": "private",
              "description": "Generates a rendered error representation based on the current state and properties of the object.",
              "return": {
                "type": {
                  "text": "TemplateResult"
                }
              }
            },
            {
              "kind": "field",
              "name": "handleChange",
              "privacy": "private",
              "description": "Handles change events and updates the internal state of the component based on the event type\nand target element's properties. The method processes events originating from various input\ntypes and updates the `value`, `presentableValue`, `error`, and `errormessage` fields.\nIt also dispatches a custom event when the `value` changes.",
              "parameters": [
                {
                  "description": "The event object triggered by user interaction or programmatic changes.\n   The method processes this event to determine how to update the component state.",
                  "name": "e",
                  "type": {
                    "text": "Event"
                  }
                }
              ]
            },
            {
              "kind": "field",
              "name": "getLabel",
              "privacy": "private",
              "description": "Retrieves the label associated with the current context.\nIf the \"label\" property is defined, it will be used. Otherwise, the \"key\" property\nis used as the label's default value.\n\nThe resulting label is formatted into a readable string in lowercase form.",
              "return": {
                "type": {
                  "text": "string"
                }
              }
            }
          ],
          "attributes": [
            {
              "name": "key",
              "type": {
                "text": "string"
              },
              "fieldName": "key"
            },
            {
              "name": "label",
              "type": {
                "text": "string"
              },
              "fieldName": "label"
            },
            {
              "name": "delimiter",
              "type": {
                "text": "string"
              },
              "default": "': '",
              "fieldName": "delimiter"
            },
            {
              "name": "value",
              "type": {
                "text": "string"
              },
              "fieldName": "value"
            },
            {
              "name": "value-path",
              "type": {
                "text": "string"
              },
              "fieldName": "valuePath"
            },
            {
              "name": "choices",
              "type": {
                "text": "Choice[]"
              },
              "fieldName": "choices"
            },
            {
              "name": "link",
              "type": {
                "text": "string"
              },
              "fieldName": "link"
            },
            {
              "name": "context",
              "type": {
                "text": "string"
              },
              "fieldName": "context"
            },
            {
              "name": "type",
              "type": {
                "text": "PrimitiveType"
              },
              "fieldName": "type"
            },
            {
              "name": "showProvided",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "showProvided"
            },
            {
              "name": "errormessage",
              "type": {
                "text": "string"
              },
              "fieldName": "errormessage"
            },
            {
              "name": "variant",
              "type": {
                "text": "string"
              },
              "fieldName": "variant"
            },
            {
              "name": "summary",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "summary"
            },
            {
              "name": "translate",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "translate"
            },
            {
              "name": "trialuse",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "trialuse"
            },
            {
              "name": "required",
              "type": {
                "text": "boolean"
              },
              "default": "false",
              "fieldName": "required"
            }
          ],
          "superclass": {
            "name": "ConfigurableElement",
            "module": "/src/internal/base/configurable/fhir-configurable-element"
          },
          "tagName": "fhir-primitive",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "Primitive",
          "declaration": {
            "name": "Primitive",
            "module": "src/components/primitive/primitive.ts"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "fhir-primitive",
          "declaration": {
            "name": "Primitive",
            "module": "src/components/primitive/primitive.ts"
          }
        }
      ]
    }
  ]
}
